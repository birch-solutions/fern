// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser squidex parse open api 1`] = `
{
  "basePath": null,
  "channel": [],
  "description": null,
  "endpoints": [
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UserManagementGetUsersRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "UserManagement_GetUsers",
      "path": "/api/user-management",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Optional query to search by email address or username.",
          "name": "query",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UserManagementGetUsersRequestQuery",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UserManagementGetUsersRequestQuery",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The number of users to skip.",
          "name": "skip",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UserManagementGetUsersRequestSkip",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UserManagementGetUsersRequestSkip",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The number of users to return.",
          "name": "take",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UserManagementGetUsersRequestTake",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UserManagementGetUsersRequestTake",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Users returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementGetUsersResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UsersDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "userManagement",
        ],
        "methodName": "getUsers",
      },
      "server": [],
      "summary": "Get users by query.",
      "tags": [
        "UserManagement",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "User request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "password": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "password",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isLocked": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UserManagementPostUserRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "UserManagement_PostUser",
      "path": "/api/user-management",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementPostUserRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateUserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "User created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementPostUserResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "userManagement",
        ],
        "methodName": "postUser",
      },
      "server": [],
      "summary": "Create a new user.",
      "tags": [
        "UserManagement",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "User not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isLocked": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UserManagementGetUserRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "UserManagement_GetUser",
      "path": "/api/user-management/{id}",
      "pathParameters": [
        {
          "description": "The ID of the user.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UserManagementGetUserRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "User returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementGetUserResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "userManagement",
        ],
        "methodName": "getUser",
      },
      "server": [],
      "summary": "Get a user by ID.",
      "tags": [
        "UserManagement",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "User request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "User not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isLocked": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UserManagementPutUserRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "UserManagement_PutUser",
      "path": "/api/user-management/{id}",
      "pathParameters": [
        {
          "description": "The ID of the user.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UserManagementPutUserRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementPutUserRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateUserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "User created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementPutUserResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "userManagement",
        ],
        "methodName": "putUser",
      },
      "server": [],
      "summary": "Update a user.",
      "tags": [
        "UserManagement",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "403": {
          "description": "User is the current user.",
          "examples": [],
          "generatedName": "ForbiddenError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ForbiddenErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "User not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "UserManagementDeleteUserRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "UserManagement_DeleteUser",
      "path": "/api/user-management/{id}",
      "pathParameters": [
        {
          "description": "The ID of the user to delete.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UserManagementDeleteUserRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "userManagement",
        ],
        "methodName": "deleteUser",
      },
      "server": [],
      "summary": "Delete a User.",
      "tags": [
        "UserManagement",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "403": {
          "description": "User is the current user.",
          "examples": [],
          "generatedName": "ForbiddenError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ForbiddenErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "User not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isLocked": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UserManagementLockUserRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "UserManagement_LockUser",
      "path": "/api/user-management/{id}/lock",
      "pathParameters": [
        {
          "description": "The ID of the user to lock.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UserManagementLockUserRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "User locked.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementLockUserResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "userManagement",
        ],
        "methodName": "lockUser",
      },
      "server": [],
      "summary": "Lock a user.",
      "tags": [
        "UserManagement",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "403": {
          "description": "User is the current user.",
          "examples": [],
          "generatedName": "ForbiddenError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ForbiddenErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "User not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isLocked": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UserManagementUnlockUserRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "UserManagement_UnlockUser",
      "path": "/api/user-management/{id}/unlock",
      "pathParameters": [
        {
          "description": "The ID of the user to unlock.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UserManagementUnlockUserRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "User unlocked.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UserManagementUnlockUserResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "userManagement",
        ],
        "methodName": "unlockUser",
      },
      "server": [],
      "summary": "Unlock a user.",
      "tags": [
        "UserManagement",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UsersGetUserResourcesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Users_GetUserResources",
      "path": "/api",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "User resources returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UsersGetUserResourcesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ResourcesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "users",
        ],
        "methodName": "getUserResources",
      },
      "server": [],
      "summary": "Get the user resources.",
      "tags": [
        "Users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Search the user by query that contains the email address or the part of the email address.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UsersGetUsersRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Users_GetUsers",
      "path": "/api/users",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The query to search the user by email address. Case invariant.",
          "name": "query",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UsersGetUsersRequestQuery",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UsersGetUsersRequestQuery",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Users returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UsersGetUsersResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "UsersGetUsersResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "UserDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "users",
        ],
        "methodName": "getUsers",
      },
      "server": [],
      "summary": "Get users by query.",
      "tags": [
        "Users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "User not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "email": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "email",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isLocked": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "UsersGetUserRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Users_GetUser",
      "path": "/api/users/{id}",
      "pathParameters": [
        {
          "description": "The ID of the user (GUID).",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UsersGetUserRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "User found.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UsersGetUserResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UserDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "users",
        ],
        "methodName": "getUser",
      },
      "server": [],
      "summary": "Get user by id.",
      "tags": [
        "Users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "User not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "UsersGetUserPictureRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Users_GetUserPicture",
      "path": "/api/users/{id}/picture",
      "pathParameters": [
        {
          "description": "The ID of the user (GUID).",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UsersGetUserPictureRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "User found and image or fallback returned.",
        "type": "file",
      },
      "sdkName": {
        "groupName": [
          "users",
        ],
        "methodName": "getUserPicture",
      },
      "server": [],
      "summary": "Get user picture by id.",
      "tags": [
        "Users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "targetLanguage": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "targetLanguage",
                },
              },
              "text": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "text",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "result": {
                "type": "enum",
                "value": "Translated",
              },
              "text": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "text",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TranslationsPostTranslationRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Translations_PostTranslation",
      "path": "/api/apps/{app}/translations",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "TranslationsPostTranslationRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TranslationsPostTranslationRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "TranslateDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Text translated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TranslationsPostTranslationResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "TranslationDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "translations",
        ],
        "methodName": "postTranslation",
      },
      "server": [],
      "summary": "Translate a text.",
      "tags": [
        "Translations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TemplatesGetTemplatesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Templates_GetTemplates",
      "path": "/api/templates",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Templates returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TemplatesGetTemplatesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "TemplatesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "templates",
        ],
        "methodName": "getTemplates",
      },
      "server": [],
      "summary": "Get all templates.",
      "tags": [
        "Templates",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Template not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "name",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "details": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "details",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TemplatesGetTemplateRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Templates_GetTemplate",
      "path": "/api/templates/{name}",
      "pathParameters": [
        {
          "description": "The name of the template.",
          "name": "name",
          "schema": {
            "description": null,
            "generatedName": "TemplatesGetTemplateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Template returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TemplatesGetTemplateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "TemplateDetailsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "templates",
        ],
        "methodName": "getTemplate",
      },
      "server": [],
      "summary": "Get template details.",
      "tags": [
        "Templates",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsGetContributorsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "TeamContributors_GetContributors",
      "path": "/api/teams/{team}/contributors",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "TeamsGetContributorsRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contributors returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsGetContributorsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "getContributors",
      },
      "server": [],
      "summary": "Get team contributors.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Contributor request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "contributorId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "contributorId",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsPostContributorRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "TeamContributors_PostContributor",
      "path": "/api/teams/{team}/contributors",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "TeamsPostContributorRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsPostContributorRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssignContributorDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Contributor assigned to team.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsPostContributorResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "postContributor",
      },
      "server": [],
      "summary": "Assign contributor to team.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Contributor or team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsDeleteMyselfRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "TeamContributors_DeleteMyself",
      "path": "/api/teams/{team}/contributors/me",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "TeamsDeleteMyselfRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contributor removed.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsDeleteMyselfResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "deleteMyself",
      },
      "server": [],
      "summary": "Remove yourself.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Contributor or team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsDeleteContributorRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "TeamContributors_DeleteContributor",
      "path": "/api/teams/{team}/contributors/{id}",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "TeamsDeleteContributorRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the contributor.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "TeamsDeleteContributorRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contributor removed.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsDeleteContributorResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "deleteContributor",
      },
      "server": [],
      "summary": "Remove contributor.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can only retrieve the list of teams when you are authenticated as a user (OpenID implicit flow).
You will retrieve all teams, where you are assigned as a contributor.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsGetTeamsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Teams_GetTeams",
      "path": "/api/teams",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Teams returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsGetTeamsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "TeamsGetTeamsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "TeamDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "getTeams",
      },
      "server": [],
      "summary": "Get your teams.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can only create an team when you are authenticated as a user (OpenID implicit flow).
You will be assigned as owner of the new team automatically.",
      "errors": {
        "400": {
          "description": "Team request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "409": {
          "description": "Team name is already in use.",
          "examples": [],
          "generatedName": "ConflictError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConflictErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsPostTeamRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Teams_PostTeam",
      "path": "/api/teams",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsPostTeamRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateTeamDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Team created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsPostTeamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "TeamDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "postTeam",
      },
      "server": [],
      "summary": "Create a new team.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsGetTeamRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Teams_GetTeam",
      "path": "/api/teams/{team}",
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "TeamsGetTeamRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Teams returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsGetTeamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "TeamDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "getTeam",
      },
      "server": [],
      "summary": "Get an team by name.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Team request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "TeamsPutTeamRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Teams_PutTeam",
      "path": "/api/teams/{team}",
      "pathParameters": [
        {
          "description": "The name of the team to update.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "TeamsPutTeamRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsPutTeamRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateTeamDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Team updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TeamsPutTeamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "TeamDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "teams",
        ],
        "methodName": "putTeam",
      },
      "server": [],
      "summary": "Update the team.",
      "tags": [
        "Teams",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "downloadUrl": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "downloadUrl",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StatisticsGetLogRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Usages_GetLog",
      "path": "/api/apps/{app}/usages/log",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetLogRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Usage tracking results returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StatisticsGetLogResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "LogDownloadDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "statistics",
        ],
        "methodName": "getLog",
      },
      "server": [],
      "summary": "Get api calls as log file.",
      "tags": [
        "Statistics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "fromDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fromDate",
                },
              },
            },
            {
              "name": "toDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "toDate",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "allowedBytes": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "allowedCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "averageElapsedMs": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "value": 1.1,
                },
              },
              "blockingApiCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "details": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "details",
                    },
                    "value": {
                      "type": "array",
                      "value": [],
                    },
                  },
                ],
              },
              "monthBytes": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "monthCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "totalBytes": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "totalCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StatisticsGetUsagesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Usages_GetUsages",
      "path": "/api/apps/{app}/usages/calls/{fromDate}/{toDate}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetUsagesRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetUsagesRequestFromDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetUsagesRequestToDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "API call returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StatisticsGetUsagesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CallsUsageDtoDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "statistics",
        ],
        "methodName": "getUsages",
      },
      "server": [],
      "summary": "Get api calls in date range.",
      "tags": [
        "Statistics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
            {
              "name": "fromDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fromDate",
                },
              },
            },
            {
              "name": "toDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "toDate",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "allowedBytes": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "allowedCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "averageElapsedMs": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "value": 1.1,
                },
              },
              "blockingApiCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "details": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "details",
                    },
                    "value": {
                      "type": "array",
                      "value": [],
                    },
                  },
                ],
              },
              "monthBytes": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "monthCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "totalBytes": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "totalCalls": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StatisticsGetUsagesForTeamRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Usages_GetUsagesForTeam",
      "path": "/api/teams/{team}/usages/calls/{fromDate}/{toDate}",
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetUsagesForTeamRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetUsagesForTeamRequestFromDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetUsagesForTeamRequestToDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "API call returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StatisticsGetUsagesForTeamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CallsUsageDtoDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "statistics",
        ],
        "methodName": "getUsagesForTeam",
      },
      "server": [],
      "summary": "Get api calls in date range for team.",
      "tags": [
        "Statistics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "maxAllowed": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "size": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StatisticsGetCurrentStorageSizeRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Usages_GetCurrentStorageSize",
      "path": "/api/apps/{app}/usages/storage/today",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetCurrentStorageSizeRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Storage usage returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StatisticsGetCurrentStorageSizeResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CurrentStorageDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "statistics",
        ],
        "methodName": "getCurrentStorageSize",
      },
      "server": [],
      "summary": "Get total asset size.",
      "tags": [
        "Statistics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "maxAllowed": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "size": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StatisticsGetTeamCurrentStorageSizeForTeamRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Usages_GetTeamCurrentStorageSizeForTeam",
      "path": "/api/teams/{team}/usages/storage/today",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetTeamCurrentStorageSizeForTeamRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Storage usage returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StatisticsGetTeamCurrentStorageSizeForTeamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CurrentStorageDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "statistics",
        ],
        "methodName": "getTeamCurrentStorageSizeForTeam",
      },
      "server": [],
      "summary": "Get total asset size by team.",
      "tags": [
        "Statistics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "fromDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fromDate",
                },
              },
            },
            {
              "name": "toDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "toDate",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StatisticsGetStorageSizesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Usages_GetStorageSizes",
      "path": "/api/apps/{app}/usages/storage/{fromDate}/{toDate}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesRequestFromDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesRequestToDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Storage usage returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StatisticsGetStorageSizesResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "StorageUsagePerDateDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "statistics",
        ],
        "methodName": "getStorageSizes",
      },
      "server": [],
      "summary": "Get asset usage by date.",
      "tags": [
        "Statistics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
            {
              "name": "fromDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fromDate",
                },
              },
            },
            {
              "name": "toDate",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "toDate",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StatisticsGetStorageSizesForTeamRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Usages_GetStorageSizesForTeam",
      "path": "/api/teams/{team}/usages/storage/{fromDate}/{toDate}",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesForTeamRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The from date.",
          "name": "fromDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesForTeamRequestFromDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The to date.",
          "name": "toDate",
          "schema": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesForTeamRequestToDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Storage usage returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StatisticsGetStorageSizesForTeamResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "StatisticsGetStorageSizesForTeamResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "StorageUsagePerDateDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "statistics",
        ],
        "methodName": "getStorageSizesForTeam",
      },
      "server": [],
      "summary": "Get asset usage by date for team.",
      "tags": [
        "Statistics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SearchGetSearchResultsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Search_GetSearchResults",
      "path": "/api/apps/{app}/search",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SearchGetSearchResultsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [
        {
          "description": "The search query.",
          "name": "query",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SearchGetSearchResultsRequestQuery",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SearchGetSearchResultsRequestQuery",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Search results returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SearchGetSearchResultsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "SearchGetSearchResultsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "SearchResultDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "search",
        ],
        "methodName": "getSearchResults",
      },
      "server": [],
      "summary": "Get search results.",
      "tags": [
        "Search",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "409": {
          "description": "Schema field name already in use.",
          "examples": [],
          "generatedName": "ConflictError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConflictErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "SchemasPostFieldRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "SchemaFields_PostField",
      "path": "/api/apps/{app}/schemas/{schema}/fields",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPostFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPostFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPostFieldRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AddFieldDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema field created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPostFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "postField",
      },
      "server": [],
      "summary": "Add a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "409": {
          "description": "Schema field name already in use.",
          "examples": [],
          "generatedName": "ConflictError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConflictErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "SchemasPostNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "SchemaFields_PostNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPostNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPostNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasPostNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPostNestedFieldRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AddFieldDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema field created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPostNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "postNestedField",
      },
      "server": [],
      "summary": "Add a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutSchemaUiFieldsRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_PutSchemaUIFields",
      "path": "/api/apps/{app}/schemas/{schema}/fields/ui",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaUiFieldsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaUiFieldsRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaUiFieldsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ConfigureUIFieldsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema UI fields defined.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaUiFieldsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putSchemaUIFields",
      },
      "server": [],
      "summary": "Configure UI fields.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "fieldIds": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutSchemaFieldOrderingRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_PutSchemaFieldOrdering",
      "path": "/api/apps/{app}/schemas/{schema}/fields/ordering",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaFieldOrderingRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaFieldOrderingRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaFieldOrderingRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ReorderFieldsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema fields reordered.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaFieldOrderingResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putSchemaFieldOrdering",
      },
      "server": [],
      "summary": "Reorder all fields.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema field request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "parentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "fieldIds": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutNestedFieldOrderingRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_PutNestedFieldOrdering",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/ordering",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutNestedFieldOrderingRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutNestedFieldOrderingRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutNestedFieldOrderingRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutNestedFieldOrderingRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ReorderFieldsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema fields reordered.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutNestedFieldOrderingResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putNestedFieldOrdering",
      },
      "server": [],
      "summary": "Reorder all nested fields.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema field request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "SchemasPutFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_PutField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to update.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutFieldRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateFieldDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema field updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putField",
      },
      "server": [],
      "summary": "Update a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasDeleteFieldRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "SchemaFields_DeleteField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field deleted.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasDeleteFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "deleteField",
      },
      "server": [],
      "summary": "Delete a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "SchemasPutNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_PutNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to update.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutNestedFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutNestedFieldRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateFieldDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema field updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putNestedField",
      },
      "server": [],
      "summary": "Update a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "parentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasDeleteNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "SchemaFields_DeleteNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteNestedFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field deleted.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasDeleteNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "deleteNestedField",
      },
      "server": [],
      "summary": "Delete a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A locked field cannot be updated or deleted.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasLockFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_LockField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/lock",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasLockFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasLockFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to lock.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasLockFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field shown.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasLockFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "lockField",
      },
      "server": [],
      "summary": "Lock a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A locked field cannot be edited or deleted.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Field, schema, or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "parentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasLockNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_LockNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/lock",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasLockNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasLockNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasLockNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to lock.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasLockNestedFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field hidden.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasLockNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "lockNestedField",
      },
      "server": [],
      "summary": "Lock a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasHideFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_HideField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/hide",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasHideFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasHideFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to hide.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasHideFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field hidden.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasHideFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "hideField",
      },
      "server": [],
      "summary": "Hide a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Field, schema, or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "parentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasHideNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_HideNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/hide",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasHideNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasHideNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasHideNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to hide.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasHideNestedFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field hidden.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasHideNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "hideNestedField",
      },
      "server": [],
      "summary": "Hide a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasShowFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_ShowField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/show",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasShowFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasShowFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to show.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasShowFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field shown.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasShowFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "showField",
      },
      "server": [],
      "summary": "Show a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "parentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasShowNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_ShowNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/show",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasShowNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasShowNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasShowNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to show.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasShowNestedFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field shown.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasShowNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "showNestedField",
      },
      "server": [],
      "summary": "Show a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasEnableFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_EnableField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/enable",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasEnableFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasEnableFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to enable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasEnableFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field enabled.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasEnableFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "enableField",
      },
      "server": [],
      "summary": "Enable a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "parentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasEnableNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_EnableNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/enable",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasEnableNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasEnableNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasEnableNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to enable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasEnableNestedFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field enabled.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasEnableNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "enableNestedField",
      },
      "server": [],
      "summary": "Enable a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasDisableFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_DisableField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{id}/disable",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasDisableFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasDisableFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasDisableFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field disabled.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasDisableFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "disableField",
      },
      "server": [],
      "summary": "Disable a schema field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
      "errors": {
        "400": {
          "description": "Schema field request not valid or field locked.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema, field or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "parentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasDisableNestedFieldRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "SchemaFields_DisableNestedField",
      "path": "/api/apps/{app}/schemas/{schema}/fields/{parentId}/nested/{id}/disable",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasDisableNestedFieldRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasDisableNestedFieldRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The parent field id.",
          "name": "parentId",
          "schema": {
            "description": null,
            "generatedName": "SchemasDisableNestedFieldRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the field to disable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "SchemasDisableNestedFieldRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema field disabled.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasDisableNestedFieldResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "disableNestedField",
      },
      "server": [],
      "summary": "Disable a nested field.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasGetSchemasRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Schemas_GetSchemas",
      "path": "/api/apps/{app}/schemas",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasGetSchemasRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schemas returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasGetSchemasResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemasDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "getSchemas",
      },
      "server": [],
      "summary": "Get schemas.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "409": {
          "description": "Schema name already in use.",
          "examples": [],
          "generatedName": "ConflictError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConflictErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPostSchemaRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Schemas_PostSchema",
      "path": "/api/apps/{app}/schemas",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPostSchemaRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPostSchemaRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateSchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPostSchemaResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "postSchema",
      },
      "server": [],
      "summary": "Create a new schema.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasGetSchemaRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Schemas_GetSchema",
      "path": "/api/apps/{app}/schemas/{schema}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasGetSchemaRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema to retrieve.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasGetSchemaRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema found.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasGetSchemaResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "getSchema",
      },
      "server": [],
      "summary": "Get a schema by name.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "validateOnPublish": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutSchemaRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_PutSchema",
      "path": "/api/apps/{app}/schemas/{schema}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateSchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putSchema",
      },
      "server": [],
      "summary": "Update a schema.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasDeleteSchemaRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Schemas_DeleteSchema",
      "path": "/api/apps/{app}/schemas/{schema}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteSchemaRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema to delete.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasDeleteSchemaRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "deleteSchema",
      },
      "server": [],
      "summary": "Delete a schema.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "noFieldDeletion": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "noFieldRecreation": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutSchemaSyncRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_PutSchemaSync",
      "path": "/api/apps/{app}/schemas/{schema}/sync",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaSyncRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutSchemaSyncRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaSyncRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "SynchronizeSchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutSchemaSyncResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putSchemaSync",
      },
      "server": [],
      "summary": "Synchronize a schema.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutCategoryRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_PutCategory",
      "path": "/api/apps/{app}/schemas/{schema}/category",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutCategoryRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutCategoryRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutCategoryRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ChangeCategoryDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutCategoryResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putCategory",
      },
      "server": [],
      "summary": "Update a schema category.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "value": "string",
                  },
                },
              },
            ],
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutPreviewUrlsRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_PutPreviewUrls",
      "path": "/api/apps/{app}/schemas/{schema}/preview-urls",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutPreviewUrlsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutPreviewUrlsRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutPreviewUrlsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ConfigurePreviewUrlsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutPreviewUrlsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putPreviewUrls",
      },
      "server": [],
      "summary": "Update the preview urls.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutScriptsRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_PutScripts",
      "path": "/api/apps/{app}/schemas/{schema}/scripts",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutScriptsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutScriptsRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutScriptsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaScriptsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutScriptsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putScripts",
      },
      "server": [],
      "summary": "Update the scripts.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Schema request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPutRulesRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_PutRules",
      "path": "/api/apps/{app}/schemas/{schema}/rules",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutRulesRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPutRulesRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutRulesRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ConfigureFieldRulesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Schema updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPutRulesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "putRules",
      },
      "server": [],
      "summary": "Update the rules.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasPublishSchemaRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_PublishSchema",
      "path": "/api/apps/{app}/schemas/{schema}/publish",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasPublishSchemaRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema to publish.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasPublishSchemaRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema published.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasPublishSchemaResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "publishSchema",
      },
      "server": [],
      "summary": "Publish a schema.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "category": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "category",
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "fieldRules": {
                "type": "array",
                "value": [],
              },
              "fields": {
                "type": "array",
                "value": [],
              },
              "fieldsInLists": {
                "type": "array",
                "value": [],
              },
              "fieldsInReferences": {
                "type": "array",
                "value": [],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isPublished": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isSingleton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "previewUrls": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "previewUrls",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "previewUrls",
                      },
                    },
                  },
                ],
              },
              "properties": {
                "properties": {
                  "contentEditorUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentEditorUrl",
                    },
                  },
                  "contentSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentSidebarUrl",
                    },
                  },
                  "contentsSidebarUrl": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "contentsSidebarUrl",
                    },
                  },
                  "hints": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "hints",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "validateOnPublish": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                },
                "type": "object",
              },
              "scripts": {
                "properties": {
                  "change": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "change",
                    },
                  },
                  "create": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "create",
                    },
                  },
                  "delete": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "delete",
                    },
                  },
                  "query": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "query",
                    },
                  },
                  "queryPre": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "queryPre",
                    },
                  },
                  "update": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "update",
                    },
                  },
                },
                "type": "object",
              },
              "type": {
                "type": "enum",
                "value": "Default",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "SchemasUnpublishSchemaRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Schemas_UnpublishSchema",
      "path": "/api/apps/{app}/schemas/{schema}/unpublish",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "SchemasUnpublishSchemaRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema to unpublish.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "SchemasUnpublishSchemaRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Schema unpublished.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SchemasUnpublishSchemaResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SchemaDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "schemas",
        ],
        "methodName": "unpublishSchema",
      },
      "server": [],
      "summary": "Unpublish a schema.",
      "tags": [
        "Schemas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "properties": {
                    "description": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "description",
                      },
                    },
                    "display": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "display",
                      },
                    },
                    "iconColor": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "iconColor",
                      },
                    },
                    "iconImage": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "iconImage",
                      },
                    },
                    "properties": {
                      "type": "array",
                      "value": [],
                    },
                    "readMore": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "readMore",
                      },
                    },
                    "title": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "title",
                      },
                    },
                  },
                  "type": "object",
                },
              },
            ],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesGetActionsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Rules_GetActions",
      "path": "/api/rules/actions",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rule actions returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesGetActionsResponse",
          "groupName": null,
          "key": {
            "description": null,
            "generatedName": "RulesGetActionsResponseKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
          },
          "nameOverride": null,
          "type": "map",
          "value": {
            "description": null,
            "generatedName": "RulesGetActionsResponseValue",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleElementDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "getActions",
      },
      "server": [],
      "summary": "Get supported rule actions.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "runningRuleId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "runningRuleId",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesGetRulesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Rules_GetRules",
      "path": "/api/apps/{app}/rules",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesGetRulesRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rules returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesGetRulesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RulesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "getRules",
      },
      "server": [],
      "summary": "Get rules.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Rule request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "RulesPostRuleRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Rules_PostRule",
      "path": "/api/apps/{app}/rules",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesPostRuleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RulesPostRuleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateRuleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Rule created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesPostRuleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RuleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "postRule",
      },
      "server": [],
      "summary": "Create a new rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesDeleteRuleRunRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Rules_DeleteRuleRun",
      "path": "/api/apps/{app}/rules/run",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteRuleRunRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "deleteRuleRun",
      },
      "server": [],
      "summary": "Cancel the current run.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Rule request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Rule or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "RulesPutRuleRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Rules_PutRule",
      "path": "/api/apps/{app}/rules/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesPutRuleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to update.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesPutRuleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RulesPutRuleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateRuleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Rule updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesPutRuleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RuleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "putRule",
      },
      "server": [],
      "summary": "Update a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Rule or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesDeleteRuleRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Rules_DeleteRule",
      "path": "/api/apps/{app}/rules/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteRuleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to delete.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteRuleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "deleteRule",
      },
      "server": [],
      "summary": "Delete a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Rule or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "RulesEnableRuleRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Rules_EnableRule",
      "path": "/api/apps/{app}/rules/{id}/enable",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesEnableRuleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to enable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesEnableRuleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rule enabled.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesEnableRuleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RuleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "enableRule",
      },
      "server": [],
      "summary": "Enable a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Rule or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "RulesDisableRuleRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Rules_DisableRule",
      "path": "/api/apps/{app}/rules/{id}/disable",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesDisableRuleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to disable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesDisableRuleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rule disabled.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesDisableRuleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RuleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "disableRule",
      },
      "server": [],
      "summary": "Disable a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Rule or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesTriggerRuleRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Rules_TriggerRule",
      "path": "/api/apps/{app}/rules/{id}/trigger",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesTriggerRuleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to disable.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesTriggerRuleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "triggerRule",
      },
      "server": [],
      "summary": "Trigger a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesPutRuleRunRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Rules_PutRuleRun",
      "path": "/api/apps/{app}/rules/{id}/run",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesPutRuleRunRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to run.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesPutRuleRunRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Runs the rule from snapeshots if possible.",
          "name": "fromSnapshots",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RulesPutRuleRunRequestFromSnapshots",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RulesPutRuleRunRequestFromSnapshots",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "putRuleRun",
      },
      "server": [],
      "summary": "Run a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesDeleteRuleEventsRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Rules_DeleteRuleEvents",
      "path": "/api/apps/{app}/rules/{id}/events",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteRuleEventsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to cancel.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteRuleEventsRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "deleteRuleEvents",
      },
      "server": [],
      "summary": "Cancels all rule events.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Rule or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "RulesSimulatePostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Rules_SimulatePOST",
      "path": "/api/apps/{app}/rules/simulate",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesSimulatePostRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RulesSimulatePostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateRuleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Rule simulated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesSimulatePostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SimulatedRuleEventsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "simulatePOST",
      },
      "server": [],
      "summary": "Simulate a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Rule or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesSimulateGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Rules_SimulateGET",
      "path": "/api/apps/{app}/rules/{id}/simulate",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesSimulateGetRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the rule to simulate.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesSimulateGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rule simulated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesSimulateGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SimulatedRuleEventsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "simulateGET",
      },
      "server": [],
      "summary": "Simulate a rule.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesGetEventsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Rules_GetEvents",
      "path": "/api/apps/{app}/rules/events",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesGetEventsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [
        {
          "description": "The optional rule id to filter to events.",
          "name": "ruleId",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RulesGetEventsRequestRuleId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RulesGetEventsRequestRuleId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The number of events to skip.",
          "name": "skip",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RulesGetEventsRequestSkip",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RulesGetEventsRequestSkip",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The number of events to take.",
          "name": "take",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RulesGetEventsRequestTake",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RulesGetEventsRequestTake",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rule events returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesGetEventsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RuleEventsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "getEvents",
      },
      "server": [],
      "summary": "Get rule events.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesDeleteEventsRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Rules_DeleteEvents",
      "path": "/api/apps/{app}/rules/events",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteEventsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "deleteEvents",
      },
      "server": [],
      "summary": "Cancels all events.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App or rule event not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesPutEventRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Rules_PutEvent",
      "path": "/api/apps/{app}/rules/events/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesPutEventRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The event to enqueue.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesPutEventRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "putEvent",
      },
      "server": [],
      "summary": "Retry the event immediately.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App or rule event not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesDeleteEventRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Rules_DeleteEvent",
      "path": "/api/apps/{app}/rules/events/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteEventRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The event to enqueue.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "RulesDeleteEventRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "deleteEvent",
      },
      "server": [],
      "summary": "Cancels an event.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesGetEventTypesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Rules_GetEventTypes",
      "path": "/api/rules/eventtypes",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rule events returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RulesGetEventTypesResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "RulesGetEventTypesResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "getEventTypes",
      },
      "server": [],
      "summary": "Provide a list of all event types that are used in rules.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Rule event not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "type",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "type",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "key",
                },
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "value": "value",
                  },
                },
              },
            ],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "RulesGetEventSchemaRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Rules_GetEventSchema",
      "path": "/api/rules/eventtypes/{type}",
      "pathParameters": [
        {
          "description": "The type name of the event.",
          "name": "type",
          "schema": {
            "description": null,
            "generatedName": "RulesGetEventSchemaRequestType",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Rule event type found.",
        "responseProperty": null,
        "schema": {
          "generatedName": "RulesGetEventSchemaResponse",
          "nameOverride": null,
          "type": "unknown",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "rules",
        ],
        "methodName": "getEventSchema",
      },
      "server": [],
      "summary": "Provide the json schema for the event with the specified name.",
      "tags": [
        "Rules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "currentPlanId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "currentPlanId",
                },
              },
              "locked": {
                "type": "enum",
                "value": "None",
              },
              "planOwner": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "planOwner",
                },
              },
              "plans": {
                "type": "array",
                "value": [],
              },
              "portalLink": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "portalLink",
                },
              },
              "referral": {
                "properties": {
                  "code": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "code",
                    },
                  },
                  "condition": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "condition",
                    },
                  },
                  "earned": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "earned",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "PlansGetPlansRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppPlans_GetPlans",
      "path": "/api/apps/{app}/plans",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "PlansGetPlansRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "App plan information returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PlansGetPlansResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "PlansDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "plans",
        ],
        "methodName": "getPlans",
      },
      "server": [],
      "summary": "Get app plan information.",
      "tags": [
        "Plans",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Plan not owned by user.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "planId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "planId",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "redirectUri": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "redirectUri",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "PlansPutPlanRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AppPlans_PutPlan",
      "path": "/api/apps/{app}/plan",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "PlansPutPlanRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PlansPutPlanRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ChangePlanDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Plan changed or redirect url returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PlansPutPlanResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "PlanChangedDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "plans",
        ],
        "methodName": "putPlan",
      },
      "server": [],
      "summary": "Change the app plan.",
      "tags": [
        "Plans",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "currentPlanId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "currentPlanId",
                },
              },
              "locked": {
                "type": "enum",
                "value": "None",
              },
              "planOwner": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "planOwner",
                },
              },
              "plans": {
                "type": "array",
                "value": [],
              },
              "portalLink": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "portalLink",
                },
              },
              "referral": {
                "properties": {
                  "code": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "code",
                    },
                  },
                  "condition": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "condition",
                    },
                  },
                  "earned": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "earned",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "PlansGetTeamPlansRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "TeamPlans_GetTeamPlans",
      "path": "/api/teams/{team}/plans",
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "PlansGetTeamPlansRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Team plan information returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PlansGetTeamPlansResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "PlansDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "plans",
        ],
        "methodName": "getTeamPlans",
      },
      "server": [],
      "summary": "Get team plan information.",
      "tags": [
        "Plans",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "planId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "planId",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "redirectUri": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "redirectUri",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "PlansPutTeamPlanRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "TeamPlans_PutTeamPlan",
      "path": "/api/teams/{team}/plan",
      "pathParameters": [
        {
          "description": "The name of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "PlansPutTeamPlanRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PlansPutTeamPlanRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ChangePlanDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Plan changed or redirect url returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PlansPutTeamPlanResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "PlanChangedDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "plans",
        ],
        "methodName": "putTeamPlan",
      },
      "server": [],
      "summary": "Change the team plan.",
      "tags": [
        "Plans",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "value": "string",
                  },
                },
              },
            ],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "PingGetInfoRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Ping_GetInfo",
      "path": "/api/info",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Infos returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PingGetInfoResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ExposedValues",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "ping",
        ],
        "methodName": "getInfo",
      },
      "server": [],
      "summary": "Get API information.",
      "tags": [
        "Ping",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Can be used to test, if the Squidex API is alive and responding.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "PingGetPingRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Ping_GetPing",
      "path": "/api/ping",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "ping",
        ],
        "methodName": "getPing",
      },
      "server": [],
      "summary": "Get ping status of the API.",
      "tags": [
        "Ping",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Can be used to test, if the Squidex API is alive and responding.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "PingGetAppPingRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Ping_GetAppPing",
      "path": "/api/ping/{app}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "PingGetAppPingRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "ping",
        ],
        "methodName": "getAppPing",
      },
      "server": [],
      "summary": "Get ping status.",
      "tags": [
        "Ping",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "features": {
                "type": "array",
                "value": [],
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "NewsGetNewsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "News_GetNews",
      "path": "/api/news/features",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The latest received version.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "NewsGetNewsRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "NewsGetNewsRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Latest features returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "NewsGetNewsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "FeaturesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "news",
        ],
        "methodName": "getNews",
      },
      "server": [],
      "summary": "Get features since version.",
      "tags": [
        "News",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Provide a list of supported language codes, following the ISO2Code standard.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "LanguagesGetLanguagesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Languages_GetLanguages",
      "path": "/api/languages",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Supported language codes returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LanguagesGetLanguagesResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "LanguagesGetLanguagesResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "LanguageDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "languages",
        ],
        "methodName": "getLanguages",
      },
      "server": [],
      "summary": "Get supported languages.",
      "tags": [
        "Languages",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "HistoryGetAppHistoryRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "History_GetAppHistory",
      "path": "/api/apps/{app}/history",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "HistoryGetAppHistoryRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [
        {
          "description": "The name of the channel.",
          "name": "channel",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "HistoryGetAppHistoryRequestChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "HistoryGetAppHistoryRequestChannel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Events returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "HistoryGetAppHistoryResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "HistoryGetAppHistoryResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "HistoryEventDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "history",
        ],
        "methodName": "getAppHistory",
      },
      "server": [],
      "summary": "Get historical events.",
      "tags": [
        "History",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Team not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "HistoryGetTeamHistoryRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "History_GetTeamHistory",
      "path": "/api/teams/{team}/history",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "HistoryGetTeamHistoryRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The name of the channel.",
          "name": "channel",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "HistoryGetTeamHistoryRequestChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "HistoryGetTeamHistoryRequestChannel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Events returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "HistoryGetTeamHistoryResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "HistoryGetTeamHistoryResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "HistoryEventDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "history",
        ],
        "methodName": "getTeamHistory",
      },
      "server": [],
      "summary": "Get historical events for a team.",
      "tags": [
        "History",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "EventConsumersGetEventConsumersRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "EventConsumers_GetEventConsumers",
      "path": "/api/event-consumers",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Event consumers returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EventConsumersGetEventConsumersResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "EventConsumersDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "eventConsumers",
        ],
        "methodName": "getEventConsumers",
      },
      "server": [],
      "summary": "Get event consumers.",
      "tags": [
        "EventConsumers",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Event consumer not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "consumerName",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "consumerName",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "error": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "error",
                },
              },
              "isResetting": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isStopped": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "position": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "position",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "EventConsumersStartEventConsumerRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "EventConsumers_StartEventConsumer",
      "path": "/api/event-consumers/{consumerName}/start",
      "pathParameters": [
        {
          "description": "The name of the event consumer.",
          "name": "consumerName",
          "schema": {
            "description": null,
            "generatedName": "EventConsumersStartEventConsumerRequestConsumerName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Event consumer started asynchronously.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EventConsumersStartEventConsumerResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "EventConsumerDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "eventConsumers",
        ],
        "methodName": "startEventConsumer",
      },
      "server": [],
      "summary": "Start an event consumer.",
      "tags": [
        "EventConsumers",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Event consumer not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "consumerName",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "consumerName",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "error": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "error",
                },
              },
              "isResetting": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isStopped": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "position": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "position",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "EventConsumersStopEventConsumerRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "EventConsumers_StopEventConsumer",
      "path": "/api/event-consumers/{consumerName}/stop",
      "pathParameters": [
        {
          "description": "The name of the event consumer.",
          "name": "consumerName",
          "schema": {
            "description": null,
            "generatedName": "EventConsumersStopEventConsumerRequestConsumerName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Event consumer stopped asynchronously.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EventConsumersStopEventConsumerResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "EventConsumerDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "eventConsumers",
        ],
        "methodName": "stopEventConsumer",
      },
      "server": [],
      "summary": "Stop an event consumer.",
      "tags": [
        "EventConsumers",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Event consumer not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "consumerName",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "consumerName",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "error": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "error",
                },
              },
              "isResetting": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isStopped": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "position": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "position",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "EventConsumersResetEventConsumerRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "EventConsumers_ResetEventConsumer",
      "path": "/api/event-consumers/{consumerName}/reset",
      "pathParameters": [
        {
          "description": "The name of the event consumer.",
          "name": "consumerName",
          "schema": {
            "description": null,
            "generatedName": "EventConsumersResetEventConsumerRequestConsumerName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Event consumer resetted asynchronously.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EventConsumersResetEventConsumerResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "EventConsumerDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "eventConsumers",
        ],
        "methodName": "resetEventConsumer",
      },
      "server": [],
      "summary": "Reset an event consumer.",
      "tags": [
        "EventConsumers",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "501": {
          "description": "Not configured.",
          "examples": [],
          "generatedName": "NotImplementedError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "NotImplementedErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "DiagnosticsGetDumpRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Diagnostics_GetDump",
      "path": "/api/diagnostics/dump",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "diagnostics",
        ],
        "methodName": "getDump",
      },
      "server": [],
      "summary": "Creates a dump and writes it into storage..",
      "tags": [
        "Diagnostics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "501": {
          "description": "Not configured.",
          "examples": [],
          "generatedName": "NotImplementedError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "NotImplementedErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "DiagnosticsGetGcDumpRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Diagnostics_GetGCDump",
      "path": "/api/diagnostics/gcdump",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "diagnostics",
        ],
        "methodName": "getGCDump",
      },
      "server": [],
      "summary": "Creates a gc dump and writes it into storage.",
      "tags": [
        "Diagnostics",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsGetContentsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Contents_GetContents",
      "path": "/api/content/{app}/{schema}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentsRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The optional ids of the content to fetch.",
          "name": "ids",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentsRequestIds",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsGetContentsRequestIds",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The optional json query.",
          "name": "q",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentsRequestQ",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsGetContentsRequestQ",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contents returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsGetContentsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "getContents",
      },
      "server": [],
      "summary": "Queries contents.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [],
                },
              },
            ],
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsPostContentRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Contents_PostContent",
      "path": "/api/content/{app}/{schema}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsPostContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsPostContentRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The initial status.",
          "name": "status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsPostContentRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsPostContentRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The optional custom content id.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsPostContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsPostContentRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to automatically publish the content.",
          "name": "publish",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsPostContentRequestPublish",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsPostContentRequestPublish",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPostContentRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentData",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Content created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPostContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "postContent",
      },
      "server": [],
      "summary": "Create a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsGetContentsPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Contents_GetContentsPost",
      "path": "/api/content/{app}/{schema}/query",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentsPostRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentsPostRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsGetContentsPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "QueryDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Contents returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsGetContentsPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "getContentsPost",
      },
      "server": [],
      "summary": "Queries contents.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "data": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "key",
                    },
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "value": "value",
                      },
                    },
                  },
                ],
              },
              "editToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "editToken",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isDeleted": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "newStatus": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "newStatus",
                },
              },
              "newStatusColor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "newStatusColor",
                },
              },
              "referenceData": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "referenceData",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "referenceData",
                          },
                          "value": {
                            "type": "map",
                            "value": [
                              {
                                "key": {
                                  "type": "string",
                                  "value": "key",
                                },
                                "value": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string",
                                    "value": "value",
                                  },
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "scheduleJob": {
                "properties": {
                  "color": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "color",
                    },
                  },
                  "dueTime": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "scheduledBy": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "scheduledBy",
                    },
                  },
                  "status": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "status",
                    },
                  },
                },
                "type": "object",
              },
              "schemaDisplayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schemaDisplayName",
                },
              },
              "schemaId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schemaId",
                },
              },
              "schemaName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schemaName",
                },
              },
              "status": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "status",
                },
              },
              "statusColor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "statusColor",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsGetContentRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Contents_GetContent",
      "path": "/api/content/{app}/{schema}/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The optional version.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsGetContentRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Content returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsGetContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "getContent",
      },
      "server": [],
      "summary": "Get a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content references, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [],
                },
              },
            ],
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsPostUpsertContentRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Contents_PostUpsertContent",
      "path": "/api/content/{app}/{schema}/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsPostUpsertContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsPostUpsertContentRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to update.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsPostUpsertContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The initial status.",
          "name": "status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsPostUpsertContentRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsPostUpsertContentRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Makes the update as patch.",
          "name": "patch",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsPostUpsertContentRequestPatch",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsPostUpsertContentRequestPatch",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to automatically publish the content.",
          "name": "publish",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsPostUpsertContentRequestPublish",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsPostUpsertContentRequestPublish",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPostUpsertContentRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentData",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Content created or updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPostUpsertContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "postUpsertContent",
      },
      "server": [],
      "summary": "Upsert a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content references, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [],
                },
              },
            ],
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsPutContentRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Contents_PutContent",
      "path": "/api/content/{app}/{schema}/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsPutContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsPutContentRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to update.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsPutContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPutContentRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentData",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Content updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPutContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "putContent",
      },
      "server": [],
      "summary": "Update a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can create an generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content cannot be deleted.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsDeleteContentRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Contents_DeleteContent",
      "path": "/api/content/{app}/{schema}/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to delete.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "True to check referrers of this content.",
          "name": "checkReferrers",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentRequestCheckReferrers",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsDeleteContentRequestCheckReferrers",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to delete the content permanently.",
          "name": "permanent",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentRequestPermanent",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsDeleteContentRequestPermanent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "deleteContent",
      },
      "server": [],
      "summary": "Delete a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [],
                },
              },
            ],
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsPatchContentRequest",
      "headers": [],
      "internal": null,
      "method": "PATCH",
      "operationId": "Contents_PatchContent",
      "path": "/api/content/{app}/{schema}/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsPatchContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsPatchContentRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to patch.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsPatchContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPatchContentRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentData",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Content patched.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPatchContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "patchContent",
      },
      "server": [],
      "summary": "Patchs a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsGetContentValidityRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Contents_GetContentValidity",
      "path": "/api/content/{app}/{schema}/{id}/validity",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentValidityRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentValidityRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentValidityRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "getContentValidity",
      },
      "server": [],
      "summary": "Get a content item validity.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsGetReferencesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Contents_GetReferences",
      "path": "/api/content/{app}/{schema}/{id}/references",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencesRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencesRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencesRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The optional json query.",
          "name": "q",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencesRequestQ",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsGetReferencesRequestQ",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contents returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsGetReferencesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "getReferences",
      },
      "server": [],
      "summary": "Get all references of a content.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsGetReferencingRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Contents_GetReferencing",
      "path": "/api/content/{app}/{schema}/{id}/referencing",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencingRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencingRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencingRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The optional json query.",
          "name": "q",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentsGetReferencingRequestQ",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ContentsGetReferencingRequestQ",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Content returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsGetReferencingResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "getReferencing",
      },
      "server": [],
      "summary": "Get a referencing contents of a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": "Deprecated",
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "ContentsGetContentVersionRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Contents_GetContentVersion",
      "path": "/api/content/{app}/{schema}/{id}/{version}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentVersionRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentVersionRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content to fetch.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentVersionRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The version fo the content to fetch.",
          "name": "version",
          "schema": {
            "description": null,
            "generatedName": "ContentsGetContentVersionRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Content version returned.",
        "type": "file",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "getContentVersion",
      },
      "server": [],
      "summary": "Get a content by version.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": "Deprecated",
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content references, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "datas": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsPostContentsRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Contents_PostContents",
      "path": "/api/content/{app}/{schema}/import",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsPostContentsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsPostContentsRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPostContentsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ImportContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Contents created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPostContentsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "ContentsPostContentsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "BulkResultDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "postContents",
      },
      "server": [],
      "summary": "Import content items.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Contents request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Contents references, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "jobs": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsBulkUpdateContentsRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Contents_BulkUpdateContents",
      "path": "/api/content/{app}/{schema}/bulk",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsBulkUpdateContentsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsBulkUpdateContentsRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsBulkUpdateContentsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "BulkUpdateContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsBulkUpdateContentsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "ContentsBulkUpdateContentsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "BulkResultDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "bulkUpdateContents",
      },
      "server": [],
      "summary": "Bulk update content items.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "status": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "status",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsPutContentStatusRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Contents_PutContentStatus",
      "path": "/api/content/{app}/{schema}/{id}/status",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsPutContentStatusRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsPutContentStatusRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to change.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsPutContentStatusRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPutContentStatusRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ChangeStatusDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Content status changed.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsPutContentStatusResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "putContentStatus",
      },
      "server": [],
      "summary": "Change status of a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Content request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsDeleteContentStatusRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Contents_DeleteContentStatus",
      "path": "/api/content/{app}/{schema}/{id}/status",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentStatusRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentStatusRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to cancel.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteContentStatusRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Content status change cancelled.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsDeleteContentStatusResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "deleteContentStatus",
      },
      "server": [],
      "summary": "Cancel status change of a content item.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsCreateDraftRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Contents_CreateDraft",
      "path": "/api/content/{app}/{schema}/{id}/draft",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsCreateDraftRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsCreateDraftRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to create the draft for.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsCreateDraftRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Content draft created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsCreateDraftResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "createDraft",
      },
      "server": [],
      "summary": "Create a new draft version.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Content, schema or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "schema",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "schema",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "statuses": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ContentsDeleteVersionRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Contents_DeleteVersion",
      "path": "/api/content/{app}/{schema}/{id}/draft",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteVersionRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the schema.",
          "name": "schema",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteVersionRequestSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the content item to delete the draft from.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ContentsDeleteVersionRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Content draft deleted.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ContentsDeleteVersionResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "contents",
        ],
        "methodName": "deleteVersion",
      },
      "server": [],
      "summary": "Delete the draft version.",
      "tags": [
        "Contents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "CommentsGetWatchingUsersRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Comments_GetWatchingUsers",
      "path": "/api/apps/{app}/watching/{resource}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "CommentsGetWatchingUsersRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The path to the resource.",
          "name": "resource",
          "schema": {
            "description": null,
            "generatedName": "CommentsGetWatchingUsersRequestResource",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CommentsGetWatchingUsersRequestResource",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Watching users returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CommentsGetWatchingUsersResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "CommentsGetWatchingUsersResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "comments",
        ],
        "methodName": "getWatchingUsers",
      },
      "server": [],
      "summary": "Get all watching users..",
      "tags": [
        "Comments",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "When passing in a version you can retrieve all updates since then.",
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "commentsId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "commentsId",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "CommentsGetCommentsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Comments_GetComments",
      "path": "/api/apps/{app}/comments/{commentsId}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "CommentsGetCommentsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "description": null,
            "generatedName": "CommentsGetCommentsRequestCommentsId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The current version.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CommentsGetCommentsRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CommentsGetCommentsRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Comments returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CommentsGetCommentsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CommentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "comments",
        ],
        "methodName": "getComments",
      },
      "server": [],
      "summary": "Get all comments.",
      "tags": [
        "Comments",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Comment request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "commentsId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "commentsId",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "text": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "text",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "text": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "text",
                },
              },
              "time": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
              "user": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "user",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "CommentsPostCommentRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Comments_PostComment",
      "path": "/api/apps/{app}/comments/{commentsId}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "CommentsPostCommentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "description": null,
            "generatedName": "CommentsPostCommentRequestCommentsId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CommentsPostCommentRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpsertCommentDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Comment created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CommentsPostCommentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CommentDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "comments",
        ],
        "methodName": "postComment",
      },
      "server": [],
      "summary": "Create a new comment.",
      "tags": [
        "Comments",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Comment request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Comment or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "commentsId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "commentsId",
                },
              },
            },
            {
              "name": "commentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "commentId",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "text": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "text",
                },
              },
            },
            "type": "object",
          },
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "CommentsPutCommentRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Comments_PutComment",
      "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "CommentsPutCommentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "description": null,
            "generatedName": "CommentsPutCommentRequestCommentsId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the comment.",
          "name": "commentId",
          "schema": {
            "description": null,
            "generatedName": "CommentsPutCommentRequestCommentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CommentsPutCommentRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpsertCommentDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "comments",
        ],
        "methodName": "putComment",
      },
      "server": [],
      "summary": "Update a comment.",
      "tags": [
        "Comments",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Comment or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "commentsId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "commentsId",
                },
              },
            },
            {
              "name": "commentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "commentId",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "CommentsDeleteCommentRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Comments_DeleteComment",
      "path": "/api/apps/{app}/comments/{commentsId}/{commentId}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "CommentsDeleteCommentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the comments.",
          "name": "commentsId",
          "schema": {
            "description": null,
            "generatedName": "CommentsDeleteCommentRequestCommentsId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the comment.",
          "name": "commentId",
          "schema": {
            "description": null,
            "generatedName": "CommentsDeleteCommentRequestCommentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "comments",
        ],
        "methodName": "deleteComment",
      },
      "server": [],
      "summary": "Delete a comment.",
      "tags": [
        "Comments",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "When passing in a version you can retrieve all updates since then.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "userId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "userId",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "NotificationsGetNotificationsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "UserNotifications_GetNotifications",
      "path": "/api/users/{userId}/notifications",
      "pathParameters": [
        {
          "description": "The user id.",
          "name": "userId",
          "schema": {
            "description": null,
            "generatedName": "NotificationsGetNotificationsRequestUserId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The current version.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "NotificationsGetNotificationsRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "NotificationsGetNotificationsRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "All comments returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "NotificationsGetNotificationsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CommentsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "notifications",
        ],
        "methodName": "getNotifications",
      },
      "server": [],
      "summary": "Get all notifications.",
      "tags": [
        "Notifications",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Comment not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "userId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "userId",
                },
              },
            },
            {
              "name": "commentId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "commentId",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "NotificationsDeleteCommentRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "UserNotifications_DeleteComment",
      "path": "/api/users/{userId}/notifications/{commentId}",
      "pathParameters": [
        {
          "description": "The user id.",
          "name": "userId",
          "schema": {
            "description": null,
            "generatedName": "NotificationsDeleteCommentRequestUserId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "The ID of the comment.",
          "name": "commentId",
          "schema": {
            "description": null,
            "generatedName": "NotificationsDeleteCommentRequestCommentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "notifications",
        ],
        "methodName": "deleteComment",
      },
      "server": [],
      "summary": "Delete a notification.",
      "tags": [
        "Notifications",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Backup or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "BackupsGetBackupContentRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "BackupContent_GetBackupContent",
      "path": "/api/apps/{app}/backups/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "BackupsGetBackupContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the backup.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "BackupsGetBackupContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Backup found and content returned.",
        "type": "file",
      },
      "sdkName": {
        "groupName": [
          "backups",
        ],
        "methodName": "getBackupContent",
      },
      "server": [],
      "summary": "Get the backup content.",
      "tags": [
        "Backups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Backup or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "BackupsDeleteBackupRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Backups_DeleteBackup",
      "path": "/api/apps/{app}/backups/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "BackupsDeleteBackupRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the backup to delete.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "BackupsDeleteBackupRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "backups",
        ],
        "methodName": "deleteBackup",
      },
      "server": [],
      "summary": "Delete a backup.",
      "tags": [
        "Backups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Backup or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "BackupsGetBackupContentV2Request",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "BackupContent_GetBackupContentV2",
      "path": "/api/apps/backups/{id}",
      "pathParameters": [
        {
          "description": "The ID of the backup.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "BackupsGetBackupContentV2RequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The ID of the app.",
          "name": "appId",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BackupsGetBackupContentV2RequestAppId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "BackupsGetBackupContentV2RequestAppId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The name of the app.",
          "name": "app",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BackupsGetBackupContentV2RequestApp",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "BackupsGetBackupContentV2RequestApp",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Backup found and content returned.",
        "type": "file",
      },
      "sdkName": {
        "groupName": [
          "backups",
        ],
        "methodName": "getBackupContentV2",
      },
      "server": [],
      "summary": "Get the backup content.",
      "tags": [
        "Backups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "BackupsGetBackupsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Backups_GetBackups",
      "path": "/api/apps/{app}/backups",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "BackupsGetBackupsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Backups returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "BackupsGetBackupsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "BackupJobsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "backups",
        ],
        "methodName": "getBackups",
      },
      "server": [],
      "summary": "Get all backup jobs.",
      "tags": [
        "Backups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Backup contingent reached.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "BackupsPostBackupRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Backups_PostBackup",
      "path": "/api/apps/{app}/backups",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "BackupsPostBackupRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "backups",
        ],
        "methodName": "postBackup",
      },
      "server": [],
      "summary": "Start a new backup.",
      "tags": [
        "Backups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "log": {
                "type": "array",
                "value": [],
              },
              "started": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "status": {
                "type": "enum",
                "value": "Created",
              },
              "stopped": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "BackupsGetRestoreJobRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Restore_GetRestoreJob",
      "path": "/api/apps/restore",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Status returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "BackupsGetRestoreJobResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RestoreJobDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "backups",
        ],
        "methodName": "getRestoreJob",
      },
      "server": [],
      "summary": "Get current restore status.",
      "tags": [
        "Backups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "BackupsPostRestoreJobRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Restore_PostRestoreJob",
      "path": "/api/apps/restore",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "BackupsPostRestoreJobRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "RestoreRequestDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "backups",
        ],
        "methodName": "postRestoreJob",
      },
      "server": [],
      "summary": "Restore a backup.",
      "tags": [
        "Backups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Asset or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "AssetsGetAssetContentBySlugRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AssetContent_GetAssetContentBySlug",
      "path": "/api/assets/{app}/{idOrSlug}/{more}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The id or slug of the asset.",
          "name": "idOrSlug",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestIdOrSlug",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "Optional suffix that can be used to seo-optimize the link to the image Has not effect.",
          "name": "more",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestMore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestMore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The optional version of the asset.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The cache duration in seconds.",
          "name": "cache",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestCache",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestCache",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Set it to 0 to prevent download.",
          "name": "download",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestDownload",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestDownload",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The target width of the asset, if it is an image.",
          "name": "width",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestWidth",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestWidth",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The target height of the asset, if it is an image.",
          "name": "height",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestHeight",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestHeight",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Optional image quality, it is is an jpeg image.",
          "name": "quality",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestQuality",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestQuality",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The resize mode when the width and height is defined.",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "ResizeMode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Optional background color.",
          "name": "bg",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestBg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestBg",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Override the y focus point.",
          "name": "focusX",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestFocusX",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestFocusX",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Override the x focus point.",
          "name": "focusY",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestFocusY",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestFocusY",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to ignore the asset focus point if any.",
          "name": "nofocus",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestNofocus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestNofocus",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to use auto format.",
          "name": "auto",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestAuto",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestAuto",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "force",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestForce",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestForce",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "format",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentBySlugRequestFormat",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentBySlugRequestFormat",
              "groupName": null,
              "nameOverride": null,
              "schema": "ImageFormat",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Asset found and content or (resized) image returned.",
        "type": "file",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "getAssetContentBySlug",
      },
      "server": [],
      "summary": "Get the asset content.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": "Deprecated",
      "description": null,
      "errors": {
        "404": {
          "description": "Asset or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "AssetsGetAssetContentRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AssetContent_GetAssetContent",
      "path": "/api/assets/{id}",
      "pathParameters": [
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The optional version of the asset.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The cache duration in seconds.",
          "name": "cache",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestCache",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestCache",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Set it to 0 to prevent download.",
          "name": "download",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestDownload",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestDownload",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The target width of the asset, if it is an image.",
          "name": "width",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestWidth",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestWidth",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The target height of the asset, if it is an image.",
          "name": "height",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestHeight",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestHeight",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Optional image quality, it is is an jpeg image.",
          "name": "quality",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestQuality",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestQuality",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The resize mode when the width and height is defined.",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "ResizeMode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Optional background color.",
          "name": "bg",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestBg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestBg",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Override the y focus point.",
          "name": "focusX",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestFocusX",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestFocusX",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Override the x focus point.",
          "name": "focusY",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestFocusY",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestFocusY",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to ignore the asset focus point if any.",
          "name": "nofocus",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestNofocus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestNofocus",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to use auto format.",
          "name": "auto",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestAuto",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestAuto",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "force",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestForce",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestForce",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to force a new resize even if it already stored.",
          "name": "format",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetContentRequestFormat",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetContentRequestFormat",
              "groupName": null,
              "nameOverride": null,
              "schema": "ImageFormat",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Asset found and content or (resized) image returned.",
        "type": "file",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "getAssetContent",
      },
      "server": [],
      "summary": "Get the asset content.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get all asset folders for the app.",
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "path": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsGetAssetFoldersRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AssetFolders_GetAssetFolders",
      "path": "/api/apps/{app}/assets/folders",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetFoldersRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetFoldersRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetFoldersRequestParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The scope of the query.",
          "name": "scope",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetFoldersRequestScope",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetFoldersRequestScope",
              "groupName": null,
              "nameOverride": null,
              "schema": "AssetFolderScope",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Asset folders returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsGetAssetFoldersResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetFoldersDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "getAssetFolders",
      },
      "server": [],
      "summary": "Get asset folders.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Asset folder request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "folderName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "folderName",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "folderName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "folderName",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPostAssetFolderRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "AssetFolders_PostAssetFolder",
      "path": "/api/apps/{app}/assets/folders",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPostAssetFolderRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPostAssetFolderRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateAssetFolderDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset folder created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPostAssetFolderResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetFolderDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "postAssetFolder",
      },
      "server": [],
      "summary": "Create an asset folder.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Asset folder request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Asset folder or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "folderName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "folderName",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "folderName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "folderName",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPutAssetFolderRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AssetFolders_PutAssetFolder",
      "path": "/api/apps/{app}/assets/folders/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetFolderRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset folder.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetFolderRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetFolderRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "RenameAssetFolderDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset folder updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetFolderResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetFolderDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "putAssetFolder",
      },
      "server": [],
      "summary": "Update an asset folder.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Asset folder or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsDeleteAssetFolderRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "AssetFolders_DeleteAssetFolder",
      "path": "/api/apps/{app}/assets/folders/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsDeleteAssetFolderRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset folder to delete.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsDeleteAssetFolderRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "deleteAssetFolder",
      },
      "server": [],
      "summary": "Delete an asset folder.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Asset folder request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Asset folder or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "folderName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "folderName",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPutAssetFolderParentRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AssetFolders_PutAssetFolderParent",
      "path": "/api/apps/{app}/assets/folders/{id}/parent",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetFolderParentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset folder.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetFolderParentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetFolderParentRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "MoveAssetFolderDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset folder moved.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetFolderParentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetFolderDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "putAssetFolderParent",
      },
      "server": [],
      "summary": "Move an asset folder.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get all tags for assets.",
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "int",
                    "value": 1,
                  },
                },
              },
            ],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsGetTagsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Assets_GetTags",
      "path": "/api/apps/{app}/assets/tags",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetTagsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Assets tags returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsGetTagsResponse",
          "groupName": null,
          "key": {
            "description": null,
            "generatedName": "AssetsGetTagsResponseKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
          },
          "nameOverride": null,
          "type": "map",
          "value": {
            "description": null,
            "generatedName": "AssetsGetTagsResponseValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "getTags",
      },
      "server": [],
      "summary": "Get assets tags.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "name",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "tagName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "tagName",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "int",
                    "value": 1,
                  },
                },
              },
            ],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPutTagRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Assets_PutTag",
      "path": "/api/apps/{app}/assets/tags/{name}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutTagRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The tag to return.",
          "name": "name",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutTagRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutTagRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "RenameTagDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset tag renamed and new tags returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutTagResponse",
          "groupName": null,
          "key": {
            "description": null,
            "generatedName": "AssetsPutTagResponseKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
          },
          "nameOverride": null,
          "type": "map",
          "value": {
            "description": null,
            "generatedName": "AssetsPutTagResponseValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "putTag",
      },
      "server": [],
      "summary": "Rename an asset tag.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get all assets for the app.",
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsGetAssetsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Assets_GetAssets",
      "path": "/api/apps/{app}/assets",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetsRequestParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The optional asset ids.",
          "name": "ids",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestIds",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetsRequestIds",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The optional json query.",
          "name": "q",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestQ",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetsRequestQ",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Optional number of items to take.",
          "name": "$top",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestTop",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetsRequestTop",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Optional number of items to skip.",
          "name": "$skip",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestSkip",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetsRequestSkip",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Optional OData order definition.",
          "name": "$orderby",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestOrderby",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetsRequestOrderby",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Optional OData filter.",
          "name": "$filter",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsRequestFilter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsGetAssetsRequestFilter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Assets returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsGetAssetsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "getAssets",
      },
      "server": [],
      "summary": "Get assets.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
      "errors": {
        "400": {
          "description": "Asset request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "413": {
          "description": "Asset exceeds the maximum upload size.",
          "examples": [],
          "generatedName": "ContentTooLargeError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentTooLargeErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isDuplicate": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isDuplicate",
                    },
                  },
                },
                "type": "object",
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "editToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "editToken",
                },
              },
              "fileHash": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileHash",
                },
              },
              "fileName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileName",
                },
              },
              "fileSize": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "fileType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileType",
                },
              },
              "fileVersion": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isImage": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isProtected": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "metadata": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "metadata",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "metadataText": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "metadataText",
                },
              },
              "mimeType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "mimeType",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "pixelHeight": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "pixelWidth": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "slug": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "slug",
                },
              },
              "type": {
                "type": "enum",
                "value": "Unknown",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPostAssetRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Assets_PostAsset",
      "path": "/api/apps/{app}/assets",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPostAssetRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsPostAssetRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsPostAssetRequestParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The optional custom asset id.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsPostAssetRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsPostAssetRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to duplicate the asset, event if the file has been uploaded.",
          "name": "duplicate",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsPostAssetRequestDuplicate",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsPostAssetRequestDuplicate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": {
        "description": null,
        "name": null,
        "properties": [
          {
            "description": null,
            "key": "file",
            "schema": {
              "isArray": false,
              "isOptional": true,
              "type": "file",
            },
          },
        ],
        "type": "multipart",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPostAssetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "postAsset",
      },
      "server": [],
      "summary": "Upload a new asset.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get all assets for the app.",
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsGetAssetsPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Assets_GetAssetsPost",
      "path": "/api/apps/{app}/assets/query",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetsPostRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsGetAssetsPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "QueryDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Assets returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsGetAssetsPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "getAssetsPost",
      },
      "server": [],
      "summary": "Get assets.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "Asset or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isDuplicate": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isDuplicate",
                    },
                  },
                },
                "type": "object",
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "editToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "editToken",
                },
              },
              "fileHash": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileHash",
                },
              },
              "fileName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileName",
                },
              },
              "fileSize": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "fileType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileType",
                },
              },
              "fileVersion": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isImage": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isProtected": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "metadata": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "metadata",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "metadataText": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "metadataText",
                },
              },
              "mimeType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "mimeType",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "pixelHeight": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "pixelWidth": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "slug": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "slug",
                },
              },
              "type": {
                "type": "enum",
                "value": "Unknown",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsGetAssetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Assets_GetAsset",
      "path": "/api/apps/{app}/assets/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset to retrieve.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsGetAssetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Asset found.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsGetAssetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "getAsset",
      },
      "server": [],
      "summary": "Get an asset by id.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
      "errors": {
        "400": {
          "description": "Asset request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "413": {
          "description": "Asset exceeds the maximum upload size.",
          "examples": [],
          "generatedName": "ContentTooLargeError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentTooLargeErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isDuplicate": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isDuplicate",
                    },
                  },
                },
                "type": "object",
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "editToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "editToken",
                },
              },
              "fileHash": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileHash",
                },
              },
              "fileName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileName",
                },
              },
              "fileSize": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "fileType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileType",
                },
              },
              "fileVersion": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isImage": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isProtected": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "metadata": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "metadata",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "metadataText": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "metadataText",
                },
              },
              "mimeType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "mimeType",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "pixelHeight": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "pixelWidth": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "slug": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "slug",
                },
              },
              "type": {
                "type": "enum",
                "value": "Unknown",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPostUpsertAssetRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Assets_PostUpsertAsset",
      "path": "/api/apps/{app}/assets/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPostUpsertAssetRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The optional custom asset id.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsPostUpsertAssetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "The optional parent folder id.",
          "name": "parentId",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsPostUpsertAssetRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsPostUpsertAssetRequestParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to duplicate the asset, event if the file has been uploaded.",
          "name": "duplicate",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsPostUpsertAssetRequestDuplicate",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsPostUpsertAssetRequestDuplicate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": {
        "description": null,
        "name": null,
        "properties": [
          {
            "description": null,
            "key": "file",
            "schema": {
              "isArray": false,
              "isOptional": true,
              "type": "file",
            },
          },
        ],
        "type": "multipart",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset created or updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPostUpsertAssetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "postUpsertAsset",
      },
      "server": [],
      "summary": "Upsert an asset.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Asset request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Asset or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isDuplicate": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isDuplicate",
                    },
                  },
                },
                "type": "object",
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "editToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "editToken",
                },
              },
              "fileHash": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileHash",
                },
              },
              "fileName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileName",
                },
              },
              "fileSize": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "fileType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileType",
                },
              },
              "fileVersion": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isImage": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isProtected": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "metadata": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "metadata",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "metadataText": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "metadataText",
                },
              },
              "mimeType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "mimeType",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "pixelHeight": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "pixelWidth": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "slug": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "slug",
                },
              },
              "type": {
                "type": "enum",
                "value": "Unknown",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPutAssetRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Assets_PutAsset",
      "path": "/api/apps/{app}/assets/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AnnotateAssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "putAsset",
      },
      "server": [],
      "summary": "Update an asset.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Asset or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsDeleteAssetRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Assets_DeleteAsset",
      "path": "/api/apps/{app}/assets/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsDeleteAssetRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset to delete.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsDeleteAssetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "True to check referrers of this asset.",
          "name": "checkReferrers",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsDeleteAssetRequestCheckReferrers",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsDeleteAssetRequestCheckReferrers",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "True to delete the asset permanently.",
          "name": "permanent",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AssetsDeleteAssetRequestPermanent",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AssetsDeleteAssetRequestPermanent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "deleteAsset",
      },
      "server": [],
      "summary": "Delete an asset.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Assets request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsBulkUpdateAssetsRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Assets_BulkUpdateAssets",
      "path": "/api/apps/{app}/assets/bulk",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsBulkUpdateAssetsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsBulkUpdateAssetsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "BulkUpdateAssetsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Assets created, update or delete.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsBulkUpdateAssetsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "AssetsBulkUpdateAssetsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "BulkResultDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "bulkUpdateAssets",
      },
      "server": [],
      "summary": "Bulk update assets.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Use multipart request to upload an asset.",
      "errors": {
        "400": {
          "description": "Asset request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Asset or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "413": {
          "description": "Asset exceeds the maximum upload size.",
          "examples": [],
          "generatedName": "ContentTooLargeError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ContentTooLargeErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isDuplicate": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isDuplicate",
                    },
                  },
                },
                "type": "object",
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "editToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "editToken",
                },
              },
              "fileHash": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileHash",
                },
              },
              "fileName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileName",
                },
              },
              "fileSize": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "fileType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileType",
                },
              },
              "fileVersion": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isImage": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isProtected": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "metadata": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "metadata",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "metadataText": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "metadataText",
                },
              },
              "mimeType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "mimeType",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "pixelHeight": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "pixelWidth": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "slug": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "slug",
                },
              },
              "type": {
                "type": "enum",
                "value": "Unknown",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPutAssetContentRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Assets_PutAssetContent",
      "path": "/api/apps/{app}/assets/{id}/content",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetContentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetContentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "description": null,
        "name": null,
        "properties": [
          {
            "description": null,
            "key": "file",
            "schema": {
              "isArray": false,
              "isOptional": true,
              "type": "file",
            },
          },
        ],
        "type": "multipart",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "putAssetContent",
      },
      "server": [],
      "summary": "Replace asset content.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Asset request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Asset or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isDuplicate": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isDuplicate",
                    },
                  },
                },
                "type": "object",
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "createdBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "createdBy",
                },
              },
              "editToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "editToken",
                },
              },
              "fileHash": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileHash",
                },
              },
              "fileName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileName",
                },
              },
              "fileSize": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "fileType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "fileType",
                },
              },
              "fileVersion": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "isImage": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "isProtected": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "lastModifiedBy": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "lastModifiedBy",
                },
              },
              "metadata": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "metadata",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "metadataText": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "metadataText",
                },
              },
              "mimeType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "mimeType",
                },
              },
              "parentId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parentId",
                },
              },
              "pixelHeight": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "pixelWidth": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "slug": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "slug",
                },
              },
              "type": {
                "type": "enum",
                "value": "Unknown",
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AssetsPutAssetParentRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Assets_PutAssetParent",
      "path": "/api/apps/{app}/assets/{id}/parent",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetParentRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the asset.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AssetsPutAssetParentRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetParentRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "MoveAssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset moved.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AssetsPutAssetParentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "assets",
        ],
        "methodName": "putAssetParent",
      },
      "server": [],
      "summary": "Moves the asset.",
      "tags": [
        "Assets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "annotate": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "annotate",
                },
              },
              "create": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "create",
                },
              },
              "delete": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "delete",
                },
              },
              "move": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "move",
                },
              },
              "query": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "query",
                },
              },
              "queryPre": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "queryPre",
                },
              },
              "update": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "update",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetAssetScriptsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppAssets_GetAssetScripts",
      "path": "/api/apps/{app}/assets/scripts",
      "pathParameters": [
        {
          "description": "The name of the app to get the asset scripts for.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetAssetScriptsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Asset scripts returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetAssetScriptsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetScriptsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getAssetScripts",
      },
      "server": [],
      "summary": "Get the app asset scripts.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Asset request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "annotate": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "annotate",
                },
              },
              "create": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "create",
                },
              },
              "delete": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "delete",
                },
              },
              "move": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "move",
                },
              },
              "query": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "query",
                },
              },
              "queryPre": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "queryPre",
                },
              },
              "update": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "update",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutAssetScriptsRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AppAssets_PutAssetScripts",
      "path": "/api/apps/{app}/assets/scripts",
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutAssetScriptsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutAssetScriptsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateAssetScriptsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Asset scripts updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutAssetScriptsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssetScriptsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putAssetScripts",
      },
      "server": [],
      "summary": "Update the app asset scripts.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets all configured clients for the app with the specified name.",
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetClientsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppClients_GetClients",
      "path": "/api/apps/{app}/clients",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetClientsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Clients returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetClientsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ClientsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getClients",
      },
      "server": [],
      "summary": "Get app clients.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Create a new client for the app with the specified name.
The client secret is auto generated on the server and returned. The client does not expire, the access token is valid for 30 days.",
      "errors": {
        "400": {
          "description": "Client request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPostClientRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "AppClients_PostClient",
      "path": "/api/apps/{app}/clients",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPostClientRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostClientRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateClientDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Client created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostClientResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ClientsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "postClient",
      },
      "server": [],
      "summary": "Create a new app client.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Only the display name can be changed, create a new client if necessary.",
      "errors": {
        "400": {
          "description": "Client request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Client or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutClientRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AppClients_PutClient",
      "path": "/api/apps/{app}/clients/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutClientRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the client that must be updated.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AppsPutClientRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutClientRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateClientDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Client updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutClientResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ClientsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putClient",
      },
      "server": [],
      "summary": "Updates an app client.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "The application that uses this client credentials cannot access the API after it has been revoked.",
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Client or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteClientRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "AppClients_DeleteClient",
      "path": "/api/apps/{app}/clients/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteClientRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the client that must be deleted.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteClientRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Client deleted.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsDeleteClientResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ClientsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteClient",
      },
      "server": [],
      "summary": "Revoke an app client.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetContributorsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppContributors_GetContributors",
      "path": "/api/apps/{app}/contributors",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetContributorsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contributors returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetContributorsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getContributors",
      },
      "server": [],
      "summary": "Get app contributors.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Contributor request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "contributorId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "contributorId",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPostContributorRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "AppContributors_PostContributor",
      "path": "/api/apps/{app}/contributors",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPostContributorRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostContributorRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AssignContributorDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Contributor assigned to app.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostContributorResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "postContributor",
      },
      "server": [],
      "summary": "Assign contributor to app.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Contributor or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteMyselfRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "AppContributors_DeleteMyself",
      "path": "/api/apps/{app}/contributors/me",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteMyselfRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contributor removed.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsDeleteMyselfResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteMyself",
      },
      "server": [],
      "summary": "Remove yourself.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Contributor or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "_meta": {
                "properties": {
                  "isInvited": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "isInvited",
                    },
                  },
                },
                "type": "object",
              },
              "items": {
                "type": "array",
                "value": [],
              },
              "maxContributors": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteContributorRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "AppContributors_DeleteContributor",
      "path": "/api/apps/{app}/contributors/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteContributorRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the contributor.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteContributorRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Contributor removed.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsDeleteContributorResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ContributorsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteContributor",
      },
      "server": [],
      "summary": "Remove contributor.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [],
      "generatedRequestName": "AppsGetImageRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppImage_GetImage",
      "path": "/api/apps/{app}/image",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetImageRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "App image found and content or (resized) image returned.",
        "type": "file",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getImage",
      },
      "server": [],
      "summary": "Get the app image.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "App request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "canAccessApi": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "canAccessContent": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "roleProperties": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "roleProperties",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "teamId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "teamId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsUploadImageRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Apps_UploadImage",
      "path": "/api/apps/{app}/image",
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsUploadImageRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "description": null,
        "name": null,
        "properties": [
          {
            "description": null,
            "key": "file",
            "schema": {
              "isArray": false,
              "isOptional": true,
              "type": "file",
            },
          },
        ],
        "type": "multipart",
      },
      "requestNameOverride": null,
      "response": {
        "description": "App image uploaded.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsUploadImageResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "uploadImage",
      },
      "server": [],
      "summary": "Upload the app image.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "canAccessApi": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "canAccessContent": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "roleProperties": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "roleProperties",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "teamId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "teamId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteImageRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Apps_DeleteImage",
      "path": "/api/apps/{app}/image",
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteImageRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "App image removed.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsDeleteImageResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteImage",
      },
      "server": [],
      "summary": "Remove the app image.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetLanguagesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppLanguages_GetLanguages",
      "path": "/api/apps/{app}/languages",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetLanguagesRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Languages returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetLanguagesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppLanguagesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getLanguages",
      },
      "server": [],
      "summary": "Get app languages.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Language request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "language": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "language",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPostLanguageRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "AppLanguages_PostLanguage",
      "path": "/api/apps/{app}/languages",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPostLanguageRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostLanguageRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AddLanguageDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Language created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostLanguageResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppLanguagesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "postLanguage",
      },
      "server": [],
      "summary": "Attaches an app language.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Language request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Language or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "language",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "language",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutLanguageRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AppLanguages_PutLanguage",
      "path": "/api/apps/{app}/languages/{language}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutLanguageRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The language to update.",
          "name": "language",
          "schema": {
            "description": null,
            "generatedName": "AppsPutLanguageRequestLanguage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutLanguageRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateLanguageDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Language updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutLanguageResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppLanguagesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putLanguage",
      },
      "server": [],
      "summary": "Updates an app language.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Language is master language.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Language or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "language",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "language",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteLanguageRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "AppLanguages_DeleteLanguage",
      "path": "/api/apps/{app}/languages/{language}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteLanguageRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The language to delete from the app.",
          "name": "language",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteLanguageRequestLanguage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Language deleted.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsDeleteLanguageResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppLanguagesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteLanguage",
      },
      "server": [],
      "summary": "Deletes an app language.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetRolesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppRoles_GetRoles",
      "path": "/api/apps/{app}/roles",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetRolesRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Roles returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetRolesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RolesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getRoles",
      },
      "server": [],
      "summary": "Get app roles.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Role request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPostRoleRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "AppRoles_PostRole",
      "path": "/api/apps/{app}/roles",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPostRoleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostRoleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AddRoleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Role created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostRoleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RolesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "postRole",
      },
      "server": [],
      "summary": "Add role to app.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetPermissionsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppRoles_GetPermissions",
      "path": "/api/apps/{app}/roles/permissions",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetPermissionsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "App permissions returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetPermissionsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "AppsGetPermissionsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getPermissions",
      },
      "server": [],
      "summary": "Get app permissions.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Role request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Role or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "roleName",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "permissions": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutRoleRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AppRoles_PutRole",
      "path": "/api/apps/{app}/roles/{roleName}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutRoleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the role to be updated.",
          "name": "roleName",
          "schema": {
            "description": null,
            "generatedName": "AppsPutRoleRequestRoleName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutRoleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateRoleDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Role updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutRoleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RolesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putRole",
      },
      "server": [],
      "summary": "Update an app role.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Role is in use by contributor or client or a default role.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Role or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "roleName",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteRoleRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "AppRoles_DeleteRole",
      "path": "/api/apps/{app}/roles/{roleName}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteRoleRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The name of the role.",
          "name": "roleName",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteRoleRequestRoleName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Role deleted.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsDeleteRoleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RolesDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteRole",
      },
      "server": [],
      "summary": "Remove role from app.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).
You will retrieve all apps, where you are assigned as a contributor.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetAppsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Apps_GetApps",
      "path": "/api/apps",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Apps returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetAppsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "AppsGetAppsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "AppDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getApps",
      },
      "server": [],
      "summary": "Get your apps.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can only create an app when you are authenticated as a user (OpenID implicit flow).
You will be assigned as owner of the new app automatically.",
      "errors": {
        "400": {
          "description": "App request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "409": {
          "description": "App name is already in use.",
          "examples": [],
          "generatedName": "ConflictError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConflictErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "canAccessApi": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "canAccessContent": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "roleProperties": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "roleProperties",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "teamId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "teamId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPostAppRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "Apps_PostApp",
      "path": "/api/apps",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostAppRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "CreateAppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "App created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostAppResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "postApp",
      },
      "server": [],
      "summary": "Create a new app.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).
You will retrieve all apps, where you are assigned as a contributor.",
      "errors": {
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "team",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "team",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "array",
            "value": [],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetTeamAppsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Apps_GetTeamApps",
      "path": "/api/teams/{team}/apps",
      "pathParameters": [
        {
          "description": "The ID of the team.",
          "name": "team",
          "schema": {
            "description": null,
            "generatedName": "AppsGetTeamAppsRequestTeam",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Apps returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetTeamAppsResponse",
          "groupName": null,
          "nameOverride": null,
          "type": "array",
          "value": {
            "description": null,
            "generatedName": "AppsGetTeamAppsResponseItem",
            "groupName": null,
            "nameOverride": null,
            "schema": "AppDto",
            "type": "reference",
          },
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getTeamApps",
      },
      "server": [],
      "summary": "Get team apps.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "canAccessApi": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "canAccessContent": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "roleProperties": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "roleProperties",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "teamId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "teamId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetAppRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "Apps_GetApp",
      "path": "/api/apps/{app}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetAppRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Apps returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetAppResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getApp",
      },
      "server": [],
      "summary": "Get an app by name.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "App request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "canAccessApi": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "canAccessContent": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "roleProperties": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "roleProperties",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "teamId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "teamId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutAppRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Apps_PutApp",
      "path": "/api/apps/{app}",
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutAppRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutAppRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateAppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "App updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutAppResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putApp",
      },
      "server": [],
      "summary": "Update the app.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteAppRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "Apps_DeleteApp",
      "path": "/api/apps/{app}",
      "pathParameters": [
        {
          "description": "The name of the app to delete.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteAppRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteApp",
      },
      "server": [],
      "summary": "Delete the app.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "App request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "canAccessApi": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "canAccessContent": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "lastModified": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00Z",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "permissions": {
                "type": "array",
                "value": [],
              },
              "roleName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "roleName",
                },
              },
              "roleProperties": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "roleProperties",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "teamId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "teamId",
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutAppTeamRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "Apps_PutAppTeam",
      "path": "/api/apps/{app}/team",
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutAppTeamRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutAppTeamRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "TransferToTeamDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "App transferred.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutAppTeamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putAppTeam",
      },
      "server": [],
      "summary": "Transfer the app.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "editors": {
                "type": "array",
                "value": [],
              },
              "hideDateTimeModeButton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "hideScheduler": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "patterns": {
                "type": "array",
                "value": [],
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetSettingsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppSettings_GetSettings",
      "path": "/api/apps/{app}/settings",
      "pathParameters": [
        {
          "description": "The name of the app to get the settings for.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetSettingsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "App settings returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetSettingsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppSettingsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getSettings",
      },
      "server": [],
      "summary": "Get the app settings.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "App request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "editors": {
                "type": "array",
                "value": [],
              },
              "patterns": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "editors": {
                "type": "array",
                "value": [],
              },
              "hideDateTimeModeButton": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "hideScheduler": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "patterns": {
                "type": "array",
                "value": [],
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutSettingsRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AppSettings_PutSettings",
      "path": "/api/apps/{app}/settings",
      "pathParameters": [
        {
          "description": "The name of the app to update.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutSettingsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutSettingsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateAppSettingsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "App updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutSettingsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "AppSettingsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putSettings",
      },
      "server": [],
      "summary": "Update the app settings.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "404": {
          "description": "App not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "errors": {
                "type": "array",
                "value": [],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsGetWorkflowsRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "AppWorkflows_GetWorkflows",
      "path": "/api/apps/{app}/workflows",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsGetWorkflowsRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Workflows returned.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsGetWorkflowsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "WorkflowsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "getWorkflows",
      },
      "server": [],
      "summary": "Get app workflow.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Workflow request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Workflow or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "errors": {
                "type": "array",
                "value": [],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPostWorkflowRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "AppWorkflows_PostWorkflow",
      "path": "/api/apps/{app}/workflows",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPostWorkflowRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostWorkflowRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "AddWorkflowDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Workflow created.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPostWorkflowResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "WorkflowsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "postWorkflow",
      },
      "server": [],
      "summary": "Create a workflow.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Workflow request not valid.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Workflow or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "initial": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "initial",
                },
              },
              "steps": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "steps",
                    },
                    "value": {
                      "properties": {},
                      "type": "object",
                    },
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "errors": {
                "type": "array",
                "value": [],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsPutWorkflowRequest",
      "headers": [],
      "internal": null,
      "method": "PUT",
      "operationId": "AppWorkflows_PutWorkflow",
      "path": "/api/apps/{app}/workflows/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsPutWorkflowRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the workflow to update.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AppsPutWorkflowRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutWorkflowRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpdateWorkflowDto",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Workflow updated.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsPutWorkflowResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "WorkflowsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "putWorkflow",
      },
      "server": [],
      "summary": "Update a workflow.",
      "tags": [
        "Apps",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": null,
      "errors": {
        "400": {
          "description": "Validation error.",
          "examples": [],
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BadRequestErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
        "404": {
          "description": "Workflow or app not found.",
          "examples": null,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        "500": {
          "description": "Operation failed.",
          "examples": [],
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "InternalServerErrorBody",
            "groupName": null,
            "nameOverride": null,
            "schema": "ErrorDto",
            "type": "reference",
          },
        },
      },
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "app",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "app",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "_links": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "_links",
                    },
                    "value": {
                      "properties": {
                        "href": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "href",
                          },
                        },
                        "metadata": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "metadata",
                          },
                        },
                        "method": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "value": "method",
                          },
                        },
                      },
                      "type": "object",
                    },
                  },
                ],
              },
              "errors": {
                "type": "array",
                "value": [],
              },
              "items": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "AppsDeleteWorkflowRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "AppWorkflows_DeleteWorkflow",
      "path": "/api/apps/{app}/workflows/{id}",
      "pathParameters": [
        {
          "description": "The name of the app.",
          "name": "app",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteWorkflowRequestApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": "appName",
        },
        {
          "description": "The ID of the workflow to update.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "AppsDeleteWorkflowRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Workflow deleted.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AppsDeleteWorkflowResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "WorkflowsDto",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": {
        "groupName": [
          "apps",
        ],
        "methodName": "deleteWorkflow",
      },
      "server": [],
      "summary": "Delete a workflow.",
      "tags": [
        "Apps",
      ],
    },
  ],
  "globalHeaders": [],
  "groups": {},
  "hasEndpointsMarkedInternal": false,
  "nonRequestReferencedSchemas": [
    "ErrorDto",
    "UsersDto",
    "UserDto",
    "ResourcesDto",
    "TranslationDto",
    "TemplatesDto",
    "TemplateDetailsDto",
    "ContributorsDto",
    "TeamDto",
    "LogDownloadDto",
    "CallsUsageDtoDto",
    "CurrentStorageDto",
    "StorageUsagePerDateDto",
    "SearchResultDto",
    "SchemaDto",
    "SchemasDto",
    "RuleElementDto",
    "RulesDto",
    "RuleDto",
    "SimulatedRuleEventsDto",
    "RuleEventsDto",
    "PlansDto",
    "PlanChangedDto",
    "ExposedValues",
    "FeaturesDto",
    "LanguageDto",
    "HistoryEventDto",
    "EventConsumersDto",
    "EventConsumerDto",
    "ContentsDto",
    "ContentDto",
    "BulkResultDto",
    "CommentsDto",
    "CommentDto",
    "BackupJobsDto",
    "RestoreJobDto",
    "ResizeMode",
    "ImageFormat",
    "AssetFolderScope",
    "AssetFoldersDto",
    "AssetFolderDto",
    "AssetsDto",
    "AssetDto",
    "AssetScriptsDto",
    "ClientsDto",
    "AppDto",
    "AppLanguagesDto",
    "RolesDto",
    "AppSettingsDto",
    "WorkflowsDto",
    "ResourceLink",
    "Resource",
    "StatusInfoDto",
    "ContentData",
    "ScheduleJobDto",
    "FieldDto",
    "ContentFieldData",
    "FieldPropertiesDto",
    "NestedFieldDto",
    "AssetPreviewMode",
    "LocalizedValueOfReadonlyListOfString",
    "AssetType",
    "LocalizedValueOfNullableBoolean",
    "BooleanFieldEditor",
    "LocalizedValueOfNullableInstant",
    "DateTimeFieldEditor",
    "DateTimeCalculatedDefaultValue",
    "GeolocationFieldEditor",
    "LocalizedValueOfNullableDouble",
    "NumberFieldEditor",
    "ReferencesFieldEditor",
    "LocalizedValueOfString",
    "StringContentType",
    "StringFieldEditor",
    "TagsFieldEditor",
    "UIFieldEditor",
    "BulkUpdateContentsJobDto",
    "QueryJsonDto",
    "BulkUpdateContentType",
    "SortNode",
    "PropertyPath",
    "SortOrder",
    "TranslationResultCode",
    "TemplateDto",
    "ContributorDto",
    "ContributorsMetadata",
    "CallsUsagePerDateDto",
    "SearchResultType",
    "SchemaType",
    "SchemaPropertiesDto",
    "SchemaScriptsDto",
    "FieldRuleDto",
    "FieldRuleAction",
    "UpsertSchemaFieldDto",
    "UpsertSchemaDto",
    "UpsertSchemaNestedFieldDto",
    "RuleElementPropertyDto",
    "RuleFieldEditor",
    "RuleTriggerDto",
    "RuleActionDto",
    "SchemaCondition",
    "ActionTypeEnum",
    "WebhookMethod",
    "SimulatedRuleEventDto",
    "SkipReason",
    "RuleEventDto",
    "RuleResult",
    "RuleJobResult",
    "PlanDto",
    "ReferralInfo",
    "PlansLockedReason",
    "FeatureDto",
    "BackupJobDto",
    "JobStatus",
    "AssetMeta",
    "BulkUpdateAssetsJobDto",
    "BulkUpdateAssetType",
    "ClientDto",
    "AppLanguageDto",
    "RoleDto",
    "PatternDto",
    "EditorDto",
    "WorkflowDto",
    "WorkflowStepDto",
    "WorkflowTransitionDto",
    "AddFieldDto",
    "ReorderFieldsDto",
    "UpdateFieldDto",
    "CreateRuleDto",
    "ChangePlanDto",
    "UpsertCommentDto",
    "QueryDto",
    "AssignContributorDto",
  ],
  "schemas": {
    "ActionTypeEnum": {
      "description": "",
      "generatedName": "ActionTypeEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Broadcast",
          "nameOverride": null,
          "value": "Broadcast",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "User",
          "nameOverride": null,
          "value": "User",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Group",
          "nameOverride": null,
          "value": "Group",
        },
      ],
    },
    "AddFieldDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AddFieldDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "addFieldDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the field. Must be unique within the schema.",
            "generatedName": "AddFieldDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "addFieldDtoPartitioning",
          "key": "partitioning",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "addFieldDtoPartitioning",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Determines the optional partitioning of the field.",
              "generatedName": "AddFieldDtoPartitioning",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Determines the optional partitioning of the field.",
                "generatedName": "AddFieldDtoPartitioning",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "addFieldDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The field properties.",
            "generatedName": "AddFieldDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "FieldPropertiesDto",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "AddLanguageDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AddLanguageDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "addLanguageDtoLanguage",
          "key": "language",
          "nameOverride": null,
          "schema": {
            "description": "The language to add.",
            "generatedName": "AddLanguageDtoLanguage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AddRoleDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AddRoleDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "addRoleDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The role name.",
            "generatedName": "AddRoleDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AddWorkflowDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AddWorkflowDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "addWorkflowDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the workflow.",
            "generatedName": "AddWorkflowDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AlgoliaRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AlgoliaRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "algoliaRuleActionDtoAppId",
          "key": "appId",
          "nameOverride": null,
          "schema": {
            "description": "The application ID.",
            "generatedName": "AlgoliaRuleActionDtoAppId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "algoliaRuleActionDtoApiKey",
          "key": "apiKey",
          "nameOverride": null,
          "schema": {
            "description": "The API key to grant access to Squidex.",
            "generatedName": "AlgoliaRuleActionDtoApiKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "algoliaRuleActionDtoIndexName",
          "key": "indexName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the index.",
            "generatedName": "AlgoliaRuleActionDtoIndexName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "algoliaRuleActionDtoDocument",
          "key": "document",
          "nameOverride": null,
          "schema": {
            "description": "The optional custom document.",
            "generatedName": "AlgoliaRuleActionDtoDocument",
            "groupName": null,
            "nameOverride": "Document",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "algoliaRuleActionDtoDelete",
          "key": "delete",
          "nameOverride": null,
          "schema": {
            "description": "The condition when to delete the entry.",
            "generatedName": "AlgoliaRuleActionDtoDelete",
            "groupName": null,
            "nameOverride": "Deletion",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AllContentsByPostDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AllContentsByPostDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "allContentsByPostDtoIds",
          "key": "ids",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "allContentsByPostDtoIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of ids to query.",
              "generatedName": "AllContentsByPostDtoIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The list of ids to query.",
                "generatedName": "AllContentsByPostDtoIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "AllContentsByPostDtoIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "allContentsByPostDtoScheduledFrom",
          "key": "scheduledFrom",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "allContentsByPostDtoScheduledFrom",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The start of the schedule.",
              "generatedName": "AllContentsByPostDtoScheduledFrom",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The start of the schedule.",
                "generatedName": "AllContentsByPostDtoScheduledFrom",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "allContentsByPostDtoScheduledTo",
          "key": "scheduledTo",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "allContentsByPostDtoScheduledTo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The end of the schedule.",
              "generatedName": "AllContentsByPostDtoScheduledTo",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The end of the schedule.",
                "generatedName": "AllContentsByPostDtoScheduledTo",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "allContentsByPostDtoReferencing",
          "key": "referencing",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "allContentsByPostDtoReferencing",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the referencing content item.",
              "generatedName": "AllContentsByPostDtoReferencing",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the referencing content item.",
                "generatedName": "AllContentsByPostDtoReferencing",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "allContentsByPostDtoReferences",
          "key": "references",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "allContentsByPostDtoReferences",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the reference content item.",
              "generatedName": "AllContentsByPostDtoReferences",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the reference content item.",
                "generatedName": "AllContentsByPostDtoReferences",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "allContentsByPostDtoOData",
          "key": "oData",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "allContentsByPostDtoOData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional odata query.",
              "generatedName": "AllContentsByPostDtoOData",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional odata query.",
                "generatedName": "AllContentsByPostDtoOData",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "allContentsByPostDtoQ",
          "key": "q",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "allContentsByPostDtoQ",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "generatedName": "AllContentsByPostDtoQ",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "AnnotateAssetDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AnnotateAssetDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "annotateAssetDtoFileName",
          "key": "fileName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "annotateAssetDtoFileName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new name of the asset.",
              "generatedName": "AnnotateAssetDtoFileName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new name of the asset.",
                "generatedName": "AnnotateAssetDtoFileName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "annotateAssetDtoSlug",
          "key": "slug",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "annotateAssetDtoSlug",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new slug of the asset.",
              "generatedName": "AnnotateAssetDtoSlug",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new slug of the asset.",
                "generatedName": "AnnotateAssetDtoSlug",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "annotateAssetDtoIsProtected",
          "key": "isProtected",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "annotateAssetDtoIsProtected",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True, when the asset is not public.",
              "generatedName": "AnnotateAssetDtoIsProtected",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "True, when the asset is not public.",
                "generatedName": "AnnotateAssetDtoIsProtected",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "annotateAssetDtoTags",
          "key": "tags",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "annotateAssetDtoTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new asset tags.",
              "generatedName": "AnnotateAssetDtoTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new asset tags.",
                "generatedName": "AnnotateAssetDtoTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "AnnotateAssetDtoTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "annotateAssetDtoMetadata",
          "key": "metadata",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "annotateAssetDtoMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The asset metadata.",
              "generatedName": "AnnotateAssetDtoMetadata",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The asset metadata.",
                "generatedName": "AnnotateAssetDtoMetadata",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "AnnotateAssetDtoMetadataKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "AnnotateAssetDtoMetadataValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "AppDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AppDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the app.",
            "generatedName": "AppDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the app.",
            "generatedName": "AppDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoLabel",
          "key": "label",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "appDtoLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional label of the app.",
              "generatedName": "AppDtoLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional label of the app.",
                "generatedName": "AppDtoLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoDescription",
          "key": "description",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "appDtoDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional description of the app.",
              "generatedName": "AppDtoDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional description of the app.",
                "generatedName": "AppDtoDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the app.",
            "generatedName": "AppDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The timestamp when the app has been created.",
            "generatedName": "AppDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoLastModified",
          "key": "lastModified",
          "nameOverride": null,
          "schema": {
            "description": "The timestamp when the app has been modified last.",
            "generatedName": "AppDtoLastModified",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoTeamId",
          "key": "teamId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "appDtoTeamId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the team.",
              "generatedName": "AppDtoTeamId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the team.",
                "generatedName": "AppDtoTeamId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoPermissions",
          "key": "permissions",
          "nameOverride": null,
          "schema": {
            "description": "The permission level of the user.",
            "generatedName": "AppDtoPermissions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AppDtoPermissionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoCanAccessApi",
          "key": "canAccessApi",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the user can access the api.",
            "generatedName": "AppDtoCanAccessApi",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoCanAccessContent",
          "key": "canAccessContent",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the user can access at least one content.",
            "generatedName": "AppDtoCanAccessContent",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoRoleName",
          "key": "roleName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "appDtoRoleName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The role name of the user.",
              "generatedName": "AppDtoRoleName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The role name of the user.",
                "generatedName": "AppDtoRoleName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appDtoRoleProperties",
          "key": "roleProperties",
          "nameOverride": null,
          "schema": {
            "description": "The properties from the role.",
            "generatedName": "AppDtoRoleProperties",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "AppDtoRolePropertiesKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "AppDtoRolePropertiesValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "AppLanguageDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AppLanguageDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appLanguageDtoIso2Code",
          "key": "iso2Code",
          "nameOverride": null,
          "schema": {
            "description": "The iso code of the language.",
            "generatedName": "AppLanguageDtoIso2Code",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appLanguageDtoEnglishName",
          "key": "englishName",
          "nameOverride": null,
          "schema": {
            "description": "The english name of the language.",
            "generatedName": "AppLanguageDtoEnglishName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appLanguageDtoFallback",
          "key": "fallback",
          "nameOverride": null,
          "schema": {
            "description": "The fallback languages.",
            "generatedName": "AppLanguageDtoFallback",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AppLanguageDtoFallbackItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appLanguageDtoIsMaster",
          "key": "isMaster",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the language is the master language.",
            "generatedName": "AppLanguageDtoIsMaster",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appLanguageDtoIsOptional",
          "key": "isOptional",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the language is optional.",
            "generatedName": "AppLanguageDtoIsOptional",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AppLanguagesDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AppLanguagesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appLanguagesDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The languages.",
            "generatedName": "AppLanguagesDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AppLanguagesDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "AppLanguageDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "AppSettingsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AppSettingsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appSettingsDtoPatterns",
          "key": "patterns",
          "nameOverride": null,
          "schema": {
            "description": "The configured app patterns.",
            "generatedName": "AppSettingsDtoPatterns",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AppSettingsDtoPatternsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "PatternDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appSettingsDtoEditors",
          "key": "editors",
          "nameOverride": null,
          "schema": {
            "description": "The configured UI editors.",
            "generatedName": "AppSettingsDtoEditors",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AppSettingsDtoEditorsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "EditorDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appSettingsDtoHideScheduler",
          "key": "hideScheduler",
          "nameOverride": null,
          "schema": {
            "description": "Hide the scheduler for content items.",
            "generatedName": "AppSettingsDtoHideScheduler",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appSettingsDtoHideDateTimeModeButton",
          "key": "hideDateTimeModeButton",
          "nameOverride": null,
          "schema": {
            "description": "Hide the datetime mode button.",
            "generatedName": "AppSettingsDtoHideDateTimeModeButton",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appSettingsDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the app.",
            "generatedName": "AppSettingsDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ArrayFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArrayFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "arrayFieldPropertiesDtoMinItems",
          "key": "minItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "arrayFieldPropertiesDtoMinItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed items for the field value.",
              "generatedName": "ArrayFieldPropertiesDtoMinItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed items for the field value.",
                "generatedName": "ArrayFieldPropertiesDtoMinItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "arrayFieldPropertiesDtoMaxItems",
          "key": "maxItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "arrayFieldPropertiesDtoMaxItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed items for the field value.",
              "generatedName": "ArrayFieldPropertiesDtoMaxItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed items for the field value.",
                "generatedName": "ArrayFieldPropertiesDtoMaxItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "arrayFieldPropertiesDtoUniqueFields",
          "key": "uniqueFields",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "arrayFieldPropertiesDtoUniqueFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The fields that must be unique.",
              "generatedName": "ArrayFieldPropertiesDtoUniqueFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The fields that must be unique.",
                "generatedName": "ArrayFieldPropertiesDtoUniqueFields",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ArrayFieldPropertiesDtoUniqueFieldsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "AssetChangedRuleTriggerDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetChangedRuleTriggerDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetChangedRuleTriggerDtoCondition",
          "key": "condition",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetChangedRuleTriggerDtoCondition",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Javascript condition when to trigger.",
              "generatedName": "AssetChangedRuleTriggerDtoCondition",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Javascript condition when to trigger.",
                "generatedName": "AssetChangedRuleTriggerDtoCondition",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "AssetDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the asset.",
            "generatedName": "AssetDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoParentId",
          "key": "parentId",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the parent folder. Empty for files without parent.",
            "generatedName": "AssetDtoParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoFileName",
          "key": "fileName",
          "nameOverride": null,
          "schema": {
            "description": "The file name.",
            "generatedName": "AssetDtoFileName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoFileHash",
          "key": "fileHash",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetDtoFileHash",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The file hash.",
              "generatedName": "AssetDtoFileHash",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The file hash.",
                "generatedName": "AssetDtoFileHash",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoIsProtected",
          "key": "isProtected",
          "nameOverride": null,
          "schema": {
            "description": "True, when the asset is not public.",
            "generatedName": "AssetDtoIsProtected",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoSlug",
          "key": "slug",
          "nameOverride": null,
          "schema": {
            "description": "The slug.",
            "generatedName": "AssetDtoSlug",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoMimeType",
          "key": "mimeType",
          "nameOverride": null,
          "schema": {
            "description": "The mime type.",
            "generatedName": "AssetDtoMimeType",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoFileType",
          "key": "fileType",
          "nameOverride": null,
          "schema": {
            "description": "The file type.",
            "generatedName": "AssetDtoFileType",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoMetadataText",
          "key": "metadataText",
          "nameOverride": null,
          "schema": {
            "description": "The formatted text representation of the metadata.",
            "generatedName": "AssetDtoMetadataText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoEditToken",
          "key": "editToken",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetDtoEditToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The UI token.",
              "generatedName": "AssetDtoEditToken",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The UI token.",
                "generatedName": "AssetDtoEditToken",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoMetadata",
          "key": "metadata",
          "nameOverride": null,
          "schema": {
            "description": "The asset metadata.",
            "generatedName": "AssetDtoMetadata",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "AssetDtoMetadataKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "AssetDtoMetadataValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoTags",
          "key": "tags",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetDtoTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The asset tags.",
              "generatedName": "AssetDtoTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The asset tags.",
                "generatedName": "AssetDtoTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "AssetDtoTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoFileSize",
          "key": "fileSize",
          "nameOverride": null,
          "schema": {
            "description": "The size of the file in bytes.",
            "generatedName": "AssetDtoFileSize",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoFileVersion",
          "key": "fileVersion",
          "nameOverride": null,
          "schema": {
            "description": "The version of the file.",
            "generatedName": "AssetDtoFileVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoType",
          "key": "type",
          "nameOverride": null,
          "schema": {
            "description": "The type of the asset.",
            "generatedName": "AssetDtoType",
            "groupName": null,
            "nameOverride": null,
            "schema": "AssetType",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoCreatedBy",
          "key": "createdBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has created the schema.",
            "generatedName": "AssetDtoCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoLastModifiedBy",
          "key": "lastModifiedBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has updated the asset.",
            "generatedName": "AssetDtoLastModifiedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the asset has been created.",
            "generatedName": "AssetDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoLastModified",
          "key": "lastModified",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the asset has been modified last.",
            "generatedName": "AssetDtoLastModified",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the asset.",
            "generatedName": "AssetDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoMeta",
          "key": "_meta",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetDtoMeta",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The metadata.",
              "generatedName": "AssetDtoMeta",
              "groupName": null,
              "nameOverride": null,
              "schema": "AssetMeta",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoIsImage",
          "key": "isImage",
          "nameOverride": null,
          "schema": {
            "description": "Determines of the created file is an image.",
            "generatedName": "AssetDtoIsImage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoPixelWidth",
          "key": "pixelWidth",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetDtoPixelWidth",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The width of the image in pixels if the asset is an image.",
              "generatedName": "AssetDtoPixelWidth",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The width of the image in pixels if the asset is an image.",
                "generatedName": "AssetDtoPixelWidth",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetDtoPixelHeight",
          "key": "pixelHeight",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetDtoPixelHeight",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The height of the image in pixels if the asset is an image.",
              "generatedName": "AssetDtoPixelHeight",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The height of the image in pixels if the asset is an image.",
                "generatedName": "AssetDtoPixelHeight",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "AssetFolderDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetFolderDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetFolderDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the asset.",
            "generatedName": "AssetFolderDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetFolderDtoParentId",
          "key": "parentId",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the parent folder. Empty for files without parent.",
            "generatedName": "AssetFolderDtoParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetFolderDtoFolderName",
          "key": "folderName",
          "nameOverride": null,
          "schema": {
            "description": "The folder name.",
            "generatedName": "AssetFolderDtoFolderName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetFolderDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the asset folder.",
            "generatedName": "AssetFolderDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AssetFolderScope": {
      "description": "",
      "generatedName": "AssetFolderScope",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PathAndItems",
          "nameOverride": null,
          "value": "PathAndItems",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Path",
          "nameOverride": null,
          "value": "Path",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Items",
          "nameOverride": null,
          "value": "Items",
        },
      ],
    },
    "AssetFoldersDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetFoldersDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetFoldersDtoTotal",
          "key": "total",
          "nameOverride": null,
          "schema": {
            "description": "The total number of assets.",
            "generatedName": "AssetFoldersDtoTotal",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetFoldersDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The assets folders.",
            "generatedName": "AssetFoldersDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AssetFoldersDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetFoldersDtoPath",
          "key": "path",
          "nameOverride": null,
          "schema": {
            "description": "The path to the current folder.",
            "generatedName": "AssetFoldersDtoPath",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AssetFoldersDtoPathItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "AssetFolderDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "AssetMeta": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetMeta",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetMetaIsDuplicate",
          "key": "isDuplicate",
          "nameOverride": null,
          "schema": {
            "description": "Indicates whether the asset is a duplicate.",
            "generatedName": "AssetMetaIsDuplicate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AssetPreviewMode": {
      "description": "",
      "generatedName": "AssetPreviewMode",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ImageAndFileName",
          "nameOverride": null,
          "value": "ImageAndFileName",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Image",
          "nameOverride": null,
          "value": "Image",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "FileName",
          "nameOverride": null,
          "value": "FileName",
        },
      ],
    },
    "AssetScriptsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetScriptsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoQuery",
          "key": "query",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetScriptsDtoQuery",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed for each asset when querying assets.",
              "generatedName": "AssetScriptsDtoQuery",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed for each asset when querying assets.",
                "generatedName": "AssetScriptsDtoQuery",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoQueryPre",
          "key": "queryPre",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetScriptsDtoQueryPre",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed for all assets when querying assets.",
              "generatedName": "AssetScriptsDtoQueryPre",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed for all assets when querying assets.",
                "generatedName": "AssetScriptsDtoQueryPre",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoCreate",
          "key": "create",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetScriptsDtoCreate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when creating an asset.",
              "generatedName": "AssetScriptsDtoCreate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when creating an asset.",
                "generatedName": "AssetScriptsDtoCreate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoUpdate",
          "key": "update",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetScriptsDtoUpdate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when updating a content.",
              "generatedName": "AssetScriptsDtoUpdate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when updating a content.",
                "generatedName": "AssetScriptsDtoUpdate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoAnnotate",
          "key": "annotate",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetScriptsDtoAnnotate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when annotating a content.",
              "generatedName": "AssetScriptsDtoAnnotate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when annotating a content.",
                "generatedName": "AssetScriptsDtoAnnotate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoMove",
          "key": "move",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetScriptsDtoMove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when moving a content.",
              "generatedName": "AssetScriptsDtoMove",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when moving a content.",
                "generatedName": "AssetScriptsDtoMove",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoDelete",
          "key": "delete",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetScriptsDtoDelete",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when deleting a content.",
              "generatedName": "AssetScriptsDtoDelete",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when deleting a content.",
                "generatedName": "AssetScriptsDtoDelete",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetScriptsDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the app.",
            "generatedName": "AssetScriptsDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AssetType": {
      "description": "",
      "generatedName": "AssetType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Unknown",
          "nameOverride": null,
          "value": "Unknown",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Image",
          "nameOverride": null,
          "value": "Image",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Audio",
          "nameOverride": null,
          "value": "Audio",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Video",
          "nameOverride": null,
          "value": "Video",
        },
      ],
    },
    "AssetsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsDtoTotal",
          "key": "total",
          "nameOverride": null,
          "schema": {
            "description": "The total number of assets.",
            "generatedName": "AssetsDtoTotal",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The assets.",
            "generatedName": "AssetsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AssetsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "AssetDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "AssetsFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssetsFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoPreviewMode",
          "key": "previewMode",
          "nameOverride": null,
          "schema": {
            "description": "The preview mode for the asset.",
            "generatedName": "AssetsFieldPropertiesDtoPreviewMode",
            "groupName": null,
            "nameOverride": null,
            "schema": "AssetPreviewMode",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoDefaultValues",
          "key": "defaultValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoDefaultValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The language specific default value as a list of asset ids.",
              "generatedName": "AssetsFieldPropertiesDtoDefaultValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "LocalizedValueOfReadonlyListOfString",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoDefaultValue",
          "key": "defaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The default value as a list of asset ids.",
              "generatedName": "AssetsFieldPropertiesDtoDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The default value as a list of asset ids.",
                "generatedName": "AssetsFieldPropertiesDtoDefaultValue",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "AssetsFieldPropertiesDtoDefaultValueItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoFolderId",
          "key": "folderId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoFolderId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The initial id to the folder.",
              "generatedName": "AssetsFieldPropertiesDtoFolderId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The initial id to the folder.",
                "generatedName": "AssetsFieldPropertiesDtoFolderId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoPreviewFormat",
          "key": "previewFormat",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoPreviewFormat",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The preview format.",
              "generatedName": "AssetsFieldPropertiesDtoPreviewFormat",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The preview format.",
                "generatedName": "AssetsFieldPropertiesDtoPreviewFormat",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMinItems",
          "key": "minItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMinItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed items for the field value.",
              "generatedName": "AssetsFieldPropertiesDtoMinItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed items for the field value.",
                "generatedName": "AssetsFieldPropertiesDtoMinItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMaxItems",
          "key": "maxItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMaxItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed items for the field value.",
              "generatedName": "AssetsFieldPropertiesDtoMaxItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed items for the field value.",
                "generatedName": "AssetsFieldPropertiesDtoMaxItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMinSize",
          "key": "minSize",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMinSize",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum file size in bytes.",
              "generatedName": "AssetsFieldPropertiesDtoMinSize",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum file size in bytes.",
                "generatedName": "AssetsFieldPropertiesDtoMinSize",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMaxSize",
          "key": "maxSize",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMaxSize",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum file size in bytes.",
              "generatedName": "AssetsFieldPropertiesDtoMaxSize",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum file size in bytes.",
                "generatedName": "AssetsFieldPropertiesDtoMaxSize",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMinWidth",
          "key": "minWidth",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMinWidth",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum image width in pixels.",
              "generatedName": "AssetsFieldPropertiesDtoMinWidth",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum image width in pixels.",
                "generatedName": "AssetsFieldPropertiesDtoMinWidth",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMaxWidth",
          "key": "maxWidth",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMaxWidth",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum image width in pixels.",
              "generatedName": "AssetsFieldPropertiesDtoMaxWidth",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum image width in pixels.",
                "generatedName": "AssetsFieldPropertiesDtoMaxWidth",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMinHeight",
          "key": "minHeight",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMinHeight",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum image height in pixels.",
              "generatedName": "AssetsFieldPropertiesDtoMinHeight",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum image height in pixels.",
                "generatedName": "AssetsFieldPropertiesDtoMinHeight",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMaxHeight",
          "key": "maxHeight",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoMaxHeight",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum image height in pixels.",
              "generatedName": "AssetsFieldPropertiesDtoMaxHeight",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum image height in pixels.",
                "generatedName": "AssetsFieldPropertiesDtoMaxHeight",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoAspectWidth",
          "key": "aspectWidth",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoAspectWidth",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The image aspect width in pixels.",
              "generatedName": "AssetsFieldPropertiesDtoAspectWidth",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The image aspect width in pixels.",
                "generatedName": "AssetsFieldPropertiesDtoAspectWidth",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoAspectHeight",
          "key": "aspectHeight",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoAspectHeight",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The image aspect height in pixels.",
              "generatedName": "AssetsFieldPropertiesDtoAspectHeight",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The image aspect height in pixels.",
                "generatedName": "AssetsFieldPropertiesDtoAspectHeight",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoExpectedType",
          "key": "expectedType",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoExpectedType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expected type.",
              "generatedName": "AssetsFieldPropertiesDtoExpectedType",
              "groupName": null,
              "nameOverride": null,
              "schema": "AssetType",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoResolveFirst",
          "key": "resolveFirst",
          "nameOverride": null,
          "schema": {
            "description": "True to resolve first asset in the content list.",
            "generatedName": "AssetsFieldPropertiesDtoResolveFirst",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoMustBeImage",
          "key": "mustBeImage",
          "nameOverride": null,
          "schema": {
            "description": "True to resolve first image in the content list.",
            "generatedName": "AssetsFieldPropertiesDtoMustBeImage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoResolveImage",
          "key": "resolveImage",
          "nameOverride": null,
          "schema": {
            "description": "True to resolve first image in the content list.",
            "generatedName": "AssetsFieldPropertiesDtoResolveImage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoAllowedExtensions",
          "key": "allowedExtensions",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assetsFieldPropertiesDtoAllowedExtensions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed file extensions.",
              "generatedName": "AssetsFieldPropertiesDtoAllowedExtensions",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The allowed file extensions.",
                "generatedName": "AssetsFieldPropertiesDtoAllowedExtensions",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "AssetsFieldPropertiesDtoAllowedExtensionsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assetsFieldPropertiesDtoAllowDuplicates",
          "key": "allowDuplicates",
          "nameOverride": null,
          "schema": {
            "description": "True, if duplicate values are allowed.",
            "generatedName": "AssetsFieldPropertiesDtoAllowDuplicates",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "AssignContributorDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AssignContributorDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assignContributorDtoContributorId",
          "key": "contributorId",
          "nameOverride": null,
          "schema": {
            "description": "The id or email of the user to add to the app.",
            "generatedName": "AssignContributorDtoContributorId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assignContributorDtoRole",
          "key": "role",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assignContributorDtoRole",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The role of the contributor.",
              "generatedName": "AssignContributorDtoRole",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The role of the contributor.",
                "generatedName": "AssignContributorDtoRole",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "assignContributorDtoInvite",
          "key": "invite",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "assignContributorDtoInvite",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Set to true to invite the user if he does not exist.",
              "generatedName": "AssignContributorDtoInvite",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "AzureQueueRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AzureQueueRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "azureQueueRuleActionDtoConnectionString",
          "key": "connectionString",
          "nameOverride": null,
          "schema": {
            "description": "The connection string to the storage account.",
            "generatedName": "AzureQueueRuleActionDtoConnectionString",
            "groupName": null,
            "nameOverride": "Connection",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "azureQueueRuleActionDtoQueue",
          "key": "queue",
          "nameOverride": null,
          "schema": {
            "description": "The name of the queue.",
            "generatedName": "AzureQueueRuleActionDtoQueue",
            "groupName": null,
            "nameOverride": "Queue",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "azureQueueRuleActionDtoPayload",
          "key": "payload",
          "nameOverride": null,
          "schema": {
            "description": "Leave it empty to use the full event as body.",
            "generatedName": "AzureQueueRuleActionDtoPayload",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "BackupJobDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BackupJobDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "backupJobDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the backup job.",
            "generatedName": "BackupJobDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "backupJobDtoStarted",
          "key": "started",
          "nameOverride": null,
          "schema": {
            "description": "The time when the job has been started.",
            "generatedName": "BackupJobDtoStarted",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "backupJobDtoStopped",
          "key": "stopped",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "backupJobDtoStopped",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time when the job has been stopped.",
              "generatedName": "BackupJobDtoStopped",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The time when the job has been stopped.",
                "generatedName": "BackupJobDtoStopped",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "backupJobDtoHandledEvents",
          "key": "handledEvents",
          "nameOverride": null,
          "schema": {
            "description": "The number of handled events.",
            "generatedName": "BackupJobDtoHandledEvents",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "backupJobDtoHandledAssets",
          "key": "handledAssets",
          "nameOverride": null,
          "schema": {
            "description": "The number of handled assets.",
            "generatedName": "BackupJobDtoHandledAssets",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "backupJobDtoStatus",
          "key": "status",
          "nameOverride": null,
          "schema": {
            "description": "The status of the operation.",
            "generatedName": "BackupJobDtoStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "JobStatus",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "BackupJobsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BackupJobsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "backupJobsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The backups.",
            "generatedName": "BackupJobsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "BackupJobsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "BackupJobDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "BooleanFieldEditor": {
      "description": "",
      "generatedName": "BooleanFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Checkbox",
          "nameOverride": null,
          "value": "Checkbox",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Toggle",
          "nameOverride": null,
          "value": "Toggle",
        },
      ],
    },
    "BooleanFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BooleanFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "booleanFieldPropertiesDtoDefaultValues",
          "key": "defaultValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "booleanFieldPropertiesDtoDefaultValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The language specific default value for the field value.",
              "generatedName": "BooleanFieldPropertiesDtoDefaultValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "LocalizedValueOfNullableBoolean",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "booleanFieldPropertiesDtoDefaultValue",
          "key": "defaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "booleanFieldPropertiesDtoDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The default value for the field value.",
              "generatedName": "BooleanFieldPropertiesDtoDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The default value for the field value.",
                "generatedName": "BooleanFieldPropertiesDtoDefaultValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "booleanFieldPropertiesDtoInlineEditable",
          "key": "inlineEditable",
          "nameOverride": null,
          "schema": {
            "description": "Indicates that the inline editor is enabled for this field.",
            "generatedName": "BooleanFieldPropertiesDtoInlineEditable",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "booleanFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "BooleanFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "BooleanFieldEditor",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "BulkResultDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BulkResultDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkResultDtoError",
          "key": "error",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkResultDtoError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The error when the bulk job failed.",
              "generatedName": "BulkResultDtoError",
              "groupName": null,
              "nameOverride": null,
              "schema": "ErrorDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkResultDtoJobIndex",
          "key": "jobIndex",
          "nameOverride": null,
          "schema": {
            "description": "The index of the bulk job where the result belongs to. The order can change.",
            "generatedName": "BulkResultDtoJobIndex",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkResultDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkResultDtoId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the entity that has been handled successfully or not.",
              "generatedName": "BulkResultDtoId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the entity that has been handled successfully or not.",
                "generatedName": "BulkResultDtoId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkResultDtoContentId",
          "key": "contentId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkResultDtoContentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the entity that has been handled successfully or not.",
              "generatedName": "BulkResultDtoContentId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the entity that has been handled successfully or not.",
                "generatedName": "BulkResultDtoContentId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "BulkUpdateAssetType": {
      "description": "",
      "generatedName": "BulkUpdateAssetType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Annotate",
          "nameOverride": null,
          "value": "Annotate",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Move",
          "nameOverride": null,
          "value": "Move",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Delete",
          "nameOverride": null,
          "value": "Delete",
        },
      ],
    },
    "BulkUpdateAssetsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BulkUpdateAssetsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsDtoJobs",
          "key": "jobs",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsDtoJobs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The contents to update or insert.",
              "generatedName": "BulkUpdateAssetsDtoJobs",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The contents to update or insert.",
                "generatedName": "BulkUpdateAssetsDtoJobs",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "BulkUpdateAssetsDtoJobsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "BulkUpdateAssetsJobDto",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsDtoCheckReferrers",
          "key": "checkReferrers",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsDtoCheckReferrers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to check referrers of deleted assets.",
              "generatedName": "BulkUpdateAssetsDtoCheckReferrers",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsDtoOptimizeValidation",
          "key": "optimizeValidation",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsDtoOptimizeValidation",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off costly validation: Folder checks. Default: true.",
              "generatedName": "BulkUpdateAssetsDtoOptimizeValidation",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsDtoDoNotScript",
          "key": "doNotScript",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsDtoDoNotScript",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off scripting for faster inserts. Default: true.",
              "generatedName": "BulkUpdateAssetsDtoDoNotScript",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "BulkUpdateAssetsJobDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BulkUpdateAssetsJobDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An optional ID of the asset to update.",
              "generatedName": "BulkUpdateAssetsJobDtoId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoType",
          "key": "type",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The update type.",
              "generatedName": "BulkUpdateAssetsJobDtoType",
              "groupName": null,
              "nameOverride": null,
              "schema": "BulkUpdateAssetType",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoParentId",
          "key": "parentId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The parent folder id.",
              "generatedName": "BulkUpdateAssetsJobDtoParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoFileName",
          "key": "fileName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoFileName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new name of the asset.",
              "generatedName": "BulkUpdateAssetsJobDtoFileName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new name of the asset.",
                "generatedName": "BulkUpdateAssetsJobDtoFileName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoSlug",
          "key": "slug",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoSlug",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new slug of the asset.",
              "generatedName": "BulkUpdateAssetsJobDtoSlug",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new slug of the asset.",
                "generatedName": "BulkUpdateAssetsJobDtoSlug",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoIsProtected",
          "key": "isProtected",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoIsProtected",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True, when the asset is not public.",
              "generatedName": "BulkUpdateAssetsJobDtoIsProtected",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "True, when the asset is not public.",
                "generatedName": "BulkUpdateAssetsJobDtoIsProtected",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoTags",
          "key": "tags",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new asset tags.",
              "generatedName": "BulkUpdateAssetsJobDtoTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new asset tags.",
                "generatedName": "BulkUpdateAssetsJobDtoTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "BulkUpdateAssetsJobDtoTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoMetadata",
          "key": "metadata",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The asset metadata.",
              "generatedName": "BulkUpdateAssetsJobDtoMetadata",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The asset metadata.",
                "generatedName": "BulkUpdateAssetsJobDtoMetadata",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "BulkUpdateAssetsJobDtoMetadataKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "BulkUpdateAssetsJobDtoMetadataValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoPermanent",
          "key": "permanent",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoPermanent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to delete the asset permanently.",
              "generatedName": "BulkUpdateAssetsJobDtoPermanent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateAssetsJobDtoExpectedVersion",
          "key": "expectedVersion",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateAssetsJobDtoExpectedVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expected version.",
              "generatedName": "BulkUpdateAssetsJobDtoExpectedVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "BulkUpdateContentType": {
      "description": "",
      "generatedName": "BulkUpdateContentType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Upsert",
          "nameOverride": null,
          "value": "Upsert",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ChangeStatus",
          "nameOverride": null,
          "value": "ChangeStatus",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Create",
          "nameOverride": null,
          "value": "Create",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Delete",
          "nameOverride": null,
          "value": "Delete",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Patch",
          "nameOverride": null,
          "value": "Patch",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Update",
          "nameOverride": null,
          "value": "Update",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Validate",
          "nameOverride": null,
          "value": "Validate",
        },
      ],
    },
    "BulkUpdateContentsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BulkUpdateContentsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsDtoJobs",
          "key": "jobs",
          "nameOverride": null,
          "schema": {
            "description": "The contents to update or insert.",
            "generatedName": "BulkUpdateContentsDtoJobs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "BulkUpdateContentsDtoJobsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "BulkUpdateContentsJobDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsDtoPublish",
          "key": "publish",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsDtoPublish",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to automatically publish the content.",
              "generatedName": "BulkUpdateContentsDtoPublish",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsDtoDoNotScript",
          "key": "doNotScript",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsDtoDoNotScript",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off scripting for faster inserts. Default: true.",
              "generatedName": "BulkUpdateContentsDtoDoNotScript",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsDtoDoNotValidate",
          "key": "doNotValidate",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsDtoDoNotValidate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off validation for faster inserts. Default: false.",
              "generatedName": "BulkUpdateContentsDtoDoNotValidate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsDtoDoNotValidateWorkflow",
          "key": "doNotValidateWorkflow",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsDtoDoNotValidateWorkflow",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off validation of workflow rules. Default: false.",
              "generatedName": "BulkUpdateContentsDtoDoNotValidateWorkflow",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsDtoCheckReferrers",
          "key": "checkReferrers",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsDtoCheckReferrers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to check referrers of deleted contents.",
              "generatedName": "BulkUpdateContentsDtoCheckReferrers",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsDtoOptimizeValidation",
          "key": "optimizeValidation",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsDtoOptimizeValidation",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
              "generatedName": "BulkUpdateContentsDtoOptimizeValidation",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "BulkUpdateContentsJobDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "BulkUpdateContentsJobDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoQuery",
          "key": "query",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoQuery",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An optional query to identify the content to update.",
              "generatedName": "BulkUpdateContentsJobDtoQuery",
              "groupName": null,
              "nameOverride": null,
              "schema": "QueryJsonDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An optional ID of the content to update.",
              "generatedName": "BulkUpdateContentsJobDtoId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "An optional ID of the content to update.",
                "generatedName": "BulkUpdateContentsJobDtoId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoData",
          "key": "data",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The data of the content when type is set to 'Upsert', 'Create', 'Update' or 'Patch.",
              "generatedName": "BulkUpdateContentsJobDtoData",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContentData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoStatus",
          "key": "status",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
              "generatedName": "BulkUpdateContentsJobDtoStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
                "generatedName": "BulkUpdateContentsJobDtoStatus",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoDueTime",
          "key": "dueTime",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoDueTime",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The due time.",
              "generatedName": "BulkUpdateContentsJobDtoDueTime",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The due time.",
                "generatedName": "BulkUpdateContentsJobDtoDueTime",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoType",
          "key": "type",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The update type.",
              "generatedName": "BulkUpdateContentsJobDtoType",
              "groupName": null,
              "nameOverride": null,
              "schema": "BulkUpdateContentType",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoSchema",
          "key": "schema",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoSchema",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional schema id or name.",
              "generatedName": "BulkUpdateContentsJobDtoSchema",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional schema id or name.",
                "generatedName": "BulkUpdateContentsJobDtoSchema",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoPatch",
          "key": "patch",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoPatch",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Makes the update as patch.",
              "generatedName": "BulkUpdateContentsJobDtoPatch",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoPermanent",
          "key": "permanent",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoPermanent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to delete the content permanently.",
              "generatedName": "BulkUpdateContentsJobDtoPermanent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoExpectedCount",
          "key": "expectedCount",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoExpectedCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of expected items. Set it to a higher number to update multiple items when a query is defined.",
              "generatedName": "BulkUpdateContentsJobDtoExpectedCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "bulkUpdateContentsJobDtoExpectedVersion",
          "key": "expectedVersion",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "bulkUpdateContentsJobDtoExpectedVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expected version.",
              "generatedName": "BulkUpdateContentsJobDtoExpectedVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "CallsUsageDtoDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CallsUsageDtoDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoTotalCalls",
          "key": "totalCalls",
          "nameOverride": null,
          "schema": {
            "description": "The total number of API calls.",
            "generatedName": "CallsUsageDtoDtoTotalCalls",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoTotalBytes",
          "key": "totalBytes",
          "nameOverride": null,
          "schema": {
            "description": "The total number of bytes transferred.",
            "generatedName": "CallsUsageDtoDtoTotalBytes",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoMonthCalls",
          "key": "monthCalls",
          "nameOverride": null,
          "schema": {
            "description": "The total number of API calls this month.",
            "generatedName": "CallsUsageDtoDtoMonthCalls",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoMonthBytes",
          "key": "monthBytes",
          "nameOverride": null,
          "schema": {
            "description": "The total number of bytes transferred this month.",
            "generatedName": "CallsUsageDtoDtoMonthBytes",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoBlockingApiCalls",
          "key": "blockingApiCalls",
          "nameOverride": null,
          "schema": {
            "description": "The amount of calls that will block the app.",
            "generatedName": "CallsUsageDtoDtoBlockingApiCalls",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoAllowedBytes",
          "key": "allowedBytes",
          "nameOverride": null,
          "schema": {
            "description": "The included API traffic.",
            "generatedName": "CallsUsageDtoDtoAllowedBytes",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoAllowedCalls",
          "key": "allowedCalls",
          "nameOverride": null,
          "schema": {
            "description": "The included API calls.",
            "generatedName": "CallsUsageDtoDtoAllowedCalls",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoAverageElapsedMs",
          "key": "averageElapsedMs",
          "nameOverride": null,
          "schema": {
            "description": "The average duration in milliseconds.",
            "generatedName": "CallsUsageDtoDtoAverageElapsedMs",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsageDtoDtoDetails",
          "key": "details",
          "nameOverride": null,
          "schema": {
            "description": "The statistics by date and group.",
            "generatedName": "CallsUsageDtoDtoDetails",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "CallsUsageDtoDtoDetailsKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "description": null,
              "generatedName": "CallsUsageDtoDtoDetailsValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CallsUsageDtoDtoDetailsValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "CallsUsagePerDateDto",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "CallsUsagePerDateDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CallsUsagePerDateDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsagePerDateDtoDate",
          "key": "date",
          "nameOverride": null,
          "schema": {
            "description": "The date when the usage was tracked.",
            "generatedName": "CallsUsagePerDateDtoDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsagePerDateDtoTotalCalls",
          "key": "totalCalls",
          "nameOverride": null,
          "schema": {
            "description": "The total number of API calls.",
            "generatedName": "CallsUsagePerDateDtoTotalCalls",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsagePerDateDtoTotalBytes",
          "key": "totalBytes",
          "nameOverride": null,
          "schema": {
            "description": "The total number of bytes transferred.",
            "generatedName": "CallsUsagePerDateDtoTotalBytes",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "callsUsagePerDateDtoAverageElapsedMs",
          "key": "averageElapsedMs",
          "nameOverride": null,
          "schema": {
            "description": "The average duration in milliseconds.",
            "generatedName": "CallsUsagePerDateDtoAverageElapsedMs",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ChangeCategoryDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ChangeCategoryDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "changeCategoryDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "changeCategoryDtoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the category.",
              "generatedName": "ChangeCategoryDtoName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the category.",
                "generatedName": "ChangeCategoryDtoName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ChangePlanDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ChangePlanDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "changePlanDtoPlanId",
          "key": "planId",
          "nameOverride": null,
          "schema": {
            "description": "The new plan id.",
            "generatedName": "ChangePlanDtoPlanId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ChangeStatusDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ChangeStatusDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "changeStatusDtoStatus",
          "key": "status",
          "nameOverride": null,
          "schema": {
            "description": "The new status.",
            "generatedName": "ChangeStatusDtoStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "changeStatusDtoDueTime",
          "key": "dueTime",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "changeStatusDtoDueTime",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The due time.",
              "generatedName": "ChangeStatusDtoDueTime",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The due time.",
                "generatedName": "ChangeStatusDtoDueTime",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "changeStatusDtoCheckReferrers",
          "key": "checkReferrers",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "changeStatusDtoCheckReferrers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to check referrers of this content.",
              "generatedName": "ChangeStatusDtoCheckReferrers",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ClientDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ClientDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The client id.",
            "generatedName": "ClientDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientDtoSecret",
          "key": "secret",
          "nameOverride": null,
          "schema": {
            "description": "The client secret.",
            "generatedName": "ClientDtoSecret",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The client name.",
            "generatedName": "ClientDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientDtoRole",
          "key": "role",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "clientDtoRole",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The role of the client.",
              "generatedName": "ClientDtoRole",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The role of the client.",
                "generatedName": "ClientDtoRole",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientDtoApiCallsLimit",
          "key": "apiCallsLimit",
          "nameOverride": null,
          "schema": {
            "description": "The number of allowed api calls per month for this client.",
            "generatedName": "ClientDtoApiCallsLimit",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientDtoApiTrafficLimit",
          "key": "apiTrafficLimit",
          "nameOverride": null,
          "schema": {
            "description": "The number of allowed api traffic bytes per month for this client.",
            "generatedName": "ClientDtoApiTrafficLimit",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientDtoAllowAnonymous",
          "key": "allowAnonymous",
          "nameOverride": null,
          "schema": {
            "description": "True to allow anonymous access without an access token for this client.",
            "generatedName": "ClientDtoAllowAnonymous",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ClientsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ClientsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The clients.",
            "generatedName": "ClientsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ClientsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ClientDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "CommentDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CommentDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the comment.",
            "generatedName": "CommentDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentDtoTime",
          "key": "time",
          "nameOverride": null,
          "schema": {
            "description": "The time when the comment was created or updated last.",
            "generatedName": "CommentDtoTime",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentDtoUser",
          "key": "user",
          "nameOverride": null,
          "schema": {
            "description": "The user who created or updated the comment.",
            "generatedName": "CommentDtoUser",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The text of the comment.",
            "generatedName": "CommentDtoText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "commentDtoUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url where the comment is created.",
              "generatedName": "CommentDtoUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url where the comment is created.",
                "generatedName": "CommentDtoUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "CommentRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CommentRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentRuleActionDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The comment text.",
            "generatedName": "CommentRuleActionDtoText",
            "groupName": null,
            "nameOverride": "Text",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentRuleActionDtoClient",
          "key": "client",
          "nameOverride": null,
          "schema": {
            "description": "An optional client name.",
            "generatedName": "CommentRuleActionDtoClient",
            "groupName": null,
            "nameOverride": "Client",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "CommentRuleTriggerDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CommentRuleTriggerDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentRuleTriggerDtoCondition",
          "key": "condition",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "commentRuleTriggerDtoCondition",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Javascript condition when to trigger.",
              "generatedName": "CommentRuleTriggerDtoCondition",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Javascript condition when to trigger.",
                "generatedName": "CommentRuleTriggerDtoCondition",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "CommentsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CommentsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentsDtoCreatedComments",
          "key": "createdComments",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "commentsDtoCreatedComments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The created comments including the updates.",
              "generatedName": "CommentsDtoCreatedComments",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The created comments including the updates.",
                "generatedName": "CommentsDtoCreatedComments",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "CommentsDtoCreatedCommentsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "CommentDto",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentsDtoUpdatedComments",
          "key": "updatedComments",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "commentsDtoUpdatedComments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updates comments since the last version.",
              "generatedName": "CommentsDtoUpdatedComments",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The updates comments since the last version.",
                "generatedName": "CommentsDtoUpdatedComments",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "CommentsDtoUpdatedCommentsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "CommentDto",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentsDtoDeletedComments",
          "key": "deletedComments",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "commentsDtoDeletedComments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The deleted comments since the last version.",
              "generatedName": "CommentsDtoDeletedComments",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The deleted comments since the last version.",
                "generatedName": "CommentsDtoDeletedComments",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "CommentsDtoDeletedCommentsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "commentsDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The current version.",
            "generatedName": "CommentsDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ComponentFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ComponentFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "componentFieldPropertiesDtoSchemaIds",
          "key": "schemaIds",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "componentFieldPropertiesDtoSchemaIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the embedded schemas.",
              "generatedName": "ComponentFieldPropertiesDtoSchemaIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the embedded schemas.",
                "generatedName": "ComponentFieldPropertiesDtoSchemaIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ComponentFieldPropertiesDtoSchemaIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ComponentsFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ComponentsFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "componentsFieldPropertiesDtoMinItems",
          "key": "minItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "componentsFieldPropertiesDtoMinItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed items for the field value.",
              "generatedName": "ComponentsFieldPropertiesDtoMinItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed items for the field value.",
                "generatedName": "ComponentsFieldPropertiesDtoMinItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "componentsFieldPropertiesDtoMaxItems",
          "key": "maxItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "componentsFieldPropertiesDtoMaxItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed items for the field value.",
              "generatedName": "ComponentsFieldPropertiesDtoMaxItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed items for the field value.",
                "generatedName": "ComponentsFieldPropertiesDtoMaxItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "componentsFieldPropertiesDtoSchemaIds",
          "key": "schemaIds",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "componentsFieldPropertiesDtoSchemaIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the embedded schemas.",
              "generatedName": "ComponentsFieldPropertiesDtoSchemaIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the embedded schemas.",
                "generatedName": "ComponentsFieldPropertiesDtoSchemaIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ComponentsFieldPropertiesDtoSchemaIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "componentsFieldPropertiesDtoUniqueFields",
          "key": "uniqueFields",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "componentsFieldPropertiesDtoUniqueFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The fields that must be unique.",
              "generatedName": "ComponentsFieldPropertiesDtoUniqueFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The fields that must be unique.",
                "generatedName": "ComponentsFieldPropertiesDtoUniqueFields",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ComponentsFieldPropertiesDtoUniqueFieldsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ConfigureFieldRulesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConfigureFieldRulesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "configureFieldRulesDtoFieldRules",
          "key": "fieldRules",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "configureFieldRulesDtoFieldRules",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The field rules to configure.",
              "generatedName": "ConfigureFieldRulesDtoFieldRules",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The field rules to configure.",
                "generatedName": "ConfigureFieldRulesDtoFieldRules",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ConfigureFieldRulesDtoFieldRulesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "FieldRuleDto",
                  "type": "reference",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ConfigurePreviewUrlsDto": {
      "description": null,
      "generatedName": "ConfigurePreviewUrlsDto",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ConfigurePreviewUrlsDtoKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "ConfigurePreviewUrlsDtoValue",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
        "type": "primitive",
      },
    },
    "ConfigureUIFieldsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConfigureUiFieldsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "configureUiFieldsDtoFieldsInLists",
          "key": "fieldsInLists",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "configureUiFieldsDtoFieldsInLists",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of fields that are used in content lists.",
              "generatedName": "ConfigureUiFieldsDtoFieldsInLists",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of fields that are used in content lists.",
                "generatedName": "ConfigureUiFieldsDtoFieldsInLists",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ConfigureUiFieldsDtoFieldsInListsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "configureUiFieldsDtoFieldsInReferences",
          "key": "fieldsInReferences",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "configureUiFieldsDtoFieldsInReferences",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of fields that are used in content references.",
              "generatedName": "ConfigureUiFieldsDtoFieldsInReferences",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of fields that are used in content references.",
                "generatedName": "ConfigureUiFieldsDtoFieldsInReferences",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ConfigureUiFieldsDtoFieldsInReferencesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ContentChangedRuleTriggerDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ContentChangedRuleTriggerDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentChangedRuleTriggerDtoSchemas",
          "key": "schemas",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentChangedRuleTriggerDtoSchemas",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The schema settings.",
              "generatedName": "ContentChangedRuleTriggerDtoSchemas",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The schema settings.",
                "generatedName": "ContentChangedRuleTriggerDtoSchemas",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ContentChangedRuleTriggerDtoSchemasItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "SchemaCondition",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentChangedRuleTriggerDtoReferencedSchemas",
          "key": "referencedSchemas",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentChangedRuleTriggerDtoReferencedSchemas",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The schema references.",
              "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemas",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The schema references.",
                "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemas",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ContentChangedRuleTriggerDtoReferencedSchemasItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "SchemaCondition",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentChangedRuleTriggerDtoHandleAll",
          "key": "handleAll",
          "nameOverride": null,
          "schema": {
            "description": "Determines whether the trigger should handle all content changes events.",
            "generatedName": "ContentChangedRuleTriggerDtoHandleAll",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ContentData": {
      "description": null,
      "generatedName": "ContentData",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ContentDataKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "ContentDataValue",
        "groupName": null,
        "nameOverride": null,
        "schema": "ContentFieldData",
        "type": "reference",
      },
    },
    "ContentDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ContentDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The if of the content item.",
            "generatedName": "ContentDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoCreatedBy",
          "key": "createdBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has created the content item.",
            "generatedName": "ContentDtoCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoLastModifiedBy",
          "key": "lastModifiedBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has updated the content item.",
            "generatedName": "ContentDtoLastModifiedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoData",
          "key": "data",
          "nameOverride": null,
          "schema": {
            "generatedName": "ContentDtoData",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoReferenceData",
          "key": "referenceData",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoReferenceData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The reference data for the frontend UI.",
              "generatedName": "ContentDtoReferenceData",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContentData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the content item has been created.",
            "generatedName": "ContentDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoLastModified",
          "key": "lastModified",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the content item has been modified last.",
            "generatedName": "ContentDtoLastModified",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoStatus",
          "key": "status",
          "nameOverride": null,
          "schema": {
            "description": "The status of the content.",
            "generatedName": "ContentDtoStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoNewStatus",
          "key": "newStatus",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoNewStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new status of the content.",
              "generatedName": "ContentDtoNewStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new status of the content.",
                "generatedName": "ContentDtoNewStatus",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoStatusColor",
          "key": "statusColor",
          "nameOverride": null,
          "schema": {
            "description": "The color of the status.",
            "generatedName": "ContentDtoStatusColor",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoNewStatusColor",
          "key": "newStatusColor",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoNewStatusColor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The color of the new status.",
              "generatedName": "ContentDtoNewStatusColor",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The color of the new status.",
                "generatedName": "ContentDtoNewStatusColor",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoEditToken",
          "key": "editToken",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoEditToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The UI token.",
              "generatedName": "ContentDtoEditToken",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The UI token.",
                "generatedName": "ContentDtoEditToken",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoScheduleJob",
          "key": "scheduleJob",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoScheduleJob",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The scheduled status.",
              "generatedName": "ContentDtoScheduleJob",
              "groupName": null,
              "nameOverride": null,
              "schema": "ScheduleJobDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoSchemaId",
          "key": "schemaId",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the schema.",
            "generatedName": "ContentDtoSchemaId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoSchemaName",
          "key": "schemaName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoSchemaName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the schema.",
              "generatedName": "ContentDtoSchemaName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the schema.",
                "generatedName": "ContentDtoSchemaName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoSchemaDisplayName",
          "key": "schemaDisplayName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoSchemaDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The display name of the schema.",
              "generatedName": "ContentDtoSchemaDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The display name of the schema.",
                "generatedName": "ContentDtoSchemaDisplayName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoReferenceFields",
          "key": "referenceFields",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentDtoReferenceFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The reference fields.",
              "generatedName": "ContentDtoReferenceFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The reference fields.",
                "generatedName": "ContentDtoReferenceFields",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ContentDtoReferenceFieldsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "FieldDto",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoIsDeleted",
          "key": "isDeleted",
          "nameOverride": null,
          "schema": {
            "description": "Indicates whether the content is deleted.",
            "generatedName": "ContentDtoIsDeleted",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the content.",
            "generatedName": "ContentDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ContentFieldData": {
      "description": null,
      "generatedName": "ContentFieldData",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ContentFieldDataKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ContentFieldDataValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "ContentsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ContentsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentsDtoTotal",
          "key": "total",
          "nameOverride": null,
          "schema": {
            "description": "The total number of content items.",
            "generatedName": "ContentsDtoTotal",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The content items.",
            "generatedName": "ContentsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ContentsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContentDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentsDtoStatuses",
          "key": "statuses",
          "nameOverride": null,
          "schema": {
            "description": "The possible statuses.",
            "generatedName": "ContentsDtoStatuses",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ContentsDtoStatusesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "StatusInfoDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "ContributorDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ContributorDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorDtoContributorId",
          "key": "contributorId",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the user that contributes to the app.",
            "generatedName": "ContributorDtoContributorId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorDtoContributorName",
          "key": "contributorName",
          "nameOverride": null,
          "schema": {
            "description": "The display name.",
            "generatedName": "ContributorDtoContributorName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorDtoContributorEmail",
          "key": "contributorEmail",
          "nameOverride": null,
          "schema": {
            "description": "The email address.",
            "generatedName": "ContributorDtoContributorEmail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorDtoRole",
          "key": "role",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contributorDtoRole",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The role of the contributor.",
              "generatedName": "ContributorDtoRole",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The role of the contributor.",
                "generatedName": "ContributorDtoRole",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ContributorsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ContributorsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The contributors.",
            "generatedName": "ContributorsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ContributorsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContributorDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorsDtoMaxContributors",
          "key": "maxContributors",
          "nameOverride": null,
          "schema": {
            "description": "The maximum number of allowed contributors.",
            "generatedName": "ContributorsDtoMaxContributors",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorsDtoMeta",
          "key": "_meta",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contributorsDtoMeta",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The metadata to provide information about this request.",
              "generatedName": "ContributorsDtoMeta",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContributorsMetadata",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "ContributorsMetadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ContributorsMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contributorsMetadataIsInvited",
          "key": "isInvited",
          "nameOverride": null,
          "schema": {
            "description": "Indicates whether the user has been invited.",
            "generatedName": "ContributorsMetadataIsInvited",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "CreateAppDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateAppDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createAppDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the app.",
            "generatedName": "CreateAppDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createAppDtoTemplate",
          "key": "template",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "createAppDtoTemplate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Initialize the app with the inbuilt template.",
              "generatedName": "CreateAppDtoTemplate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Initialize the app with the inbuilt template.",
                "generatedName": "CreateAppDtoTemplate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "CreateAssetFolderDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateAssetFolderDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createAssetFolderDtoFolderName",
          "key": "folderName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the folder.",
            "generatedName": "CreateAssetFolderDtoFolderName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createAssetFolderDtoParentId",
          "key": "parentId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "createAssetFolderDtoParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the parent folder.",
              "generatedName": "CreateAssetFolderDtoParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "CreateClientDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateClientDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createClientDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the client.",
            "generatedName": "CreateClientDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "CreateContentRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateContentRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createContentRuleActionDtoData",
          "key": "data",
          "nameOverride": null,
          "schema": {
            "description": "The content data.",
            "generatedName": "CreateContentRuleActionDtoData",
            "groupName": null,
            "nameOverride": "Data",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createContentRuleActionDtoSchema",
          "key": "schema",
          "nameOverride": null,
          "schema": {
            "description": "The name of the schema.",
            "generatedName": "CreateContentRuleActionDtoSchema",
            "groupName": null,
            "nameOverride": "Schema",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createContentRuleActionDtoClient",
          "key": "client",
          "nameOverride": null,
          "schema": {
            "description": "An optional client name.",
            "generatedName": "CreateContentRuleActionDtoClient",
            "groupName": null,
            "nameOverride": "Client",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createContentRuleActionDtoPublish",
          "key": "publish",
          "nameOverride": null,
          "schema": {
            "description": "Publish the content.",
            "generatedName": "CreateContentRuleActionDtoPublish",
            "groupName": null,
            "nameOverride": "Publish",
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "CreateRuleDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateRuleDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createRuleDtoTrigger",
          "key": "trigger",
          "nameOverride": null,
          "schema": {
            "description": "The trigger properties.",
            "generatedName": "CreateRuleDtoTrigger",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleTriggerDto",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createRuleDtoAction",
          "key": "action",
          "nameOverride": null,
          "schema": {
            "description": "The action properties.",
            "generatedName": "CreateRuleDtoAction",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleActionDto",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "CreateSchemaDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "UpsertSchemaDto",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpsertSchemaDto",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateSchemaDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createSchemaDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the schema.",
            "generatedName": "CreateSchemaDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createSchemaDtoType",
          "key": "type",
          "nameOverride": null,
          "schema": {
            "description": "The type of the schema.",
            "generatedName": "CreateSchemaDtoType",
            "groupName": null,
            "nameOverride": null,
            "schema": "SchemaType",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createSchemaDtoIsSingleton",
          "key": "isSingleton",
          "nameOverride": null,
          "schema": {
            "description": "Set to true to allow a single content item only.",
            "generatedName": "CreateSchemaDtoIsSingleton",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "CreateTeamDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateTeamDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createTeamDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the team.",
            "generatedName": "CreateTeamDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "CreateUserDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateUserDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createUserDtoEmail",
          "key": "email",
          "nameOverride": null,
          "schema": {
            "description": "The email of the user. Unique value.",
            "generatedName": "CreateUserDtoEmail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createUserDtoDisplayName",
          "key": "displayName",
          "nameOverride": null,
          "schema": {
            "description": "The display name (usually first name and last name) of the user.",
            "generatedName": "CreateUserDtoDisplayName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createUserDtoPassword",
          "key": "password",
          "nameOverride": null,
          "schema": {
            "description": "The password of the user.",
            "generatedName": "CreateUserDtoPassword",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createUserDtoPermissions",
          "key": "permissions",
          "nameOverride": null,
          "schema": {
            "description": "Additional permissions for the user.",
            "generatedName": "CreateUserDtoPermissions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "CreateUserDtoPermissionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "CurrentStorageDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CurrentStorageDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "currentStorageDtoSize",
          "key": "size",
          "nameOverride": null,
          "schema": {
            "description": "The size in bytes.",
            "generatedName": "CurrentStorageDtoSize",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "currentStorageDtoMaxAllowed",
          "key": "maxAllowed",
          "nameOverride": null,
          "schema": {
            "description": "The maximum allowed asset size.",
            "generatedName": "CurrentStorageDtoMaxAllowed",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "DateTimeCalculatedDefaultValue": {
      "description": "",
      "generatedName": "DateTimeCalculatedDefaultValue",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Now",
          "nameOverride": null,
          "value": "Now",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Today",
          "nameOverride": null,
          "value": "Today",
        },
      ],
    },
    "DateTimeFieldEditor": {
      "description": "",
      "generatedName": "DateTimeFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Date",
          "nameOverride": null,
          "value": "Date",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "DateTime",
          "nameOverride": null,
          "value": "DateTime",
        },
      ],
    },
    "DateTimeFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DateTimeFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFieldPropertiesDtoDefaultValues",
          "key": "defaultValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "dateTimeFieldPropertiesDtoDefaultValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The language specific default value for the field value.",
              "generatedName": "DateTimeFieldPropertiesDtoDefaultValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "LocalizedValueOfNullableInstant",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFieldPropertiesDtoDefaultValue",
          "key": "defaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "dateTimeFieldPropertiesDtoDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The default value for the field value.",
              "generatedName": "DateTimeFieldPropertiesDtoDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The default value for the field value.",
                "generatedName": "DateTimeFieldPropertiesDtoDefaultValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFieldPropertiesDtoMaxValue",
          "key": "maxValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "dateTimeFieldPropertiesDtoMaxValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed value for the field value.",
              "generatedName": "DateTimeFieldPropertiesDtoMaxValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed value for the field value.",
                "generatedName": "DateTimeFieldPropertiesDtoMaxValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFieldPropertiesDtoMinValue",
          "key": "minValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "dateTimeFieldPropertiesDtoMinValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed value for the field value.",
              "generatedName": "DateTimeFieldPropertiesDtoMinValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed value for the field value.",
                "generatedName": "DateTimeFieldPropertiesDtoMinValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFieldPropertiesDtoFormat",
          "key": "format",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "dateTimeFieldPropertiesDtoFormat",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The format pattern when displayed in the UI.",
              "generatedName": "DateTimeFieldPropertiesDtoFormat",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The format pattern when displayed in the UI.",
                "generatedName": "DateTimeFieldPropertiesDtoFormat",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "DateTimeFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "DateTimeFieldEditor",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFieldPropertiesDtoCalculatedDefaultValue",
          "key": "calculatedDefaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "dateTimeFieldPropertiesDtoCalculatedDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The calculated default value for the field value.",
              "generatedName": "DateTimeFieldPropertiesDtoCalculatedDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": "DateTimeCalculatedDefaultValue",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "DiscourseRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DiscourseRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "discourseRuleActionDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": "The url to the discourse server.",
            "generatedName": "DiscourseRuleActionDtoUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "discourseRuleActionDtoApiKey",
          "key": "apiKey",
          "nameOverride": null,
          "schema": {
            "description": "The api key to authenticate to your discourse server.",
            "generatedName": "DiscourseRuleActionDtoApiKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "discourseRuleActionDtoApiUsername",
          "key": "apiUsername",
          "nameOverride": null,
          "schema": {
            "description": "The api username to authenticate to your discourse server.",
            "generatedName": "DiscourseRuleActionDtoApiUsername",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "discourseRuleActionDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The text as markdown.",
            "generatedName": "DiscourseRuleActionDtoText",
            "groupName": null,
            "nameOverride": "Text",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "discourseRuleActionDtoTitle",
          "key": "title",
          "nameOverride": null,
          "schema": {
            "description": "The optional title when creating new topics.",
            "generatedName": "DiscourseRuleActionDtoTitle",
            "groupName": null,
            "nameOverride": "Title",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "discourseRuleActionDtoTopic",
          "key": "topic",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "discourseRuleActionDtoTopic",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional topic id.",
              "generatedName": "DiscourseRuleActionDtoTopic",
              "groupName": null,
              "nameOverride": "Topic",
              "type": "nullable",
              "value": {
                "description": "The optional topic id.",
                "generatedName": "DiscourseRuleActionDtoTopic",
                "groupName": null,
                "nameOverride": "Topic",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "discourseRuleActionDtoCategory",
          "key": "category",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "discourseRuleActionDtoCategory",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional category id.",
              "generatedName": "DiscourseRuleActionDtoCategory",
              "groupName": null,
              "nameOverride": "Category",
              "type": "nullable",
              "value": {
                "description": "The optional category id.",
                "generatedName": "DiscourseRuleActionDtoCategory",
                "groupName": null,
                "nameOverride": "Category",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "EditorDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EditorDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "editorDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the editor.",
            "generatedName": "EditorDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "editorDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": "The url to the editor.",
            "generatedName": "EditorDtoUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ElasticSearchRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ElasticSearchRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "elasticSearchRuleActionDtoHost",
          "key": "host",
          "nameOverride": null,
          "schema": {
            "description": "The url to the instance or cluster.",
            "generatedName": "ElasticSearchRuleActionDtoHost",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "elasticSearchRuleActionDtoIndexName",
          "key": "indexName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the index.",
            "generatedName": "ElasticSearchRuleActionDtoIndexName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "elasticSearchRuleActionDtoUsername",
          "key": "username",
          "nameOverride": null,
          "schema": {
            "description": "The optional username.",
            "generatedName": "ElasticSearchRuleActionDtoUsername",
            "groupName": null,
            "nameOverride": "Username",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "elasticSearchRuleActionDtoPassword",
          "key": "password",
          "nameOverride": null,
          "schema": {
            "description": "The optional password.",
            "generatedName": "ElasticSearchRuleActionDtoPassword",
            "groupName": null,
            "nameOverride": "Password",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "elasticSearchRuleActionDtoDocument",
          "key": "document",
          "nameOverride": null,
          "schema": {
            "description": "The optional custom document.",
            "generatedName": "ElasticSearchRuleActionDtoDocument",
            "groupName": null,
            "nameOverride": "Document",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "elasticSearchRuleActionDtoDelete",
          "key": "delete",
          "nameOverride": null,
          "schema": {
            "description": "The condition when to delete the document.",
            "generatedName": "ElasticSearchRuleActionDtoDelete",
            "groupName": null,
            "nameOverride": "Deletion",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "EmailRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EmailRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoServerHost",
          "key": "serverHost",
          "nameOverride": null,
          "schema": {
            "description": "The IP address or host to the SMTP server.",
            "generatedName": "EmailRuleActionDtoServerHost",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoServerPort",
          "key": "serverPort",
          "nameOverride": null,
          "schema": {
            "description": "The port to the SMTP server.",
            "generatedName": "EmailRuleActionDtoServerPort",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoServerUsername",
          "key": "serverUsername",
          "nameOverride": null,
          "schema": {
            "description": "The username for the SMTP server.",
            "generatedName": "EmailRuleActionDtoServerUsername",
            "groupName": null,
            "nameOverride": "Username",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoServerPassword",
          "key": "serverPassword",
          "nameOverride": null,
          "schema": {
            "description": "The password for the SMTP server.",
            "generatedName": "EmailRuleActionDtoServerPassword",
            "groupName": null,
            "nameOverride": "Password",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoMessageFrom",
          "key": "messageFrom",
          "nameOverride": null,
          "schema": {
            "description": "The email sending address.",
            "generatedName": "EmailRuleActionDtoMessageFrom",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoMessageTo",
          "key": "messageTo",
          "nameOverride": null,
          "schema": {
            "description": "The email message will be sent to.",
            "generatedName": "EmailRuleActionDtoMessageTo",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoMessageSubject",
          "key": "messageSubject",
          "nameOverride": null,
          "schema": {
            "description": "The subject line for this email message.",
            "generatedName": "EmailRuleActionDtoMessageSubject",
            "groupName": null,
            "nameOverride": "Subject",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailRuleActionDtoMessageBody",
          "key": "messageBody",
          "nameOverride": null,
          "schema": {
            "description": "The message body.",
            "generatedName": "EmailRuleActionDtoMessageBody",
            "groupName": null,
            "nameOverride": "Body",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ErrorDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorDtoMessage",
          "key": "message",
          "nameOverride": null,
          "schema": {
            "description": "Error message.",
            "generatedName": "ErrorDtoMessage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorDtoErrorCode",
          "key": "errorCode",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "errorDtoErrorCode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The error code.",
              "generatedName": "ErrorDtoErrorCode",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The error code.",
                "generatedName": "ErrorDtoErrorCode",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorDtoTraceId",
          "key": "traceId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "errorDtoTraceId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional trace id.",
              "generatedName": "ErrorDtoTraceId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional trace id.",
                "generatedName": "ErrorDtoTraceId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorDtoType",
          "key": "type",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "errorDtoType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Link to the error details.",
              "generatedName": "ErrorDtoType",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Link to the error details.",
                "generatedName": "ErrorDtoType",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorDtoDetails",
          "key": "details",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "errorDtoDetails",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Detailed error messages.",
              "generatedName": "ErrorDtoDetails",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Detailed error messages.",
                "generatedName": "ErrorDtoDetails",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ErrorDtoDetailsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorDtoStatusCode",
          "key": "statusCode",
          "nameOverride": null,
          "schema": {
            "description": "Status code of the http response.",
            "generatedName": "ErrorDtoStatusCode",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "EventConsumerDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventConsumerDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConsumerDtoIsStopped",
          "key": "isStopped",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the event consumer has been started.",
            "generatedName": "EventConsumerDtoIsStopped",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConsumerDtoIsResetting",
          "key": "isResetting",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the event consumer is resetting at the moment.",
            "generatedName": "EventConsumerDtoIsResetting",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConsumerDtoCount",
          "key": "count",
          "nameOverride": null,
          "schema": {
            "description": "The number of handled events.",
            "generatedName": "EventConsumerDtoCount",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConsumerDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the event consumer.",
            "generatedName": "EventConsumerDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConsumerDtoError",
          "key": "error",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "eventConsumerDtoError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The error details if the event consumer has been stopped after a failure.",
              "generatedName": "EventConsumerDtoError",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The error details if the event consumer has been stopped after a failure.",
                "generatedName": "EventConsumerDtoError",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConsumerDtoPosition",
          "key": "position",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "eventConsumerDtoPosition",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The position within the vent stream.",
              "generatedName": "EventConsumerDtoPosition",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The position within the vent stream.",
                "generatedName": "EventConsumerDtoPosition",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "EventConsumersDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventConsumersDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConsumersDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The event consumers.",
            "generatedName": "EventConsumersDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EventConsumersDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "EventConsumerDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "ExposedValues": {
      "description": null,
      "generatedName": "ExposedValues",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ExposedValuesKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "ExposedValuesValue",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
        "type": "primitive",
      },
    },
    "FastlyRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "FastlyRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fastlyRuleActionDtoApiKey",
          "key": "apiKey",
          "nameOverride": null,
          "schema": {
            "description": "The API key to grant access to Squidex.",
            "generatedName": "FastlyRuleActionDtoApiKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fastlyRuleActionDtoServiceId",
          "key": "serviceId",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the fastly service.",
            "generatedName": "FastlyRuleActionDtoServiceId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "FeatureDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "FeatureDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "featureDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the feature.",
            "generatedName": "FeatureDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "featureDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The description text.",
            "generatedName": "FeatureDtoText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "FeaturesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "FeaturesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "featuresDtoFeatures",
          "key": "features",
          "nameOverride": null,
          "schema": {
            "description": "The latest features.",
            "generatedName": "FeaturesDtoFeatures",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "FeaturesDtoFeaturesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "FeatureDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "featuresDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The recent version.",
            "generatedName": "FeaturesDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "FieldDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "FieldDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoFieldId",
          "key": "fieldId",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the field.",
            "generatedName": "FieldDtoFieldId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the field. Must be unique within the schema.",
            "generatedName": "FieldDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoIsHidden",
          "key": "isHidden",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is hidden.",
            "generatedName": "FieldDtoIsHidden",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoIsLocked",
          "key": "isLocked",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is locked.",
            "generatedName": "FieldDtoIsLocked",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoIsDisabled",
          "key": "isDisabled",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is disabled.",
            "generatedName": "FieldDtoIsDisabled",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoPartitioning",
          "key": "partitioning",
          "nameOverride": null,
          "schema": {
            "description": "Defines the partitioning of the field.",
            "generatedName": "FieldDtoPartitioning",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The field properties.",
            "generatedName": "FieldDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "FieldPropertiesDto",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldDtoNested",
          "key": "nested",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "fieldDtoNested",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The nested fields.",
              "generatedName": "FieldDtoNested",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The nested fields.",
                "generatedName": "FieldDtoNested",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "FieldDtoNestedItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "NestedFieldDto",
                  "type": "reference",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "FieldPropertiesDto": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "label",
            "schema": {
              "description": "Optional label for the editor.",
              "generatedName": "FieldPropertiesDtoLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional label for the editor.",
                "generatedName": "FieldPropertiesDtoLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 100,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "hints",
            "schema": {
              "description": "Hints to describe the field.",
              "generatedName": "FieldPropertiesDtoHints",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Hints to describe the field.",
                "generatedName": "FieldPropertiesDtoHints",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 1000,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "placeholder",
            "schema": {
              "description": "Placeholder to show when no value has been entered.",
              "generatedName": "FieldPropertiesDtoPlaceholder",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Placeholder to show when no value has been entered.",
                "generatedName": "FieldPropertiesDtoPlaceholder",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 100,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "isRequired",
            "schema": {
              "description": "Indicates if the field is required.",
              "generatedName": "FieldPropertiesDtoIsRequired",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
          {
            "key": "isRequiredOnPublish",
            "schema": {
              "description": "Indicates if the field is required when publishing.",
              "generatedName": "FieldPropertiesDtoIsRequiredOnPublish",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
          {
            "key": "isHalfWidth",
            "schema": {
              "description": "Indicates if the field should be rendered with half width only.",
              "generatedName": "FieldPropertiesDtoIsHalfWidth",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
          {
            "key": "editorUrl",
            "schema": {
              "description": "Optional url to the editor.",
              "generatedName": "FieldPropertiesDtoEditorUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional url to the editor.",
                "generatedName": "FieldPropertiesDtoEditorUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "tags",
            "schema": {
              "description": "Tags for automation processes.",
              "generatedName": "FieldPropertiesDtoTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Tags for automation processes.",
                "generatedName": "FieldPropertiesDtoTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "FieldPropertiesDtoTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "fieldType",
        "generatedName": "FieldPropertiesDto",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "Array": {
            "description": null,
            "generatedName": "ComponentsSchemasArrayFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ArrayFieldPropertiesDto",
            "type": "reference",
          },
          "Assets": {
            "description": null,
            "generatedName": "ComponentsSchemasAssetsFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "AssetsFieldPropertiesDto",
            "type": "reference",
          },
          "Boolean": {
            "description": null,
            "generatedName": "ComponentsSchemasBooleanFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "BooleanFieldPropertiesDto",
            "type": "reference",
          },
          "Component": {
            "description": null,
            "generatedName": "ComponentsSchemasComponentFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ComponentFieldPropertiesDto",
            "type": "reference",
          },
          "Components": {
            "description": null,
            "generatedName": "ComponentsSchemasComponentsFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ComponentsFieldPropertiesDto",
            "type": "reference",
          },
          "DateTime": {
            "description": null,
            "generatedName": "ComponentsSchemasDateTimeFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "DateTimeFieldPropertiesDto",
            "type": "reference",
          },
          "Geolocation": {
            "description": null,
            "generatedName": "ComponentsSchemasGeolocationFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "GeolocationFieldPropertiesDto",
            "type": "reference",
          },
          "Json": {
            "description": null,
            "generatedName": "ComponentsSchemasJsonFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "JsonFieldPropertiesDto",
            "type": "reference",
          },
          "Number": {
            "description": null,
            "generatedName": "ComponentsSchemasNumberFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "NumberFieldPropertiesDto",
            "type": "reference",
          },
          "References": {
            "description": null,
            "generatedName": "ComponentsSchemasReferencesFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ReferencesFieldPropertiesDto",
            "type": "reference",
          },
          "String": {
            "description": null,
            "generatedName": "ComponentsSchemasStringFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "StringFieldPropertiesDto",
            "type": "reference",
          },
          "Tags": {
            "description": null,
            "generatedName": "ComponentsSchemasTagsFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "TagsFieldPropertiesDto",
            "type": "reference",
          },
          "UI": {
            "description": null,
            "generatedName": "ComponentsSchemasUiFieldPropertiesDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "UIFieldPropertiesDto",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "FieldRuleAction": {
      "description": "",
      "generatedName": "FieldRuleAction",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Disable",
          "nameOverride": null,
          "value": "Disable",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Hide",
          "nameOverride": null,
          "value": "Hide",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Require",
          "nameOverride": null,
          "value": "Require",
        },
      ],
    },
    "FieldRuleDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "FieldRuleDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldRuleDtoAction",
          "key": "action",
          "nameOverride": null,
          "schema": {
            "description": "The action to perform when the condition is met.",
            "generatedName": "FieldRuleDtoAction",
            "groupName": null,
            "nameOverride": null,
            "schema": "FieldRuleAction",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldRuleDtoField",
          "key": "field",
          "nameOverride": null,
          "schema": {
            "description": "The field to update.",
            "generatedName": "FieldRuleDtoField",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "fieldRuleDtoCondition",
          "key": "condition",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "fieldRuleDtoCondition",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The condition.",
              "generatedName": "FieldRuleDtoCondition",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The condition.",
                "generatedName": "FieldRuleDtoCondition",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "GeolocationFieldEditor": {
      "description": "",
      "generatedName": "GeolocationFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "Map",
      },
    },
    "GeolocationFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GeolocationFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "geolocationFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "GeolocationFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "GeolocationFieldEditor",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "HistoryEventDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "HistoryEventDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "historyEventDtoMessage",
          "key": "message",
          "nameOverride": null,
          "schema": {
            "description": "The message for the event.",
            "generatedName": "HistoryEventDtoMessage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "historyEventDtoEventType",
          "key": "eventType",
          "nameOverride": null,
          "schema": {
            "description": "The type of the original event.",
            "generatedName": "HistoryEventDtoEventType",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "historyEventDtoActor",
          "key": "actor",
          "nameOverride": null,
          "schema": {
            "description": "The user who called the action.",
            "generatedName": "HistoryEventDtoActor",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "historyEventDtoEventId",
          "key": "eventId",
          "nameOverride": null,
          "schema": {
            "description": "Gets a unique id for the event.",
            "generatedName": "HistoryEventDtoEventId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "historyEventDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The time when the event happened.",
            "generatedName": "HistoryEventDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "historyEventDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version identifier.",
            "generatedName": "HistoryEventDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ImageFormat": {
      "description": "",
      "generatedName": "ImageFormat",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "AVIF",
          "nameOverride": null,
          "value": "AVIF",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "BMP",
          "nameOverride": null,
          "value": "BMP",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "GIF",
          "nameOverride": null,
          "value": "GIF",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "JPEG",
          "nameOverride": null,
          "value": "JPEG",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PNG",
          "nameOverride": null,
          "value": "PNG",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "TGA",
          "nameOverride": null,
          "value": "TGA",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "TIFF",
          "nameOverride": null,
          "value": "TIFF",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "WEBP",
          "nameOverride": null,
          "value": "WEBP",
        },
      ],
    },
    "ImportContentsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ImportContentsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "importContentsDtoDatas",
          "key": "datas",
          "nameOverride": null,
          "schema": {
            "description": "The data to import.",
            "generatedName": "ImportContentsDtoDatas",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ImportContentsDtoDatasItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContentData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "importContentsDtoPublish",
          "key": "publish",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "importContentsDtoPublish",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to automatically publish the content.",
              "generatedName": "ImportContentsDtoPublish",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "importContentsDtoDoNotScript",
          "key": "doNotScript",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "importContentsDtoDoNotScript",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off scripting for faster inserts. Default: true.",
              "generatedName": "ImportContentsDtoDoNotScript",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "importContentsDtoOptimizeValidation",
          "key": "optimizeValidation",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "importContentsDtoOptimizeValidation",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
              "generatedName": "ImportContentsDtoOptimizeValidation",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "JobStatus": {
      "description": "",
      "generatedName": "JobStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Created",
          "nameOverride": null,
          "value": "Created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Started",
          "nameOverride": null,
          "value": "Started",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Completed",
          "nameOverride": null,
          "value": "Completed",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Failed",
          "nameOverride": null,
          "value": "Failed",
        },
      ],
    },
    "JsonFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "JsonFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "jsonFieldPropertiesDtoGraphQlSchema",
          "key": "graphQLSchema",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "jsonFieldPropertiesDtoGraphQlSchema",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The GraphQL schema.",
              "generatedName": "JsonFieldPropertiesDtoGraphQlSchema",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The GraphQL schema.",
                "generatedName": "JsonFieldPropertiesDtoGraphQlSchema",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "LanguageDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "LanguageDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "languageDtoIso2Code",
          "key": "iso2Code",
          "nameOverride": null,
          "schema": {
            "description": "The iso code of the language.",
            "generatedName": "LanguageDtoIso2Code",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "languageDtoEnglishName",
          "key": "englishName",
          "nameOverride": null,
          "schema": {
            "description": "The english name of the language.",
            "generatedName": "LanguageDtoEnglishName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "languageDtoNativeName",
          "key": "nativeName",
          "nameOverride": null,
          "schema": {
            "description": "The native name of the language.",
            "generatedName": "LanguageDtoNativeName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "LocalizedValueOfNullableBoolean": {
      "description": null,
      "generatedName": "LocalizedValueOfNullableBoolean",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "LocalizedValueOfNullableBooleanKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "LocalizedValueOfNullableBooleanValue",
        "groupName": null,
        "nameOverride": null,
        "type": "nullable",
        "value": {
          "description": null,
          "generatedName": "LocalizedValueOfNullableBooleanValue",
          "groupName": null,
          "nameOverride": null,
          "schema": {
            "type": "boolean",
          },
          "type": "primitive",
        },
      },
    },
    "LocalizedValueOfNullableDouble": {
      "description": null,
      "generatedName": "LocalizedValueOfNullableDouble",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "LocalizedValueOfNullableDoubleKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "LocalizedValueOfNullableDoubleValue",
        "groupName": null,
        "nameOverride": null,
        "type": "nullable",
        "value": {
          "description": null,
          "generatedName": "LocalizedValueOfNullableDoubleValue",
          "groupName": null,
          "nameOverride": null,
          "schema": {
            "type": "double",
          },
          "type": "primitive",
        },
      },
    },
    "LocalizedValueOfNullableInstant": {
      "description": null,
      "generatedName": "LocalizedValueOfNullableInstant",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "LocalizedValueOfNullableInstantKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "LocalizedValueOfNullableInstantValue",
        "groupName": null,
        "nameOverride": null,
        "type": "nullable",
        "value": {
          "description": null,
          "generatedName": "LocalizedValueOfNullableInstantValue",
          "groupName": null,
          "nameOverride": null,
          "schema": {
            "type": "datetime",
          },
          "type": "primitive",
        },
      },
    },
    "LocalizedValueOfReadonlyListOfString": {
      "description": null,
      "generatedName": "LocalizedValueOfReadonlyListOfString",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "LocalizedValueOfReadonlyListOfStringKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "LocalizedValueOfReadonlyListOfStringValue",
        "groupName": null,
        "nameOverride": null,
        "type": "array",
        "value": {
          "description": null,
          "generatedName": "LocalizedValueOfReadonlyListOfStringValueItem",
          "groupName": null,
          "nameOverride": null,
          "schema": {
            "maxLength": null,
            "minLength": null,
            "type": "string",
          },
          "type": "primitive",
        },
      },
    },
    "LocalizedValueOfString": {
      "description": null,
      "generatedName": "LocalizedValueOfString",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "LocalizedValueOfStringKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "description": null,
        "generatedName": "LocalizedValueOfStringValue",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
        "type": "primitive",
      },
    },
    "LogDownloadDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "LogDownloadDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "logDownloadDtoDownloadUrl",
          "key": "downloadUrl",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "logDownloadDtoDownloadUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url to download the log.",
              "generatedName": "LogDownloadDtoDownloadUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url to download the log.",
                "generatedName": "LogDownloadDtoDownloadUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ManualRuleTriggerDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ManualRuleTriggerDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "MediumRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MediumRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "mediumRuleActionDtoAccessToken",
          "key": "accessToken",
          "nameOverride": null,
          "schema": {
            "description": "The self issued access token.",
            "generatedName": "MediumRuleActionDtoAccessToken",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "mediumRuleActionDtoTitle",
          "key": "title",
          "nameOverride": null,
          "schema": {
            "description": "The title, used for the url.",
            "generatedName": "MediumRuleActionDtoTitle",
            "groupName": null,
            "nameOverride": "Title",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "mediumRuleActionDtoContent",
          "key": "content",
          "nameOverride": null,
          "schema": {
            "description": "The content, either html or markdown.",
            "generatedName": "MediumRuleActionDtoContent",
            "groupName": null,
            "nameOverride": "Content",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "mediumRuleActionDtoCanonicalUrl",
          "key": "canonicalUrl",
          "nameOverride": null,
          "schema": {
            "description": "The original home of this content, if it was originally published elsewhere.",
            "generatedName": "MediumRuleActionDtoCanonicalUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "mediumRuleActionDtoTags",
          "key": "tags",
          "nameOverride": null,
          "schema": {
            "description": "The optional comma separated list of tags.",
            "generatedName": "MediumRuleActionDtoTags",
            "groupName": null,
            "nameOverride": "Tags",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "mediumRuleActionDtoPublicationId",
          "key": "publicationId",
          "nameOverride": null,
          "schema": {
            "description": "Optional publication id.",
            "generatedName": "MediumRuleActionDtoPublicationId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "mediumRuleActionDtoIsHtml",
          "key": "isHtml",
          "nameOverride": null,
          "schema": {
            "description": "Indicates whether the content is markdown or html.",
            "generatedName": "MediumRuleActionDtoIsHtml",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "MoveAssetDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MoveAssetDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "moveAssetDtoParentId",
          "key": "parentId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "moveAssetDtoParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The parent folder id.",
              "generatedName": "MoveAssetDtoParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "MoveAssetFolderDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MoveAssetFolderDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "moveAssetFolderDtoParentId",
          "key": "parentId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "moveAssetFolderDtoParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The parent folder id.",
              "generatedName": "MoveAssetFolderDtoParentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "NestedFieldDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "NestedFieldDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "nestedFieldDtoFieldId",
          "key": "fieldId",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the field.",
            "generatedName": "NestedFieldDtoFieldId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "nestedFieldDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the field. Must be unique within the schema.",
            "generatedName": "NestedFieldDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "nestedFieldDtoIsHidden",
          "key": "isHidden",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is hidden.",
            "generatedName": "NestedFieldDtoIsHidden",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "nestedFieldDtoIsLocked",
          "key": "isLocked",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is locked.",
            "generatedName": "NestedFieldDtoIsLocked",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "nestedFieldDtoIsDisabled",
          "key": "isDisabled",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is disabled.",
            "generatedName": "NestedFieldDtoIsDisabled",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "nestedFieldDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The field properties.",
            "generatedName": "NestedFieldDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "FieldPropertiesDto",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "NotificationRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "NotificationRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "notificationRuleActionDtoUser",
          "key": "user",
          "nameOverride": null,
          "schema": {
            "description": "The user id or email.",
            "generatedName": "NotificationRuleActionDtoUser",
            "groupName": null,
            "nameOverride": "User",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "notificationRuleActionDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The text to send.",
            "generatedName": "NotificationRuleActionDtoText",
            "groupName": null,
            "nameOverride": "Title",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "notificationRuleActionDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": "The optional url to attach to the notification.",
            "generatedName": "NotificationRuleActionDtoUrl",
            "groupName": null,
            "nameOverride": "Url",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "notificationRuleActionDtoClient",
          "key": "client",
          "nameOverride": null,
          "schema": {
            "description": "An optional client name.",
            "generatedName": "NotificationRuleActionDtoClient",
            "groupName": null,
            "nameOverride": "Client",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "NumberFieldEditor": {
      "description": "",
      "generatedName": "NumberFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Input",
          "nameOverride": null,
          "value": "Input",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Radio",
          "nameOverride": null,
          "value": "Radio",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Dropdown",
          "nameOverride": null,
          "value": "Dropdown",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Stars",
          "nameOverride": null,
          "value": "Stars",
        },
      ],
    },
    "NumberFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "NumberFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoDefaultValues",
          "key": "defaultValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "numberFieldPropertiesDtoDefaultValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The language specific default value for the field value.",
              "generatedName": "NumberFieldPropertiesDtoDefaultValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "LocalizedValueOfNullableDouble",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoDefaultValue",
          "key": "defaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "numberFieldPropertiesDtoDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The default value for the field value.",
              "generatedName": "NumberFieldPropertiesDtoDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The default value for the field value.",
                "generatedName": "NumberFieldPropertiesDtoDefaultValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoMaxValue",
          "key": "maxValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "numberFieldPropertiesDtoMaxValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed value for the field value.",
              "generatedName": "NumberFieldPropertiesDtoMaxValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed value for the field value.",
                "generatedName": "NumberFieldPropertiesDtoMaxValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoMinValue",
          "key": "minValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "numberFieldPropertiesDtoMinValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed value for the field value.",
              "generatedName": "NumberFieldPropertiesDtoMinValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed value for the field value.",
                "generatedName": "NumberFieldPropertiesDtoMinValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoAllowedValues",
          "key": "allowedValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "numberFieldPropertiesDtoAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the field value.",
              "generatedName": "NumberFieldPropertiesDtoAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The allowed values for the field value.",
                "generatedName": "NumberFieldPropertiesDtoAllowedValues",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "NumberFieldPropertiesDtoAllowedValuesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoIsUnique",
          "key": "isUnique",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
            "generatedName": "NumberFieldPropertiesDtoIsUnique",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoInlineEditable",
          "key": "inlineEditable",
          "nameOverride": null,
          "schema": {
            "description": "Indicates that the inline editor is enabled for this field.",
            "generatedName": "NumberFieldPropertiesDtoInlineEditable",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "numberFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "NumberFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "NumberFieldEditor",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "OpenSearchRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OpenSearchRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "openSearchRuleActionDtoHost",
          "key": "host",
          "nameOverride": null,
          "schema": {
            "description": "The url to the instance or cluster.",
            "generatedName": "OpenSearchRuleActionDtoHost",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "openSearchRuleActionDtoIndexName",
          "key": "indexName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the index.",
            "generatedName": "OpenSearchRuleActionDtoIndexName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "openSearchRuleActionDtoUsername",
          "key": "username",
          "nameOverride": null,
          "schema": {
            "description": "The optional username.",
            "generatedName": "OpenSearchRuleActionDtoUsername",
            "groupName": null,
            "nameOverride": "Username",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "openSearchRuleActionDtoPassword",
          "key": "password",
          "nameOverride": null,
          "schema": {
            "description": "The optional password.",
            "generatedName": "OpenSearchRuleActionDtoPassword",
            "groupName": null,
            "nameOverride": "Password",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "openSearchRuleActionDtoDocument",
          "key": "document",
          "nameOverride": null,
          "schema": {
            "description": "The optional custom document.",
            "generatedName": "OpenSearchRuleActionDtoDocument",
            "groupName": null,
            "nameOverride": "Document",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "openSearchRuleActionDtoDelete",
          "key": "delete",
          "nameOverride": null,
          "schema": {
            "description": "The condition when to delete the document.",
            "generatedName": "OpenSearchRuleActionDtoDelete",
            "groupName": null,
            "nameOverride": "Deletion",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "PatternDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PatternDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "patternDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the suggestion.",
            "generatedName": "PatternDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "patternDtoRegex",
          "key": "regex",
          "nameOverride": null,
          "schema": {
            "description": "The regex pattern.",
            "generatedName": "PatternDtoRegex",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "patternDtoMessage",
          "key": "message",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "patternDtoMessage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The regex message.",
              "generatedName": "PatternDtoMessage",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The regex message.",
                "generatedName": "PatternDtoMessage",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "PlanChangedDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PlanChangedDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planChangedDtoRedirectUri",
          "key": "redirectUri",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "planChangedDtoRedirectUri",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional redirect uri.",
              "generatedName": "PlanChangedDtoRedirectUri",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional redirect uri.",
                "generatedName": "PlanChangedDtoRedirectUri",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "PlanDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PlanDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the plan.",
            "generatedName": "PlanDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the plan.",
            "generatedName": "PlanDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoCosts",
          "key": "costs",
          "nameOverride": null,
          "schema": {
            "description": "The monthly costs of the plan.",
            "generatedName": "PlanDtoCosts",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoConfirmText",
          "key": "confirmText",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "planDtoConfirmText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An optional confirm text for the monthly subscription.",
              "generatedName": "PlanDtoConfirmText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "An optional confirm text for the monthly subscription.",
                "generatedName": "PlanDtoConfirmText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoYearlyConfirmText",
          "key": "yearlyConfirmText",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "planDtoYearlyConfirmText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An optional confirm text for the yearly subscription.",
              "generatedName": "PlanDtoYearlyConfirmText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "An optional confirm text for the yearly subscription.",
                "generatedName": "PlanDtoYearlyConfirmText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoYearlyCosts",
          "key": "yearlyCosts",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "planDtoYearlyCosts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The yearly costs of the plan.",
              "generatedName": "PlanDtoYearlyCosts",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The yearly costs of the plan.",
                "generatedName": "PlanDtoYearlyCosts",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoYearlyId",
          "key": "yearlyId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "planDtoYearlyId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The yearly ID of the plan.",
              "generatedName": "PlanDtoYearlyId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The yearly ID of the plan.",
                "generatedName": "PlanDtoYearlyId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoMaxApiBytes",
          "key": "maxApiBytes",
          "nameOverride": null,
          "schema": {
            "description": "The maximum number of API traffic.",
            "generatedName": "PlanDtoMaxApiBytes",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoMaxApiCalls",
          "key": "maxApiCalls",
          "nameOverride": null,
          "schema": {
            "description": "The maximum number of API calls.",
            "generatedName": "PlanDtoMaxApiCalls",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoMaxAssetSize",
          "key": "maxAssetSize",
          "nameOverride": null,
          "schema": {
            "description": "The maximum allowed asset size.",
            "generatedName": "PlanDtoMaxAssetSize",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "planDtoMaxContributors",
          "key": "maxContributors",
          "nameOverride": null,
          "schema": {
            "description": "The maximum number of contributors.",
            "generatedName": "PlanDtoMaxContributors",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "PlansDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PlansDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "plansDtoPlans",
          "key": "plans",
          "nameOverride": null,
          "schema": {
            "description": "The available plans.",
            "generatedName": "PlansDtoPlans",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PlansDtoPlansItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "PlanDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "plansDtoCurrentPlanId",
          "key": "currentPlanId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "plansDtoCurrentPlanId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The current plan id.",
              "generatedName": "PlansDtoCurrentPlanId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The current plan id.",
                "generatedName": "PlansDtoCurrentPlanId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "plansDtoPlanOwner",
          "key": "planOwner",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "plansDtoPlanOwner",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The plan owner.",
              "generatedName": "PlansDtoPlanOwner",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The plan owner.",
                "generatedName": "PlansDtoPlanOwner",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "plansDtoPortalLink",
          "key": "portalLink",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "plansDtoPortalLink",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The link to the management portal.",
              "generatedName": "PlansDtoPortalLink",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The link to the management portal.",
                "generatedName": "PlansDtoPortalLink",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "plansDtoReferral",
          "key": "referral",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "plansDtoReferral",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The referral management.",
              "generatedName": "PlansDtoReferral",
              "groupName": null,
              "nameOverride": null,
              "schema": "ReferralInfo",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "plansDtoLocked",
          "key": "locked",
          "nameOverride": null,
          "schema": {
            "description": "The reason why the plan cannot be changed.",
            "generatedName": "PlansDtoLocked",
            "groupName": null,
            "nameOverride": null,
            "schema": "PlansLockedReason",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "PlansLockedReason": {
      "description": "",
      "generatedName": "PlansLockedReason",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "None",
          "nameOverride": null,
          "value": "None",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NotOwner",
          "nameOverride": null,
          "value": "NotOwner",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NoPermission",
          "nameOverride": null,
          "value": "NoPermission",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ManagedByTeam",
          "nameOverride": null,
          "value": "ManagedByTeam",
        },
      ],
    },
    "PrerenderRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PrerenderRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "prerenderRuleActionDtoToken",
          "key": "token",
          "nameOverride": null,
          "schema": {
            "description": "The prerender token from your account.",
            "generatedName": "PrerenderRuleActionDtoToken",
            "groupName": null,
            "nameOverride": "Token",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "prerenderRuleActionDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": "The url to recache.",
            "generatedName": "PrerenderRuleActionDtoUrl",
            "groupName": null,
            "nameOverride": "Url",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "PropertyPath": {
      "description": null,
      "generatedName": "PropertyPath",
      "groupName": null,
      "nameOverride": null,
      "type": "array",
      "value": {
        "description": null,
        "generatedName": "PropertyPathItem",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
        "type": "primitive",
      },
    },
    "QueryDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "QueryDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryDtoIds",
          "key": "ids",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "queryDtoIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional list of ids to query.",
              "generatedName": "QueryDtoIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional list of ids to query.",
                "generatedName": "QueryDtoIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "QueryDtoIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryDtoOData",
          "key": "oData",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "queryDtoOData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional odata query.",
              "generatedName": "QueryDtoOData",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional odata query.",
                "generatedName": "QueryDtoOData",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryDtoQ",
          "key": "q",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "queryDtoQ",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "generatedName": "QueryDtoQ",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryDtoParentId",
          "key": "parentId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "queryDtoParentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The parent id (for assets).",
              "generatedName": "QueryDtoParentId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The parent id (for assets).",
                "generatedName": "QueryDtoParentId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "QueryJsonDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "QueryJsonDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryJsonDtoFilter",
          "key": "filter",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "queryJsonDtoFilter",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "generatedName": "QueryJsonDtoFilter",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryJsonDtoFullText",
          "key": "fullText",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "queryJsonDtoFullText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "QueryJsonDtoFullText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "QueryJsonDtoFullText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryJsonDtoSkip",
          "key": "skip",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "QueryJsonDtoSkip",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryJsonDtoTake",
          "key": "take",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "QueryJsonDtoTake",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryJsonDtoRandom",
          "key": "random",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "QueryJsonDtoRandom",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryJsonDtoTop",
          "key": "top",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "QueryJsonDtoTop",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "queryJsonDtoSort",
          "key": "sort",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "queryJsonDtoSort",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "QueryJsonDtoSort",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "QueryJsonDtoSort",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "QueryJsonDtoSortItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "SortNode",
                  "type": "reference",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ReferencesFieldEditor": {
      "description": "",
      "generatedName": "ReferencesFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "List",
          "nameOverride": null,
          "value": "List",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Dropdown",
          "nameOverride": null,
          "value": "Dropdown",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Tags",
          "nameOverride": null,
          "value": "Tags",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Checkboxes",
          "nameOverride": null,
          "value": "Checkboxes",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Input",
          "nameOverride": null,
          "value": "Input",
        },
      ],
    },
    "ReferencesFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ReferencesFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoDefaultValues",
          "key": "defaultValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "referencesFieldPropertiesDtoDefaultValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The language specific default value as a list of content ids.",
              "generatedName": "ReferencesFieldPropertiesDtoDefaultValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "LocalizedValueOfReadonlyListOfString",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoDefaultValue",
          "key": "defaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "referencesFieldPropertiesDtoDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The default value as a list of content ids.",
              "generatedName": "ReferencesFieldPropertiesDtoDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The default value as a list of content ids.",
                "generatedName": "ReferencesFieldPropertiesDtoDefaultValue",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ReferencesFieldPropertiesDtoDefaultValueItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoMinItems",
          "key": "minItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "referencesFieldPropertiesDtoMinItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed items for the field value.",
              "generatedName": "ReferencesFieldPropertiesDtoMinItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed items for the field value.",
                "generatedName": "ReferencesFieldPropertiesDtoMinItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoMaxItems",
          "key": "maxItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "referencesFieldPropertiesDtoMaxItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed items for the field value.",
              "generatedName": "ReferencesFieldPropertiesDtoMaxItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed items for the field value.",
                "generatedName": "ReferencesFieldPropertiesDtoMaxItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoAllowDuplicates",
          "key": "allowDuplicates",
          "nameOverride": null,
          "schema": {
            "description": "True, if duplicate values are allowed.",
            "generatedName": "ReferencesFieldPropertiesDtoAllowDuplicates",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoResolveReference",
          "key": "resolveReference",
          "nameOverride": null,
          "schema": {
            "description": "True to resolve references in the content list.",
            "generatedName": "ReferencesFieldPropertiesDtoResolveReference",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoMustBePublished",
          "key": "mustBePublished",
          "nameOverride": null,
          "schema": {
            "description": "True when all references must be published.",
            "generatedName": "ReferencesFieldPropertiesDtoMustBePublished",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "ReferencesFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "ReferencesFieldEditor",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referencesFieldPropertiesDtoSchemaIds",
          "key": "schemaIds",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "referencesFieldPropertiesDtoSchemaIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the referenced schemas.",
              "generatedName": "ReferencesFieldPropertiesDtoSchemaIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the referenced schemas.",
                "generatedName": "ReferencesFieldPropertiesDtoSchemaIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ReferencesFieldPropertiesDtoSchemaIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ReferralInfo": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ReferralInfo",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referralInfoCode",
          "key": "code",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ReferralInfoCode",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referralInfoEarned",
          "key": "earned",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ReferralInfoEarned",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "referralInfoCondition",
          "key": "condition",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ReferralInfoCondition",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RenameAssetFolderDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RenameAssetFolderDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "renameAssetFolderDtoFolderName",
          "key": "folderName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the folder.",
            "generatedName": "RenameAssetFolderDtoFolderName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RenameTagDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RenameTagDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "renameTagDtoTagName",
          "key": "tagName",
          "nameOverride": null,
          "schema": {
            "description": "The new name for the tag.",
            "generatedName": "RenameTagDtoTagName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ReorderFieldsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ReorderFieldsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "reorderFieldsDtoFieldIds",
          "key": "fieldIds",
          "nameOverride": null,
          "schema": {
            "description": "The field ids in the target order.",
            "generatedName": "ReorderFieldsDtoFieldIds",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ReorderFieldsDtoFieldIdsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ResizeMode": {
      "description": "",
      "generatedName": "ResizeMode",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Crop",
          "nameOverride": null,
          "value": "Crop",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "CropUpsize",
          "nameOverride": null,
          "value": "CropUpsize",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Pad",
          "nameOverride": null,
          "value": "Pad",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "BoxPad",
          "nameOverride": null,
          "value": "BoxPad",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Max",
          "nameOverride": null,
          "value": "Max",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Min",
          "nameOverride": null,
          "value": "Min",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Stretch",
          "nameOverride": null,
          "value": "Stretch",
        },
      ],
    },
    "Resource": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Resource",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceLinks",
          "key": "_links",
          "nameOverride": null,
          "schema": {
            "description": "The links.",
            "generatedName": "ResourceLinks",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "ResourceLinksKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "description": null,
              "generatedName": "ResourceLinksValue",
              "groupName": null,
              "nameOverride": null,
              "schema": "ResourceLink",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "ResourceLink": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ResourceLink",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceLinkHref",
          "key": "href",
          "nameOverride": null,
          "schema": {
            "description": "The link url.",
            "generatedName": "ResourceLinkHref",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceLinkMethod",
          "key": "method",
          "nameOverride": null,
          "schema": {
            "description": "The link method.",
            "generatedName": "ResourceLinkMethod",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceLinkMetadata",
          "key": "metadata",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "resourceLinkMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Additional data about the link.",
              "generatedName": "ResourceLinkMetadata",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Additional data about the link.",
                "generatedName": "ResourceLinkMetadata",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ResourcesDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ResourcesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "RestoreJobDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RestoreJobDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "restoreJobDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": "The uri to load from.",
            "generatedName": "RestoreJobDtoUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "restoreJobDtoLog",
          "key": "log",
          "nameOverride": null,
          "schema": {
            "description": "The status log.",
            "generatedName": "RestoreJobDtoLog",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RestoreJobDtoLogItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "restoreJobDtoStarted",
          "key": "started",
          "nameOverride": null,
          "schema": {
            "description": "The time when the job has been started.",
            "generatedName": "RestoreJobDtoStarted",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "restoreJobDtoStopped",
          "key": "stopped",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "restoreJobDtoStopped",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time when the job has been stopped.",
              "generatedName": "RestoreJobDtoStopped",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The time when the job has been stopped.",
                "generatedName": "RestoreJobDtoStopped",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "restoreJobDtoStatus",
          "key": "status",
          "nameOverride": null,
          "schema": {
            "description": "The status of the operation.",
            "generatedName": "RestoreJobDtoStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "JobStatus",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "RestoreRequestDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RestoreRequestDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "restoreRequestDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "restoreRequestDtoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the app.",
              "generatedName": "RestoreRequestDtoName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the app.",
                "generatedName": "RestoreRequestDtoName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "restoreRequestDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": "The url to the restore file.",
            "generatedName": "RestoreRequestDtoUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RoleDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RoleDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "roleDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The role name.",
            "generatedName": "RoleDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "roleDtoNumClients",
          "key": "numClients",
          "nameOverride": null,
          "schema": {
            "description": "The number of clients with this role.",
            "generatedName": "RoleDtoNumClients",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "roleDtoNumContributors",
          "key": "numContributors",
          "nameOverride": null,
          "schema": {
            "description": "The number of contributors with this role.",
            "generatedName": "RoleDtoNumContributors",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "roleDtoIsDefaultRole",
          "key": "isDefaultRole",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the role is an builtin default role.",
            "generatedName": "RoleDtoIsDefaultRole",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "roleDtoPermissions",
          "key": "permissions",
          "nameOverride": null,
          "schema": {
            "description": "Associated list of permissions.",
            "generatedName": "RoleDtoPermissions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RoleDtoPermissionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "roleDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "Associated list of UI properties.",
            "generatedName": "RoleDtoProperties",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "RoleDtoPropertiesKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "RoleDtoPropertiesValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "RolesDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RolesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "rolesDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The roles.",
            "generatedName": "RolesDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RolesDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "RoleDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "RuleActionDto": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "actionType",
        "generatedName": "RuleActionDto",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "Algolia": {
            "description": null,
            "generatedName": "ComponentsSchemasAlgoliaRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "AlgoliaRuleActionDto",
            "type": "reference",
          },
          "AzureQueue": {
            "description": null,
            "generatedName": "ComponentsSchemasAzureQueueRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "AzureQueueRuleActionDto",
            "type": "reference",
          },
          "Comment": {
            "description": null,
            "generatedName": "ComponentsSchemasCommentRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "CommentRuleActionDto",
            "type": "reference",
          },
          "CreateContent": {
            "description": null,
            "generatedName": "ComponentsSchemasCreateContentRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "CreateContentRuleActionDto",
            "type": "reference",
          },
          "Discourse": {
            "description": null,
            "generatedName": "ComponentsSchemasDiscourseRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "DiscourseRuleActionDto",
            "type": "reference",
          },
          "ElasticSearch": {
            "description": null,
            "generatedName": "ComponentsSchemasElasticSearchRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ElasticSearchRuleActionDto",
            "type": "reference",
          },
          "Email": {
            "description": null,
            "generatedName": "ComponentsSchemasEmailRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "EmailRuleActionDto",
            "type": "reference",
          },
          "Fastly": {
            "description": null,
            "generatedName": "ComponentsSchemasFastlyRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "FastlyRuleActionDto",
            "type": "reference",
          },
          "Medium": {
            "description": null,
            "generatedName": "ComponentsSchemasMediumRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "MediumRuleActionDto",
            "type": "reference",
          },
          "Notification": {
            "description": null,
            "generatedName": "ComponentsSchemasNotificationRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "NotificationRuleActionDto",
            "type": "reference",
          },
          "OpenSearch": {
            "description": null,
            "generatedName": "ComponentsSchemasOpenSearchRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "OpenSearchRuleActionDto",
            "type": "reference",
          },
          "Prerender": {
            "description": null,
            "generatedName": "ComponentsSchemasPrerenderRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "PrerenderRuleActionDto",
            "type": "reference",
          },
          "Script": {
            "description": null,
            "generatedName": "ComponentsSchemasScriptRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ScriptRuleActionDto",
            "type": "reference",
          },
          "SignalR": {
            "description": null,
            "generatedName": "ComponentsSchemasSignalRRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "SignalRRuleActionDto",
            "type": "reference",
          },
          "Slack": {
            "description": null,
            "generatedName": "ComponentsSchemasSlackRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "SlackRuleActionDto",
            "type": "reference",
          },
          "Tweet": {
            "description": null,
            "generatedName": "ComponentsSchemasTweetRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "TweetRuleActionDto",
            "type": "reference",
          },
          "Typesense": {
            "description": null,
            "generatedName": "ComponentsSchemasTypesenseRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "TypesenseRuleActionDto",
            "type": "reference",
          },
          "Webhook": {
            "description": null,
            "generatedName": "ComponentsSchemasWebhookRuleActionDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "WebhookRuleActionDto",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "RuleDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RuleDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the rule.",
            "generatedName": "RuleDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoCreatedBy",
          "key": "createdBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has created the rule.",
            "generatedName": "RuleDtoCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoLastModifiedBy",
          "key": "lastModifiedBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has updated the rule.",
            "generatedName": "RuleDtoLastModifiedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the rule has been created.",
            "generatedName": "RuleDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoLastModified",
          "key": "lastModified",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the rule has been modified last.",
            "generatedName": "RuleDtoLastModified",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the rule.",
            "generatedName": "RuleDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoIsEnabled",
          "key": "isEnabled",
          "nameOverride": null,
          "schema": {
            "description": "Determines if the rule is enabled.",
            "generatedName": "RuleDtoIsEnabled",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleDtoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional rule name.",
              "generatedName": "RuleDtoName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional rule name.",
                "generatedName": "RuleDtoName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoTrigger",
          "key": "trigger",
          "nameOverride": null,
          "schema": {
            "description": "The trigger properties.",
            "generatedName": "RuleDtoTrigger",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleTriggerDto",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoAction",
          "key": "action",
          "nameOverride": null,
          "schema": {
            "description": "The action properties.",
            "generatedName": "RuleDtoAction",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleActionDto",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoNumSucceeded",
          "key": "numSucceeded",
          "nameOverride": null,
          "schema": {
            "description": "The number of completed executions.",
            "generatedName": "RuleDtoNumSucceeded",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoNumFailed",
          "key": "numFailed",
          "nameOverride": null,
          "schema": {
            "description": "The number of failed executions.",
            "generatedName": "RuleDtoNumFailed",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleDtoLastExecuted",
          "key": "lastExecuted",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleDtoLastExecuted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The date and time when the rule was executed the last time.",
              "generatedName": "RuleDtoLastExecuted",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The date and time when the rule was executed the last time.",
                "generatedName": "RuleDtoLastExecuted",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "RuleElementDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RuleElementDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementDtoDescription",
          "key": "description",
          "nameOverride": null,
          "schema": {
            "description": "Describes the action or trigger type.",
            "generatedName": "RuleElementDtoDescription",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementDtoDisplay",
          "key": "display",
          "nameOverride": null,
          "schema": {
            "description": "The label for the action or trigger type.",
            "generatedName": "RuleElementDtoDisplay",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementDtoTitle",
          "key": "title",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleElementDtoTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional title.",
              "generatedName": "RuleElementDtoTitle",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional title.",
                "generatedName": "RuleElementDtoTitle",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementDtoIconColor",
          "key": "iconColor",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleElementDtoIconColor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The color for the icon.",
              "generatedName": "RuleElementDtoIconColor",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The color for the icon.",
                "generatedName": "RuleElementDtoIconColor",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementDtoIconImage",
          "key": "iconImage",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleElementDtoIconImage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The image for the icon.",
              "generatedName": "RuleElementDtoIconImage",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The image for the icon.",
                "generatedName": "RuleElementDtoIconImage",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementDtoReadMore",
          "key": "readMore",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleElementDtoReadMore",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional link to the product that is integrated.",
              "generatedName": "RuleElementDtoReadMore",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional link to the product that is integrated.",
                "generatedName": "RuleElementDtoReadMore",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The properties.",
            "generatedName": "RuleElementDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RuleElementDtoPropertiesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "RuleElementPropertyDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "RuleElementPropertyDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RuleElementPropertyDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementPropertyDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The html editor.",
            "generatedName": "RuleElementPropertyDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleFieldEditor",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementPropertyDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the editor.",
            "generatedName": "RuleElementPropertyDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementPropertyDtoDisplay",
          "key": "display",
          "nameOverride": null,
          "schema": {
            "description": "The label to use.",
            "generatedName": "RuleElementPropertyDtoDisplay",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementPropertyDtoOptions",
          "key": "options",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleElementPropertyDtoOptions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The options, if the editor is a dropdown.",
              "generatedName": "RuleElementPropertyDtoOptions",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The options, if the editor is a dropdown.",
                "generatedName": "RuleElementPropertyDtoOptions",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "RuleElementPropertyDtoOptionsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementPropertyDtoDescription",
          "key": "description",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleElementPropertyDtoDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional description.",
              "generatedName": "RuleElementPropertyDtoDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional description.",
                "generatedName": "RuleElementPropertyDtoDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementPropertyDtoIsFormattable",
          "key": "isFormattable",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the property is formattable.",
            "generatedName": "RuleElementPropertyDtoIsFormattable",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleElementPropertyDtoIsRequired",
          "key": "isRequired",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the property is required.",
            "generatedName": "RuleElementPropertyDtoIsRequired",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RuleEventDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RuleEventDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the event.",
            "generatedName": "RuleEventDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The time when the event has been created.",
            "generatedName": "RuleEventDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoDescription",
          "key": "description",
          "nameOverride": null,
          "schema": {
            "description": "The description.",
            "generatedName": "RuleEventDtoDescription",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoEventName",
          "key": "eventName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the event.",
            "generatedName": "RuleEventDtoEventName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoLastDump",
          "key": "lastDump",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleEventDtoLastDump",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The last dump.",
              "generatedName": "RuleEventDtoLastDump",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The last dump.",
                "generatedName": "RuleEventDtoLastDump",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoNumCalls",
          "key": "numCalls",
          "nameOverride": null,
          "schema": {
            "description": "The number of calls.",
            "generatedName": "RuleEventDtoNumCalls",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoNextAttempt",
          "key": "nextAttempt",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ruleEventDtoNextAttempt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The next attempt.",
              "generatedName": "RuleEventDtoNextAttempt",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The next attempt.",
                "generatedName": "RuleEventDtoNextAttempt",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoResult",
          "key": "result",
          "nameOverride": null,
          "schema": {
            "description": "The result of the event.",
            "generatedName": "RuleEventDtoResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleResult",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventDtoJobResult",
          "key": "jobResult",
          "nameOverride": null,
          "schema": {
            "description": "The result of the job.",
            "generatedName": "RuleEventDtoJobResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "RuleJobResult",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "RuleEventsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RuleEventsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventsDtoTotal",
          "key": "total",
          "nameOverride": null,
          "schema": {
            "description": "The total number of rule events.",
            "generatedName": "RuleEventsDtoTotal",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ruleEventsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The rule events.",
            "generatedName": "RuleEventsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RuleEventsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "RuleEventDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "RuleFieldEditor": {
      "description": "",
      "generatedName": "RuleFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Checkbox",
          "nameOverride": null,
          "value": "Checkbox",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Dropdown",
          "nameOverride": null,
          "value": "Dropdown",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Email",
          "nameOverride": null,
          "value": "Email",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Javascript",
          "nameOverride": null,
          "value": "Javascript",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Number",
          "nameOverride": null,
          "value": "Number",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Password",
          "nameOverride": null,
          "value": "Password",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Text",
          "nameOverride": null,
          "value": "Text",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "TextArea",
          "nameOverride": null,
          "value": "TextArea",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Url",
          "nameOverride": null,
          "value": "Url",
        },
      ],
    },
    "RuleJobResult": {
      "description": "",
      "generatedName": "RuleJobResult",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Pending",
          "nameOverride": null,
          "value": "Pending",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Success",
          "nameOverride": null,
          "value": "Success",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Retry",
          "nameOverride": null,
          "value": "Retry",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Failed",
          "nameOverride": null,
          "value": "Failed",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Cancelled",
          "nameOverride": null,
          "value": "Cancelled",
        },
      ],
    },
    "RuleResult": {
      "description": "",
      "generatedName": "RuleResult",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Pending",
          "nameOverride": null,
          "value": "Pending",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Success",
          "nameOverride": null,
          "value": "Success",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Failed",
          "nameOverride": null,
          "value": "Failed",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Timeout",
          "nameOverride": null,
          "value": "Timeout",
        },
      ],
    },
    "RuleTriggerDto": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "triggerType",
        "generatedName": "RuleTriggerDto",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "AssetChanged": {
            "description": null,
            "generatedName": "ComponentsSchemasAssetChangedRuleTriggerDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "AssetChangedRuleTriggerDto",
            "type": "reference",
          },
          "Comment": {
            "description": null,
            "generatedName": "ComponentsSchemasCommentRuleTriggerDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "CommentRuleTriggerDto",
            "type": "reference",
          },
          "ContentChanged": {
            "description": null,
            "generatedName": "ComponentsSchemasContentChangedRuleTriggerDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ContentChangedRuleTriggerDto",
            "type": "reference",
          },
          "Manual": {
            "description": null,
            "generatedName": "ComponentsSchemasManualRuleTriggerDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "ManualRuleTriggerDto",
            "type": "reference",
          },
          "SchemaChanged": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaChangedRuleTriggerDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "SchemaChangedRuleTriggerDto",
            "type": "reference",
          },
          "Usage": {
            "description": null,
            "generatedName": "ComponentsSchemasUsageRuleTriggerDto",
            "groupName": null,
            "nameOverride": null,
            "schema": "UsageRuleTriggerDto",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "RulesDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RulesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "rulesDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The rules.",
            "generatedName": "RulesDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RulesDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "RuleDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "rulesDtoRunningRuleId",
          "key": "runningRuleId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "rulesDtoRunningRuleId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the rule that is currently rerunning.",
              "generatedName": "RulesDtoRunningRuleId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the rule that is currently rerunning.",
                "generatedName": "RulesDtoRunningRuleId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ScheduleJobDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ScheduleJobDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scheduleJobDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the schedule job.",
            "generatedName": "ScheduleJobDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scheduleJobDtoStatus",
          "key": "status",
          "nameOverride": null,
          "schema": {
            "description": "The new status.",
            "generatedName": "ScheduleJobDtoStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scheduleJobDtoDueTime",
          "key": "dueTime",
          "nameOverride": null,
          "schema": {
            "description": "The target date and time when the content should be scheduled.",
            "generatedName": "ScheduleJobDtoDueTime",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scheduleJobDtoColor",
          "key": "color",
          "nameOverride": null,
          "schema": {
            "description": "The color of the scheduled status.",
            "generatedName": "ScheduleJobDtoColor",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scheduleJobDtoScheduledBy",
          "key": "scheduledBy",
          "nameOverride": null,
          "schema": {
            "description": "The user who schedule the content.",
            "generatedName": "ScheduleJobDtoScheduledBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SchemaChangedRuleTriggerDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaChangedRuleTriggerDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaChangedRuleTriggerDtoCondition",
          "key": "condition",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaChangedRuleTriggerDtoCondition",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Javascript condition when to trigger.",
              "generatedName": "SchemaChangedRuleTriggerDtoCondition",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Javascript condition when to trigger.",
                "generatedName": "SchemaChangedRuleTriggerDtoCondition",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SchemaCondition": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaCondition",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaConditionSchemaId",
          "key": "schemaId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SchemaConditionSchemaId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaConditionCondition",
          "key": "condition",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaConditionCondition",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaConditionCondition",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SchemaConditionCondition",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SchemaDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the schema.",
            "generatedName": "SchemaDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoCreatedBy",
          "key": "createdBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has created the schema.",
            "generatedName": "SchemaDtoCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoLastModifiedBy",
          "key": "lastModifiedBy",
          "nameOverride": null,
          "schema": {
            "description": "The user that has updated the schema.",
            "generatedName": "SchemaDtoLastModifiedBy",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the schema. Unique within the app.",
            "generatedName": "SchemaDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoType",
          "key": "type",
          "nameOverride": null,
          "schema": {
            "description": "The type of the schema.",
            "generatedName": "SchemaDtoType",
            "groupName": null,
            "nameOverride": null,
            "schema": "SchemaType",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoCategory",
          "key": "category",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaDtoCategory",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the category.",
              "generatedName": "SchemaDtoCategory",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the category.",
                "generatedName": "SchemaDtoCategory",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The schema properties.",
            "generatedName": "SchemaDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "SchemaPropertiesDto",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoIsSingleton",
          "key": "isSingleton",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the schema is a singleton.",
            "generatedName": "SchemaDtoIsSingleton",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoIsPublished",
          "key": "isPublished",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the schema is published.",
            "generatedName": "SchemaDtoIsPublished",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the schema has been created.",
            "generatedName": "SchemaDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoLastModified",
          "key": "lastModified",
          "nameOverride": null,
          "schema": {
            "description": "The date and time when the schema has been modified last.",
            "generatedName": "SchemaDtoLastModified",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the schema.",
            "generatedName": "SchemaDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoScripts",
          "key": "scripts",
          "nameOverride": null,
          "schema": {
            "description": "The scripts.",
            "generatedName": "SchemaDtoScripts",
            "groupName": null,
            "nameOverride": null,
            "schema": "SchemaScriptsDto",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoPreviewUrls",
          "key": "previewUrls",
          "nameOverride": null,
          "schema": {
            "description": "The preview Urls.",
            "generatedName": "SchemaDtoPreviewUrls",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "SchemaDtoPreviewUrlsKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "description": null,
              "generatedName": "SchemaDtoPreviewUrlsValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoFieldsInLists",
          "key": "fieldsInLists",
          "nameOverride": null,
          "schema": {
            "description": "The name of fields that are used in content lists.",
            "generatedName": "SchemaDtoFieldsInLists",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaDtoFieldsInListsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoFieldsInReferences",
          "key": "fieldsInReferences",
          "nameOverride": null,
          "schema": {
            "description": "The name of fields that are used in content references.",
            "generatedName": "SchemaDtoFieldsInReferences",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaDtoFieldsInReferencesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoFieldRules",
          "key": "fieldRules",
          "nameOverride": null,
          "schema": {
            "description": "The field rules.",
            "generatedName": "SchemaDtoFieldRules",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaDtoFieldRulesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "FieldRuleDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDtoFields",
          "key": "fields",
          "nameOverride": null,
          "schema": {
            "description": "The list of fields.",
            "generatedName": "SchemaDtoFields",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaDtoFieldsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "FieldDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "SchemaPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaPropertiesDtoLabel",
          "key": "label",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaPropertiesDtoLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional label for the editor.",
              "generatedName": "SchemaPropertiesDtoLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional label for the editor.",
                "generatedName": "SchemaPropertiesDtoLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 100,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaPropertiesDtoHints",
          "key": "hints",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaPropertiesDtoHints",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Hints to describe the schema.",
              "generatedName": "SchemaPropertiesDtoHints",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Hints to describe the schema.",
                "generatedName": "SchemaPropertiesDtoHints",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 1000,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaPropertiesDtoContentsSidebarUrl",
          "key": "contentsSidebarUrl",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaPropertiesDtoContentsSidebarUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url to a the sidebar plugin for content lists.",
              "generatedName": "SchemaPropertiesDtoContentsSidebarUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url to a the sidebar plugin for content lists.",
                "generatedName": "SchemaPropertiesDtoContentsSidebarUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaPropertiesDtoContentSidebarUrl",
          "key": "contentSidebarUrl",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaPropertiesDtoContentSidebarUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url to a the sidebar plugin for content items.",
              "generatedName": "SchemaPropertiesDtoContentSidebarUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url to a the sidebar plugin for content items.",
                "generatedName": "SchemaPropertiesDtoContentSidebarUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaPropertiesDtoContentEditorUrl",
          "key": "contentEditorUrl",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaPropertiesDtoContentEditorUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url to the editor plugin.",
              "generatedName": "SchemaPropertiesDtoContentEditorUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url to the editor plugin.",
                "generatedName": "SchemaPropertiesDtoContentEditorUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaPropertiesDtoValidateOnPublish",
          "key": "validateOnPublish",
          "nameOverride": null,
          "schema": {
            "description": "True to validate the content items on publish.",
            "generatedName": "SchemaPropertiesDtoValidateOnPublish",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaPropertiesDtoTags",
          "key": "tags",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaPropertiesDtoTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags for automation processes.",
              "generatedName": "SchemaPropertiesDtoTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Tags for automation processes.",
                "generatedName": "SchemaPropertiesDtoTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "SchemaPropertiesDtoTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SchemaScriptsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaScriptsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaScriptsDtoQuery",
          "key": "query",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaScriptsDtoQuery",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed for each content when querying contents.",
              "generatedName": "SchemaScriptsDtoQuery",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed for each content when querying contents.",
                "generatedName": "SchemaScriptsDtoQuery",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaScriptsDtoQueryPre",
          "key": "queryPre",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaScriptsDtoQueryPre",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed for all contents when querying contents.",
              "generatedName": "SchemaScriptsDtoQueryPre",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed for all contents when querying contents.",
                "generatedName": "SchemaScriptsDtoQueryPre",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaScriptsDtoCreate",
          "key": "create",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaScriptsDtoCreate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when creating a content.",
              "generatedName": "SchemaScriptsDtoCreate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when creating a content.",
                "generatedName": "SchemaScriptsDtoCreate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaScriptsDtoUpdate",
          "key": "update",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaScriptsDtoUpdate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when updating a content.",
              "generatedName": "SchemaScriptsDtoUpdate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when updating a content.",
                "generatedName": "SchemaScriptsDtoUpdate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaScriptsDtoDelete",
          "key": "delete",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaScriptsDtoDelete",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when deleting a content.",
              "generatedName": "SchemaScriptsDtoDelete",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when deleting a content.",
                "generatedName": "SchemaScriptsDtoDelete",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaScriptsDtoChange",
          "key": "change",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "schemaScriptsDtoChange",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when change a content status.",
              "generatedName": "SchemaScriptsDtoChange",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when change a content status.",
                "generatedName": "SchemaScriptsDtoChange",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SchemaType": {
      "description": "",
      "generatedName": "SchemaType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Default",
          "nameOverride": null,
          "value": "Default",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Singleton",
          "nameOverride": null,
          "value": "Singleton",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Component",
          "nameOverride": null,
          "value": "Component",
        },
      ],
    },
    "SchemasDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemasDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemasDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The schemas.",
            "generatedName": "SchemasDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemasDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "SchemaDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "ScriptRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ScriptRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scriptRuleActionDtoScript",
          "key": "script",
          "nameOverride": null,
          "schema": {
            "description": "The script to render.",
            "generatedName": "ScriptRuleActionDtoScript",
            "groupName": null,
            "nameOverride": "Script",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SearchResultDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchResultDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the search result.",
            "generatedName": "SearchResultDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultDtoType",
          "key": "type",
          "nameOverride": null,
          "schema": {
            "description": "The type of the search result.",
            "generatedName": "SearchResultDtoType",
            "groupName": null,
            "nameOverride": null,
            "schema": "SearchResultType",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultDtoLabel",
          "key": "label",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "searchResultDtoLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An optional label.",
              "generatedName": "SearchResultDtoLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "An optional label.",
                "generatedName": "SearchResultDtoLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SearchResultType": {
      "description": "",
      "generatedName": "SearchResultType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Asset",
          "nameOverride": null,
          "value": "Asset",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Content",
          "nameOverride": null,
          "value": "Content",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Dashboard",
          "nameOverride": null,
          "value": "Dashboard",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Setting",
          "nameOverride": null,
          "value": "Setting",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Rule",
          "nameOverride": null,
          "value": "Rule",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Schema",
          "nameOverride": null,
          "value": "Schema",
        },
      ],
    },
    "SignalRRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SignalRRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "signalRRuleActionDtoConnectionString",
          "key": "connectionString",
          "nameOverride": null,
          "schema": {
            "description": "The connection string to the Azure SignalR.",
            "generatedName": "SignalRRuleActionDtoConnectionString",
            "groupName": null,
            "nameOverride": "Connection",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "signalRRuleActionDtoHubName",
          "key": "hubName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the hub.",
            "generatedName": "SignalRRuleActionDtoHubName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "signalRRuleActionDtoAction",
          "key": "action",
          "nameOverride": null,
          "schema": {
            "description": "* Broadcast = send to all users.
 * User = send to all target users(s).
 * Group = send to all target group(s).",
            "generatedName": "SignalRRuleActionDtoAction",
            "groupName": null,
            "nameOverride": null,
            "schema": "ActionTypeEnum",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "signalRRuleActionDtoMethodName",
          "key": "methodName",
          "nameOverride": null,
          "schema": {
            "description": "Set the Name of the hub method received by the customer.",
            "generatedName": "SignalRRuleActionDtoMethodName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "signalRRuleActionDtoTarget",
          "key": "target",
          "nameOverride": null,
          "schema": {
            "description": "Define target users or groups by id or name. One item per line. Not needed for Broadcast action.",
            "generatedName": "SignalRRuleActionDtoTarget",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "signalRRuleActionDtoPayload",
          "key": "payload",
          "nameOverride": null,
          "schema": {
            "description": "Leave it empty to use the full event as body.",
            "generatedName": "SignalRRuleActionDtoPayload",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SimulatedRuleEventDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SimulatedRuleEventDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoEventId",
          "key": "eventId",
          "nameOverride": null,
          "schema": {
            "description": "The unique event id.",
            "generatedName": "SimulatedRuleEventDtoEventId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoUniqueId",
          "key": "uniqueId",
          "nameOverride": null,
          "schema": {
            "description": "The the unique id of the simulated event.",
            "generatedName": "SimulatedRuleEventDtoUniqueId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoEventName",
          "key": "eventName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the event.",
            "generatedName": "SimulatedRuleEventDtoEventName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoEvent",
          "key": "event",
          "nameOverride": null,
          "schema": {
            "generatedName": "SimulatedRuleEventDtoEvent",
            "nameOverride": null,
            "type": "unknown",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoEnrichedEvent",
          "key": "enrichedEvent",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "simulatedRuleEventDtoEnrichedEvent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "generatedName": "SimulatedRuleEventDtoEnrichedEvent",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoActionName",
          "key": "actionName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "simulatedRuleEventDtoActionName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The data for the action.",
              "generatedName": "SimulatedRuleEventDtoActionName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The data for the action.",
                "generatedName": "SimulatedRuleEventDtoActionName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoActionData",
          "key": "actionData",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "simulatedRuleEventDtoActionData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the action.",
              "generatedName": "SimulatedRuleEventDtoActionData",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the action.",
                "generatedName": "SimulatedRuleEventDtoActionData",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoError",
          "key": "error",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "simulatedRuleEventDtoError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the event.",
              "generatedName": "SimulatedRuleEventDtoError",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the event.",
                "generatedName": "SimulatedRuleEventDtoError",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventDtoSkipReasons",
          "key": "skipReasons",
          "nameOverride": null,
          "schema": {
            "description": "The reason why the event has been skipped.",
            "generatedName": "SimulatedRuleEventDtoSkipReasons",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SimulatedRuleEventDtoSkipReasonsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "SkipReason",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "SimulatedRuleEventsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SimulatedRuleEventsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventsDtoTotal",
          "key": "total",
          "nameOverride": null,
          "schema": {
            "description": "The total number of simulated rule events.",
            "generatedName": "SimulatedRuleEventsDtoTotal",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "simulatedRuleEventsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The simulated rule events.",
            "generatedName": "SimulatedRuleEventsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SimulatedRuleEventsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "SimulatedRuleEventDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "SkipReason": {
      "description": "",
      "generatedName": "SkipReason",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "None",
          "nameOverride": null,
          "value": "None",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ConditionDoesNotMatch",
          "nameOverride": null,
          "value": "ConditionDoesNotMatch",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ConditionPrecheckDoesNotMatch",
          "nameOverride": null,
          "value": "ConditionPrecheckDoesNotMatch",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Disabled",
          "nameOverride": null,
          "value": "Disabled",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Failed",
          "nameOverride": null,
          "value": "Failed",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "FromRule",
          "nameOverride": null,
          "value": "FromRule",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NoAction",
          "nameOverride": null,
          "value": "NoAction",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NoTrigger",
          "nameOverride": null,
          "value": "NoTrigger",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "TooOld",
          "nameOverride": null,
          "value": "TooOld",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "WrongEvent",
          "nameOverride": null,
          "value": "WrongEvent",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "WrongEventForTrigger",
          "nameOverride": null,
          "value": "WrongEventForTrigger",
        },
      ],
    },
    "SlackRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlackRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slackRuleActionDtoWebhookUrl",
          "key": "webhookUrl",
          "nameOverride": null,
          "schema": {
            "description": "The slack webhook url.",
            "generatedName": "SlackRuleActionDtoWebhookUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slackRuleActionDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The text that is sent as message to slack.",
            "generatedName": "SlackRuleActionDtoText",
            "groupName": null,
            "nameOverride": "Text",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SortNode": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SortNode",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sortNodePath",
          "key": "path",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SortNodePath",
            "groupName": null,
            "nameOverride": null,
            "schema": "PropertyPath",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sortNodeOrder",
          "key": "order",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SortNodeOrder",
            "groupName": null,
            "nameOverride": null,
            "schema": "SortOrder",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "SortOrder": {
      "description": "",
      "generatedName": "SortOrder",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Ascending",
          "nameOverride": null,
          "value": "Ascending",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Descending",
          "nameOverride": null,
          "value": "Descending",
        },
      ],
    },
    "StatusInfoDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StatusInfoDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "statusInfoDtoStatus",
          "key": "status",
          "nameOverride": null,
          "schema": {
            "description": "The name of the status.",
            "generatedName": "StatusInfoDtoStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "statusInfoDtoColor",
          "key": "color",
          "nameOverride": null,
          "schema": {
            "description": "The color of the status.",
            "generatedName": "StatusInfoDtoColor",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "StorageUsagePerDateDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StorageUsagePerDateDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "storageUsagePerDateDtoDate",
          "key": "date",
          "nameOverride": null,
          "schema": {
            "description": "The date when the usage was tracked.",
            "generatedName": "StorageUsagePerDateDtoDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "storageUsagePerDateDtoTotalCount",
          "key": "totalCount",
          "nameOverride": null,
          "schema": {
            "description": "The number of assets.",
            "generatedName": "StorageUsagePerDateDtoTotalCount",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "storageUsagePerDateDtoTotalSize",
          "key": "totalSize",
          "nameOverride": null,
          "schema": {
            "description": "The size in bytes.",
            "generatedName": "StorageUsagePerDateDtoTotalSize",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "StringContentType": {
      "description": "",
      "generatedName": "StringContentType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Unspecified",
          "nameOverride": null,
          "value": "Unspecified",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Html",
          "nameOverride": null,
          "value": "Html",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Markdown",
          "nameOverride": null,
          "value": "Markdown",
        },
      ],
    },
    "StringFieldEditor": {
      "description": "",
      "generatedName": "StringFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Input",
          "nameOverride": null,
          "value": "Input",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Color",
          "nameOverride": null,
          "value": "Color",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Markdown",
          "nameOverride": null,
          "value": "Markdown",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Dropdown",
          "nameOverride": null,
          "value": "Dropdown",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Html",
          "nameOverride": null,
          "value": "Html",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Radio",
          "nameOverride": null,
          "value": "Radio",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "RichText",
          "nameOverride": null,
          "value": "RichText",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Slug",
          "nameOverride": null,
          "value": "Slug",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "StockPhoto",
          "nameOverride": null,
          "value": "StockPhoto",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "TextArea",
          "nameOverride": null,
          "value": "TextArea",
        },
      ],
    },
    "StringFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StringFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoDefaultValues",
          "key": "defaultValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoDefaultValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The language specific default value for the field value.",
              "generatedName": "StringFieldPropertiesDtoDefaultValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "LocalizedValueOfString",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoDefaultValue",
          "key": "defaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The default value for the field value.",
              "generatedName": "StringFieldPropertiesDtoDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The default value for the field value.",
                "generatedName": "StringFieldPropertiesDtoDefaultValue",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoPattern",
          "key": "pattern",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoPattern",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The pattern to enforce a specific format for the field value.",
              "generatedName": "StringFieldPropertiesDtoPattern",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The pattern to enforce a specific format for the field value.",
                "generatedName": "StringFieldPropertiesDtoPattern",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoPatternMessage",
          "key": "patternMessage",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoPatternMessage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The validation message for the pattern.",
              "generatedName": "StringFieldPropertiesDtoPatternMessage",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The validation message for the pattern.",
                "generatedName": "StringFieldPropertiesDtoPatternMessage",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoFolderId",
          "key": "folderId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoFolderId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The initial id to the folder when the control supports file uploads.",
              "generatedName": "StringFieldPropertiesDtoFolderId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The initial id to the folder when the control supports file uploads.",
                "generatedName": "StringFieldPropertiesDtoFolderId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoMinLength",
          "key": "minLength",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoMinLength",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed length for the field value.",
              "generatedName": "StringFieldPropertiesDtoMinLength",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed length for the field value.",
                "generatedName": "StringFieldPropertiesDtoMinLength",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoMaxLength",
          "key": "maxLength",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoMaxLength",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed length for the field value.",
              "generatedName": "StringFieldPropertiesDtoMaxLength",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed length for the field value.",
                "generatedName": "StringFieldPropertiesDtoMaxLength",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoMinCharacters",
          "key": "minCharacters",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoMinCharacters",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed of normal characters for the field value.",
              "generatedName": "StringFieldPropertiesDtoMinCharacters",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed of normal characters for the field value.",
                "generatedName": "StringFieldPropertiesDtoMinCharacters",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoMaxCharacters",
          "key": "maxCharacters",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoMaxCharacters",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed of normal characters for the field value.",
              "generatedName": "StringFieldPropertiesDtoMaxCharacters",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed of normal characters for the field value.",
                "generatedName": "StringFieldPropertiesDtoMaxCharacters",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoMinWords",
          "key": "minWords",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoMinWords",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed number of words for the field value.",
              "generatedName": "StringFieldPropertiesDtoMinWords",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed number of words for the field value.",
                "generatedName": "StringFieldPropertiesDtoMinWords",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoMaxWords",
          "key": "maxWords",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoMaxWords",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed number of words for the field value.",
              "generatedName": "StringFieldPropertiesDtoMaxWords",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed number of words for the field value.",
                "generatedName": "StringFieldPropertiesDtoMaxWords",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoAllowedValues",
          "key": "allowedValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the field value.",
              "generatedName": "StringFieldPropertiesDtoAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The allowed values for the field value.",
                "generatedName": "StringFieldPropertiesDtoAllowedValues",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "StringFieldPropertiesDtoAllowedValuesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoSchemaIds",
          "key": "schemaIds",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "stringFieldPropertiesDtoSchemaIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed schema ids that can be embedded.",
              "generatedName": "StringFieldPropertiesDtoSchemaIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The allowed schema ids that can be embedded.",
                "generatedName": "StringFieldPropertiesDtoSchemaIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "StringFieldPropertiesDtoSchemaIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoIsUnique",
          "key": "isUnique",
          "nameOverride": null,
          "schema": {
            "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
            "generatedName": "StringFieldPropertiesDtoIsUnique",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoIsEmbeddable",
          "key": "isEmbeddable",
          "nameOverride": null,
          "schema": {
            "description": "Indicates that other content items or references are embedded.",
            "generatedName": "StringFieldPropertiesDtoIsEmbeddable",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoInlineEditable",
          "key": "inlineEditable",
          "nameOverride": null,
          "schema": {
            "description": "Indicates that the inline editor is enabled for this field.",
            "generatedName": "StringFieldPropertiesDtoInlineEditable",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoCreateEnum",
          "key": "createEnum",
          "nameOverride": null,
          "schema": {
            "description": "Indicates whether GraphQL Enum should be created.",
            "generatedName": "StringFieldPropertiesDtoCreateEnum",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoContentType",
          "key": "contentType",
          "nameOverride": null,
          "schema": {
            "description": "How the string content should be interpreted.",
            "generatedName": "StringFieldPropertiesDtoContentType",
            "groupName": null,
            "nameOverride": null,
            "schema": "StringContentType",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stringFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "StringFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "StringFieldEditor",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "SynchronizeSchemaDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "UpsertSchemaDto",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpsertSchemaDto",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SynchronizeSchemaDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "synchronizeSchemaDtoNoFieldDeletion",
          "key": "noFieldDeletion",
          "nameOverride": null,
          "schema": {
            "description": "True, when fields should not be deleted.",
            "generatedName": "SynchronizeSchemaDtoNoFieldDeletion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "synchronizeSchemaDtoNoFieldRecreation",
          "key": "noFieldRecreation",
          "nameOverride": null,
          "schema": {
            "description": "True, when fields with different types should not be recreated.",
            "generatedName": "SynchronizeSchemaDtoNoFieldRecreation",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "TagsFieldEditor": {
      "description": "",
      "generatedName": "TagsFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Tags",
          "nameOverride": null,
          "value": "Tags",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Checkboxes",
          "nameOverride": null,
          "value": "Checkboxes",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Dropdown",
          "nameOverride": null,
          "value": "Dropdown",
        },
      ],
    },
    "TagsFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TagsFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsFieldPropertiesDtoDefaultValues",
          "key": "defaultValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tagsFieldPropertiesDtoDefaultValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The language specific default value for the field value.",
              "generatedName": "TagsFieldPropertiesDtoDefaultValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "LocalizedValueOfReadonlyListOfString",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsFieldPropertiesDtoDefaultValue",
          "key": "defaultValue",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tagsFieldPropertiesDtoDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The default value.",
              "generatedName": "TagsFieldPropertiesDtoDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The default value.",
                "generatedName": "TagsFieldPropertiesDtoDefaultValue",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "TagsFieldPropertiesDtoDefaultValueItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsFieldPropertiesDtoMinItems",
          "key": "minItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tagsFieldPropertiesDtoMinItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum allowed items for the field value.",
              "generatedName": "TagsFieldPropertiesDtoMinItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum allowed items for the field value.",
                "generatedName": "TagsFieldPropertiesDtoMinItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsFieldPropertiesDtoMaxItems",
          "key": "maxItems",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tagsFieldPropertiesDtoMaxItems",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum allowed items for the field value.",
              "generatedName": "TagsFieldPropertiesDtoMaxItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum allowed items for the field value.",
                "generatedName": "TagsFieldPropertiesDtoMaxItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsFieldPropertiesDtoAllowedValues",
          "key": "allowedValues",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tagsFieldPropertiesDtoAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the field value.",
              "generatedName": "TagsFieldPropertiesDtoAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The allowed values for the field value.",
                "generatedName": "TagsFieldPropertiesDtoAllowedValues",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "TagsFieldPropertiesDtoAllowedValuesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsFieldPropertiesDtoCreateEnum",
          "key": "createEnum",
          "nameOverride": null,
          "schema": {
            "description": "Indicates whether GraphQL Enum should be created.",
            "generatedName": "TagsFieldPropertiesDtoCreateEnum",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "TagsFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "TagsFieldEditor",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "TeamDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TeamDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "teamDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the team.",
            "generatedName": "TeamDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "teamDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the team.",
            "generatedName": "TeamDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "teamDtoVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "The version of the team.",
            "generatedName": "TeamDtoVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "teamDtoCreated",
          "key": "created",
          "nameOverride": null,
          "schema": {
            "description": "The timestamp when the team has been created.",
            "generatedName": "TeamDtoCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "teamDtoLastModified",
          "key": "lastModified",
          "nameOverride": null,
          "schema": {
            "description": "The timestamp when the team has been modified last.",
            "generatedName": "TeamDtoLastModified",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "teamDtoRoleName",
          "key": "roleName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "teamDtoRoleName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The role name of the user.",
              "generatedName": "TeamDtoRoleName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The role name of the user.",
                "generatedName": "TeamDtoRoleName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "TemplateDetailsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TemplateDetailsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "templateDetailsDtoDetails",
          "key": "details",
          "nameOverride": null,
          "schema": {
            "description": "The details of the template.",
            "generatedName": "TemplateDetailsDtoDetails",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "TemplateDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TemplateDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "templateDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the template.",
            "generatedName": "TemplateDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "templateDtoTitle",
          "key": "title",
          "nameOverride": null,
          "schema": {
            "description": "The title of the template.",
            "generatedName": "TemplateDtoTitle",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "templateDtoDescription",
          "key": "description",
          "nameOverride": null,
          "schema": {
            "description": "The description of the template.",
            "generatedName": "TemplateDtoDescription",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "templateDtoIsStarter",
          "key": "isStarter",
          "nameOverride": null,
          "schema": {
            "description": "True, if the template is a starter.",
            "generatedName": "TemplateDtoIsStarter",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "TemplatesDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TemplatesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "templatesDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The event consumers.",
            "generatedName": "TemplatesDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "TemplatesDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "TemplateDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "TransferToTeamDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TransferToTeamDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "transferToTeamDtoTeamId",
          "key": "teamId",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "transferToTeamDtoTeamId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the team.",
              "generatedName": "TransferToTeamDtoTeamId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the team.",
                "generatedName": "TransferToTeamDtoTeamId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "TranslateDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TranslateDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "translateDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The text to translate.",
            "generatedName": "TranslateDtoText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "translateDtoTargetLanguage",
          "key": "targetLanguage",
          "nameOverride": null,
          "schema": {
            "description": "The target language.",
            "generatedName": "TranslateDtoTargetLanguage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "translateDtoSourceLanguage",
          "key": "sourceLanguage",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "translateDtoSourceLanguage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional source language.",
              "generatedName": "TranslateDtoSourceLanguage",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "TranslationDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TranslationDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "translationDtoResult",
          "key": "result",
          "nameOverride": null,
          "schema": {
            "description": "The result of the translation.",
            "generatedName": "TranslationDtoResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "TranslationResultCode",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "translationDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "translationDtoText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The translated text.",
              "generatedName": "TranslationDtoText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The translated text.",
                "generatedName": "TranslationDtoText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "TranslationResultCode": {
      "description": "",
      "generatedName": "TranslationResultCode",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Translated",
          "nameOverride": null,
          "value": "Translated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "LanguageNotSupported",
          "nameOverride": null,
          "value": "LanguageNotSupported",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NotTranslated",
          "nameOverride": null,
          "value": "NotTranslated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NotConfigured",
          "nameOverride": null,
          "value": "NotConfigured",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Unauthorized",
          "nameOverride": null,
          "value": "Unauthorized",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "Failed",
          "nameOverride": null,
          "value": "Failed",
        },
      ],
    },
    "TweetRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TweetRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tweetRuleActionDtoAccessToken",
          "key": "accessToken",
          "nameOverride": null,
          "schema": {
            "description": " The generated access token.",
            "generatedName": "TweetRuleActionDtoAccessToken",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tweetRuleActionDtoAccessSecret",
          "key": "accessSecret",
          "nameOverride": null,
          "schema": {
            "description": " The generated access secret.",
            "generatedName": "TweetRuleActionDtoAccessSecret",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tweetRuleActionDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The text that is sent as tweet to twitter.",
            "generatedName": "TweetRuleActionDtoText",
            "groupName": null,
            "nameOverride": "Text",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "TypesenseRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TypesenseRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "typesenseRuleActionDtoHost",
          "key": "host",
          "nameOverride": null,
          "schema": {
            "description": "The url to the instance or cluster.",
            "generatedName": "TypesenseRuleActionDtoHost",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "typesenseRuleActionDtoIndexName",
          "key": "indexName",
          "nameOverride": null,
          "schema": {
            "description": "The name of the index.",
            "generatedName": "TypesenseRuleActionDtoIndexName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "typesenseRuleActionDtoApiKey",
          "key": "apiKey",
          "nameOverride": null,
          "schema": {
            "description": "The api key.",
            "generatedName": "TypesenseRuleActionDtoApiKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "typesenseRuleActionDtoDocument",
          "key": "document",
          "nameOverride": null,
          "schema": {
            "description": "The optional custom document.",
            "generatedName": "TypesenseRuleActionDtoDocument",
            "groupName": null,
            "nameOverride": "Document",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "typesenseRuleActionDtoDelete",
          "key": "delete",
          "nameOverride": null,
          "schema": {
            "description": "The condition when to delete the document.",
            "generatedName": "TypesenseRuleActionDtoDelete",
            "groupName": null,
            "nameOverride": "Deletion",
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UIFieldEditor": {
      "description": "",
      "generatedName": "UiFieldEditor",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "Separator",
      },
    },
    "UIFieldPropertiesDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UiFieldPropertiesDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uiFieldPropertiesDtoEditor",
          "key": "editor",
          "nameOverride": null,
          "schema": {
            "description": "The editor that is used to manage this field.",
            "generatedName": "UiFieldPropertiesDtoEditor",
            "groupName": null,
            "nameOverride": null,
            "schema": "UIFieldEditor",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "UISettingsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UiSettingsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uiSettingsDtoCanCreateApps",
          "key": "canCreateApps",
          "nameOverride": null,
          "schema": {
            "description": "True when the user can create apps.",
            "generatedName": "UiSettingsDtoCanCreateApps",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uiSettingsDtoCanCreateTeams",
          "key": "canCreateTeams",
          "nameOverride": null,
          "schema": {
            "description": "True when the user can create teams.",
            "generatedName": "UiSettingsDtoCanCreateTeams",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UpdateAppDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateAppDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAppDtoLabel",
          "key": "label",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAppDtoLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional label of your app.",
              "generatedName": "UpdateAppDtoLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional label of your app.",
                "generatedName": "UpdateAppDtoLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAppDtoDescription",
          "key": "description",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAppDtoDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional description of your app.",
              "generatedName": "UpdateAppDtoDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional description of your app.",
                "generatedName": "UpdateAppDtoDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateAppSettingsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateAppSettingsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAppSettingsDtoPatterns",
          "key": "patterns",
          "nameOverride": null,
          "schema": {
            "description": "The configured app patterns.",
            "generatedName": "UpdateAppSettingsDtoPatterns",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UpdateAppSettingsDtoPatternsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "PatternDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAppSettingsDtoEditors",
          "key": "editors",
          "nameOverride": null,
          "schema": {
            "description": "The configured UI editors.",
            "generatedName": "UpdateAppSettingsDtoEditors",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UpdateAppSettingsDtoEditorsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "EditorDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAppSettingsDtoHideScheduler",
          "key": "hideScheduler",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAppSettingsDtoHideScheduler",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Hide the scheduler for content items.",
              "generatedName": "UpdateAppSettingsDtoHideScheduler",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAppSettingsDtoHideDateTimeModeButton",
          "key": "hideDateTimeModeButton",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAppSettingsDtoHideDateTimeModeButton",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Hide the datetime mode button.",
              "generatedName": "UpdateAppSettingsDtoHideDateTimeModeButton",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateAssetScriptsDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateAssetScriptsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAssetScriptsDtoQuery",
          "key": "query",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAssetScriptsDtoQuery",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed for each asset when querying assets.",
              "generatedName": "UpdateAssetScriptsDtoQuery",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed for each asset when querying assets.",
                "generatedName": "UpdateAssetScriptsDtoQuery",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAssetScriptsDtoQueryPre",
          "key": "queryPre",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAssetScriptsDtoQueryPre",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed for all assets when querying assets.",
              "generatedName": "UpdateAssetScriptsDtoQueryPre",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed for all assets when querying assets.",
                "generatedName": "UpdateAssetScriptsDtoQueryPre",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAssetScriptsDtoCreate",
          "key": "create",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAssetScriptsDtoCreate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when creating an asset.",
              "generatedName": "UpdateAssetScriptsDtoCreate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when creating an asset.",
                "generatedName": "UpdateAssetScriptsDtoCreate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAssetScriptsDtoUpdate",
          "key": "update",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAssetScriptsDtoUpdate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when updating a content.",
              "generatedName": "UpdateAssetScriptsDtoUpdate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when updating a content.",
                "generatedName": "UpdateAssetScriptsDtoUpdate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAssetScriptsDtoAnnotate",
          "key": "annotate",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAssetScriptsDtoAnnotate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when annotating a content.",
              "generatedName": "UpdateAssetScriptsDtoAnnotate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when annotating a content.",
                "generatedName": "UpdateAssetScriptsDtoAnnotate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAssetScriptsDtoMove",
          "key": "move",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAssetScriptsDtoMove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when moving a content.",
              "generatedName": "UpdateAssetScriptsDtoMove",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when moving a content.",
                "generatedName": "UpdateAssetScriptsDtoMove",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateAssetScriptsDtoDelete",
          "key": "delete",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateAssetScriptsDtoDelete",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The script that is executed when deleting a content.",
              "generatedName": "UpdateAssetScriptsDtoDelete",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The script that is executed when deleting a content.",
                "generatedName": "UpdateAssetScriptsDtoDelete",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateClientDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateClientDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateClientDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateClientDtoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The new display name of the client.",
              "generatedName": "UpdateClientDtoName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The new display name of the client.",
                "generatedName": "UpdateClientDtoName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 20,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateClientDtoRole",
          "key": "role",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateClientDtoRole",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The role of the client.",
              "generatedName": "UpdateClientDtoRole",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The role of the client.",
                "generatedName": "UpdateClientDtoRole",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateClientDtoAllowAnonymous",
          "key": "allowAnonymous",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateClientDtoAllowAnonymous",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True to allow anonymous access without an access token for this client.",
              "generatedName": "UpdateClientDtoAllowAnonymous",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "True to allow anonymous access without an access token for this client.",
                "generatedName": "UpdateClientDtoAllowAnonymous",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateClientDtoApiCallsLimit",
          "key": "apiCallsLimit",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateClientDtoApiCallsLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of allowed api calls per month for this client.",
              "generatedName": "UpdateClientDtoApiCallsLimit",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The number of allowed api calls per month for this client.",
                "generatedName": "UpdateClientDtoApiCallsLimit",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateClientDtoApiTrafficLimit",
          "key": "apiTrafficLimit",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateClientDtoApiTrafficLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of allowed api traffic bytes per month for this client.",
              "generatedName": "UpdateClientDtoApiTrafficLimit",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The number of allowed api traffic bytes per month for this client.",
                "generatedName": "UpdateClientDtoApiTrafficLimit",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateFieldDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateFieldDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateFieldDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The field properties.",
            "generatedName": "UpdateFieldDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "FieldPropertiesDto",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "UpdateLanguageDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateLanguageDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateLanguageDtoIsMaster",
          "key": "isMaster",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateLanguageDtoIsMaster",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Set the value to true to make the language the master.",
              "generatedName": "UpdateLanguageDtoIsMaster",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Set the value to true to make the language the master.",
                "generatedName": "UpdateLanguageDtoIsMaster",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateLanguageDtoIsOptional",
          "key": "isOptional",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateLanguageDtoIsOptional",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Set the value to true to make the language optional.",
              "generatedName": "UpdateLanguageDtoIsOptional",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateLanguageDtoFallback",
          "key": "fallback",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateLanguageDtoFallback",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional fallback languages.",
              "generatedName": "UpdateLanguageDtoFallback",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional fallback languages.",
                "generatedName": "UpdateLanguageDtoFallback",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpdateLanguageDtoFallbackItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateRoleDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateRoleDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateRoleDtoPermissions",
          "key": "permissions",
          "nameOverride": null,
          "schema": {
            "description": "Associated list of permissions.",
            "generatedName": "UpdateRoleDtoPermissions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UpdateRoleDtoPermissionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateRoleDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateRoleDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Associated list of UI properties.",
              "generatedName": "UpdateRoleDtoProperties",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "UpdateRoleDtoPropertiesKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "UpdateRoleDtoPropertiesValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateRuleDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateRuleDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateRuleDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateRuleDtoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional rule name.",
              "generatedName": "UpdateRuleDtoName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional rule name.",
                "generatedName": "UpdateRuleDtoName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateRuleDtoTrigger",
          "key": "trigger",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateRuleDtoTrigger",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The trigger properties.",
              "generatedName": "UpdateRuleDtoTrigger",
              "groupName": null,
              "nameOverride": null,
              "schema": "RuleTriggerDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateRuleDtoAction",
          "key": "action",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateRuleDtoAction",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The action properties.",
              "generatedName": "UpdateRuleDtoAction",
              "groupName": null,
              "nameOverride": null,
              "schema": "RuleActionDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateRuleDtoIsEnabled",
          "key": "isEnabled",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateRuleDtoIsEnabled",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Enable or disable the rule.",
              "generatedName": "UpdateRuleDtoIsEnabled",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Enable or disable the rule.",
                "generatedName": "UpdateRuleDtoIsEnabled",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateSchemaDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateSchemaDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSchemaDtoLabel",
          "key": "label",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateSchemaDtoLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional label for the editor.",
              "generatedName": "UpdateSchemaDtoLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional label for the editor.",
                "generatedName": "UpdateSchemaDtoLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 100,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSchemaDtoHints",
          "key": "hints",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateSchemaDtoHints",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Hints to describe the schema.",
              "generatedName": "UpdateSchemaDtoHints",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Hints to describe the schema.",
                "generatedName": "UpdateSchemaDtoHints",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 1000,
                  "minLength": 0,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSchemaDtoContentsSidebarUrl",
          "key": "contentsSidebarUrl",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateSchemaDtoContentsSidebarUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url to a the sidebar plugin for content lists.",
              "generatedName": "UpdateSchemaDtoContentsSidebarUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url to a the sidebar plugin for content lists.",
                "generatedName": "UpdateSchemaDtoContentsSidebarUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSchemaDtoContentSidebarUrl",
          "key": "contentSidebarUrl",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateSchemaDtoContentSidebarUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url to a the sidebar plugin for content items.",
              "generatedName": "UpdateSchemaDtoContentSidebarUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url to a the sidebar plugin for content items.",
                "generatedName": "UpdateSchemaDtoContentSidebarUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSchemaDtoContentEditorUrl",
          "key": "contentEditorUrl",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateSchemaDtoContentEditorUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url to the editor plugin.",
              "generatedName": "UpdateSchemaDtoContentEditorUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url to the editor plugin.",
                "generatedName": "UpdateSchemaDtoContentEditorUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSchemaDtoValidateOnPublish",
          "key": "validateOnPublish",
          "nameOverride": null,
          "schema": {
            "description": "True to validate the content items on publish.",
            "generatedName": "UpdateSchemaDtoValidateOnPublish",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSchemaDtoTags",
          "key": "tags",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateSchemaDtoTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags for automation processes.",
              "generatedName": "UpdateSchemaDtoTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Tags for automation processes.",
                "generatedName": "UpdateSchemaDtoTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpdateSchemaDtoTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateSettingDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateSettingDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateSettingDtoValue",
          "key": "value",
          "nameOverride": null,
          "schema": {
            "generatedName": "UpdateSettingDtoValue",
            "nameOverride": null,
            "type": "unknown",
          },
        },
      ],
      "type": "object",
    },
    "UpdateTeamDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateTeamDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateTeamDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the team.",
            "generatedName": "UpdateTeamDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UpdateUserDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateUserDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateUserDtoEmail",
          "key": "email",
          "nameOverride": null,
          "schema": {
            "description": "The email of the user. Unique value.",
            "generatedName": "UpdateUserDtoEmail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateUserDtoDisplayName",
          "key": "displayName",
          "nameOverride": null,
          "schema": {
            "description": "The display name (usually first name and last name) of the user.",
            "generatedName": "UpdateUserDtoDisplayName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateUserDtoPassword",
          "key": "password",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateUserDtoPassword",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The password of the user.",
              "generatedName": "UpdateUserDtoPassword",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The password of the user.",
                "generatedName": "UpdateUserDtoPassword",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateUserDtoPermissions",
          "key": "permissions",
          "nameOverride": null,
          "schema": {
            "description": "Additional permissions for the user.",
            "generatedName": "UpdateUserDtoPermissions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UpdateUserDtoPermissionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "UpdateWorkflowDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpdateWorkflowDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateWorkflowDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateWorkflowDtoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the workflow.",
              "generatedName": "UpdateWorkflowDtoName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the workflow.",
                "generatedName": "UpdateWorkflowDtoName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateWorkflowDtoSteps",
          "key": "steps",
          "nameOverride": null,
          "schema": {
            "description": "The workflow steps.",
            "generatedName": "UpdateWorkflowDtoSteps",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "UpdateWorkflowDtoStepsKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "description": null,
              "generatedName": "UpdateWorkflowDtoStepsValue",
              "groupName": null,
              "nameOverride": null,
              "schema": "WorkflowStepDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateWorkflowDtoSchemaIds",
          "key": "schemaIds",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "updateWorkflowDtoSchemaIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The schema ids.",
              "generatedName": "UpdateWorkflowDtoSchemaIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The schema ids.",
                "generatedName": "UpdateWorkflowDtoSchemaIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpdateWorkflowDtoSchemaIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "updateWorkflowDtoInitial",
          "key": "initial",
          "nameOverride": null,
          "schema": {
            "description": "The initial step.",
            "generatedName": "UpdateWorkflowDtoInitial",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UpsertCommentDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpsertCommentDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertCommentDtoText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": "The comment text.",
            "generatedName": "UpsertCommentDtoText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertCommentDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertCommentDtoUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The url where the comment is created.",
              "generatedName": "UpsertCommentDtoUrl",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The url where the comment is created.",
                "generatedName": "UpsertCommentDtoUrl",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpsertSchemaDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpsertSchemaDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional properties.",
              "generatedName": "UpsertSchemaDtoProperties",
              "groupName": null,
              "nameOverride": null,
              "schema": "SchemaPropertiesDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoScripts",
          "key": "scripts",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoScripts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional scripts.",
              "generatedName": "UpsertSchemaDtoScripts",
              "groupName": null,
              "nameOverride": null,
              "schema": "SchemaScriptsDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoFieldsInReferences",
          "key": "fieldsInReferences",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoFieldsInReferences",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The names of the fields that should be used in references.",
              "generatedName": "UpsertSchemaDtoFieldsInReferences",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The names of the fields that should be used in references.",
                "generatedName": "UpsertSchemaDtoFieldsInReferences",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpsertSchemaDtoFieldsInReferencesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoFieldsInLists",
          "key": "fieldsInLists",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoFieldsInLists",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The names of the fields that should be shown in lists, including meta fields.",
              "generatedName": "UpsertSchemaDtoFieldsInLists",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The names of the fields that should be shown in lists, including meta fields.",
                "generatedName": "UpsertSchemaDtoFieldsInLists",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpsertSchemaDtoFieldsInListsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoFields",
          "key": "fields",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional fields.",
              "generatedName": "UpsertSchemaDtoFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional fields.",
                "generatedName": "UpsertSchemaDtoFields",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpsertSchemaDtoFieldsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "UpsertSchemaFieldDto",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoPreviewUrls",
          "key": "previewUrls",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoPreviewUrls",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional preview urls.",
              "generatedName": "UpsertSchemaDtoPreviewUrls",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional preview urls.",
                "generatedName": "UpsertSchemaDtoPreviewUrls",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "UpsertSchemaDtoPreviewUrlsKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "description": null,
                  "generatedName": "UpsertSchemaDtoPreviewUrlsValue",
                  "groupName": null,
                  "nameOverride": null,
                  "type": "nullable",
                  "value": {
                    "description": null,
                    "generatedName": "UpsertSchemaDtoPreviewUrlsValue",
                    "groupName": null,
                    "nameOverride": null,
                    "schema": {
                      "maxLength": null,
                      "minLength": null,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoFieldRules",
          "key": "fieldRules",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoFieldRules",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional field Rules.",
              "generatedName": "UpsertSchemaDtoFieldRules",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional field Rules.",
                "generatedName": "UpsertSchemaDtoFieldRules",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpsertSchemaDtoFieldRulesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "FieldRuleDto",
                  "type": "reference",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoCategory",
          "key": "category",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaDtoCategory",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The category.",
              "generatedName": "UpsertSchemaDtoCategory",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The category.",
                "generatedName": "UpsertSchemaDtoCategory",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaDtoIsPublished",
          "key": "isPublished",
          "nameOverride": null,
          "schema": {
            "description": "Set it to true to autopublish the schema.",
            "generatedName": "UpsertSchemaDtoIsPublished",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UpsertSchemaFieldDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpsertSchemaFieldDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaFieldDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the field. Must be unique within the schema.",
            "generatedName": "UpsertSchemaFieldDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaFieldDtoIsHidden",
          "key": "isHidden",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is hidden.",
            "generatedName": "UpsertSchemaFieldDtoIsHidden",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaFieldDtoIsLocked",
          "key": "isLocked",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is locked.",
            "generatedName": "UpsertSchemaFieldDtoIsLocked",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaFieldDtoIsDisabled",
          "key": "isDisabled",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is disabled.",
            "generatedName": "UpsertSchemaFieldDtoIsDisabled",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaFieldDtoPartitioning",
          "key": "partitioning",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaFieldDtoPartitioning",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Determines the optional partitioning of the field.",
              "generatedName": "UpsertSchemaFieldDtoPartitioning",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Determines the optional partitioning of the field.",
                "generatedName": "UpsertSchemaFieldDtoPartitioning",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaFieldDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The field properties.",
            "generatedName": "UpsertSchemaFieldDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "FieldPropertiesDto",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaFieldDtoNested",
          "key": "nested",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "upsertSchemaFieldDtoNested",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The nested fields.",
              "generatedName": "UpsertSchemaFieldDtoNested",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The nested fields.",
                "generatedName": "UpsertSchemaFieldDtoNested",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UpsertSchemaFieldDtoNestedItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "UpsertSchemaNestedFieldDto",
                  "type": "reference",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UpsertSchemaNestedFieldDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpsertSchemaNestedFieldDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaNestedFieldDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "The name of the field. Must be unique within the schema.",
            "generatedName": "UpsertSchemaNestedFieldDtoName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaNestedFieldDtoIsHidden",
          "key": "isHidden",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is hidden.",
            "generatedName": "UpsertSchemaNestedFieldDtoIsHidden",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaNestedFieldDtoIsLocked",
          "key": "isLocked",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is locked.",
            "generatedName": "UpsertSchemaNestedFieldDtoIsLocked",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaNestedFieldDtoIsDisabled",
          "key": "isDisabled",
          "nameOverride": null,
          "schema": {
            "description": "Defines if the field is disabled.",
            "generatedName": "UpsertSchemaNestedFieldDtoIsDisabled",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSchemaNestedFieldDtoProperties",
          "key": "properties",
          "nameOverride": null,
          "schema": {
            "description": "The field properties.",
            "generatedName": "UpsertSchemaNestedFieldDtoProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "FieldPropertiesDto",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "UsageRuleTriggerDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UsageRuleTriggerDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "usageRuleTriggerDtoLimit",
          "key": "limit",
          "nameOverride": null,
          "schema": {
            "description": "The number of monthly api calls.",
            "generatedName": "UsageRuleTriggerDtoLimit",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "usageRuleTriggerDtoNumDays",
          "key": "numDays",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "usageRuleTriggerDtoNumDays",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of days to check or null for the current month.",
              "generatedName": "UsageRuleTriggerDtoNumDays",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The number of days to check or null for the current month.",
                "generatedName": "UsageRuleTriggerDtoNumDays",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UserDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UserDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": "The ID of the user.",
            "generatedName": "UserDtoId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userDtoEmail",
          "key": "email",
          "nameOverride": null,
          "schema": {
            "description": "The email of the user. Unique value.",
            "generatedName": "UserDtoEmail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userDtoDisplayName",
          "key": "displayName",
          "nameOverride": null,
          "schema": {
            "description": "The display name (usually first name and last name) of the user.",
            "generatedName": "UserDtoDisplayName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userDtoIsLocked",
          "key": "isLocked",
          "nameOverride": null,
          "schema": {
            "description": "Determines if the user is locked.",
            "generatedName": "UserDtoIsLocked",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userDtoPermissions",
          "key": "permissions",
          "nameOverride": null,
          "schema": {
            "description": "Additional permissions for the user.",
            "generatedName": "UserDtoPermissions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UserDtoPermissionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "UserProperty": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UserProperty",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userPropertyName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UserPropertyName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userPropertyValue",
          "key": "value",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UserPropertyValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UsersDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UsersDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "usersDtoTotal",
          "key": "total",
          "nameOverride": null,
          "schema": {
            "description": "The total number of users.",
            "generatedName": "UsersDtoTotal",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "usersDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The users.",
            "generatedName": "UsersDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UsersDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "UserDto",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "WebhookMethod": {
      "description": "",
      "generatedName": "WebhookMethod",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "POST",
          "nameOverride": null,
          "value": "POST",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PUT",
          "nameOverride": null,
          "value": "PUT",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "GET",
          "nameOverride": null,
          "value": "GET",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "DELETE",
          "nameOverride": null,
          "value": "DELETE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PATCH",
          "nameOverride": null,
          "value": "PATCH",
        },
      ],
    },
    "WebhookRuleActionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhookRuleActionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookRuleActionDtoUrl",
          "key": "url",
          "nameOverride": null,
          "schema": {
            "description": "The url to the webhook.",
            "generatedName": "WebhookRuleActionDtoUrl",
            "groupName": null,
            "nameOverride": "Url",
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookRuleActionDtoMethod",
          "key": "method",
          "nameOverride": null,
          "schema": {
            "description": "The type of the request.",
            "generatedName": "WebhookRuleActionDtoMethod",
            "groupName": null,
            "nameOverride": null,
            "schema": "WebhookMethod",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookRuleActionDtoPayload",
          "key": "payload",
          "nameOverride": null,
          "schema": {
            "description": "Leave it empty to use the full event as body.",
            "generatedName": "WebhookRuleActionDtoPayload",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookRuleActionDtoPayloadType",
          "key": "payloadType",
          "nameOverride": null,
          "schema": {
            "description": "The mime type of the payload.",
            "generatedName": "WebhookRuleActionDtoPayloadType",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookRuleActionDtoHeaders",
          "key": "headers",
          "nameOverride": null,
          "schema": {
            "description": "The message headers in the format '[Key]=[Value]', one entry per line.",
            "generatedName": "WebhookRuleActionDtoHeaders",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookRuleActionDtoSharedSecret",
          "key": "sharedSecret",
          "nameOverride": null,
          "schema": {
            "description": "The shared secret that is used to calculate the payload signature.",
            "generatedName": "WebhookRuleActionDtoSharedSecret",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "WorkflowDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowDtoId",
          "key": "id",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowDtoId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The workflow id.",
              "generatedName": "WorkflowDtoId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowDtoName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowDtoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the workflow.",
              "generatedName": "WorkflowDtoName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the workflow.",
                "generatedName": "WorkflowDtoName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowDtoSteps",
          "key": "steps",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowDtoSteps",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The workflow steps.",
              "generatedName": "WorkflowDtoSteps",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorkflowDtoStepsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "description": null,
                "generatedName": "WorkflowDtoStepsValue",
                "groupName": null,
                "nameOverride": null,
                "schema": "WorkflowStepDto",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowDtoSchemaIds",
          "key": "schemaIds",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowDtoSchemaIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The schema ids.",
              "generatedName": "WorkflowDtoSchemaIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The schema ids.",
                "generatedName": "WorkflowDtoSchemaIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorkflowDtoSchemaIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowDtoInitial",
          "key": "initial",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowDtoInitial",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The initial step.",
              "generatedName": "WorkflowDtoInitial",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowStepDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowStepDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowStepDtoTransitions",
          "key": "transitions",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowStepDtoTransitions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The transitions.",
              "generatedName": "WorkflowStepDtoTransitions",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorkflowStepDtoTransitionsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "description": null,
                "generatedName": "WorkflowStepDtoTransitionsValue",
                "groupName": null,
                "nameOverride": null,
                "schema": "WorkflowTransitionDto",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowStepDtoColor",
          "key": "color",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowStepDtoColor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional color.",
              "generatedName": "WorkflowStepDtoColor",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional color.",
                "generatedName": "WorkflowStepDtoColor",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowStepDtoValidate",
          "key": "validate",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowStepDtoValidate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "True if the content should be validated when moving to this step.",
              "generatedName": "WorkflowStepDtoValidate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowStepDtoNoUpdate",
          "key": "noUpdate",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowStepDtoNoUpdate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Indicates if updates should not be allowed.",
              "generatedName": "WorkflowStepDtoNoUpdate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowStepDtoNoUpdateExpression",
          "key": "noUpdateExpression",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowStepDtoNoUpdateExpression",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional expression that must evaluate to true when you want to prevent updates.",
              "generatedName": "WorkflowStepDtoNoUpdateExpression",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional expression that must evaluate to true when you want to prevent updates.",
                "generatedName": "WorkflowStepDtoNoUpdateExpression",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowStepDtoNoUpdateRoles",
          "key": "noUpdateRoles",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowStepDtoNoUpdateRoles",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional list of roles to restrict the updates for users with these roles.",
              "generatedName": "WorkflowStepDtoNoUpdateRoles",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optional list of roles to restrict the updates for users with these roles.",
                "generatedName": "WorkflowStepDtoNoUpdateRoles",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorkflowStepDtoNoUpdateRolesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowTransitionDto": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowTransitionDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowTransitionDtoExpression",
          "key": "expression",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowTransitionDtoExpression",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional expression.",
              "generatedName": "WorkflowTransitionDtoExpression",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional expression.",
                "generatedName": "WorkflowTransitionDtoExpression",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowTransitionDtoRoles",
          "key": "roles",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "workflowTransitionDtoRoles",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The optional restricted role.",
              "generatedName": "WorkflowTransitionDtoRoles",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The optional restricted role.",
                "generatedName": "WorkflowTransitionDtoRoles",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorkflowTransitionDtoRolesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowsDto": {
      "allOf": [
        {
          "description": null,
          "generatedName": "Resource",
          "groupName": null,
          "nameOverride": null,
          "schema": "Resource",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowsDto",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowsDtoItems",
          "key": "items",
          "nameOverride": null,
          "schema": {
            "description": "The workflow.",
            "generatedName": "WorkflowsDtoItems",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorkflowsDtoItemsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "WorkflowDto",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowsDtoErrors",
          "key": "errors",
          "nameOverride": null,
          "schema": {
            "description": "The errros that should be fixed.",
            "generatedName": "WorkflowsDtoErrors",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorkflowsDtoErrorsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
  },
  "securitySchemes": {
    "squidex-oauth-auth": {
      "tokenEnvVar": null,
      "tokenVariableName": null,
      "type": "bearer",
    },
  },
  "servers": [
    {
      "description": null,
      "name": null,
      "url": "https://localhost:5001",
    },
  ],
  "tags": {
    "orderedTagIds": null,
    "tagsById": {},
  },
  "title": "Squidex API",
  "variables": {
    "appName": {
      "description": null,
      "generatedName": "AppName",
      "groupName": null,
      "nameOverride": null,
      "schema": {
        "maxLength": null,
        "minLength": null,
        "type": "string",
      },
    },
  },
  "webhooks": [],
}
`;

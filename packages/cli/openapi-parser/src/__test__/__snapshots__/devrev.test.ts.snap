// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser devrev parse open api 1`] = `
{
  "files": {
    "openapi.yml": {
      "dependencies": [],
      "description": "DevRev's REST API.",
      "endpoints": [
        {
          "authed": true,
          "description": "Gets the download URL for the artifact.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "ArtifactsLocateRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "artifacts-locate",
          "path": "/artifacts.locate",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the artifact to get the URL for.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsLocateResponse",
              "nameOverride": undefined,
              "schema": "artifacts-locate-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "authed": true,
          "description": "Creates an artifact and generates an upload URL for its data.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "ArtifactsPrepareRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "artifacts-prepare",
          "path": "/artifacts.prepare",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsPrepareRequest",
              "nameOverride": undefined,
              "schema": "artifacts-prepare-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "ArtifactsPrepareResponse",
              "nameOverride": undefined,
              "schema": "artifacts-prepare-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "artifacts",
          ],
        },
        {
          "authed": true,
          "description": "Creates a JWT corresponding to the requested token type for the
authenticated user.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "auth-tokens-create",
          "path": "/auth-tokens.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensCreateRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensCreateResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Revokes the token that matches the given token ID issued under the
given Dev organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "auth-tokens-delete",
          "path": "/auth-tokens.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensDeleteRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "auth-tokens-get",
          "path": "/auth-tokens.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The unique identifier of the token under a given Dev organization.
",
              "name": "token_id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensGetResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "auth-tokens-list",
          "path": "/auth-tokens.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "An identifier that represents the application, which requested the
token. Only relevant for application access tokens.
",
              "name": "client_id",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The type of the requested token. If no value is specified, the
response will include tokens of all the types.
",
              "name": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensListRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "description": "The subject associated with the token. In the absence of this
parameter, the ID of the authenticated entity is treated as the
subject.
",
              "name": "subject",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensListResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Revokes all the tokens that matches the given token type created by the
authenticated user.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensSelfDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "auth-tokens-self-delete",
          "path": "/auth-tokens.self.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensSelfDeleteRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-self-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Updates token metadata of a token issued under a given Dev
organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "AuthTokensUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "auth-tokens-update",
          "path": "/auth-tokens.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensUpdateRequest",
              "nameOverride": undefined,
              "schema": "auth-tokens-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "AuthTokensUpdateResponse",
              "nameOverride": undefined,
              "schema": "auth-tokens-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-tokens",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new enterprise authentication connection for a Dev
organization. This authentication connection will not be enabled by
default for the organization and the user will need to explicitly
enable this. Keep in mind that at a time, only one authentication
connection can be enabled for a Dev organization. At present, only 5
enterprise connections can be created by an organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "dev-org-auth-connections-create",
          "path": "/dev-orgs.auth-connections.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsCreateRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsCreateResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Deletes an authentication connection. Only enterprise connections which
are explicitly set up for a Dev organization can be deleted. Default
connections can not be deleted using this method.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "dev-org-auth-connections-delete",
          "path": "/dev-orgs.auth-connections.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsDeleteRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Retrieves the details for an authentication connection.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "dev-org-auth-connections-get",
          "path": "/dev-orgs.auth-connections.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "ID of the authentication connection.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsGetResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "dev-org-auth-connections-list",
          "path": "/dev-orgs.auth-connections.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsListResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Enable or disable an authentication connection for a Dev organization.
Currently, only 1 authentication connection can be enabled at a time.
When a new authentication connection is enabled, the connection which
is currently enabled for the Dev organization is automatically
disabled.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsToggleRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "dev-org-auth-connections-toggle",
          "path": "/dev-orgs.auth-connections.toggle",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsToggleRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-toggle-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": undefined,
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Updates an authentication connection.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevOrgAuthConnectionsUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "dev-org-auth-connections-update",
          "path": "/dev-orgs.auth-connections.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsUpdateRequest",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevOrgAuthConnectionsUpdateResponse",
              "nameOverride": undefined,
              "schema": "dev-org-auth-connections-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "auth-connection",
            "dev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Lists users within your organization.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevUsersListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "dev-users-list",
          "path": "/dev-users.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters Dev users based on email addresses.",
              "name": "email",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The maximum number of Dev users to return. The default is '50'.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevUsersListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Fields to sort the Dev users by and the direction to sort them.
",
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters Dev users based on state.",
              "name": "state",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DevUsersListRequestStateItem",
                    "nameOverride": undefined,
                    "schema": "user-state",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevUsersListResponse",
              "nameOverride": undefined,
              "schema": "dev-users-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "authed": true,
          "description": "Gets the authenticated user's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "DevUsersSelfRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "dev-users-self",
          "path": "/dev-users.self",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "DevUsersSelfResponse",
              "nameOverride": undefined,
              "schema": "dev-users-self-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "dev-users",
          ],
        },
        {
          "authed": true,
          "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "parts-create",
          "path": "/parts.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsCreateRequest",
              "nameOverride": undefined,
              "schema": "parts-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsCreateResponse",
              "nameOverride": undefined,
              "schema": "parts-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "parts-delete",
          "path": "/parts.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsDeleteRequest",
              "nameOverride": undefined,
              "schema": "parts-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsDeleteResponse",
              "nameOverride": undefined,
              "schema": "parts-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "parts-get",
          "path": "/parts.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the part to retrieve.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsGetResponse",
              "nameOverride": undefined,
              "schema": "parts-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "parts-list",
          "path": "/parts.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters for parts created by any of these users.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The maximum number of parts to return. The default is '50'.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Filters for parts of the provided name(s).",
              "name": "name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for parts owned by any of these users.",
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for parts of the provided type(s).",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartsListRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "part-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsListResponse",
              "nameOverride": undefined,
              "schema": "parts-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "PartsUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "parts-update",
          "path": "/parts.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsUpdateRequest",
              "nameOverride": undefined,
              "schema": "parts-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartsUpdateResponse",
              "nameOverride": undefined,
              "schema": "parts-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "parts",
          ],
        },
        {
          "authed": true,
          "description": "Creates a Rev organization in the authenticated user's Dev
organization.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "rev-orgs-create",
          "path": "/rev-orgs.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsCreateRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsCreateResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Deletes the Rev organization.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "rev-orgs-delete",
          "path": "/rev-orgs.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsDeleteRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsDeleteResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Retrieves the Rev organization's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "rev-orgs-get",
          "path": "/rev-orgs.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the required Rev organization.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsGetResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "rev-orgs-list",
          "path": "/rev-orgs.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters by creator.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for objects created after the provided timestamp (inclusive).
",
              "name": "created_date.after",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for objects created before the provided timestamp
(inclusive).
",
              "name": "created_date.before",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "List of external refs to filter Rev organizations for.",
              "name": "external_ref",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The maximum number of Rev organizations to be retrieved per page.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Filters for objects created after the provided timestamp (inclusive).
",
              "name": "modified_date.after",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for objects created before the provided timestamp
(inclusive).
",
              "name": "modified_date.before",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Fields to sort the Rev organizations by and the direction to sort
them.
",
              "name": "sort_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsListResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Updates the Rev organization's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "RevOrgsUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "rev-orgs-update",
          "path": "/rev-orgs.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsUpdateRequest",
              "nameOverride": undefined,
              "schema": "rev-orgs-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "RevOrgsUpdateResponse",
              "nameOverride": undefined,
              "schema": "rev-orgs-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "rev-orgs",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new tag, which is used to create associations between objects
and a logical concept denoted by the tag's name.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "tags-create",
          "path": "/tags.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsCreateRequest",
              "nameOverride": undefined,
              "schema": "tags-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsCreateResponse",
              "nameOverride": undefined,
              "schema": "tags-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a tag.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "tags-delete",
          "path": "/tags.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsDeleteRequest",
              "nameOverride": undefined,
              "schema": "tags-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsDeleteResponse",
              "nameOverride": undefined,
              "schema": "tags-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Gets a tag's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "tags-get",
          "path": "/tags.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The requested tag's ID.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsGetResponse",
              "nameOverride": undefined,
              "schema": "tags-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Lists the available tags.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "tags-list",
          "path": "/tags.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The maximum number of tags to return. The default is '50'.",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsListResponse",
              "nameOverride": undefined,
              "schema": "tags-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Updates a tag's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TagsUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "tags-update",
          "path": "/tags.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsUpdateRequest",
              "nameOverride": undefined,
              "schema": "tags-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TagsUpdateResponse",
              "nameOverride": undefined,
              "schema": "tags-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "tags",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new entry on an object's timeline.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "timeline-entries-create",
          "path": "/timeline-entries.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesCreateRequest",
              "nameOverride": undefined,
              "schema": "timeline-entries-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesCreateResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Gets an entry on an object's timeline.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "timeline-entries-get",
          "path": "/timeline-entries.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the timeline entry to get.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesGetResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Lists the timeline entries for an object.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "timeline-entries-list",
          "path": "/timeline-entries.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The ID of the object to list timeline entries for.",
              "name": "object",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The maximum number of entries to return. If not set, then this
defaults to \`50\`.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesListResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Updates an entry on an object's timeline.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "TimelineEntriesUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "timeline-entries-update",
          "path": "/timeline-entries.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesUpdateRequest",
              "nameOverride": undefined,
              "schema": "timeline-entries-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntriesUpdateResponse",
              "nameOverride": undefined,
              "schema": "timeline-entries-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "timeline-entries",
          ],
        },
        {
          "authed": true,
          "description": "Creates a new webhook target.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "webhooks-create",
          "path": "/webhooks.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksCreateRequest",
              "nameOverride": undefined,
              "schema": "webhooks-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksCreateResponse",
              "nameOverride": undefined,
              "schema": "webhooks-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Deletes the requested webhook.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "webhooks-delete",
          "path": "/webhooks.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksDeleteRequest",
              "nameOverride": undefined,
              "schema": "webhooks-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksDeleteResponse",
              "nameOverride": undefined,
              "schema": "webhooks-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Gets the requested webhook's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "webhooks-get",
          "path": "/webhooks.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "ID for the webhook.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksGetResponse",
              "nameOverride": undefined,
              "schema": "webhooks-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Lists the webhooks.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "webhooks-list",
          "path": "/webhooks.list",
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksListResponse",
              "nameOverride": undefined,
              "schema": "webhooks-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Updates the requested webhook.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WebhooksUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "webhooks-update",
          "path": "/webhooks.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksUpdateRequest",
              "nameOverride": undefined,
              "schema": "webhooks-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WebhooksUpdateResponse",
              "nameOverride": undefined,
              "schema": "webhooks-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "webhooks",
          ],
        },
        {
          "authed": true,
          "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),
[ticket](https://devrev.ai/docs/product/support)) item.
",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksCreateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "works-create",
          "path": "/works.create",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksCreateRequest",
              "nameOverride": undefined,
              "schema": "works-create-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksCreateResponse",
              "nameOverride": undefined,
              "schema": "works-create-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Deletes a work item.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksDeleteRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "works-delete",
          "path": "/works.delete",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksDeleteRequest",
              "nameOverride": undefined,
              "schema": "works-delete-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksDeleteResponse",
              "nameOverride": undefined,
              "schema": "works-delete-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Exports a collection of work items.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksExportRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "works-export",
          "path": "/works.export",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters for work belonging to any of the provided parts.",
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for work created by any of these users.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The number of work items to return. The default is '50', the maximum
is '5000'.
",
              "name": "first",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided priorities.",
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestIssuePriorityItem",
                    "nameOverride": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided Rev organizations.
",
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for work owned by any of these users.",
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for records in the provided stage(s).",
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets with any of the provided severities.",
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestTicketSeverityItem",
                    "nameOverride": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for work of the provided types.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksExportRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksExportResponse",
              "nameOverride": undefined,
              "schema": "works-export-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Gets a work item's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksGetRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "works-get",
          "path": "/works.get",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "The work's ID.",
              "name": "id",
              "schema": {
                "description": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksGetResponse",
              "nameOverride": undefined,
              "schema": "works-get-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Lists a collection of work items.",
          "errorStatusCode": [
            400,
            401,
            403,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksListRequest",
          "headers": [],
          "internal": undefined,
          "method": "GET",
          "operationId": "works-list",
          "path": "/works.list",
          "pathParameters": [],
          "queryParameters": [
            {
              "description": "Filters for work belonging to any of the provided parts.",
              "name": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for work created by any of these users.",
              "name": "created_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
              "name": "cursor",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided priorities.",
              "name": "issue.priority",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestIssuePriorityItem",
                    "nameOverride": undefined,
                    "schema": "issue-priority",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for issues with any of the provided Rev organizations.
",
              "name": "issue.rev_orgs",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "The maximum number of works to return. The default is '50'.
",
              "name": "limit",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
              "name": "mode",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksListRequestMode",
                  "nameOverride": undefined,
                  "schema": "list-mode",
                  "type": "reference",
                },
              },
            },
            {
              "description": "Filters for work owned by any of these users.",
              "name": "owned_by",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for records in the provided stage(s).",
              "name": "stage.name",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
              "name": "ticket.rev_org",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "description": "Filters for tickets with any of the provided severities.",
              "name": "ticket.severity",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestTicketSeverityItem",
                    "nameOverride": undefined,
                    "schema": "ticket-severity",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "description": "Filters for work of the provided types.",
              "name": "type",
              "schema": {
                "description": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksListRequestTypeItem",
                    "nameOverride": undefined,
                    "schema": "work-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "request": undefined,
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksListResponse",
              "nameOverride": undefined,
              "schema": "works-list-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
        {
          "authed": true,
          "description": "Updates a work item's information.",
          "errorStatusCode": [
            400,
            401,
            403,
            404,
            429,
            500,
            503,
          ],
          "generatedRequestName": "WorksUpdateRequest",
          "headers": [],
          "internal": undefined,
          "method": "POST",
          "operationId": "works-update",
          "path": "/works.update",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "description": undefined,
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksUpdateRequest",
              "nameOverride": undefined,
              "schema": "works-update-request",
              "type": "reference",
            },
            "type": "json",
          },
          "requestNameOverride": undefined,
          "response": {
            "description": "Success.",
            "schema": {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorksUpdateResponse",
              "nameOverride": undefined,
              "schema": "works-update-response",
              "type": "reference",
            },
            "type": "json",
          },
          "responseIsStreaming": false,
          "sdkName": undefined,
          "server": [],
          "summary": undefined,
          "tags": [
            "works",
          ],
        },
      ],
      "errors": {
        "400": {
          "description": undefined,
          "generatedName": "BadRequestError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "BadRequestErrorBody",
            "nameOverride": undefined,
            "schema": "error-bad-request",
            "type": "reference",
          },
        },
        "401": {
          "description": undefined,
          "generatedName": "UnauthorizedError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "UnauthorizedErrorBody",
            "nameOverride": undefined,
            "schema": "error-unauthorized",
            "type": "reference",
          },
        },
        "403": {
          "description": undefined,
          "generatedName": "ForbiddenError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ForbiddenErrorBody",
            "nameOverride": undefined,
            "schema": "error-forbidden",
            "type": "reference",
          },
        },
        "404": {
          "description": undefined,
          "generatedName": "NotFoundError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "NotFoundErrorBody",
            "nameOverride": undefined,
            "schema": "error-not-found",
            "type": "reference",
          },
        },
        "429": {
          "description": undefined,
          "generatedName": "TooManyRequestsError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "TooManyRequestsErrorBody",
            "nameOverride": undefined,
            "schema": "error-too-many-requests",
            "type": "reference",
          },
        },
        "500": {
          "description": undefined,
          "generatedName": "InternalServerError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "InternalServerErrorBody",
            "nameOverride": undefined,
            "schema": "error-internal-server-error",
            "type": "reference",
          },
        },
        "503": {
          "description": undefined,
          "generatedName": "ServiceUnavailableError",
          "nameOverride": null,
          "schema": {
            "description": undefined,
            "file": undefined,
            "generatedName": "ServiceUnavailableErrorBody",
            "nameOverride": undefined,
            "schema": "error-service-unavailable",
            "type": "reference",
          },
        },
      },
      "hasEndpointsMarkedInternal": false,
      "nonRequestReferencedSchemas": [
        "artifacts-locate-response",
        "artifacts-prepare-response",
        "auth-tokens-create-response",
        "auth-tokens-get-response",
        "auth-token-requested-token-type",
        "auth-tokens-list-response",
        "auth-tokens-update-response",
        "dev-org-auth-connections-create-response",
        "dev-org-auth-connections-get-response",
        "dev-org-auth-connections-list-response",
        "dev-org-auth-connections-update-response",
        "list-mode",
        "user-state",
        "dev-users-list-response",
        "dev-users-self-response",
        "parts-create-response",
        "parts-delete-response",
        "parts-get-response",
        "part-type",
        "parts-list-response",
        "parts-update-response",
        "rev-orgs-create-response",
        "rev-orgs-delete-response",
        "rev-orgs-get-response",
        "rev-orgs-list-response",
        "rev-orgs-update-response",
        "tags-create-response",
        "tags-delete-response",
        "tags-get-response",
        "tags-list-response",
        "tags-update-response",
        "timeline-entries-create-response",
        "timeline-entries-get-response",
        "timeline-entries-list-response",
        "timeline-entries-update-response",
        "webhooks-create-response",
        "webhooks-delete-response",
        "webhooks-get-response",
        "webhooks-list-response",
        "webhooks-update-response",
        "works-create-response",
        "works-delete-response",
        "issue-priority",
        "ticket-severity",
        "work-type",
        "works-export-response",
        "works-get-response",
        "works-list-response",
        "works-update-response",
        "atom-base-summary",
        "artifacts-prepare-response-form-data",
        "user-summary",
        "atom-base",
        "auth-token-status",
        "auth-token-grant-type",
        "auth-tokens-rev-info",
        "auth-token-subject-token-type",
        "auth-token-token-type",
        "auth-token",
        "auth-tokens-org-traits",
        "auth-tokens-user-traits",
        "part-base",
        "part-base-summary",
        "auth-connection",
        "auth-connection-toggle",
        "artifact-summary",
        "user-base",
        "external-identity",
        "user-base-summary",
        "dev-user",
        "tag-with-value",
        "error-base",
        "error-bad-request-type",
        "error-forbidden-type",
        "error-internal-server-error-type",
        "error-not-found-type",
        "error-service-unavailable-type",
        "error-too-many-requests-type",
        "error-unauthorized-type",
        "part",
        "rev-org",
        "tag",
        "timeline-entry",
        "webhook",
        "work",
        "part-summary",
        "stage",
        "work-base",
        "parts-update-request-owned-by",
        "org-base",
        "org-base-summary",
        "org-environment",
        "org-summary",
        "tag-summary",
        "tags-update-allowed-values",
        "group-summary",
        "timeline-entry-base",
        "timeline-comment-body-type",
        "timeline-entry-visibility",
        "timeline-entries-update-request-timeline-comment-artifacts",
        "webhook-event-type",
        "webhook-status",
        "event-part-created",
        "event-part-deleted",
        "event-part-updated",
        "event-rev-org-created",
        "event-rev-org-deleted",
        "event-rev-org-updated",
        "event-tag-created",
        "event-tag-deleted",
        "event-tag-updated",
        "event-timeline-entry-created",
        "event-timeline-entry-deleted",
        "event-timeline-entry-updated",
        "webhook-event-verify",
        "event-webhook-created",
        "event-webhook-deleted",
        "event-webhook-updated",
        "event-work-created",
        "event-work-deleted",
        "event-work-updated",
        "webhooks-update-action",
        "webhooks-update-request-event-types",
        "stage-init",
        "set-tag-with-value",
        "works-update-request-artifact-ids",
        "works-update-request-owned-by",
        "works-update-request-reported-by",
        "stage-update",
        "works-update-request-tags",
        "error-bad-request",
        "error-unauthorized",
        "error-forbidden",
        "error-not-found",
        "error-too-many-requests",
        "error-internal-server-error",
        "error-service-unavailable",
      ],
      "schemas": {
        "artifact-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "ArtifactSummary",
          "nameOverride": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "artifacts-locate-response": {
          "allOf": [],
          "description": "The response to getting an artifact's download URL.",
          "generatedName": "ArtifactsLocateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "artifactsLocateResponseExpiresAt",
              "key": "expires_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expiration timestamp of the URL.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "artifactsLocateResponseUrl",
              "key": "url",
              "schema": {
                "description": "The artifact's download URL.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-request": {
          "allOf": [],
          "description": "The request to prepare a URL to upload a file.",
          "generatedName": "ArtifactsPrepareRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "artifactsPrepareRequestFileName",
              "key": "file_name",
              "schema": {
                "description": "The name of the file that's being uploaded.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response": {
          "allOf": [],
          "description": "The response to preparing a URL to upload a file.",
          "generatedName": "ArtifactsPrepareResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "artifactsPrepareResponseFormData",
              "key": "form_data",
              "schema": {
                "description": "The POST policy form data.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "ArtifactsPrepareResponseFormDataItem",
                  "nameOverride": undefined,
                  "schema": "artifacts-prepare-response-form-data",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "artifactsPrepareResponseId",
              "key": "id",
              "schema": {
                "description": "The generated artifact's ID.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "artifactsPrepareResponseUrl",
              "key": "url",
              "schema": {
                "description": "The URL that the file's data should be uploaded to.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "artifacts-prepare-response-form-data": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ArtifactsPrepareResponseFormData",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "artifactsPrepareResponseFormDataKey",
              "key": "key",
              "schema": {
                "description": "Key of the form field.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "artifactsPrepareResponseFormDataValue",
              "key": "value",
              "schema": {
                "description": "Value corresponding to the key.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "atom-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "atomBaseCreatedBy",
              "key": "created_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AtomBaseCreatedBy",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "atomBaseCreatedDate",
              "key": "created_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the object was created.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "atomBaseDisplayId",
              "key": "display_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Human-readable object ID unique to the Dev organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "atomBaseId",
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "atomBaseModifiedBy",
              "key": "modified_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AtomBaseModifiedBy",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "atomBaseModifiedDate",
              "key": "modified_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the object was last modified.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "atom-base-summary": {
          "allOf": [],
          "description": undefined,
          "generatedName": "AtomBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "atomBaseSummaryDisplayId",
              "key": "display_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Human-readable object ID unique to the Dev organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "atomBaseSummaryId",
              "key": "id",
              "schema": {
                "description": "Globally unique object ID.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-connection": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "nullable",
                  "value": {
                    "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "enabled",
                "schema": {
                  "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                  "type": "nullable",
                  "value": {
                    "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                    "schema": {
                      "type": "boolean",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": "Connection object that specifies the configuration for an
authentication connection that is set up for a Dev organization.
",
            "discriminantProperty": "type",
            "generatedName": "AuthConnection",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "social": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSocial",
                "nameOverride": undefined,
                "schema": "auth-connection-options-social",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "auth-connection-options-azure-ad": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an Azure AD
authentication connection.
",
          "generatedName": "AuthConnectionOptionsAzureAd",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsAzureAdClientId",
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client ID for the Azure authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsAzureAdClientSecret",
              "key": "client_secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client secret for the Azure authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsAzureAdDomain",
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Domain URL of the Azure authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-google-apps": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a Google Apps
authentication connection.
",
          "generatedName": "AuthConnectionOptionsGoogleApps",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsGoogleAppsClientId",
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client ID for the Google Apps authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsGoogleAppsClientSecret",
              "key": "client_secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client secret for the Google Apps authentication connection.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsGoogleAppsTenantDomain",
              "key": "tenant_domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tenant domain URL of the Google Apps authentication connection.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-oidc": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for an OIDC
authentication connection.
",
          "generatedName": "AuthConnectionOptionsOidc",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsOidcClientId",
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client ID for the OIDC authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsOidcClientSecret",
              "key": "client_secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Client secret for the OIDC authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsOidcIssuer",
              "key": "issuer",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Issuer URL of the OIDC authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-saml": {
          "allOf": [],
          "description": "Object encapsulating the configuration parameters for a SAML
authentication connection.
",
          "generatedName": "AuthConnectionOptionsSaml",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsSamlSignInEndpoint",
              "key": "sign_in_endpoint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sign In endpoint for the SAML authentication connection.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authConnectionOptionsSamlSigningCert",
              "key": "signing_cert",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Signing certificate for the SAML authentication connection.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-connection-options-social": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "auth-connection-toggle": {
          "description": undefined,
          "generatedName": "AuthConnectionToggle",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "disable",
              "nameOverride": undefined,
              "value": "disable",
            },
            {
              "description": undefined,
              "generatedName": "enable",
              "nameOverride": undefined,
              "value": "enable",
            },
          ],
        },
        "auth-connection-type": {
          "description": "Defines the type for the authentication connection. The configuration
for each authentication connection will depend on the type value.
",
          "generatedName": "AuthConnectionType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "description": undefined,
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "description": undefined,
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "description": undefined,
              "generatedName": "social",
              "nameOverride": undefined,
              "value": "social",
            },
            {
              "description": undefined,
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "auth-token": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "AuthToken",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokenClientId",
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier that represents the application that requested the
token. Only applicable for application access tokens.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokenExpiresAt",
              "key": "expires_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The time at which the token expires.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokenIssuedAt",
              "key": "issued_at",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The time at which the token was issued.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokenRequestedTokenType",
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokenRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokenScopes",
              "key": "scopes",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The scopes associated with the issued token.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokenStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokenStatus",
                  "nameOverride": undefined,
                  "schema": "auth-token-status",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokenSubject",
              "key": "subject",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The subject of the token.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokenTokenHint",
              "key": "token_hint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A hint that identifies the token.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-token-grant-type": {
          "description": "Specifies the process of obtaining a token.",
          "generatedName": "AuthTokenGrantType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthGrantTypeTokenIssue",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:grant-type:token-issue",
            },
            {
              "description": undefined,
              "generatedName": "UrnIetfParamsOauthGrantTypeTokenExchange",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:grant-type:token-exchange",
            },
          ],
        },
        "auth-token-requested-token-type": {
          "description": "The type of the requested token.",
          "generatedName": "AuthTokenRequestedTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeAat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeAatPublic",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:aat:public",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:dev",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypePat",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:pat",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeRev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:rev",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeSessionDev0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:session:dev0",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeSys",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sys",
            },
            {
              "description": undefined,
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-status": {
          "description": "The status of the token.",
          "generatedName": "AuthTokenStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "description": undefined,
              "generatedName": "expired",
              "nameOverride": undefined,
              "value": "expired",
            },
            {
              "description": undefined,
              "generatedName": "revoked",
              "nameOverride": undefined,
              "value": "revoked",
            },
          ],
        },
        "auth-token-subject-token-type": {
          "description": "The type of the subject token.",
          "generatedName": "AuthTokenSubjectTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtAuth0",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeJwtDev",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:jwt:dev",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeRevinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:revinfo",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeSysu",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:sysu",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfo",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo",
            },
            {
              "description": undefined,
              "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfoProfile",
              "nameOverride": undefined,
              "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
            },
            {
              "description": undefined,
              "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
              "nameOverride": undefined,
              "value": "urn:ietf:params:oauth:token-type:jwt",
            },
          ],
        },
        "auth-token-token-type": {
          "description": "The type of the issued token. Bearer is the only supported token type.
",
          "generatedName": "AuthTokenTokenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "bearer",
              "nameOverride": undefined,
              "value": "bearer",
            },
          ],
        },
        "auth-tokens-create-request": {
          "allOf": [],
          "description": "A request to create a new token corresponding to the requested token
type.
",
          "generatedName": "AuthTokensCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestAud",
              "key": "aud",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expected audience values with respect to the token.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestClientId",
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier that represents the application which is requesting
the token. If no client_id is present in the request to generate an
application access token (AAT), DevRev will generate a client_id.
This client_id is only associated with an AAT.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestExpiresIn",
              "key": "expires_in",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The expected validity lifetime of the token in number of days.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestGrantType",
              "key": "grant_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestGrantType",
                  "nameOverride": undefined,
                  "schema": "auth-token-grant-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestRequestedTokenType",
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestRevInfo",
              "key": "rev_info",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestRevInfo",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-rev-info",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestScope",
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The requested set of scopes associated with the issued token. A
space-delimited list of values in which the order of values does
not matter.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestSubjectToken",
              "key": "subject_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Represents the entity that requests the token. Not required when
requesting an application access token (AAT).
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestSubjectTokenType",
              "key": "subject_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensCreateRequestSubjectTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-subject-token-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateRequestTokenHint",
              "key": "token_hint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A hint that identifies the token.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new token corresponding to the
requested token type.
",
          "generatedName": "AuthTokensCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensCreateResponseAccessToken",
              "key": "access_token",
              "schema": {
                "description": "The issued JSON Web Token (JWT) corresponding to the requested
token type.
",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateResponseClientId",
              "key": "client_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier that represents the application which is requesting
the token. Only present in a response corresponding to an
application access token (AAT).
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateResponseExpiresIn",
              "key": "expires_in",
              "schema": {
                "description": "The validity lifetime of the token specified in seconds since Unix
epoch.
",
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateResponseRefreshToken",
              "key": "refresh_token",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A token to refresh the issued token.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateResponseScope",
              "key": "scope",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The scopes associated with the issued token. A space-delimited list
of values in which the order of values does not matter.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensCreateResponseTokenType",
              "key": "token_type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensCreateResponseTokenType",
                "nameOverride": undefined,
                "schema": "auth-token-token-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-delete-request": {
          "allOf": [],
          "description": "The request to revoke the token.",
          "generatedName": "AuthTokensDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensDeleteRequestTokenId",
              "key": "token_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique identifier for the token under a given Dev organization.
If no token ID is provided, then the token ID will be set from the
JTI claim of the token in the authorization header.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-get-response": {
          "allOf": [],
          "description": "The response to get the token metadata.",
          "generatedName": "AuthTokensGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensGetResponseToken",
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensGetResponseToken",
                "nameOverride": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-list-response": {
          "allOf": [],
          "description": "The response to list the token metadata.",
          "generatedName": "AuthTokensListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensListResponseTokens",
              "key": "tokens",
              "schema": {
                "description": "The list of token metadata.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensListResponseTokensItem",
                  "nameOverride": undefined,
                  "schema": "auth-token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-org-traits": {
          "allOf": [],
          "description": "Carries Rev org info.",
          "generatedName": "AuthTokensOrgTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensOrgTraitsDisplayName",
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The display name of the Rev org.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensOrgTraitsDomain",
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The domain of the Rev org.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-rev-info": {
          "allOf": [],
          "description": "Carries info corresponding to the Rev user to be provisioned and/or
issue a Rev session token.
",
          "generatedName": "AuthTokensRevInfo",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensRevInfoOrgRef",
              "key": "org_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An identifier which uniquely identifies a Rev org.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensRevInfoOrgTraits",
              "key": "org_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensRevInfoOrgTraits",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-org-traits",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensRevInfoRevUserId",
              "key": "rev_user_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The unique ID of the Rev user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensRevInfoUserRef",
              "key": "user_ref",
              "schema": {
                "description": "An identifier which uniquely identifies a Rev user.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensRevInfoUserTraits",
              "key": "user_traits",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensRevInfoUserTraits",
                  "nameOverride": undefined,
                  "schema": "auth-tokens-user-traits",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-self-delete-request": {
          "allOf": [],
          "description": "The request to delete all the tokens created by the authenticated user,
that match with the provided token type.
",
          "generatedName": "AuthTokensSelfDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensSelfDeleteRequestRequestedTokenType",
              "key": "requested_token_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "AuthTokensSelfDeleteRequestRequestedTokenType",
                  "nameOverride": undefined,
                  "schema": "auth-token-requested-token-type",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-request": {
          "allOf": [],
          "description": "A request to update the token metadata.",
          "generatedName": "AuthTokensUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensUpdateRequestTokenHint",
              "key": "token_hint",
              "schema": {
                "description": "A hint that identifies the token.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensUpdateRequestTokenId",
              "key": "token_id",
              "schema": {
                "description": "The unique identifier of the token under a given Dev organization.
",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-update-response": {
          "allOf": [],
          "description": "Response for the request to update the token metadata.",
          "generatedName": "AuthTokensUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensUpdateResponseToken",
              "key": "token",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "AuthTokensUpdateResponseToken",
                "nameOverride": undefined,
                "schema": "auth-token",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "auth-tokens-user-traits": {
          "allOf": [],
          "description": "Carries Rev user info.",
          "generatedName": "AuthTokensUserTraits",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "authTokensUserTraitsDisplayName",
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The display name of the Rev user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensUserTraitsEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The email address of the Rev user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "authTokensUserTraitsFullName",
              "key": "full_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The full name of the Rev user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "capability": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Capability",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "capability-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "CapabilitySummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "dev-org-auth-connections-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "nullable",
                  "value": {
                    "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "description": "Request to create a new enterprise authentication connection.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-create-request-type": {
          "description": "Defines the type for the authentication connection. Different types of
authentication connections have different configuration parameters.
",
          "generatedName": "DevOrgAuthConnectionsCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "description": undefined,
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "description": undefined,
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "description": undefined,
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-create-response": {
          "allOf": [],
          "description": "Response for the request to create a new enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devOrgAuthConnectionsCreateResponseAuthConnection",
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsCreateResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-delete-request": {
          "allOf": [],
          "description": "Request to delete an enterprise authentication connection for a Dev
organization. A default connection and a connection which is currently
enabled cannot be deleted.
",
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devOrgAuthConnectionsDeleteRequestId",
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be deleted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-get-response": {
          "allOf": [],
          "description": "Response object encapsulating the configuration details of an
authentication connection.
",
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devOrgAuthConnectionsGetResponseAuthConnection",
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsGetResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-list-response": {
          "allOf": [],
          "description": "Response object for the request to list all the social and enterprise
authentication connections configured for a Dev organization.
",
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devOrgAuthConnectionsListResponseAuthConnections",
              "key": "auth_connections",
              "schema": {
                "description": "List of all the authentication connections currently configured for
a Dev organization.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsListResponseAuthConnectionsItem",
                  "nameOverride": undefined,
                  "schema": "auth-connection",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-toggle-request": {
          "allOf": [],
          "description": "Request to enable or disable an authentication connection for a Dev
organization.
",
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devOrgAuthConnectionsToggleRequestId",
              "key": "id",
              "schema": {
                "description": "ID of the authentication connection to be toggled.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "devOrgAuthConnectionsToggleRequestToggle",
              "key": "toggle",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevOrgAuthConnectionsToggleRequestToggle",
                  "nameOverride": undefined,
                  "schema": "auth-connection-toggle",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-org-auth-connections-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "display_name",
                "schema": {
                  "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                  "type": "nullable",
                  "value": {
                    "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "ID of the authentication connection which is to be updated.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": "Request to update an enterprise authentication connection for a Dev
organization.
",
            "discriminantProperty": "type",
            "generatedName": "DevOrgAuthConnectionsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "google_apps": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
                "nameOverride": undefined,
                "schema": "auth-connection-options-google-apps",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "oidc": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
                "nameOverride": undefined,
                "schema": "auth-connection-options-oidc",
                "type": "reference",
              },
              "samlp": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
                "nameOverride": undefined,
                "schema": "auth-connection-options-saml",
                "type": "reference",
              },
              "waad": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
                "nameOverride": undefined,
                "schema": "auth-connection-options-azure-ad",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "dev-org-auth-connections-update-request-type": {
          "description": "Specifies the type for the authentication connection. Different types
of authentication connections have different configuration parameters
that can be updated.
",
          "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "google_apps",
              "nameOverride": undefined,
              "value": "google_apps",
            },
            {
              "description": undefined,
              "generatedName": "none",
              "nameOverride": undefined,
              "value": "none",
            },
            {
              "description": undefined,
              "generatedName": "oidc",
              "nameOverride": undefined,
              "value": "oidc",
            },
            {
              "description": undefined,
              "generatedName": "samlp",
              "nameOverride": undefined,
              "value": "samlp",
            },
            {
              "description": undefined,
              "generatedName": "waad",
              "nameOverride": undefined,
              "value": "waad",
            },
          ],
        },
        "dev-org-auth-connections-update-response": {
          "allOf": [],
          "description": "Response for the request to update an enterprise authentication
connection.
",
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devOrgAuthConnectionsUpdateResponseAuthConnection",
              "key": "auth_connection",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevOrgAuthConnectionsUpdateResponseAuthConnection",
                "nameOverride": undefined,
                "schema": "auth-connection",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "dev-user": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserBase",
              "nameOverride": undefined,
              "schema": "user-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "DevUser",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devUserExternalIdentities",
              "key": "external_identities",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "IDs of the Dev User outside the DevRev SOR.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "DevUserExternalIdentitiesItem",
                    "nameOverride": undefined,
                    "schema": "external-identity",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-user-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "DevUserSummary",
          "nameOverride": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "dev-users-list-response": {
          "allOf": [],
          "description": "The response to listing the Dev users.",
          "generatedName": "DevUsersListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devUsersListResponseDevUsers",
              "key": "dev_users",
              "schema": {
                "description": "The list of Dev users.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "DevUsersListResponseDevUsersItem",
                  "nameOverride": undefined,
                  "schema": "dev-user",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "devUsersListResponseNextCursor",
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "devUsersListResponsePrevCursor",
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "dev-users-self-response": {
          "allOf": [],
          "description": "The response to getting the information for the authenticated user.
",
          "generatedName": "DevUsersSelfResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "devUsersSelfResponseDevUser",
              "key": "dev_user",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "DevUsersSelfResponseDevUser",
                "nameOverride": undefined,
                "schema": "dev-user",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "empty": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "enhancement": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "PartBase",
              "nameOverride": undefined,
              "schema": "part-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Enhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "enhancementTargetCloseDate",
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the enhancement is expected to be closed.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "enhancement-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "EnhancementSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "error-bad-request": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorBadRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorBadRequestType",
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorBadRequestType",
                "nameOverride": undefined,
                "schema": "error-bad-request-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-bad-request": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-invalid-enum-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestInvalidEnumValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorBadRequestInvalidEnumValueAllowedValues",
              "key": "allowed_values",
              "schema": {
                "description": "The allowed values for the field.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "errorBadRequestInvalidEnumValueFieldName",
              "key": "field_name",
              "schema": {
                "description": "The field whose enum value is invalid.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "errorBadRequestInvalidEnumValueValue",
              "key": "value",
              "schema": {
                "description": "The value that was received.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-missing-required-field": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestMissingRequiredField",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorBadRequestMissingRequiredFieldFieldName",
              "key": "field_name",
              "schema": {
                "description": "The missing field's name.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "error-bad-request-parse-error": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-bad-request-type": {
          "description": undefined,
          "generatedName": "ErrorBadRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "bad_request",
              "nameOverride": undefined,
              "value": "bad_request",
            },
            {
              "description": undefined,
              "generatedName": "invalid_enum_value",
              "nameOverride": undefined,
              "value": "invalid_enum_value",
            },
            {
              "description": undefined,
              "generatedName": "missing_required_field",
              "nameOverride": undefined,
              "value": "missing_required_field",
            },
            {
              "description": undefined,
              "generatedName": "parse_error",
              "nameOverride": undefined,
              "value": "parse_error",
            },
            {
              "description": undefined,
              "generatedName": "value_not_permitted",
              "nameOverride": undefined,
              "value": "value_not_permitted",
            },
          ],
        },
        "error-bad-request-value-not-permitted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBadRequestValueNotPermitted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorBadRequestValueNotPermittedFieldName",
              "key": "field_name",
              "schema": {
                "description": "The field whose value is not permitted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "errorBadRequestValueNotPermittedReason",
              "key": "reason",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The reason the value isn't permitted.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-base": {
          "allOf": [],
          "description": undefined,
          "generatedName": "ErrorBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorBaseMessage",
              "key": "message",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The message associated with the error.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorForbidden",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorForbiddenType",
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorForbiddenType",
                "nameOverride": undefined,
                "schema": "error-forbidden-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-forbidden-forbidden": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-forbidden-type": {
          "description": undefined,
          "generatedName": "ErrorForbiddenType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "forbidden",
              "nameOverride": undefined,
              "value": "forbidden",
            },
          ],
        },
        "error-internal-server-error": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorInternalServerError",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorInternalServerErrorReferenceId",
              "key": "reference_id",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "A unique ID that's generated for the error that can be used for
inquiry.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "errorInternalServerErrorType",
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorInternalServerErrorType",
                "nameOverride": undefined,
                "schema": "error-internal-server-error-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-internal-server-error-internal-error": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-internal-server-error-type": {
          "description": undefined,
          "generatedName": "ErrorInternalServerErrorType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "internal_error",
              "nameOverride": undefined,
              "value": "internal_error",
            },
          ],
        },
        "error-not-found": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorNotFound",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorNotFoundType",
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorNotFoundType",
                "nameOverride": undefined,
                "schema": "error-not-found-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-not-found-not-found": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-not-found-type": {
          "description": undefined,
          "generatedName": "ErrorNotFoundType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "not_found",
              "nameOverride": undefined,
              "value": "not_found",
            },
          ],
        },
        "error-service-unavailable": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorServiceUnavailable",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorServiceUnavailableType",
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorServiceUnavailableType",
                "nameOverride": undefined,
                "schema": "error-service-unavailable-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-service-unavailable-service-unavailable": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-service-unavailable-type": {
          "description": undefined,
          "generatedName": "ErrorServiceUnavailableType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "service_unavailable",
              "nameOverride": undefined,
              "value": "service_unavailable",
            },
          ],
        },
        "error-too-many-requests": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorTooManyRequests",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorTooManyRequestsRetryAfter",
              "key": "retry_after",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The number of seconds after which the client should retry.
",
                  "schema": {
                    "type": "int",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "errorTooManyRequestsType",
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorTooManyRequestsType",
                "nameOverride": undefined,
                "schema": "error-too-many-requests-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-too-many-requests-too-many-requests": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "error-too-many-requests-type": {
          "description": undefined,
          "generatedName": "ErrorTooManyRequestsType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "too_many_requests",
              "nameOverride": undefined,
              "value": "too_many_requests",
            },
          ],
        },
        "error-unauthorized": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "ErrorBase",
              "nameOverride": undefined,
              "schema": "error-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "ErrorUnauthorized",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "errorUnauthorizedType",
              "key": "type",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ErrorUnauthorizedType",
                "nameOverride": undefined,
                "schema": "error-unauthorized-type",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "error-unauthorized-type": {
          "description": undefined,
          "generatedName": "ErrorUnauthorizedType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "unauthenticated",
              "nameOverride": undefined,
              "value": "unauthenticated",
            },
          ],
        },
        "error-unauthorized-unauthenticated": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "event-part-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventPartCreatedPart",
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventPartCreatedPart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-part-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventPartDeletedId",
              "key": "id",
              "schema": {
                "description": "The ID of the part that was deleted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-part-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventPartUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventPartUpdatedPart",
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventPartUpdatedPart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventRevOrgCreatedRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventRevOrgCreatedRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventRevOrgDeletedId",
              "key": "id",
              "schema": {
                "description": "The ID of the Rev organization that was deleted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-rev-org-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventRevOrgUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventRevOrgUpdatedRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventRevOrgUpdatedRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventTagCreatedTag",
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTagCreatedTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventTagDeletedId",
              "key": "id",
              "schema": {
                "description": "The ID of the tag that was deleted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-tag-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTagUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventTagUpdatedTag",
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTagUpdatedTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventTimelineEntryCreatedEntry",
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTimelineEntryCreatedEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventTimelineEntryDeletedId",
              "key": "id",
              "schema": {
                "description": "The ID of the timeline entry that was deleted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-timeline-entry-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventTimelineEntryUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventTimelineEntryUpdatedEntry",
              "key": "entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventTimelineEntryUpdatedEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventWebhookCreatedWebhook",
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWebhookCreatedWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventWebhookDeletedId",
              "key": "id",
              "schema": {
                "description": "The ID of the webhook that was deleted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-webhook-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWebhookUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventWebhookUpdatedWebhook",
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWebhookUpdatedWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-created": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkCreated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventWorkCreatedWork",
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWorkCreatedWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "event-work-deleted": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkDeleted",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventWorkDeletedId",
              "key": "id",
              "schema": {
                "description": "The ID of the work that was deleted.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "event-work-updated": {
          "allOf": [],
          "description": undefined,
          "generatedName": "EventWorkUpdated",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "eventWorkUpdatedWork",
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "EventWorkUpdatedWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "external-identity": {
          "description": "External identity of a user.",
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "feature": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Feature",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "feature-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "FeatureSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "group-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "GroupSummary",
          "nameOverride": undefined,
          "schema": "atom-base-summary",
          "type": "reference",
        },
        "issue": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorkBase",
              "nameOverride": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Issue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "issuePriority",
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "IssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "issue-priority": {
          "description": "Priority of the work based upon impact and criticality.",
          "generatedName": "IssuePriority",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "p0",
              "nameOverride": undefined,
              "value": "p0",
            },
            {
              "description": undefined,
              "generatedName": "p1",
              "nameOverride": undefined,
              "value": "p1",
            },
            {
              "description": undefined,
              "generatedName": "p2",
              "nameOverride": undefined,
              "value": "p2",
            },
            {
              "description": undefined,
              "generatedName": "p3",
              "nameOverride": undefined,
              "value": "p3",
            },
          ],
        },
        "list-mode": {
          "description": "The iteration mode to use. If "after", then entries after the provided
cursor will be returned, or if no cursor is provided, then from the
beginning. If "before", then entries before the provided cursor will be
returned, or if no cursor is provided, then from the end. Entries will
always be returned in the specified sort-by order.
",
          "generatedName": "ListMode",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "after",
              "nameOverride": undefined,
              "value": "after",
            },
            {
              "description": undefined,
              "generatedName": "before",
              "nameOverride": undefined,
              "value": "before",
            },
          ],
        },
        "org-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "orgBaseDisplayName",
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Name of the Organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "OrgBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "orgBaseSummaryDisplayName",
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Name of the Organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "org-environment": {
          "description": "The environment of the Org. Defaults to 'production' if not specified.
",
          "generatedName": "OrgEnvironment",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "production",
              "nameOverride": undefined,
              "value": "production",
            },
            {
              "description": undefined,
              "generatedName": "staging",
              "nameOverride": undefined,
              "value": "staging",
            },
            {
              "description": undefined,
              "generatedName": "test",
              "nameOverride": undefined,
              "value": "test",
            },
          ],
        },
        "org-summary": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "OrgSummary",
            "nameOverride": undefined,
            "schemas": {
              "rev_org": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasRevOrgSummary",
                "nameOverride": undefined,
                "schema": "rev-org-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "org-type": {
          "description": undefined,
          "generatedName": "OrgType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "rev_org",
              "nameOverride": undefined,
              "value": "rev_org",
            },
          ],
        },
        "part": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Part",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCapability",
                "nameOverride": undefined,
                "schema": "capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEnhancement",
                "nameOverride": undefined,
                "schema": "enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFeature",
                "nameOverride": undefined,
                "schema": "feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasProduct",
                "nameOverride": undefined,
                "schema": "product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partBaseArtifacts",
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The attached artifacts.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartBaseArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "partBaseDescription",
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the part.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "partBaseName",
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "partBaseOwnedBy",
              "key": "owned_by",
              "schema": {
                "description": "The users that own the part.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartBaseOwnedByItem",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "partBaseTags",
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tags associated with the object.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartBaseTagsItem",
                    "nameOverride": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "part-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "PartBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partBaseSummaryName",
              "key": "name",
              "schema": {
                "description": "Name of the part.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "part-summary": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartSummary",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasCapabilitySummary",
                "nameOverride": undefined,
                "schema": "capability-summary",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEnhancementSummary",
                "nameOverride": undefined,
                "schema": "enhancement-summary",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasFeatureSummary",
                "nameOverride": undefined,
                "schema": "feature-summary",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasProductSummary",
                "nameOverride": undefined,
                "schema": "product-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "part-type": {
          "description": undefined,
          "generatedName": "PartType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "capability",
              "nameOverride": undefined,
              "value": "capability",
            },
            {
              "description": undefined,
              "generatedName": "enhancement",
              "nameOverride": undefined,
              "value": "enhancement",
            },
            {
              "description": undefined,
              "generatedName": "feature",
              "nameOverride": undefined,
              "value": "feature",
            },
            {
              "description": undefined,
              "generatedName": "product",
              "nameOverride": undefined,
              "value": "product",
            },
          ],
        },
        "parts-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "Description of the part.",
                  "type": "nullable",
                  "value": {
                    "description": "Description of the part.",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "Name of the part.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the part.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestCapability",
                "nameOverride": undefined,
                "schema": "parts-create-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestEnhancement",
                "nameOverride": undefined,
                "schema": "parts-create-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestFeature",
                "nameOverride": undefined,
                "schema": "parts-create-request-feature",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsCreateRequestProduct",
                "nameOverride": undefined,
                "schema": "parts-create-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-create-request-capability": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestCapability",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsCreateRequestCapabilityParentPart",
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent product for the capability.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsCreateRequestEnhancementParentPart",
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent part on which the enhancement is to be created.
",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "partsCreateRequestEnhancementTargetCloseDate",
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Target close date by which enhancement is expected to be closed.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-feature": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateRequestFeature",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsCreateRequestFeatureParentPart",
              "key": "parent_part",
              "schema": {
                "description": "ID of the parent capability/feature for the feature.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-create-request-product": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsCreateResponsePart",
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsCreateResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsDeleteRequestId",
              "key": "id",
              "schema": {
                "description": "The ID of the part to delete.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "parts-delete-response": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsGetResponsePart",
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsGetResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "parts-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsListResponseNextCursor",
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "partsListResponseParts",
              "key": "parts",
              "schema": {
                "description": "The list of parts.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "PartsListResponsePartsItem",
                  "nameOverride": undefined,
                  "schema": "part",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "partsListResponsePrevCursor",
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "description",
                "schema": {
                  "description": "The updated description of the part.",
                  "type": "nullable",
                  "value": {
                    "description": "The updated description of the part.",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the part to update.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "name",
                "schema": {
                  "description": "The updated name of the part.",
                  "type": "nullable",
                  "value": {
                    "description": "The updated name of the part.",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "PartsUpdateRequestOwnedBy",
                    "nameOverride": undefined,
                    "schema": "parts-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "PartsUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "capability": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestCapability",
                "nameOverride": undefined,
                "schema": "parts-update-request-capability",
                "type": "reference",
              },
              "enhancement": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestEnhancement",
                "nameOverride": undefined,
                "schema": "parts-update-request-enhancement",
                "type": "reference",
              },
              "feature": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestFeature",
                "nameOverride": undefined,
                "schema": "parts-update-request-feature",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "product": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasPartsUpdateRequestProduct",
                "nameOverride": undefined,
                "schema": "parts-update-request-product",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "parts-update-request-capability": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-enhancement": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestEnhancement",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsUpdateRequestEnhancementTargetCloseDate",
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Updates the target close date of the enhancement.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-feature": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsUpdateRequestOwnedBySet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "parts-update-request-product": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "parts-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "PartsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "partsUpdateResponsePart",
              "key": "part",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "PartsUpdateResponsePart",
                "nameOverride": undefined,
                "schema": "part",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "product": {
          "description": undefined,
          "file": undefined,
          "generatedName": "Product",
          "nameOverride": undefined,
          "schema": "part-base",
          "type": "reference",
        },
        "product-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "ProductSummary",
          "nameOverride": undefined,
          "schema": "part-base-summary",
          "type": "reference",
        },
        "rev-org": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "OrgBase",
              "nameOverride": undefined,
              "schema": "org-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevOrg",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgDescription",
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the Rev organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgDomain",
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Company's domain name. Example - 'devrev.ai'.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgExternalRef",
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a unique identifier for the Rev (customer)
organization from your primary customer system of records. If none
is specified, a system-generated identifier will be assigned to the
organization.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-org-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "RevOrgSummary",
          "nameOverride": undefined,
          "schema": "org-base-summary",
          "type": "reference",
        },
        "rev-orgs-create-request": {
          "allOf": [],
          "description": "Request object to create a new Rev organization in the Dev
organization.
",
          "generatedName": "RevOrgsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgsCreateRequestDescription",
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the Rev organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsCreateRequestDisplayName",
              "key": "display_name",
              "schema": {
                "description": "Name of the Rev organization.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsCreateRequestDomain",
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Company's domain name. Example - 'devrev.ai'.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsCreateRequestEnvironment",
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsCreateRequestEnvironment",
                  "nameOverride": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsCreateRequestExternalRef",
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsCreateRequestTier",
              "key": "tier",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The tier of the RevOrg.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-create-response": {
          "allOf": [],
          "description": "Response object for request to create a new Rev organization.
",
          "generatedName": "RevOrgsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgsCreateResponseRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsCreateResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-request": {
          "allOf": [],
          "description": "Request object to delete a Rev organization.",
          "generatedName": "RevOrgsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgsDeleteRequestId",
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to delete.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-delete-response": {
          "description": "The response to deleting a Rev organization.",
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "rev-orgs-get-response": {
          "allOf": [],
          "description": "The response to getting a Rev organization's information.",
          "generatedName": "RevOrgsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgsGetResponseRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsGetResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-list-response": {
          "allOf": [],
          "description": "The response to getting a list of Rev organizations' information.
",
          "generatedName": "RevOrgsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgsListResponseNextCursor",
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsListResponsePrevCursor",
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsListResponseRevOrgs",
              "key": "rev_orgs",
              "schema": {
                "description": "List with all of the Rev organizations' information.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsListResponseRevOrgsItem",
                  "nameOverride": undefined,
                  "schema": "rev-org",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-request": {
          "allOf": [],
          "description": "Request object to update information of the Rev organization.
",
          "generatedName": "RevOrgsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateRequestDescription",
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Description of the Rev organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateRequestDisplayName",
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Customer chosen name for the Rev organization.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateRequestDomain",
              "key": "domain",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Company's domain name. Example - 'devrev.ai'.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateRequestEnvironment",
              "key": "environment",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevOrgsUpdateRequestEnvironment",
                  "nameOverride": undefined,
                  "schema": "org-environment",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateRequestExternalRef",
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateRequestId",
              "key": "id",
              "schema": {
                "description": "The ID of Rev organization to update.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateRequestTier",
              "key": "tier",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The tier of the RevOrg.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "rev-orgs-update-response": {
          "allOf": [],
          "description": "Response object to updating Rev organization's information.",
          "generatedName": "RevOrgsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revOrgsUpdateResponseRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "RevOrgsUpdateResponseRevOrg",
                "nameOverride": undefined,
                "schema": "rev-org",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "rev-user-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "UserBaseSummary",
              "nameOverride": undefined,
              "schema": "user-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "RevUserSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "revUserSummaryExternalRef",
              "key": "external_ref",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "revUserSummaryRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "RevUserSummaryRevOrg",
                  "nameOverride": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "set-tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "SetTagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "setTagWithValueId",
              "key": "id",
              "schema": {
                "description": "The ID of the tag.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "setTagWithValueValue",
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage": {
          "allOf": [],
          "description": "Describes the current stage of a work item.",
          "generatedName": "Stage",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "stageName",
              "key": "name",
              "schema": {
                "description": "Current stage name of the work item.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "stage-init": {
          "allOf": [],
          "description": "Sets an object's initial stage.",
          "generatedName": "StageInit",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "stageInitName",
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The name of the stage.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "stage-update": {
          "allOf": [],
          "description": "Updates an object's stage.",
          "generatedName": "StageUpdate",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "stageUpdateName",
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated name of the stage, otherwise unchanged if not set.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "sys-user-summary": {
          "description": undefined,
          "file": undefined,
          "generatedName": "SysUserSummary",
          "nameOverride": undefined,
          "schema": "user-base-summary",
          "type": "reference",
        },
        "tag": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Tag",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagAllowedValues",
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed values for the tag, where a value is provided when a
tag is associated with an object. If empty, then no value should be
provided when the association is made.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagDescription",
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "An informative description for the tag that should provide context
on the tag's purpose and usage.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagName",
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tag-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TagSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagSummaryName",
              "key": "name",
              "schema": {
                "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tag-with-value": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TagWithValue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagWithValueTag",
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagWithValueTag",
                "nameOverride": undefined,
                "schema": "tag-summary",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "tagWithValueValue",
              "key": "value",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The value for the object's association with the tag.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-create-request": {
          "allOf": [],
          "description": "The request to create a new tag.",
          "generatedName": "TagsCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsCreateRequestAllowedValues",
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The allowed values for the tag, or empty if no values are
permitted.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagsCreateRequestDescription",
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The description for the tag.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagsCreateRequestName",
              "key": "name",
              "schema": {
                "description": "The name for the tag, which must be unique across all tags.
",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-create-response": {
          "allOf": [],
          "description": "The response to creating a new tag.",
          "generatedName": "TagsCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsCreateResponseTag",
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsCreateResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-request": {
          "allOf": [],
          "description": "The request to delete a tag.",
          "generatedName": "TagsDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsDeleteRequestId",
              "key": "id",
              "schema": {
                "description": "The ID of the tag to delete.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "tags-delete-response": {
          "description": "The response for deleting a tag.",
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "tags-get-response": {
          "allOf": [],
          "description": "The response to getting a tag's information.",
          "generatedName": "TagsGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsGetResponseTag",
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsGetResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "tags-list-response": {
          "allOf": [],
          "description": "The response to listing the tags.",
          "generatedName": "TagsListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsListResponseNextCursor",
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagsListResponsePrevCursor",
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagsListResponseTags",
              "key": "tags",
              "schema": {
                "description": "The list of tags.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsListResponseTagsItem",
                  "nameOverride": undefined,
                  "schema": "tag",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-allowed-values": {
          "allOf": [],
          "description": "Specifies an update to a tag's allowed values.",
          "generatedName": "TagsUpdateAllowedValues",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsUpdateAllowedValuesSet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the allowed values for the tag.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-request": {
          "allOf": [],
          "description": "The request to update a tag.",
          "generatedName": "TagsUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsUpdateRequestAllowedValues",
              "key": "allowed_values",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TagsUpdateRequestAllowedValues",
                  "nameOverride": undefined,
                  "schema": "tags-update-allowed-values",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagsUpdateRequestDescription",
              "key": "description",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated description of the tag.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "tagsUpdateRequestId",
              "key": "id",
              "schema": {
                "description": "The ID of the tag to update.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "tagsUpdateRequestName",
              "key": "name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated name of the tag. The name must be unique across all
tags.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "tags-update-response": {
          "allOf": [],
          "description": "The response for updating a tag.",
          "generatedName": "TagsUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "tagsUpdateResponseTag",
              "key": "tag",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TagsUpdateResponseTag",
                "nameOverride": undefined,
                "schema": "tag",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "ticket": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "WorkBase",
              "nameOverride": undefined,
              "schema": "work-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Ticket",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "ticketGroup",
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketGroup",
                  "nameOverride": undefined,
                  "schema": "group-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "ticketRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketRevOrg",
                  "nameOverride": undefined,
                  "schema": "org-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "ticketSeverity",
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "ticket-severity": {
          "description": "Severity of the ticket.",
          "generatedName": "TicketSeverity",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "blocker",
              "nameOverride": undefined,
              "value": "blocker",
            },
            {
              "description": undefined,
              "generatedName": "high",
              "nameOverride": undefined,
              "value": "high",
            },
            {
              "description": undefined,
              "generatedName": "low",
              "nameOverride": undefined,
              "value": "low",
            },
            {
              "description": undefined,
              "generatedName": "medium",
              "nameOverride": undefined,
              "value": "medium",
            },
          ],
        },
        "timeline-comment": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "TimelineEntryBase",
              "nameOverride": undefined,
              "schema": "timeline-entry-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "TimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineCommentArtifacts",
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The artifacts for the comment.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TimelineCommentArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineCommentBody",
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The comment's body. If the comment has been deleted, then no body
will appear in the response.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineCommentBodyType",
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineCommentSnapKitBody",
              "key": "snap_kit_body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The SnapKit Body of the comment.",
                  "key": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-comment-body-type": {
          "description": "The type of the body to use for the comment.",
          "generatedName": "TimelineCommentBodyType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "snap_kit",
              "nameOverride": undefined,
              "value": "snap_kit",
            },
            {
              "description": undefined,
              "generatedName": "text",
              "nameOverride": undefined,
              "value": "text",
            },
          ],
        },
        "timeline-entries-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "object",
                "schema": {
                  "description": "The ID of the object to create the timeline entry for.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "visibility",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "TimelineEntriesCreateRequestVisibility",
                    "nameOverride": undefined,
                    "schema": "timeline-entry-visibility",
                    "type": "reference",
                  },
                },
              },
            ],
            "description": "The request to create a timeline entry for an object.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineEntriesCreateRequestTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-entries-create-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-create-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineEntriesCreateRequestTimelineCommentArtifacts",
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The IDs of the artifacts attached to the comment.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesCreateRequestTimelineCommentBody",
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The comment's body.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesCreateRequestTimelineCommentBodyType",
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesCreateRequestTimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapKitBody",
              "key": "snap_kit_body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The SnapKit body of the comment.",
                  "key": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-create-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesCreateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-create-response": {
          "allOf": [],
          "description": "The response to creating a timeline entry for an object.",
          "generatedName": "TimelineEntriesCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineEntriesCreateResponseTimelineEntry",
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesCreateResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-get-response": {
          "allOf": [],
          "description": "The request to getting a timeline entry.",
          "generatedName": "TimelineEntriesGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineEntriesGetResponseTimelineEntry",
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesGetResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-list-response": {
          "allOf": [],
          "description": "The response to listing timeline entries for an object.",
          "generatedName": "TimelineEntriesListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineEntriesListResponseNextCursor",
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesListResponsePrevCursor",
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesListResponseTimelineEntries",
              "key": "timeline_entries",
              "schema": {
                "description": "The timeline entries for the object.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesListResponseTimelineEntriesItem",
                  "nameOverride": undefined,
                  "schema": "timeline-entry",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "id",
                "schema": {
                  "description": "The ID of the timeline entry to update.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": "The request to update a timeline entry.",
            "discriminantProperty": "type",
            "generatedName": "TimelineEntriesUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineEntriesUpdateRequestTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-entries-update-request-timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entries-update-request-timeline-comment": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifacts",
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
                  "nameOverride": undefined,
                  "schema": "timeline-entries-update-request-timeline-comment-artifacts",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentBody",
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated comment's body.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentBodyType",
              "key": "body_type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBodyType",
                  "nameOverride": undefined,
                  "schema": "timeline-comment-body-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentSnapKitBody",
              "key": "snap_kit_body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The SnapKit body of the comment.",
                  "key": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "map",
                  "value": {
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-timeline-comment-artifacts": {
          "allOf": [],
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
              "key": "add",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Adds the provided artifacts to the comment. An artifact cannot be
added more than once, i.e. nothing is done if the artifact is
already attached. Mutually exclusive with \`set\`.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
              "key": "remove",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Removes the provided artifacts from the comment. If an artifact is
not present, then it's ignored. Mututally exclusive with \`set\`.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsSet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the field to the provided artifacts.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "timeline-entries-update-request-type": {
          "description": undefined,
          "generatedName": "TimelineEntriesUpdateRequestType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entries-update-response": {
          "allOf": [],
          "description": "The response to updating a timeline entry.",
          "generatedName": "TimelineEntriesUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "timelineEntriesUpdateResponseTimelineEntry",
              "key": "timeline_entry",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "TimelineEntriesUpdateResponseTimelineEntry",
                "nameOverride": undefined,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "timeline-entry": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "TimelineEntry",
            "nameOverride": undefined,
            "schemas": {
              "timeline_comment": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTimelineComment",
                "nameOverride": undefined,
                "schema": "timeline-comment",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "timeline-entry-base": {
          "description": undefined,
          "file": undefined,
          "generatedName": "TimelineEntryBase",
          "nameOverride": undefined,
          "schema": "atom-base",
          "type": "reference",
        },
        "timeline-entry-type": {
          "description": undefined,
          "generatedName": "TimelineEntryType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "timeline_comment",
              "nameOverride": undefined,
              "value": "timeline_comment",
            },
          ],
        },
        "timeline-entry-visibility": {
          "description": "The visibility of the entry. If 'private', then the entry is only
visible to the creator, otherwise if not set, then the entry has
default visibility.
",
          "generatedName": "TimelineEntryVisibility",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "private",
              "nameOverride": undefined,
              "value": "private",
            },
          ],
        },
        "user-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userBaseDisplayName",
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The user's display name. The name is non-unique and mutable.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseDisplayPicture",
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseDisplayPicture",
                  "nameOverride": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Email address of the user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseFullName",
              "key": "full_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Full name of the user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBasePhoneNumbers",
              "key": "phone_numbers",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Phone numbers of the user.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseState",
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseState",
                  "nameOverride": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-base-summary": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBaseSummary",
              "nameOverride": undefined,
              "schema": "atom-base-summary",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "UserBaseSummary",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "userBaseSummaryDisplayName",
              "key": "display_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The user's display name. The name is non-unique and mutable.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseSummaryDisplayPicture",
              "key": "display_picture",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseSummaryDisplayPicture",
                  "nameOverride": undefined,
                  "schema": "artifact-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseSummaryEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Email address of the user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseSummaryFullName",
              "key": "full_name",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Full name of the user.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "userBaseSummaryState",
              "key": "state",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "UserBaseSummaryState",
                  "nameOverride": undefined,
                  "schema": "user-state",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "user-state": {
          "description": "State of the user.",
          "generatedName": "UserState",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "description": undefined,
              "generatedName": "deactivated",
              "nameOverride": undefined,
              "value": "deactivated",
            },
            {
              "description": undefined,
              "generatedName": "locked",
              "nameOverride": undefined,
              "value": "locked",
            },
            {
              "description": undefined,
              "generatedName": "shadow",
              "nameOverride": undefined,
              "value": "shadow",
            },
            {
              "description": undefined,
              "generatedName": "unassigned",
              "nameOverride": undefined,
              "value": "unassigned",
            },
          ],
        },
        "user-summary": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "UserSummary",
            "nameOverride": undefined,
            "schemas": {
              "dev_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasDevUserSummary",
                "nameOverride": undefined,
                "schema": "dev-user-summary",
                "type": "reference",
              },
              "rev_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasRevUserSummary",
                "nameOverride": undefined,
                "schema": "rev-user-summary",
                "type": "reference",
              },
              "sys_user": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasSysUserSummary",
                "nameOverride": undefined,
                "schema": "sys-user-summary",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "user-type": {
          "description": undefined,
          "generatedName": "UserType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "dev_user",
              "nameOverride": undefined,
              "value": "dev_user",
            },
            {
              "description": undefined,
              "generatedName": "rev_user",
              "nameOverride": undefined,
              "value": "rev_user",
            },
            {
              "description": undefined,
              "generatedName": "sys_user",
              "nameOverride": undefined,
              "value": "sys_user",
            },
          ],
        },
        "webhook": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "Webhook",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhookEventTypes",
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types that the webhook will receive.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhookEventTypesItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookSecret",
              "key": "secret",
              "schema": {
                "description": "The secret to use for verifying webhook events.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhookStatus",
                "nameOverride": undefined,
                "schema": "webhook-status",
                "type": "reference",
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookUrl",
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhookEventRequestId",
              "key": "id",
              "schema": {
                "description": "The event's ID.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestPartCreated",
              "key": "part_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartCreated",
                  "nameOverride": undefined,
                  "schema": "event-part-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestPartDeleted",
              "key": "part_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartDeleted",
                  "nameOverride": undefined,
                  "schema": "event-part-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestPartUpdated",
              "key": "part_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestPartUpdated",
                  "nameOverride": undefined,
                  "schema": "event-part-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestRevOrgCreated",
              "key": "rev_org_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgCreated",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestRevOrgDeleted",
              "key": "rev_org_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgDeleted",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestRevOrgUpdated",
              "key": "rev_org_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestRevOrgUpdated",
                  "nameOverride": undefined,
                  "schema": "event-rev-org-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestTagCreated",
              "key": "tag_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagCreated",
                  "nameOverride": undefined,
                  "schema": "event-tag-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestTagDeleted",
              "key": "tag_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagDeleted",
                  "nameOverride": undefined,
                  "schema": "event-tag-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestTagUpdated",
              "key": "tag_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTagUpdated",
                  "nameOverride": undefined,
                  "schema": "event-tag-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestTimelineEntryCreated",
              "key": "timeline_entry_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryCreated",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestTimelineEntryDeleted",
              "key": "timeline_entry_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryDeleted",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestTimelineEntryUpdated",
              "key": "timeline_entry_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestTimelineEntryUpdated",
                  "nameOverride": undefined,
                  "schema": "event-timeline-entry-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestTimestamp",
              "key": "timestamp",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp of the webhook's invocation for the event. Note this
should be used to protect against replay attacks, where the event
should only be processed if the timestamp isn't stale by several
seconds.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestType",
              "key": "type",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestType",
                  "nameOverride": undefined,
                  "schema": "webhook-event-type",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestVerify",
              "key": "verify",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestVerify",
                  "nameOverride": undefined,
                  "schema": "webhook-event-verify",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestWebhookCreated",
              "key": "webhook_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookCreated",
                  "nameOverride": undefined,
                  "schema": "event-webhook-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestWebhookDeleted",
              "key": "webhook_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookDeleted",
                  "nameOverride": undefined,
                  "schema": "event-webhook-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestWebhookId",
              "key": "webhook_id",
              "schema": {
                "description": "ID of the webhook for the event.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestWebhookUpdated",
              "key": "webhook_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWebhookUpdated",
                  "nameOverride": undefined,
                  "schema": "event-webhook-updated",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestWorkCreated",
              "key": "work_created",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkCreated",
                  "nameOverride": undefined,
                  "schema": "event-work-created",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestWorkDeleted",
              "key": "work_deleted",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkDeleted",
                  "nameOverride": undefined,
                  "schema": "event-work-deleted",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhookEventRequestWorkUpdated",
              "key": "work_updated",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhookEventRequestWorkUpdated",
                  "nameOverride": undefined,
                  "schema": "event-work-updated",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhookEventResponseChallenge",
              "key": "challenge",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The challenge from the "verify" request, otherwise this should not
be set for other request types.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhook-event-type": {
          "description": "The event types that the webhook will receive.",
          "generatedName": "WebhookEventType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "part_created",
              "nameOverride": undefined,
              "value": "part_created",
            },
            {
              "description": undefined,
              "generatedName": "part_deleted",
              "nameOverride": undefined,
              "value": "part_deleted",
            },
            {
              "description": undefined,
              "generatedName": "part_updated",
              "nameOverride": undefined,
              "value": "part_updated",
            },
            {
              "description": undefined,
              "generatedName": "rev_org_created",
              "nameOverride": undefined,
              "value": "rev_org_created",
            },
            {
              "description": undefined,
              "generatedName": "rev_org_deleted",
              "nameOverride": undefined,
              "value": "rev_org_deleted",
            },
            {
              "description": undefined,
              "generatedName": "rev_org_updated",
              "nameOverride": undefined,
              "value": "rev_org_updated",
            },
            {
              "description": undefined,
              "generatedName": "tag_created",
              "nameOverride": undefined,
              "value": "tag_created",
            },
            {
              "description": undefined,
              "generatedName": "tag_deleted",
              "nameOverride": undefined,
              "value": "tag_deleted",
            },
            {
              "description": undefined,
              "generatedName": "tag_updated",
              "nameOverride": undefined,
              "value": "tag_updated",
            },
            {
              "description": undefined,
              "generatedName": "timeline_entry_created",
              "nameOverride": undefined,
              "value": "timeline_entry_created",
            },
            {
              "description": undefined,
              "generatedName": "timeline_entry_deleted",
              "nameOverride": undefined,
              "value": "timeline_entry_deleted",
            },
            {
              "description": undefined,
              "generatedName": "timeline_entry_updated",
              "nameOverride": undefined,
              "value": "timeline_entry_updated",
            },
            {
              "description": undefined,
              "generatedName": "verify",
              "nameOverride": undefined,
              "value": "verify",
            },
            {
              "description": undefined,
              "generatedName": "webhook_created",
              "nameOverride": undefined,
              "value": "webhook_created",
            },
            {
              "description": undefined,
              "generatedName": "webhook_deleted",
              "nameOverride": undefined,
              "value": "webhook_deleted",
            },
            {
              "description": undefined,
              "generatedName": "webhook_updated",
              "nameOverride": undefined,
              "value": "webhook_updated",
            },
            {
              "description": undefined,
              "generatedName": "work_created",
              "nameOverride": undefined,
              "value": "work_created",
            },
            {
              "description": undefined,
              "generatedName": "work_deleted",
              "nameOverride": undefined,
              "value": "work_deleted",
            },
            {
              "description": undefined,
              "generatedName": "work_updated",
              "nameOverride": undefined,
              "value": "work_updated",
            },
          ],
        },
        "webhook-event-verify": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhookEventVerify",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhookEventVerifyChallenge",
              "key": "challenge",
              "schema": {
                "description": "The challenge that must be echoed in the response.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhook-status": {
          "description": "The status of the webhook.",
          "generatedName": "WebhookStatus",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "active",
              "nameOverride": undefined,
              "value": "active",
            },
            {
              "description": undefined,
              "generatedName": "inactive",
              "nameOverride": undefined,
              "value": "inactive",
            },
            {
              "description": undefined,
              "generatedName": "unverified",
              "nameOverride": undefined,
              "value": "unverified",
            },
          ],
        },
        "webhooks-create-request": {
          "allOf": [],
          "description": "The request to create a new webhook.",
          "generatedName": "WebhooksCreateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksCreateRequestEventTypes",
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types that the webhook endpoint will receive.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksCreateRequestEventTypesItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksCreateRequestSecret",
              "key": "secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The secret to use when verifying webhook events. If provided, the
secret must be between 8 and 32 bytes (inclusive). If not set, a
secret will be automatically generated and provided in the
response.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksCreateRequestUrl",
              "key": "url",
              "schema": {
                "description": "The URL of the webhook endpoint.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-create-response": {
          "allOf": [],
          "description": "The response to creating a new webhook.",
          "generatedName": "WebhooksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksCreateResponseWebhook",
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksCreateResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-request": {
          "allOf": [],
          "description": "The request to delete a webhook.",
          "generatedName": "WebhooksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksDeleteRequestId",
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-delete-response": {
          "description": "The response to deleting the webhook.",
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "webhooks-get-response": {
          "allOf": [],
          "description": "The response to getting the information for the webhook.",
          "generatedName": "WebhooksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksGetResponseWebhook",
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksGetResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "webhooks-list-response": {
          "allOf": [],
          "description": "The response to listing the webhooks.",
          "generatedName": "WebhooksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksListResponseWebhooks",
              "key": "webhooks",
              "schema": {
                "description": "The list of webhooks.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksListResponseWebhooksItem",
                  "nameOverride": undefined,
                  "schema": "webhook",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-action": {
          "description": "The action to update the webhook's status.",
          "generatedName": "WebhooksUpdateAction",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "activate",
              "nameOverride": undefined,
              "value": "activate",
            },
            {
              "description": undefined,
              "generatedName": "deactivate",
              "nameOverride": undefined,
              "value": "deactivate",
            },
          ],
        },
        "webhooks-update-request": {
          "allOf": [],
          "description": "The request to update a webhook.",
          "generatedName": "WebhooksUpdateRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestAction",
              "key": "action",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksUpdateRequestAction",
                  "nameOverride": undefined,
                  "schema": "webhooks-update-action",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestEventTypes",
              "key": "event_types",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WebhooksUpdateRequestEventTypes",
                  "nameOverride": undefined,
                  "schema": "webhooks-update-request-event-types",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestId",
              "key": "id",
              "schema": {
                "description": "ID for the webhook.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestSecret",
              "key": "secret",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "If provided, updates the secret that's used when verifying webhook
events, which must be between 8 and 32 bytes (inclusive). Otherwise
if empty, then a new secret is generated. If the webhook is active,
then its status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestUrl",
              "key": "url",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The webhook's updated URL. If the webhook is active, then the
webhook's status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-request-event-types": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WebhooksUpdateRequestEventTypes",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestEventTypesAdd",
              "key": "add",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types to add. If a provided event type is already set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesAddItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestEventTypesRemove",
              "key": "remove",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The event types to remove. If a provided event type isn't set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesRemoveItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "webhooksUpdateRequestEventTypesSet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The updated event types, which will replace the webhook's current
event types. Note this is mutually exclusive with 'add' and
'remove'.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WebhooksUpdateRequestEventTypesSetItem",
                    "nameOverride": undefined,
                    "schema": "webhook-event-type",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "webhooks-update-response": {
          "allOf": [],
          "description": "The response to updating the webhook.",
          "generatedName": "WebhooksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "webhooksUpdateResponseWebhook",
              "key": "webhook",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WebhooksUpdateResponseWebhook",
                "nameOverride": undefined,
                "schema": "webhook",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "work": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "Work",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasIssue",
                "nameOverride": undefined,
                "schema": "issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasTicket",
                "nameOverride": undefined,
                "schema": "ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "work-base": {
          "allOf": [
            {
              "description": undefined,
              "file": undefined,
              "generatedName": "AtomBase",
              "nameOverride": undefined,
              "schema": "atom-base",
              "type": "reference",
            },
          ],
          "description": undefined,
          "generatedName": "WorkBase",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "workBaseAppliesToPart",
              "key": "applies_to_part",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseAppliesToPart",
                  "nameOverride": undefined,
                  "schema": "part-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseArtifacts",
              "key": "artifacts",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The artifacts attached to the work item.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseArtifactsItem",
                    "nameOverride": undefined,
                    "schema": "artifact-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseBody",
              "key": "body",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Body of the work object.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseOwnedBy",
              "key": "owned_by",
              "schema": {
                "description": "The users that own the work.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseOwnedByItem",
                  "nameOverride": undefined,
                  "schema": "user-summary",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseReportedBy",
              "key": "reported_by",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Users that reported the work.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseReportedByItem",
                    "nameOverride": undefined,
                    "schema": "user-summary",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseStage",
              "key": "stage",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorkBaseStage",
                  "nameOverride": undefined,
                  "schema": "stage",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseTags",
              "key": "tags",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Tags associated with the object.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorkBaseTagsItem",
                    "nameOverride": undefined,
                    "schema": "tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseTargetCloseDate",
              "key": "target_close_date",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Timestamp when the work is expected to be complete.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "workBaseTitle",
              "key": "title",
              "schema": {
                "description": "Title of the work object.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "work-type": {
          "description": undefined,
          "generatedName": "WorkType",
          "nameOverride": undefined,
          "type": "enum",
          "values": [
            {
              "description": undefined,
              "generatedName": "issue",
              "nameOverride": undefined,
              "value": "issue",
            },
            {
              "description": undefined,
              "generatedName": "ticket",
              "nameOverride": undefined,
              "value": "ticket",
            },
          ],
        },
        "works-create-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "The [part](https://devrev.ai/docs/product/parts) that the work
applies to. Specifying a part is required when creating tickets and
issues.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": "The IDs of the artifacts to associate with the work item.
",
                  "type": "nullable",
                  "value": {
                    "description": "The IDs of the artifacts to associate with the work item.
",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Body of the work object.",
                  "type": "nullable",
                  "value": {
                    "description": "Body of the work object.",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": "The users that own the work.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": "The users that reported the work.",
                  "type": "nullable",
                  "value": {
                    "description": "The users that reported the work.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "schema": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksCreateRequestStage",
                    "nameOverride": undefined,
                    "schema": "stage-init",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": "Tags associated with the work item.",
                  "type": "nullable",
                  "value": {
                    "description": "Tags associated with the work item.",
                    "type": "array",
                    "value": {
                      "description": undefined,
                      "file": undefined,
                      "generatedName": "WorksCreateRequestTagsItem",
                      "nameOverride": undefined,
                      "schema": "set-tag-with-value",
                      "type": "reference",
                    },
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Timestamp for when the work is expected to be complete.",
                  "type": "nullable",
                  "value": {
                    "description": "Timestamp for when the work is expected to be complete.",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Title of the work object.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksCreateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksCreateRequestIssue",
                "nameOverride": undefined,
                "schema": "works-create-request-issue",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksCreateRequestTicket",
                "nameOverride": undefined,
                "schema": "works-create-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-create-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksCreateRequestIssuePriority",
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksCreateRequestIssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksCreateRequestIssueSprint",
              "key": "sprint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The sprint that the issue belongs to.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksCreateRequestTicketGroup",
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The group that the ticket is associated with.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksCreateRequestTicketRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The Rev organization that the ticket is associated with.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksCreateRequestTicketSeverity",
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksCreateRequestTicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-create-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksCreateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksCreateResponseWork",
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksCreateResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-request": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksDeleteRequest",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksDeleteRequestId",
              "key": "id",
              "schema": {
                "description": "The work's ID.",
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "works-delete-response": {
          "description": undefined,
          "key": {
            "maxLength": undefined,
            "minLength": undefined,
            "type": "string",
          },
          "type": "map",
          "value": {
            "type": "unknown",
          },
        },
        "works-export-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksExportResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksExportResponseWorks",
              "key": "works",
              "schema": {
                "description": "The resulting collection of work items.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksExportResponseWorksItem",
                  "nameOverride": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-get-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksGetResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksGetResponseWork",
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksGetResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "works-list-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksListResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksListResponseNextCursor",
              "key": "next_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksListResponsePrevCursor",
              "key": "prev_cursor",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksListResponseWorks",
              "key": "works",
              "schema": {
                "description": "The list of works.",
                "type": "array",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksListResponseWorksItem",
                  "nameOverride": undefined,
                  "schema": "work",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request": {
          "oneOf": {
            "commonProperties": [
              {
                "key": "applies_to_part",
                "schema": {
                  "description": "Updates the part that the work applies to.",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the part that the work applies to.",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "artifacts",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestArtifacts",
                    "nameOverride": undefined,
                    "schema": "works-update-request-artifact-ids",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "body",
                "schema": {
                  "description": "Updated body of the work object, or unchanged if not provided.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updated body of the work object, or unchanged if not provided.
",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "id",
                "schema": {
                  "description": "The work's ID.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              {
                "key": "owned_by",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestOwnedBy",
                    "nameOverride": undefined,
                    "schema": "works-update-request-owned-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "reported_by",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestReportedBy",
                    "nameOverride": undefined,
                    "schema": "works-update-request-reported-by",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "stage",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestStage",
                    "nameOverride": undefined,
                    "schema": "stage-update",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "tags",
                "schema": {
                  "description": undefined,
                  "type": "nullable",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestTags",
                    "nameOverride": undefined,
                    "schema": "works-update-request-tags",
                    "type": "reference",
                  },
                },
              },
              {
                "key": "target_close_date",
                "schema": {
                  "description": "Updates the timestamp for when the work is expected to be complete.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the timestamp for when the work is expected to be complete.
",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
              {
                "key": "title",
                "schema": {
                  "description": "Updated title of the work object, or unchanged if not provided.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updated title of the work object, or unchanged if not provided.
",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            ],
            "description": undefined,
            "discriminantProperty": "type",
            "generatedName": "WorksUpdateRequest",
            "nameOverride": undefined,
            "schemas": {
              "issue": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksUpdateRequestIssue",
                "nameOverride": undefined,
                "schema": "works-update-request-issue",
                "type": "reference",
              },
              "none": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasEmpty",
                "nameOverride": undefined,
                "schema": "empty",
                "type": "reference",
              },
              "ticket": {
                "description": undefined,
                "file": undefined,
                "generatedName": "ComponentsSchemasWorksUpdateRequestTicket",
                "nameOverride": undefined,
                "schema": "works-update-request-ticket",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "works-update-request-artifact-ids": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestArtifactIds",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestArtifactIdsSet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the IDs to the provided artifact IDs.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-issue": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestIssue",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestIssuePriority",
              "key": "priority",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksUpdateRequestIssuePriority",
                  "nameOverride": undefined,
                  "schema": "issue-priority",
                  "type": "reference",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestIssueSprint",
              "key": "sprint",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Updates the sprint that the issue belongs to.",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the sprint that the issue belongs to.",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-owned-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestOwnedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestOwnedBySet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-reported-by": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestReportedBy",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestReportedBySet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the users that reported the work to the provided user IDs.
",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-tags": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTags",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestTagsSet",
              "key": "set",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Sets the provided tags on the work item.",
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "file": undefined,
                    "generatedName": "WorksUpdateRequestTagsSetItem",
                    "nameOverride": undefined,
                    "schema": "set-tag-with-value",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-request-ticket": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateRequestTicket",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestTicketGroup",
              "key": "group",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "The group that the ticket is associated with.",
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestTicketRevOrg",
              "key": "rev_org",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": "Updates the Rev organization that the ticket is associated with.
",
                  "type": "nullable",
                  "value": {
                    "description": "Updates the Rev organization that the ticket is associated with.
",
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "conflict": {},
              "generatedName": "worksUpdateRequestTicketSeverity",
              "key": "severity",
              "schema": {
                "description": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "file": undefined,
                  "generatedName": "WorksUpdateRequestTicketSeverity",
                  "nameOverride": undefined,
                  "schema": "ticket-severity",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "works-update-response": {
          "allOf": [],
          "description": undefined,
          "generatedName": "WorksUpdateResponse",
          "nameOverride": undefined,
          "properties": [
            {
              "conflict": {},
              "generatedName": "worksUpdateResponseWork",
              "key": "work",
              "schema": {
                "description": undefined,
                "file": undefined,
                "generatedName": "WorksUpdateResponseWork",
                "nameOverride": undefined,
                "schema": "work",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
      },
      "securitySchemes": {
        "auth-token": {
          "headerName": "Authorization",
          "prefix": undefined,
          "type": "header",
        },
      },
      "servers": [
        {
          "description": "DevRev API endpoint.",
          "name": undefined,
          "url": "{protocol}://{hostname}",
        },
      ],
      "tags": {
        "artifacts": {
          "description": "Artifact (file) management APIs.",
          "id": "artifacts",
        },
        "auth-connection": {
          "description": "Auth Connections of DevOrg.",
          "id": "auth-connection",
        },
        "auth-tokens": {
          "description": "Security token interactions.",
          "id": "auth-tokens",
        },
        "dev-orgs": {
          "description": "Dev organization interactions.",
          "id": "dev-orgs",
        },
        "dev-users": {
          "description": "Dev user interactions.",
          "id": "dev-users",
        },
        "parts": {
          "description": "DevRev part interactions.",
          "id": "parts",
        },
        "rev-orgs": {
          "description": "Rev organization interactions.",
          "id": "rev-orgs",
        },
        "tags": {
          "description": "DevRev tag interactions.",
          "id": "tags",
        },
        "timeline-entries": {
          "description": "APIs to manage timeline entries for objects.",
          "id": "timeline-entries",
        },
        "webhooks": {
          "description": "Webhook event APIs.",
          "id": "webhooks",
        },
        "works": {
          "description": "DevRev work interactions.",
          "id": "works",
        },
      },
      "title": "DevRev REST API",
      "variables": {},
    },
  },
  "rootPackage": {
    "file": "openapi.yml",
    "name": "",
    "subpackages": [],
  },
}
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`examples enum-casing parse open api 1`] = `
{
  "channel": [],
  "description": "DevRev's REST API.",
  "endpoints": [
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates an account, which is a record representing a customer or an
organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        409,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "display_name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "display_name",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "account": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domains": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "domains",
                        },
                      },
                    ],
                  },
                  "external_refs": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_refs",
                        },
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "owned_by": {
                    "type": "array",
                    "value": [],
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "tier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "tier",
                    },
                  },
                },
                "type": "object",
              },
              "default_rev_org": {
                "properties": {
                  "account": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "accounts-create",
      "path": "/accounts.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes an account.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "AccountsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "accounts-delete",
      "path": "/accounts.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Exports a collection of accounts.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "created_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "created_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "accounts": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "domains": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "domains",
                            },
                          },
                        ],
                      },
                      "external_refs": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "external_refs",
                            },
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "owned_by": {
                        "type": "array",
                        "value": [],
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "tier": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "tier",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsExportRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "accounts-export",
      "path": "/accounts.export",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for accounts created by the specified user(s).",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "created_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestCreatedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestCreatedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "created_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestCreatedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestCreatedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for custom fields.",
          "name": "custom_fields",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountsExportRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountsExportRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "description": "Array of display names of accounts to be filtered.",
          "name": "display_name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestDisplayNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Domains for accounts to be filtered.",
          "name": "domains",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Array of references of accounts to be filtered.",
          "name": "external_refs",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestExternalRefs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestExternalRefsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The number of accounts to return. The default is '50'.",
          "name": "first",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestFirst",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestFirst",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "modified_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestModifiedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestModifiedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "modified_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestModifiedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestModifiedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for accounts owned by the specified user(s).",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort the accounts by and the direction to sort them in.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for accounts on specified stages.",
          "name": "stage",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of tags to be filtered.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsExportRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "AccountsExportQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsExportResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-export-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Exports a collection of accounts.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "accounts": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "domains": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "domains",
                            },
                          },
                        ],
                      },
                      "external_refs": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "external_refs",
                            },
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "owned_by": {
                        "type": "array",
                        "value": [],
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "tier": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "tier",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsExportPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "accounts-export-post",
      "path": "/accounts.export",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsExportPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-export-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsExportPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-export-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves an account's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "account": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domains": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "domains",
                        },
                      },
                    ],
                  },
                  "external_refs": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_refs",
                        },
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "owned_by": {
                    "type": "array",
                    "value": [],
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "tier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "tier",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "accounts-get",
      "path": "/accounts.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the account to be retrieved.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "AccountsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves an account's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "account": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domains": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "domains",
                        },
                      },
                    ],
                  },
                  "external_refs": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_refs",
                        },
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "owned_by": {
                    "type": "array",
                    "value": [],
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "tier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "tier",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "accounts-get-post",
      "path": "/accounts.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a list of accounts.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "created_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "created_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "accounts": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "domains": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "domains",
                            },
                          },
                        ],
                      },
                      "external_refs": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "external_refs",
                            },
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "owned_by": {
                        "type": "array",
                        "value": [],
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "tier": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "tier",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "accounts-list",
      "path": "/accounts.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for accounts created by the specified user(s).",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "created_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestCreatedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestCreatedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "created_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestCreatedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestCreatedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for custom fields.",
          "name": "custom_fields",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountsListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountsListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "description": "Array of display names of accounts to be filtered.",
          "name": "display_name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestDisplayNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Domains for accounts to be filtered.",
          "name": "domains",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Array of references of accounts to be filtered.",
          "name": "external_refs",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestExternalRefs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestExternalRefsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of accounts to return per page. The default is
'50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "modified_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestModifiedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestModifiedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "modified_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestModifiedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestModifiedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for accounts owned by the specified user(s).",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort the accounts by and the direction to sort them in.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for accounts on specified stages.",
          "name": "stage",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of tags to be filtered.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AccountsListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "AccountsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a list of accounts.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "accounts": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "domains": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "domains",
                            },
                          },
                        ],
                      },
                      "external_refs": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "external_refs",
                            },
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "owned_by": {
                        "type": "array",
                        "value": [],
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "tier": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "tier",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "accounts-list-post",
      "path": "/accounts.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates an account's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        409,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "account": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domains": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "domains",
                        },
                      },
                    ],
                  },
                  "external_refs": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_refs",
                        },
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "owned_by": {
                    "type": "array",
                    "value": [],
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "tier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "tier",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AccountsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "accounts-update",
      "path": "/accounts.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AccountsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "accounts-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get count of articles matching given filter.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArticlesCountRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "articles-count",
      "path": "/articles.count",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for articles belonging to any of the provided parts.
",
          "name": "applies_to_parts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArticlesCountRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ArticlesCountRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for articles authored by any of the provided users.
",
          "name": "authored_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArticlesCountRequestAuthoredBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ArticlesCountRequestAuthoredBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestAuthoredByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for articles created by any of the provided users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArticlesCountRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ArticlesCountRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for articles owned by any of the provided users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArticlesCountRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ArticlesCountRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ArticlesCountQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArticlesCountResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-count-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get count of articles matching given filter.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArticlesCountPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "articles-count-post",
      "path": "/articles.count",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ArticlesCountPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-count-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArticlesCountPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-count-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Article is an object which can contain a URL or artifacts in the
resource. It also contains the data regarding the owner, author, status
and published date of the object. This call creates an article.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "applies_to_parts": {
                "type": "array",
                "value": [
                  {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "applies_to_parts",
                    },
                  },
                ],
              },
              "owned_by": {
                "type": "array",
                "value": [
                  {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "owned_by",
                    },
                  },
                ],
              },
              "published_at": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
              "resource": {
                "properties": {},
                "type": "object",
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "title": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "title",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "article": {
                "properties": {
                  "applies_to_parts": {
                    "type": "array",
                    "value": [],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "extracted_content": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "parent": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "rank": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "rank",
                    },
                  },
                  "resource": {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CreateArticleRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "create-article",
      "path": "/articles.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CreateArticleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CreateArticleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes an article.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTICLE-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "DeleteArticleRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "delete-article",
      "path": "/articles.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DeleteArticleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DeleteArticleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an article.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTICLE-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "article": {
                "properties": {
                  "applies_to_parts": {
                    "type": "array",
                    "value": [],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "extracted_content": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "parent": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "rank": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "rank",
                    },
                  },
                  "resource": {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetArticleRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "get-article",
      "path": "/articles.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the required article.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetArticleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "GetArticleQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GetArticleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an article.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTICLE-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "article": {
                "properties": {
                  "applies_to_parts": {
                    "type": "array",
                    "value": [],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "extracted_content": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "parent": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "rank": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "rank",
                    },
                  },
                  "resource": {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetArticlePostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "get-article-post",
      "path": "/articles.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GetArticlePostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GetArticlePostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of articles.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "articles": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "applies_to_parts": {
                        "type": "array",
                        "value": [],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "extracted_content": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "parent": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "rank": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "rank",
                        },
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ListArticlesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "list-articles",
      "path": "/articles.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for articles belonging to any of the provided parts.
",
          "name": "applies_to_parts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListArticlesRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListArticlesRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ListArticlesRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for articles authored by any of the provided users.
",
          "name": "authored_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListArticlesRequestAuthoredBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListArticlesRequestAuthoredBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ListArticlesRequestAuthoredByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for articles created by any of the provided users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListArticlesRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListArticlesRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ListArticlesRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListArticlesRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListArticlesRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of articles to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListArticlesRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListArticlesRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListArticlesRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListArticlesRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for articles owned by any of the provided users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListArticlesRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListArticlesRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ListArticlesRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ListArticlesQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ListArticlesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of articles.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "articles": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "applies_to_parts": {
                        "type": "array",
                        "value": [],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "extracted_content": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "parent": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "rank": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "rank",
                        },
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "total": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ListArticlesPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "list-articles-post",
      "path": "/articles.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ListArticlesPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ListArticlesPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates an article.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTICLE-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "article": {
                "properties": {
                  "applies_to_parts": {
                    "type": "array",
                    "value": [],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "extracted_content": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "parent": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "rank": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "rank",
                    },
                  },
                  "resource": {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UpdateArticleRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "update-article",
      "path": "/articles.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UpdateArticleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UpdateArticleResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "articles-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "articles",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested artifact's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTIFACT-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "artifact": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
              "version": {
                "properties": {
                  "timestamp": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "version": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "version",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "artifacts-get",
      "path": "/artifacts.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The requested artifact's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArtifactsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The version of the artifact that needs to be fetched.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArtifactsGetRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ArtifactsGetRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ArtifactsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested artifact's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTIFACT-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "artifact": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
              "version": {
                "properties": {
                  "timestamp": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "version": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "version",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "artifacts-get-post",
      "path": "/artifacts.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "List the artifacts attached to an object.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "parent_id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parent_id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "artifacts": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "artifacts-list",
      "path": "/artifacts.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the object to filter artifacts.",
          "name": "parent_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArtifactsListRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ArtifactsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "List the artifacts attached to an object.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "parent_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "parent_id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "artifacts": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "artifacts-list-post",
      "path": "/artifacts.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the download URL for the artifact.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTIFACT-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "expires_at": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsLocateRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "artifacts-locate",
      "path": "/artifacts.locate",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the artifact to get the URL for.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArtifactsLocateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The version of the artifact that needs to be fetched.",
          "name": "version",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArtifactsLocateRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ArtifactsLocateRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ArtifactsLocateQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsLocateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-locate-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the download URL for the artifact.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTIFACT-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "expires_at": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsLocatePostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "artifacts-locate-post",
      "path": "/artifacts.locate",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsLocatePostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-locate-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsLocatePostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-locate-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates an artifact and generates an upload URL for its data.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "file_name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "file_name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "form_data": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "key": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "key",
                        },
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTIFACT-12345",
                },
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsPrepareRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "artifacts-prepare",
      "path": "/artifacts.prepare",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsPrepareRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-prepare-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsPrepareResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-prepare-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Prepares a new version for an artifact, returning the URL and form data
to upload the updated file.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ARTIFACT-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "form_data": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "key": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "key",
                        },
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsVersionsPrepareRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "artifacts-versions-prepare",
      "path": "/artifacts.versions.prepare",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsVersionsPrepareRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-versions-prepare-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsVersionsPrepareResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-versions-prepare-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a JWT corresponding to the requested token type for the
authenticated user.
",
      "errorStatusCode": [
        400,
        401,
        403,
        409,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "access_token": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "access_token",
                },
              },
              "client_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "client_id",
                },
              },
              "expires_in": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "refresh_token": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "refresh_token",
                },
              },
              "scope": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "scope",
                },
              },
              "token_type": {
                "type": "literal",
                "value": {
                  "type": "string",
                  "value": "bearer",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-create",
      "path": "/auth-tokens.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Revokes the token that matches the given token ID issued under the
given Dev organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "AuthTokensDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-delete",
      "path": "/auth-tokens.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "token_id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "token_id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "token": {
                "properties": {
                  "client_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "client_id",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "expires_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "issued_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "requested_token_type": {
                    "type": "enum",
                    "value": "urn:devrev:params:oauth:token-type:aat",
                  },
                  "scopes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "scopes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "subject": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subject",
                    },
                  },
                  "token_hint": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "token_hint",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "auth-tokens-get",
      "path": "/auth-tokens.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The unique identifier of the token under a given Dev organization.
",
          "name": "token_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensGetRequestTokenId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "AuthTokensGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "token_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "token_id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "token": {
                "properties": {
                  "client_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "client_id",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "expires_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "issued_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "requested_token_type": {
                    "type": "enum",
                    "value": "urn:devrev:params:oauth:token-type:aat",
                  },
                  "scopes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "scopes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "subject": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subject",
                    },
                  },
                  "token_hint": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "token_hint",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-get-post",
      "path": "/auth-tokens.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "tokens": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "client_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "client_id",
                        },
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "expires_at": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "issued_at": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "requested_token_type": {
                        "type": "enum",
                        "value": "urn:devrev:params:oauth:token-type:aat",
                      },
                      "scopes": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "scopes",
                            },
                          },
                        ],
                      },
                      "status": {
                        "type": "enum",
                        "value": "active",
                      },
                      "subject": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subject",
                        },
                      },
                      "token_hint": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "token_hint",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "auth-tokens-list",
      "path": "/auth-tokens.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "An identifier that represents the application, which requested the
token. Only relevant for application access tokens.
",
          "name": "client_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensListRequestClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListRequestClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The type of the requested token. If no value is specified, the
response will include tokens of all the types.
",
          "name": "requested_token_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensListRequestRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListRequestRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
        {
          "description": "The subject associated with the token. In the absence of this
parameter, the ID of the authenticated entity is treated as the
subject.
",
          "name": "subject",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensListRequestSubject",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListRequestSubject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "AuthTokensListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "tokens": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "client_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "client_id",
                        },
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "expires_at": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "issued_at": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "requested_token_type": {
                        "type": "enum",
                        "value": "urn:devrev:params:oauth:token-type:aat",
                      },
                      "scopes": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "scopes",
                            },
                          },
                        ],
                      },
                      "status": {
                        "type": "enum",
                        "value": "active",
                      },
                      "subject": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subject",
                        },
                      },
                      "token_hint": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "token_hint",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-list-post",
      "path": "/auth-tokens.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Revokes all the tokens that matches the given token type created by the
authenticated user.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "AuthTokensSelfDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-self-delete",
      "path": "/auth-tokens.self.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensSelfDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-self-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates token metadata of a token issued under a given Dev
organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "token_hint": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "token_hint",
                },
              },
              "token_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "token_id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "token": {
                "properties": {
                  "client_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "client_id",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "expires_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "issued_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "requested_token_type": {
                    "type": "enum",
                    "value": "urn:devrev:params:oauth:token-type:aat",
                  },
                  "scopes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "scopes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "subject": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subject",
                    },
                  },
                  "token_hint": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "token_hint",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-update",
      "path": "/auth-tokens.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Create CodeChange object.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [],
          },
          "response": {
            "properties": {
              "code_change": {
                "properties": {
                  "branch": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "branch",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "external_identifier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_identifier",
                    },
                  },
                  "filtered_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "repo_url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "repo_url",
                    },
                  },
                  "source": {
                    "type": "literal",
                    "value": {
                      "type": "string",
                      "value": "github",
                    },
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                  "total_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CodeChangesCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "code-changes-create",
      "path": "/code-changes.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Delete CodeChange object.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "CodeChangesDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "code-changes-delete",
      "path": "/code-changes.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get CodeChange object.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "code_change": {
                "properties": {
                  "branch": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "branch",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "external_identifier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_identifier",
                    },
                  },
                  "filtered_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "repo_url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "repo_url",
                    },
                  },
                  "source": {
                    "type": "literal",
                    "value": {
                      "type": "string",
                      "value": "github",
                    },
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                  "total_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CodeChangesGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "code-changes-get",
      "path": "/code-changes.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The code change object ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CodeChangesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "CodeChangesGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Get CodeChange object.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "code_change": {
                "properties": {
                  "branch": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "branch",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "external_identifier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_identifier",
                    },
                  },
                  "filtered_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "repo_url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "repo_url",
                    },
                  },
                  "source": {
                    "type": "literal",
                    "value": {
                      "type": "string",
                      "value": "github",
                    },
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                  "total_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CodeChangesGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "code-changes-get-post",
      "path": "/code-changes.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "List CodeChange objects.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "code_changes": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "branch": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "branch",
                        },
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "external_identifier": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_identifier",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "repo_url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "repo_url",
                        },
                      },
                      "source": {
                        "type": "literal",
                        "value": {
                          "type": "string",
                          "value": "github",
                        },
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CodeChangesListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "code-changes-list",
      "path": "/code-changes.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CodeChangesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CodeChangesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of code change objects to return. The default is
'50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CodeChangesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CodeChangesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CodeChangesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CodeChangesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "CodeChangesListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "List CodeChange objects.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "code_changes": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "branch": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "branch",
                        },
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "external_identifier": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_identifier",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "repo_url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "repo_url",
                        },
                      },
                      "source": {
                        "type": "literal",
                        "value": {
                          "type": "string",
                          "value": "github",
                        },
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CodeChangesListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "code-changes-list-post",
      "path": "/code-changes.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Update CodeChange object.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "code_change": {
                "properties": {
                  "branch": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "branch",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "external_identifier": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_identifier",
                    },
                  },
                  "filtered_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "repo_url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "repo_url",
                    },
                  },
                  "source": {
                    "type": "literal",
                    "value": {
                      "type": "string",
                      "value": "github",
                    },
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                  "total_loc": {
                    "properties": {
                      "file_count": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_added": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_deleted": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "lines_modified": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CodeChangesUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "code-changes-update",
      "path": "/code-changes.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CodeChangesUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "code-changes-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a conversation.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "type": {
                "type": "literal",
                "value": {
                  "type": "string",
                  "value": "support",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "conversation": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "group": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "members": {
                    "type": "array",
                    "value": [],
                  },
                  "metadata": {
                    "properties": {
                      "url_context": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url_context",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stage": {
                    "properties": {
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "conversations-create",
      "path": "/conversations.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes the requested conversation.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "ConversationsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "conversations-delete",
      "path": "/conversations.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Exports a collection of conversation items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "tags_v2.id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "TAG-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "conversations": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "group": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "members": {
                        "type": "array",
                        "value": [],
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "stage": {
                        "properties": {
                          "name": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "name",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsExportRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "conversations-export",
      "path": "/conversations.export",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for conversations belonging to any of the provided parts.
",
          "name": "applies_to_parts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The number of conversation items to return. The default is '50', the
maximum is '5000'.
",
          "name": "first",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestFirst",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestFirst",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for conversation that belong to the given groups.",
          "name": "group",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestGroupItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for conversations that are created by verified users.
",
          "name": "is_creator_verified",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestIsCreatorVerified",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestIsCreatorVerified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for conversations that are spam.",
          "name": "is_spam",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for conversations where these users are participants.
",
          "name": "members",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for conversations owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for conversations that are associated with any of the
provided Rev organizations.
",
          "name": "rev_org",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records with any of the provided SLA stages.",
          "name": "sla_summary.stage",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestSlaSummaryStage",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestSlaSummaryStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestSlaSummaryStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-summary-stage",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for conversations with any of the provided source channels.
",
          "name": "source_channels",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestSourceChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestSourceChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestSourceChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records in the provided stage(s) by name.",
          "name": "stage.name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestStageName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestStageName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestStageNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for conversations with any of the provided tags.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The ID of the tag.",
          "name": "tags_v2.id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestTagsV2Id",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestTagsV2Id",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
          "name": "tags_v2.value",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsExportRequestTagsV2Value",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestTagsV2Value",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ConversationsExportQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsExportResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-export-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Exports a collection of conversation items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "conversations": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "group": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "members": {
                        "type": "array",
                        "value": [],
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "stage": {
                        "properties": {
                          "name": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "name",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsExportPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "conversations-export-post",
      "path": "/conversations.export",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsExportPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-export-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsExportPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-export-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested conversation's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "conversation": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "group": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "members": {
                    "type": "array",
                    "value": [],
                  },
                  "metadata": {
                    "properties": {
                      "url_context": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url_context",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stage": {
                    "properties": {
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "conversations-get",
      "path": "/conversations.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The requested conversation's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ConversationsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested conversation's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "conversation": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "group": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "members": {
                    "type": "array",
                    "value": [],
                  },
                  "metadata": {
                    "properties": {
                      "url_context": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url_context",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stage": {
                    "properties": {
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "conversations-get-post",
      "path": "/conversations.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available conversations.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "tags_v2.id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "TAG-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "conversations": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "group": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "members": {
                        "type": "array",
                        "value": [],
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "stage": {
                        "properties": {
                          "name": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "name",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "conversations-list",
      "path": "/conversations.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for conversations belonging to any of the provided parts.
",
          "name": "applies_to_parts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for conversation that belong to the given groups.",
          "name": "group",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestGroupItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for conversations that are created by verified users.
",
          "name": "is_creator_verified",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestIsCreatorVerified",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestIsCreatorVerified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for conversations that are spam.",
          "name": "is_spam",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of conversations to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for conversations where these users are participants.
",
          "name": "members",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for conversations owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for conversations that are associated with any of the
provided Rev organizations.
",
          "name": "rev_org",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records with any of the provided SLA stages.",
          "name": "sla_summary.stage",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestSlaSummaryStage",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestSlaSummaryStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestSlaSummaryStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-summary-stage",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for conversations with any of the provided source channels.
",
          "name": "source_channels",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestSourceChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestSourceChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestSourceChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records in the provided stage(s) by name.",
          "name": "stage.name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestStageName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestStageName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestStageNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for conversations with any of the provided tags.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The ID of the tag.",
          "name": "tags_v2.id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestTagsV2Id",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestTagsV2Id",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
          "name": "tags_v2.value",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ConversationsListRequestTagsV2Value",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestTagsV2Value",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ConversationsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available conversations.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "conversations": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "group": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "members": {
                        "type": "array",
                        "value": [],
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "stage": {
                        "properties": {
                          "name": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "name",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "conversations-list-post",
      "path": "/conversations.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the requested conversation.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "conversation": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "group": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "members": {
                    "type": "array",
                    "value": [],
                  },
                  "metadata": {
                    "properties": {
                      "url_context": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url_context",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stage": {
                    "properties": {
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ConversationsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "conversations-update",
      "path": "/conversations.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ConversationsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "conversations-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "conversations",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new enterprise authentication connection for a Dev
organization. This authentication connection will not be enabled by
default for the organization and the user will need to explicitly
enable this. Keep in mind that at a time, only one authentication
connection can be enabled for a Dev organization. At present, only 5
enterprise connections can be created by an organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "DevOrgAuthConnectionsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-create",
      "path": "/dev-orgs.auth-connections.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes an authentication connection. Only enterprise connections which
are explicitly set up for a Dev organization can be deleted. Default
connections can not be deleted using this method.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "DevOrgAuthConnectionsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-delete",
      "path": "/dev-orgs.auth-connections.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves the details for an authentication connection.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "DevOrgAuthConnectionsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-org-auth-connections-get",
      "path": "/dev-orgs.auth-connections.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID of the authentication connection.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "DevOrgAuthConnectionsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves the details for an authentication connection.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "DevOrgAuthConnectionsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-get-post",
      "path": "/dev-orgs.auth-connections.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "auth_connections": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevOrgAuthConnectionsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-org-auth-connections-list",
      "path": "/dev-orgs.auth-connections.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": "DevOrgAuthConnectionsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [],
          },
          "response": {
            "properties": {
              "auth_connections": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevOrgAuthConnectionsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-list-post",
      "path": "/dev-orgs.auth-connections.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "empty",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Enable or disable an authentication connection for a Dev organization.
Currently, only 1 authentication connection can be enabled at a time.
When a new authentication connection is enabled, the connection which
is currently enabled for the Dev organization is automatically
disabled.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "DevOrgAuthConnectionsToggleRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-toggle",
      "path": "/dev-orgs.auth-connections.toggle",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-toggle-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates an authentication connection.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "DevOrgAuthConnectionsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-update",
      "path": "/dev-orgs.auth-connections.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested user's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "dev_user": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_identities": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-users-get",
      "path": "/dev-users.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "User ID of the requested Dev user.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "DevUsersGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested user's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "dev_user": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_identities": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-users-get-post",
      "path": "/dev-users.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists users within your organization.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "dev_users": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "display_picture": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "email": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "email",
                        },
                      },
                      "external_identities": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                      "full_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "full_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "phone_numbers": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "phone_numbers",
                            },
                          },
                        ],
                      },
                      "state": {
                        "type": "enum",
                        "value": "active",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-users-list",
      "path": "/dev-users.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters Dev users based on email addresses.",
          "name": "email",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestEmail",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestEmailItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Unique ID of the user in the external source.",
          "name": "external_identity.id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestExternalIdentityId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestExternalIdentityId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Issuer of the external identity of the user.",
          "name": "external_identity.issuer",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestExternalIdentityIssuer",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestExternalIdentityIssuer",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of Dev users to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Fields to sort the Dev users by and the direction to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters Dev users based on state.",
          "name": "state",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestState",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestState",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestStateItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "user-state",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "DevUsersListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists users within your organization.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "dev_users": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "display_picture": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "email": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "email",
                        },
                      },
                      "external_identities": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                      "full_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "full_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "phone_numbers": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "phone_numbers",
                            },
                          },
                        ],
                      },
                      "state": {
                        "type": "enum",
                        "value": "active",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-users-list-post",
      "path": "/dev-users.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the authenticated user's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "dev_user": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_identities": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersSelfRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-users-self",
      "path": "/dev-users.self",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": "DevUsersSelfQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersSelfResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-self-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the authenticated user's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [],
          },
          "response": {
            "properties": {
              "dev_user": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_identities": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersSelfPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-users-self-post",
      "path": "/dev-users.self",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersSelfPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-self-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersSelfPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-self-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Counts the engagement records.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsCountRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "engagements-count",
      "path": "/engagements.count",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for meetings with the provided external_refs.",
          "name": "external_ref",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsCountRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsCountRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for engagement of the provided members.",
          "name": "members",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsCountRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsCountRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for engagements with the provided parent.",
          "name": "parent",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsCountRequestParent",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsCountRequestParent",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestParentItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for engagement of the provided types.",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsCountRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsCountRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "engagement-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "EngagementsCountQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsCountResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-count-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Counts the engagement records.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsCountPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "engagements-count-post",
      "path": "/engagements.count",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsCountPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-count-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsCountPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-count-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new engagement record.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "members": {
                "type": "array",
                "value": [
                  {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "members",
                    },
                  },
                ],
              },
              "parent": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
              "scheduled_date": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "title": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "title",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "engagement": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "engagements-create",
      "path": "/engagements.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes the engagement record.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "EngagementsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "engagements-delete",
      "path": "/engagements.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the engagement record.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "engagement": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "engagements-get",
      "path": "/engagements.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The engagement ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "EngagementsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the engagement record.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "engagement": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "engagements-get-post",
      "path": "/engagements.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the engagement records.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "engagements": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "engagements-list",
      "path": "/engagements.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for meetings with the provided external_refs.",
          "name": "external_ref",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of engagements to return.",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for engagement of the provided members.",
          "name": "members",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for engagements with the provided parent.",
          "name": "parent",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestParent",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestParent",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestParentItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort the engagements by and the direction to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for engagement of the provided types.",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EngagementsListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "engagement-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "EngagementsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the engagement records.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "engagements": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "engagements-list-post",
      "path": "/engagements.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the engagement record.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "engagement": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EngagementsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "engagements-update",
      "path": "/engagements.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EngagementsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "engagements-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "engagements",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an event source.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "event_source": {
                "properties": {
                  "config": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "config",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "setup_instructions": {
                    "properties": {
                      "content": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "content",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "trigger_url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "trigger_url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EventSourcesGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "event-sources-get",
      "path": "/event-sources.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The event source's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EventSourcesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "EventSourcesGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EventSourcesGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "event-source-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "event-source",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an event source.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "event_source": {
                "properties": {
                  "config": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "config",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "setup_instructions": {
                    "properties": {
                      "content": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "content",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "trigger_url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "trigger_url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EventSourcesGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "event-sources-get-post",
      "path": "/event-sources.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EventSourcesGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "event-source-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EventSourcesGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "event-source-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "event-source",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Schedules an event to be published to the specified event source.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "event_type": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "event_type",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "payload": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "payload",
                },
              },
              "publish_at": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "event_key": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "event_key",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EventSourcesScheduleEventRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "event-sources-schedule-event",
      "path": "/event-sources.schedule",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EventSourcesScheduleEventRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "event-sources-schedule-event-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EventSourcesScheduleEventResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "event-sources-schedule-event-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "event-source",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes an event scheduled for the specified event source.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "event_key": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "event_key",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "EventSourcesDeleteScheduledEventRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "event-sources-delete-scheduled-event",
      "path": "/event-sources.unschedule",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EventSourcesDeleteScheduledEventRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "event-sources-delete-scheduled-event-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "event-source",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new group. A group is a collection of users.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "group": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_default": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "member_type": {
                    "type": "enum",
                    "value": "dev_user",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "groups-create",
      "path": "/groups.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested group.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "group": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_default": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "member_type": {
                    "type": "enum",
                    "value": "dev_user",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "groups-get",
      "path": "/groups.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the group to get.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "GroupsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested group.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "group": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_default": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "member_type": {
                    "type": "enum",
                    "value": "dev_user",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "groups-get-post",
      "path": "/groups.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available groups.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "groups": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "is_default": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "value": true,
                        },
                      },
                      "member_type": {
                        "type": "enum",
                        "value": "dev_user",
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "groups-list",
      "path": "/groups.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters the groups based on the group type.",
          "name": "group_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupsListRequestGroupType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupsListRequestGroupType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GroupsListRequestGroupTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "group-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The maximum number of groups to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters the groups on basis of member type.",
          "name": "member_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupsListRequestMemberType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupsListRequestMemberType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GroupsListRequestMemberTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "group-member-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Comma-separated fields to sort the groups by.",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GroupsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "GroupsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available groups.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "groups": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "is_default": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "value": true,
                        },
                      },
                      "member_type": {
                        "type": "enum",
                        "value": "dev_user",
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "groups-list-post",
      "path": "/groups.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Adds a member to a group.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "group": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "group",
                },
              },
              "member": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "DEVU-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "GroupMembersAddRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "group-members-add",
      "path": "/groups.members.add",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GroupMembersAddRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "group-members-add-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupMembersAddResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "group-members-add-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the members in a group.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "group",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "group",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "members": {
                "type": "array",
                "value": [],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupMembersListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "group-members-list",
      "path": "/groups.members.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID of the group for which to list members.",
          "name": "group",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupMembersListRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupMembersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupMembersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of members to return. If not set, then the default
is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupMembersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupMembersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GroupMembersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GroupMembersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "GroupMembersListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupMembersListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "group-members-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the members in a group.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "group": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "group",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "members": {
                "type": "array",
                "value": [],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupMembersListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "group-members-list-post",
      "path": "/groups.members.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GroupMembersListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "group-members-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupMembersListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "group-members-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Removes a member from a group.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "group": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "group",
                },
              },
              "member": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "DEVU-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "GroupMembersRemoveRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "group-members-remove",
      "path": "/groups.members.remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GroupMembersRemoveRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "group-members-remove-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupMembersRemoveResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "group-members-remove-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the requested group.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "group": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_default": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "member_type": {
                    "type": "enum",
                    "value": "dev_user",
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GroupsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "groups-update",
      "path": "/groups.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GroupsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "groups-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "groups",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a link between two objects to indicate a relationship.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "LinksCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "links-create",
      "path": "/links.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "LinksCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LinksCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "links",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a link.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "LinksDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "links-delete",
      "path": "/links.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "LinksDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LinksDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "links",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested link's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "LinksGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "links-get",
      "path": "/links.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The requested link's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "LinksGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LinksGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "links",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested link's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "LinksGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "links-get-post",
      "path": "/links.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "LinksGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LinksGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "links",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available links.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "object",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "object",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "links": {
                "type": "array",
                "value": [],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "LinksListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "links-list",
      "path": "/links.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the object to list the links for.",
          "name": "object",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksListRequestObject",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The direction of the links to list, otherwise if not present, then
links in both directions (source and target) are included.
",
          "name": "direction",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksListRequestDirection",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestDirection",
              "groupName": null,
              "nameOverride": null,
              "schema": "links-direction",
              "type": "reference",
            },
          },
        },
        {
          "description": "The maximum number of links to return. If not set, then the default
is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The link type(s) to filter for, otherwise if not present, all link
types are included.
",
          "name": "link_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksListRequestLinkType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestLinkType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "LinksListRequestLinkTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "link-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "The link types to filter for, otherwise if not present, all link
types are included.
",
          "name": "types",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "LinksListRequestTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "LinksListRequestTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "link-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "LinksListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LinksListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "links",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available links.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "object": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "object",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "links": {
                "type": "array",
                "value": [],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "LinksListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "links-list-post",
      "path": "/links.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "LinksListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LinksListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "links-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "links",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists metric definitions matching a filter.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "metric_definitions": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "MetricDefinitionsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "metric-definitions-list",
      "path": "/metric-definitions.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The type of objects the metric definition applies to.",
          "name": "applies_to_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "MetricDefinitionsListRequestAppliesToType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "MetricDefinitionsListRequestAppliesToType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "MetricDefinitionsListRequestAppliesToTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "metric-definition-applies-to",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "MetricDefinitionsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "MetricDefinitionsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of records to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "MetricDefinitionsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "MetricDefinitionsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "MetricDefinitionsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "MetricDefinitionsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "The type of metric definitions sought.",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "MetricDefinitionsListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "MetricDefinitionsListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "MetricDefinitionsListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "metric-definition-metric-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "MetricDefinitionsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "MetricDefinitionsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "metric-definitions-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists metric definitions matching a filter.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "metric_definitions": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "MetricDefinitionsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "metric-definitions-list-post",
      "path": "/metric-definitions.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "MetricDefinitionsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "metric-definitions-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "MetricDefinitionsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "metric-definitions-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Ingest endpoint for DevRev metrics data from clients.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "metrics": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "data_points": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "timestamp": {
                                "type": "primitive",
                                "value": {
                                  "type": "datetime",
                                  "value": "2023-01-01T12:00:00.000Z",
                                },
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "double",
                                  "value": 1.1,
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "org_ref": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "org_ref",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "MetricsDevrevIngestRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "metrics-devrev-ingest",
      "path": "/metrics.devrev.ingest",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "MetricsDevrevIngestRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "metrics-data-ingest-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates an organization schedule fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "from": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
              "intervals": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "from": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "to": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "to": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule_fragment": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "from": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "intervals": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "region_codes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "region_codes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "to": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgScheduleFragmentsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedule-fragments-create",
      "path": "/org-schedule-fragments.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgScheduleFragmentsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedule-fragments-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgScheduleFragmentsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedule-fragments-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an organization schedule fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "org_schedule_fragment": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "from": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "intervals": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "region_codes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "region_codes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "to": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgScheduleFragmentsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "org-schedule-fragments-get",
      "path": "/org-schedule-fragments.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Organization schedule Fragment ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "OrgScheduleFragmentsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "OrgScheduleFragmentsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgScheduleFragmentsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedule-fragments-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an organization schedule fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule_fragment": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "from": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "intervals": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "region_codes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "region_codes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "to": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgScheduleFragmentsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedule-fragments-get-post",
      "path": "/org-schedule-fragments.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgScheduleFragmentsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedule-fragments-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgScheduleFragmentsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedule-fragments-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Changes stage of an organization schedule fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "status": {
                "type": "enum",
                "value": "archived",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule_fragment": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "from": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "intervals": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "region_codes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "region_codes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "to": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgScheduleFragmentsTransitionRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedule-fragments-transition",
      "path": "/org-schedule-fragments.transition",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgScheduleFragmentsTransitionRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedule-fragments-transition-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgScheduleFragmentsTransitionResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedule-fragments-transition-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates an organization schedule with a default weekly organization
schedule and a list of organization schedule fragments.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "timezone": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "timezone",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "default_weekly_org_schedule": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "default_weekly_org_schedule",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "min_valid_days": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "org_schedule_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "timezone": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "timezone",
                    },
                  },
                  "valid_until": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "weekly_org_schedules": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedules-create",
      "path": "/org-schedules.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an organization schedule.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "org_schedule": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "default_weekly_org_schedule": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "default_weekly_org_schedule",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "min_valid_days": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "org_schedule_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "timezone": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "timezone",
                    },
                  },
                  "valid_until": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "weekly_org_schedules": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "org-schedules-get",
      "path": "/org-schedules.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Organization schedule ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "OrgSchedulesGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an organization schedule.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "default_weekly_org_schedule": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "default_weekly_org_schedule",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "min_valid_days": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "org_schedule_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "timezone": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "timezone",
                    },
                  },
                  "valid_until": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "weekly_org_schedules": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedules-get-post",
      "path": "/org-schedules.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets list of organization schedules.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "org_schedules": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "min_valid_days": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "org_schedule_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                      "status": {
                        "type": "enum",
                        "value": "archived",
                      },
                      "timezone": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "timezone",
                        },
                      },
                      "valid_until": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "weekly_org_schedules": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "org-schedules-list",
      "path": "/org-schedules.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Creator ID the filter matches.",
          "name": "created_by_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesListRequestCreatedById",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListRequestCreatedById",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesListRequestCreatedByIdItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Max number of organization schedules returned in a page. Default is
50.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "The organization schedule statuses the filter matches.",
          "name": "status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesListRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesListRequestStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "org-schedule-status",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "OrgSchedulesListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets list of organization schedules.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "org_schedules": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "min_valid_days": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "org_schedule_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                      "status": {
                        "type": "enum",
                        "value": "archived",
                      },
                      "timezone": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "timezone",
                        },
                      },
                      "valid_until": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "weekly_org_schedules": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedules-list-post",
      "path": "/org-schedules.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Sets next organization schedule fragment which must begin the day the
last existing fragment ends.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "org_schedule_fragment_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "org_schedule_fragment_id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "default_weekly_org_schedule": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "default_weekly_org_schedule",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "min_valid_days": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "org_schedule_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "timezone": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "timezone",
                    },
                  },
                  "valid_until": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "weekly_org_schedules": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesSetFutureRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedules-set-future",
      "path": "/org-schedules.set-future",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesSetFutureRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-set-future-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesSetFutureResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-set-future-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Publishes or archives an organization schedule.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "status": {
                "type": "enum",
                "value": "archived",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "default_weekly_org_schedule": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "default_weekly_org_schedule",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "min_valid_days": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "org_schedule_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "timezone": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "timezone",
                    },
                  },
                  "valid_until": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "weekly_org_schedules": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesTransitionRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedules-transition",
      "path": "/org-schedules.transition",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesTransitionRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-transition-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesTransitionResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-transition-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates an organization schedule.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "org_schedule": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "default_weekly_org_schedule": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "default_weekly_org_schedule",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "min_valid_days": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "org_schedule_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                  "timezone": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "timezone",
                    },
                  },
                  "valid_until": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "weekly_org_schedules": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "OrgSchedulesUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "org-schedules-update",
      "path": "/org-schedules.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "OrgSchedulesUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-schedules-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "schedules",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "PartsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-create",
      "path": "/parts.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "PROD-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "PartsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-delete",
      "path": "/parts.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "PartsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "parts-get",
      "path": "/parts.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the part to retrieve.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "PartsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "PartsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-get-post",
      "path": "/parts.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "parts": {
                "type": "array",
                "value": [],
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PartsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "parts-list",
      "path": "/parts.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for parts created by any of these users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of parts to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for parts of the provided name(s).",
          "name": "name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for parts owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Number of levels to fetch the part hierarchy up to.",
          "name": "parent_part.level",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestParentPartLevel",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestParentPartLevel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Part IDs to fetch the hierarchy for. Required if any parent_part.*
fields are provided.
",
          "name": "parent_part.parts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestParentPartParts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestParentPartParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestParentPartPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for parts of the provided type(s).",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "part-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "PartsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "parts": {
                "type": "array",
                "value": [],
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PartsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-list-post",
      "path": "/parts.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "PartsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-update",
      "path": "/parts.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a Rev organization in the authenticated user's Dev
organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        409,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "account": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
              "display_name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "display_name",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_org": {
                "properties": {
                  "account": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-create",
      "path": "/rev-orgs.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes the Rev organization.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "REV-AbCdEfGh",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "RevOrgsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-delete",
      "path": "/rev-orgs.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves the Rev organization's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "account",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
            },
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "REV-AbCdEfGh",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "rev_org": {
                "properties": {
                  "account": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "rev-orgs-get",
      "path": "/rev-orgs.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of account for which default Rev organization is to be
fetched.
",
          "name": "account",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsGetRequestAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsGetRequestAccount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The ID of the required Rev organization.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsGetRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "RevOrgsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves the Rev organization's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "account": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "REV-AbCdEfGh",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_org": {
                "properties": {
                  "account": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-get-post",
      "path": "/rev-orgs.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "created_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "created_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "rev_orgs": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "account": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "domain": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "domain",
                        },
                      },
                      "external_ref": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_ref",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "rev-orgs-list",
      "path": "/rev-orgs.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters by account.",
          "name": "account",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestAccount",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestAccountItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters by creator.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "created_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCreatedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCreatedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "created_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCreatedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCreatedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters on custom fields. Input will be of the format
(custom_field_filter=field_name1:val1,val2,val3&custom_field_filter=field_name2:val1,val2).
",
          "name": "custom_field_filter",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCustomFieldFilter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCustomFieldFilter",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestCustomFieldFilterItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for custom fields.",
          "name": "custom_fields",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevOrgsListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevOrgsListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "description": "Array of display names of Rev orgs to be filtered.",
          "name": "display_name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestDisplayNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of external refs to filter Rev organizations for.",
          "name": "external_ref",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of Rev organizations to be retrieved per page.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "modified_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestModifiedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestModifiedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "modified_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestModifiedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestModifiedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Fields to sort the Rev organizations by and the direction to sort
them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of tags to be filtered.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "RevOrgsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "rev_orgs": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "account": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "domain": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "domain",
                        },
                      },
                      "external_ref": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_ref",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-list-post",
      "path": "/rev-orgs.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the Rev organization's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        409,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "account": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ACC-12345",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "REV-AbCdEfGh",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_org": {
                "properties": {
                  "account": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-update",
      "path": "/rev-orgs.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a Rev user for a Rev organization. Rev user can be a customer
or a lead of an organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        409,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "rev_org": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "REV-AbCdEfGh",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_user": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_verified": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevUsersCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-users-create",
      "path": "/rev-users.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a Rev user.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "RevUsersDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-users-delete",
      "path": "/rev-users.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Returns the Rev user of a Rev organization by its ID.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "rev_user": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_verified": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevUsersGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "rev-users-get",
      "path": "/rev-users.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of Rev user to be retrieved.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "RevUsersGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Returns the Rev user of a Rev organization by its ID.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_user": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_verified": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevUsersGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-users-get-post",
      "path": "/rev-users.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Links a rev user to a rev org.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "rev_org_don": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "REV-AbCdEfGh",
                },
              },
              "user_don": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "user_don",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_user": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_verified": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "LinkRevUserToRevOrgRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "link-rev-user-to-rev-org",
      "path": "/rev-users.link",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "LinkRevUserToRevOrgRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "link-rev-user-to-rev-org-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "LinkRevUserToRevOrgResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "link-rev-user-to-rev-org-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Returns a list of all Rev Users belonging to the authenticated user's
Dev Organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "created_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "created_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.after",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
            {
              "name": "modified_date.before",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2023-01-01T12:00:00.000Z",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "rev_users": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "display_picture": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "email": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "email",
                        },
                      },
                      "external_ref": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_ref",
                        },
                      },
                      "full_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "full_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "is_verified": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "value": true,
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "phone_numbers": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "phone_numbers",
                            },
                          },
                        ],
                      },
                      "state": {
                        "type": "enum",
                        "value": "active",
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevUsersListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "rev-users-list",
      "path": "/rev-users.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for Rev users that were created by the specified user(s).
",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "created_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestCreatedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestCreatedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "created_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestCreatedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestCreatedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for custom fields.",
          "name": "custom_fields",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevUsersListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevUsersListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "description": "List of emails of Rev users to be filtered.",
          "name": "email",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestEmail",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestEmailItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of external refs to filter Rev users for.",
          "name": "external_ref",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Value of is_verified field to filter the Rev users.",
          "name": "is_verified",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestIsVerified",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestIsVerified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of Rev users to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "modified_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestModifiedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestModifiedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "modified_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestModifiedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestModifiedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "List of phone numbers, in E.164 format, to filter Rev users on.
",
          "name": "phone_numbers",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestPhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestPhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestPhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of IDs of Rev organizations to be filtered.",
          "name": "rev_org",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort the Rev users by and the direction to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of tags to be filtered.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevUsersListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "RevUsersListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Returns a list of all Rev Users belonging to the authenticated user's
Dev Organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "rev_users": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "custom_schema_fragments": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "custom_schema_fragments",
                            },
                          },
                        ],
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "display_picture": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "email": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "email",
                        },
                      },
                      "external_ref": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_ref",
                        },
                      },
                      "full_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "full_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "is_verified": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "value": true,
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "phone_numbers": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "phone_numbers",
                            },
                          },
                        ],
                      },
                      "state": {
                        "type": "enum",
                        "value": "active",
                      },
                      "stock_schema_fragment": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                        },
                      },
                      "subtype": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subtype",
                        },
                      },
                      "tags": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "tag": {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "name": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "name",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevUsersListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-users-list-post",
      "path": "/rev-users.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Unlinks a rev user from a rev org.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "rev_org_don": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "REV-AbCdEfGh",
                },
              },
              "user_don": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "user_don",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_user": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_verified": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UnlinkRevUserFromRevOrgRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "unlink-rev-user-from-rev-org",
      "path": "/rev-users.unlink",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UnlinkRevUserFromRevOrgRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "unlink-rev-user-from-rev-org-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UnlinkRevUserFromRevOrgResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "unlink-rev-user-from-rev-org-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a Rev user.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        409,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "TAG-12345",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_user": {
                "properties": {
                  "artifacts": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "custom_fields": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "custom_fields",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "custom_schema_fragments": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "custom_schema_fragments",
                        },
                      },
                    ],
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "is_verified": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean",
                      "value": true,
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                  "stock_schema_fragment": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "don:core:<partition>:devo/<dev-org-id>:custom_type_fragment/<custom-type-fragment-id>",
                    },
                  },
                  "subtype": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subtype",
                    },
                  },
                  "tags": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "tag": {
                            "properties": {
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "name": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "name",
                                },
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevUsersUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-users-update",
      "path": "/rev-users.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevUsersUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-users-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the aggregated schema.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "AggregatedSchemaGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "aggregated-schema-get",
      "path": "/schemas.aggregated.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The list of custom schema fragment DONs which are to be aggregated.
",
          "name": "custom_schema_fragment_ids",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AggregatedSchemaGetRequestCustomSchemaFragmentIds",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AggregatedSchemaGetRequestCustomSchemaFragmentIdsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The stock schema fragment which is to be aggregated.",
          "name": "stock_schema_fragment_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AggregatedSchemaGetRequestStockSchemaFragmentId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AggregatedSchemaGetRequestStockSchemaFragmentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "AggregatedSchemaGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AggregatedSchemaGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "aggregated-schema-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the aggregated schema.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "custom_schema_fragment_ids": {
                "type": "array",
                "value": [
                  {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "custom_schema_fragment_ids",
                    },
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "schema": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "schema",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AggregatedSchemaGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "aggregated-schema-get-post",
      "path": "/schemas.aggregated.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AggregatedSchemaGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "aggregated-schema-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AggregatedSchemaGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "aggregated-schema-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a custom schema fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "CustomSchemaFragmentsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "custom-schema-fragments-get",
      "path": "/schemas.custom.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the custom schema fragment.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "CustomSchemaFragmentsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a custom schema fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "CustomSchemaFragmentsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "custom-schema-fragments-get-post",
      "path": "/schemas.custom.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists custom schema fragments.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "cursor",
                },
              },
              "result": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CustomSchemaFragmentsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "custom-schema-fragments-list",
      "path": "/schemas.custom.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The list of app names.",
          "name": "app",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestApp",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestApp",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestAppItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from, otherwise if not provided, then
iteration starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Whether only deprecated fragments should be filtered.",
          "name": "deprecated",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestDeprecated",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestDeprecated",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The list of leaf types.",
          "name": "leaf_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestLeafTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of items.",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "List of fields which are not required in the payload and can be
pruned away.
",
          "name": "prune",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestPrune",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestPrune",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestPruneItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-schema-fragments-list-request-prune",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The list of fields to sort the items by and how to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The list of subtypes.",
          "name": "subtype",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for custom schema fragment of the provided types.",
          "name": "types",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsListRequestTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListRequestTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-schema-fragment-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "CustomSchemaFragmentsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists custom schema fragments.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "cursor",
                },
              },
              "result": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CustomSchemaFragmentsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "custom-schema-fragments-list-post",
      "path": "/schemas.custom.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates or updates a custom schema fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "CustomSchemaFragmentsSetRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "custom-schema-fragments-set",
      "path": "/schemas.custom.set",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsSetRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-set-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CustomSchemaFragmentsSetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragments-set-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a stock schema fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "fragment": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "fields": {
                    "type": "array",
                    "value": [],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "leaf_type": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "leaf_type",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "StockSchemaFragmentsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "stock-schema-fragments-get",
      "path": "/schemas.stock.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the stock schema fragment.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsGetRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The leaf type this fragment applies to.",
          "name": "leaf_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsGetRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsGetRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "StockSchemaFragmentsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StockSchemaFragmentsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "stock-schema-fragments-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a stock schema fragment.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "fragment": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "fields": {
                    "type": "array",
                    "value": [],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "leaf_type": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "leaf_type",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "title": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "title",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "StockSchemaFragmentsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "stock-schema-fragments-get-post",
      "path": "/schemas.stock.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "StockSchemaFragmentsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "stock-schema-fragments-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StockSchemaFragmentsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "stock-schema-fragments-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists stock schema fragments.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "cursor",
                },
              },
              "result": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "fields": {
                        "type": "array",
                        "value": [],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "leaf_type": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "leaf_type",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "StockSchemaFragmentsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "stock-schema-fragments-list",
      "path": "/schemas.stock.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from, otherwise if not provided, then
iteration starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filter preset to specify whether to filter only customization enabled
leaf types.
",
          "name": "filter_preset",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsListRequestFilterPreset",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListRequestFilterPreset",
              "groupName": null,
              "nameOverride": null,
              "schema": "stock-schema-fragments-list-request-filter-preset",
              "type": "reference",
            },
          },
        },
        {
          "description": "The list of leaf types.",
          "name": "leaf_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsListRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StockSchemaFragmentsListRequestLeafTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of items.",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "List of fields which are not required in the payload and can be
pruned away.
",
          "name": "prune",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsListRequestPrune",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListRequestPrune",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StockSchemaFragmentsListRequestPruneItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "stock-schema-fragments-list-request-prune",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The list of fields to sort the items by and how to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StockSchemaFragmentsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "StockSchemaFragmentsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StockSchemaFragmentsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "stock-schema-fragments-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists stock schema fragments.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "cursor",
                },
              },
              "result": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "fields": {
                        "type": "array",
                        "value": [],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "leaf_type": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "leaf_type",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "title": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "title",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "StockSchemaFragmentsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "stock-schema-fragments-list-post",
      "path": "/schemas.stock.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "StockSchemaFragmentsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "stock-schema-fragments-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StockSchemaFragmentsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "stock-schema-fragments-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists subtypes.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "subtypes": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "fragment_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "fragment_id",
                        },
                      },
                      "leaf_type": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "leaf_type",
                        },
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SubtypesListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "subtypes-list",
      "path": "/schemas.subtypes.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Leaf type for which subtypes are required.",
          "name": "leaf_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SubtypesListRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SubtypesListRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "List of leaf types for which subtypes are required.",
          "name": "leaf_types",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SubtypesListRequestLeafTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SubtypesListRequestLeafTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SubtypesListRequestLeafTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "SubtypesListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SubtypesListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "subtypes-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists subtypes.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "subtypes": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "fragment_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "fragment_id",
                        },
                      },
                      "leaf_type": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "leaf_type",
                        },
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SubtypesListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "subtypes-list-post",
      "path": "/schemas.subtypes.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SubtypesListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "subtypes-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SubtypesListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "subtypes-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "customization",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Searches for records based on a given query.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "query",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "query",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "cursor",
                },
              },
              "results": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SearchCoreRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "search-core",
      "path": "/search.core",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The query string. Search query language:
https://docs.devrev.ai/product/search#fields
",
          "name": "query",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SearchCoreRequestQuery",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The cursor from where to begin iteration. Start from beginning if not
provided.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SearchCoreRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SearchCoreRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of items to return in a page. The default is '10'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SearchCoreRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SearchCoreRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The namespaces to search in.",
          "name": "namespaces",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SearchCoreRequestNamespaces",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SearchCoreRequestNamespaces",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SearchCoreRequestNamespacesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "search-namespace",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The property on which to sort the search results. The default is
RELEVANCE.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SearchCoreRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SearchCoreRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "search-sort-by-param",
              "type": "reference",
            },
          },
        },
        {
          "description": "Sorting order. The default is DESCENDING.",
          "name": "sort_order",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SearchCoreRequestSortOrder",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SearchCoreRequestSortOrder",
              "groupName": null,
              "nameOverride": null,
              "schema": "search-sort-order-param",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "SearchCoreQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SearchCoreResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-core-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "search",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Searches for records based on a given query.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "query": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "query",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "cursor",
                },
              },
              "results": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SearchCorePostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "search-core-post",
      "path": "/search.core",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SearchCorePostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-core-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SearchCorePostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-core-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "search",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a service account.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "service_account": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ServiceAccountsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "service-accounts-get",
      "path": "/service-accounts.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the requested service account.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ServiceAccountsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "ServiceAccountsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ServiceAccountsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "service-accounts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "service-accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a service account.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "service_account": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ServiceAccountsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "service-accounts-get-post",
      "path": "/service-accounts.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ServiceAccountsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "service-accounts-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ServiceAccountsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "service-accounts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "service-accounts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": " Assigns the SLA to a set of Rev organizations.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "rev_orgs": {
                "type": "array",
                "value": [
                  {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "rev_orgs",
                    },
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "results": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "error": {
                        "properties": {
                          "message": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "message",
                            },
                          },
                          "status": {
                            "type": "primitive",
                            "value": {
                              "type": "int",
                              "value": 1,
                            },
                          },
                        },
                        "type": "object",
                      },
                      "rev_org": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasAssignRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "slas-assign",
      "path": "/slas.assign",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SlasAssignRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-assign-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasAssignResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-assign-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates an SLA in draft status.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "sla": {
                "properties": {
                  "compensation": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "compensation",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "evaluation_period": {
                    "type": "enum",
                    "value": "monthly",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "policies": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "slas-create",
      "path": "/slas.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SlasCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an SLA.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "sla": {
                "properties": {
                  "compensation": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "compensation",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "evaluation_period": {
                    "type": "enum",
                    "value": "monthly",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "policies": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "slas-get",
      "path": "/slas.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the SLA to get.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SlasGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "SlasGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an SLA.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "sla": {
                "properties": {
                  "compensation": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "compensation",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "evaluation_period": {
                    "type": "enum",
                    "value": "monthly",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "policies": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "slas-get-post",
      "path": "/slas.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SlasGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists SLAs matching a filter.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "slas": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "evaluation_period": {
                        "type": "enum",
                        "value": "monthly",
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "policies": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                      "status": {
                        "type": "enum",
                        "value": "archived",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "slas-list",
      "path": "/slas.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SlasListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SlasListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of SLAs to return. The default is '50'.",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SlasListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SlasListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SlasListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SlasListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "The SLA statuses the filter matches.",
          "name": "status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SlasListRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SlasListRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SlasListRequestStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-status",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "SlasListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists SLAs matching a filter.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "slas": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "evaluation_period": {
                        "type": "enum",
                        "value": "monthly",
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "policies": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                      "status": {
                        "type": "enum",
                        "value": "archived",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "slas-list-post",
      "path": "/slas.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SlasListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Changes the status of an SLA.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "status": {
                "type": "enum",
                "value": "archived",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "sla": {
                "properties": {
                  "compensation": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "compensation",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "evaluation_period": {
                    "type": "enum",
                    "value": "monthly",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "policies": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasTransitionRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "slas-transition",
      "path": "/slas.transition",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SlasTransitionRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-transition-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasTransitionResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-transition-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a draft SLA.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "sla": {
                "properties": {
                  "compensation": {
                    "type": "map",
                    "value": [
                      {
                        "key": {
                          "type": "string",
                          "value": "compensation",
                        },
                        "value": {
                          "type": "map",
                          "value": [
                            {
                              "key": {
                                "type": "string",
                                "value": "key",
                              },
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "value",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "evaluation_period": {
                    "type": "enum",
                    "value": "monthly",
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                  "policies": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "archived",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SlasUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "slas-update",
      "path": "/slas.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SlasUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SlasUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "slas-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "slas",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets snap-in resources for a user in a snap-in.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            {
              "name": "user",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "user",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "event_sources": {
                "properties": {
                  "key": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "key",
                    },
                  },
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "value",
                    },
                  },
                },
                "type": "object",
              },
              "inputs": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "inputs",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "keyrings": {
                "properties": {
                  "key": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "key",
                    },
                  },
                  "value": {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "secret": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "secret",
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "snap_in_version": {
                "properties": {
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SnapInsResourcesRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "snap-ins-resources",
      "path": "/snap-ins.resources",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the snap-in to get resources for.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SnapInsResourcesRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The ID of the user to get resources for.",
          "name": "user",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SnapInsResourcesRequestUser",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "SnapInsResourcesQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SnapInsResourcesResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "snap-ins-resources-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "snap-ins",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets snap-in resources for a user in a snap-in.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "user": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "user",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "event_sources": {
                "properties": {
                  "key": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "key",
                    },
                  },
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "value",
                    },
                  },
                },
                "type": "object",
              },
              "inputs": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "inputs",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "keyrings": {
                "properties": {
                  "key": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "key",
                    },
                  },
                  "value": {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "secret": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "secret",
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "snap_in_version": {
                "properties": {
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SnapInsResourcesPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "snap-ins-resources-post",
      "path": "/snap-ins.resources",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SnapInsResourcesPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "snap-ins-resources-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SnapInsResourcesPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "snap-ins-resources-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "snap-ins",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Create a snap widget object.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "SnapWidgetsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "snap-widgets-create",
      "path": "/snap-widgets.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SnapWidgetsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "snap-widgets-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SnapWidgetsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "snap-widgets-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "snap-widgets",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists system users within your organization.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "sys_users": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "display_picture": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "email": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "email",
                        },
                      },
                      "full_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "full_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "phone_numbers": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "phone_numbers",
                            },
                          },
                        ],
                      },
                      "state": {
                        "type": "enum",
                        "value": "active",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SysUsersListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "sys-users-list",
      "path": "/sys-users.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SysUsersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SysUsersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of system users to return. Value can range from
'1' to '100', with a default of '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SysUsersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SysUsersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SysUsersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SysUsersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Fields to sort the system users by and the direction to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "SysUsersListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "SysUsersListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SysUsersListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "SysUsersListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SysUsersListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "sys-users-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "sys-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists system users within your organization.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "sys_users": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "display_picture": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "email": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "email",
                        },
                      },
                      "full_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "full_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "phone_numbers": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "phone_numbers",
                            },
                          },
                        ],
                      },
                      "state": {
                        "type": "enum",
                        "value": "active",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SysUsersListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "sys-users-list-post",
      "path": "/sys-users.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SysUsersListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "sys-users-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SysUsersListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "sys-users-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "sys-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the system user.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "sys_user": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SysUsersUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "sys-users-update",
      "path": "/sys-users.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SysUsersUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "sys-users-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SysUsersUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "sys-users-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "sys-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new tag, which is used to create associations between objects
and a logical concept denoted by the tag's name.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "tag": {
                "properties": {
                  "allowed_values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "allowed_values",
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-create",
      "path": "/tags.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a tag.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "TAG-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "TagsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-delete",
      "path": "/tags.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a tag's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "TAG-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "tag": {
                "properties": {
                  "allowed_values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "allowed_values",
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "tags-get",
      "path": "/tags.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The requested tag's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "TagsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a tag's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "TAG-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "tag": {
                "properties": {
                  "allowed_values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "allowed_values",
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-get-post",
      "path": "/tags.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available tags.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "allowed_values": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "allowed_values",
                            },
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "tags-list",
      "path": "/tags.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of tags to return. The default is '50'.",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for tags with the provided names.",
          "name": "name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsListRequestNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort tags by and the direction to sort them.",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "TagsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available tags.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "allowed_values": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "allowed_values",
                            },
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-list-post",
      "path": "/tags.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a tag's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "TAG-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "tag": {
                "properties": {
                  "allowed_values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "allowed_values",
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-update",
      "path": "/tags.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new entry on an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "TimelineEntriesCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "timeline-entries-create",
      "path": "/timeline-entries.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes an entry from an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:core:<partition>:devo/<dev-org-id>:ticket/123:timeline_event/<timeline-event-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "TimelineEntriesDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "timeline-entries-delete",
      "path": "/timeline-entries.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an entry on an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "TimelineEntriesGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "timeline-entries-get",
      "path": "/timeline-entries.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the timeline entry to get.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "TimelineEntriesGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an entry on an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "TimelineEntriesGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "timeline-entries-get-post",
      "path": "/timeline-entries.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the timeline entries for an object.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "object",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "PROD-12345",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "timeline_entries": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TimelineEntriesListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "timeline-entries-list",
      "path": "/timeline-entries.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the object to list timeline entries for.",
          "name": "object",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestObject",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The collection(s) to list entries from, otherwise if not provided,
all entries are returned.
",
          "name": "collections",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestCollections",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestCollections",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesListRequestCollectionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-entries-collection",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for entries containing at least one of the provided labels,
otherwise if no labels are provided, then no label filtering is done.
",
          "name": "labels",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestLabels",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestLabels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesListRequestLabelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of entries to return. If not set, then this
defaults to \`50\`.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "The visibility of the timeline entries to filter for. Note this is a
strict filter, such that only entries with the exact visibilities
specified will be returned.
",
          "name": "visibility",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestVisibility",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestVisibility",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesListRequestVisibilityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-entry-visibility",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "TimelineEntriesListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the timeline entries for an object.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "object": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "PROD-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "timeline_entries": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TimelineEntriesListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "timeline-entries-list-post",
      "path": "/timeline-entries.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates an entry on an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "TimelineEntriesUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "timeline-entries-update",
      "path": "/timeline-entries.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Allows publishing of events (example from plug widget).",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "events_list": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "event_time": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "payload": {
                        "type": "map",
                        "value": [],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "TrackEventsPublishRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "track-events-publish",
      "path": "/track-events.publish",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TrackEventsPublishRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "track-events-publish-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TrackEventsPublishResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "track-events-publish-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "event-source",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a Unit of Measurement on a part.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "UomsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "uoms-create",
      "path": "/uoms.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UomsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UomsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a Unit of Measurement.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "UomsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "uoms-delete",
      "path": "/uoms.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UomsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a Unit of Measurement.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "UomsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "uoms-get",
      "path": "/uoms.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The Unit of Measurement (UOM)'s DON.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "UomsGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UomsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a Unit of Measurement.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "UomsGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "uoms-get-post",
      "path": "/uoms.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UomsGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UomsGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the Unit of Measurements based on the given filters.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "uoms": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UomsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "uoms-list",
      "path": "/uoms.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "List of aggregation types for filtering list of UOMs.",
          "name": "aggregation_types",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestAggregationTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestAggregationTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestAggregationTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "aggregation-detail-aggregation-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "List of Unit of Measurement (UOM) DONs to be used in filtering
complete list of UOMs defined in a Dev Org.
",
          "name": "ids",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestIds",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of UOMs to be returned in a response. The default
is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "List of metric names for filtering list of UOMs.",
          "name": "metric_names",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestMetricNames",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestMetricNames",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestMetricNamesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "List of part IDs for filtering list of UOMs.",
          "name": "part_ids",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestPartIds",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestPartIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestPartIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of product IDs for filtering list of UOMs.",
          "name": "product_ids",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestProductIds",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestProductIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestProductIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort the Unit Of Measuments (UOMs) by and the direction to
sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "List of unit types for filtering list of UOMs.",
          "name": "unit_types",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "UomsListRequestUnitTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestUnitTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestUnitTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "unit-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "UomsListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UomsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the Unit of Measurements based on the given filters.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "uoms": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UomsListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "uoms-list-post",
      "path": "/uoms.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UomsListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UomsListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a Unit of Measurement.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "UomsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "uoms-update",
      "path": "/uoms.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UomsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UomsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "uoms-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "product-usage",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new webhook target.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "webhook": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "event_types": {
                    "type": "array",
                    "value": [
                      {
                        "type": "enum",
                        "value": "account_created",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "secret": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "secret",
                    },
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-create",
      "path": "/webhooks.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes the requested webhook.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "WebhooksDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-delete",
      "path": "/webhooks.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested webhook's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "webhook": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "event_types": {
                    "type": "array",
                    "value": [
                      {
                        "type": "enum",
                        "value": "account_created",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "secret": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "secret",
                    },
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "webhooks-get",
      "path": "/webhooks.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID for the webhook.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WebhooksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "WebhooksGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested webhook's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "webhook": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "event_types": {
                    "type": "array",
                    "value": [
                      {
                        "type": "enum",
                        "value": "account_created",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "secret": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "secret",
                    },
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-get-post",
      "path": "/webhooks.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the webhooks.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "webhooks": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "event_types": {
                        "type": "array",
                        "value": [
                          {
                            "type": "enum",
                            "value": "account_created",
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "secret": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "secret",
                        },
                      },
                      "status": {
                        "type": "enum",
                        "value": "active",
                      },
                      "url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "webhooks-list",
      "path": "/webhooks.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": "WebhooksListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the webhooks.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [],
          },
          "response": {
            "properties": {
              "webhooks": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "event_types": {
                        "type": "array",
                        "value": [
                          {
                            "type": "enum",
                            "value": "account_created",
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2023-01-01T12:00:00.000Z",
                        },
                      },
                      "secret": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "secret",
                        },
                      },
                      "status": {
                        "type": "enum",
                        "value": "active",
                      },
                      "url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-list-post",
      "path": "/webhooks.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the requested webhook.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "webhook": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "event_types": {
                    "type": "array",
                    "value": [
                      {
                        "type": "enum",
                        "value": "account_created",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2023-01-01T12:00:00.000Z",
                    },
                  },
                  "secret": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "secret",
                    },
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-update",
      "path": "/webhooks.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),
[ticket](https://devrev.ai/docs/product/support)) item.
[task](https://docs.devrev.ai/product/tasks) and opportunity work types
are supported in the beta version.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "WorksCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-create",
      "path": "/works.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a work item.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "ISS-12345",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "WorksDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-delete",
      "path": "/works.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Exports a collection of work items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "works": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WorksExportRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "works-export",
      "path": "/works.export",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for work belonging to any of the provided parts.",
          "name": "applies_to_part",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestAppliesToPartItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work created by any of these users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for custom fields.",
          "name": "custom_fields",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorksExportRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "WorksExportRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "description": "The number of work items to return. The default is '50', the maximum
is '5000'.
",
          "name": "first",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestFirst",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestFirst",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided Accounts.",
          "name": "issue.accounts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestIssueAccounts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssueAccounts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestIssueAccountsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided priorities.",
          "name": "issue.priority",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestIssuePriorityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "issue-priority",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided priority enum ids.
",
          "name": "issue.priority_v2",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestIssuePriorityV2",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssuePriorityV2",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestIssuePriorityV2Item",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided Rev organizations.
",
          "name": "issue.rev_orgs",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestIssueRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssueRevOrgs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestIssueRevOrgsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided subtypes.",
          "name": "issue.subtype",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestIssueSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssueSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestIssueSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for opportunities belonging to any of the provided accounts.
",
          "name": "opportunity.account",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestOpportunityAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestOpportunityAccount",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestOpportunityAccountItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for opportunities with any of the provided contacts.
",
          "name": "opportunity.contacts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestOpportunityContacts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestOpportunityContacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestOpportunityContactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for opportunity with any of the provided subtypes.",
          "name": "opportunity.subtype",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestOpportunitySubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestOpportunitySubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestOpportunitySubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work reported by any of these users.",
          "name": "reported_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestReportedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestReportedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort the work items by and the direction to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records in the provided stage(s) by name.",
          "name": "stage.name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestStageName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestStageName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestStageNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues that are staged.",
          "name": "staged_info.is_staged",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestStagedInfoIsStaged",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestStagedInfoIsStaged",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for works with selected sync statuses.",
          "name": "sync_metadata.last_sync_in.status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestSyncMetadataLastSyncInStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestSyncMetadataLastSyncInStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestSyncMetadataLastSyncInStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sync-metadata-filter-sync-in-filter-status",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for works modified with selected sync units.",
          "name": "sync_metadata.last_sync_in.sync_unit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestSyncMetadataLastSyncInSyncUnit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestSyncMetadataLastSyncInSyncUnit",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestSyncMetadataLastSyncInSyncUnitItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for works with selected sync statuses.",
          "name": "sync_metadata.last_sync_out.status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestSyncMetadataLastSyncOutStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestSyncMetadataLastSyncOutStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestSyncMetadataLastSyncOutStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sync-metadata-filter-sync-out-filter-status",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for works modified with selected sync units.",
          "name": "sync_metadata.last_sync_out.sync_unit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestSyncMetadataLastSyncOutSyncUnit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestSyncMetadataLastSyncOutSyncUnit",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestSyncMetadataLastSyncOutSyncUnitItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues synced from this specific origin system.
",
          "name": "sync_metadata.origin_system",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestSyncMetadataOriginSystem",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestSyncMetadataOriginSystem",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestSyncMetadataOriginSystemItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work with any of the provided tags.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided channels.",
          "name": "ticket.channels",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-channels",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for tickets belonging to specific groups.",
          "name": "ticket.group",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketGroupItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets that are spam.",
          "name": "ticket.is_spam",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for tickets that need response.",
          "name": "ticket.needs_response",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketNeedsResponse",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketNeedsResponse",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
          "name": "ticket.rev_org",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided severities.",
          "name": "ticket.severity",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketSeverityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-severity",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for records with any of the provided SLA stages.",
          "name": "ticket.sla_summary.stage",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketSlaSummaryStage",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketSlaSummaryStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketSlaSummaryStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-summary-stage",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided source channels.
",
          "name": "ticket.source_channel",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketSourceChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketSourceChannel",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketSourceChannelItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided subtypes.",
          "name": "ticket.subtype",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work of the provided types.",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "work-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "WorksExportQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksExportResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-export-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Exports a collection of work items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "works": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WorksExportPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-export-post",
      "path": "/works.export",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksExportPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-export-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksExportPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-export-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a work item's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "WorksGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "works-get",
      "path": "/works.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The work's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": "WorksGetQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a work item's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "WorksGetPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-get-post",
      "path": "/works.get",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksGetPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-get-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksGetPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of work items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "works": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WorksListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "works-list",
      "path": "/works.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for work belonging to any of the provided parts.",
          "name": "applies_to_part",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestAppliesToPartItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work created by any of these users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for custom fields.",
          "name": "custom_fields",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorksListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "WorksListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided Accounts.",
          "name": "issue.accounts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestIssueAccounts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssueAccounts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestIssueAccountsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided priorities.",
          "name": "issue.priority",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestIssuePriorityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "issue-priority",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided priority enum ids.
",
          "name": "issue.priority_v2",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestIssuePriorityV2",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssuePriorityV2",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestIssuePriorityV2Item",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided Rev organizations.
",
          "name": "issue.rev_orgs",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestIssueRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssueRevOrgs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestIssueRevOrgsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided subtypes.",
          "name": "issue.subtype",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestIssueSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssueSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestIssueSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of works to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for opportunities belonging to any of the provided accounts.
",
          "name": "opportunity.account",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestOpportunityAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestOpportunityAccount",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestOpportunityAccountItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for opportunities with any of the provided contacts.
",
          "name": "opportunity.contacts",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestOpportunityContacts",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestOpportunityContacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestOpportunityContactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for opportunity with any of the provided subtypes.",
          "name": "opportunity.subtype",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestOpportunitySubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestOpportunitySubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestOpportunitySubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work reported by any of these users.",
          "name": "reported_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestReportedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestReportedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Fields to sort the works by and the direction to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records in the provided stage(s) by name.",
          "name": "stage.name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestStageName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestStageName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestStageNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues that are staged.",
          "name": "staged_info.is_staged",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestStagedInfoIsStaged",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestStagedInfoIsStaged",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for works with selected sync statuses.",
          "name": "sync_metadata.last_sync_in.status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestSyncMetadataLastSyncInStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestSyncMetadataLastSyncInStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestSyncMetadataLastSyncInStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sync-metadata-filter-sync-in-filter-status",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for works modified with selected sync units.",
          "name": "sync_metadata.last_sync_in.sync_unit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestSyncMetadataLastSyncInSyncUnit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestSyncMetadataLastSyncInSyncUnit",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestSyncMetadataLastSyncInSyncUnitItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for works with selected sync statuses.",
          "name": "sync_metadata.last_sync_out.status",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestSyncMetadataLastSyncOutStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestSyncMetadataLastSyncOutStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestSyncMetadataLastSyncOutStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sync-metadata-filter-sync-out-filter-status",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for works modified with selected sync units.",
          "name": "sync_metadata.last_sync_out.sync_unit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestSyncMetadataLastSyncOutSyncUnit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestSyncMetadataLastSyncOutSyncUnit",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestSyncMetadataLastSyncOutSyncUnitItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for issues synced from this specific origin system.
",
          "name": "sync_metadata.origin_system",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestSyncMetadataOriginSystem",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestSyncMetadataOriginSystem",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestSyncMetadataOriginSystemItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work with any of the provided tags.",
          "name": "tags",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided channels.",
          "name": "ticket.channels",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-channels",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for tickets belonging to specific groups.",
          "name": "ticket.group",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketGroupItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets that are spam.",
          "name": "ticket.is_spam",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for tickets that need response.",
          "name": "ticket.needs_response",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketNeedsResponse",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketNeedsResponse",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
          "name": "ticket.rev_org",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided severities.",
          "name": "ticket.severity",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketSeverityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-severity",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for records with any of the provided SLA stages.",
          "name": "ticket.sla_summary.stage",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketSlaSummaryStage",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketSlaSummaryStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketSlaSummaryStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-summary-stage",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided source channels.
",
          "name": "ticket.source_channel",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketSourceChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketSourceChannel",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketSourceChannelItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided subtypes.",
          "name": "ticket.subtype",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work of the provided types.",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "work-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": "WorksListQuery",
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of work items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "works": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WorksListPostRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-list-post",
      "path": "/works.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksListPostRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-list-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksListPostResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a work item's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "WorksUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-update",
      "path": "/works.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
  ],
  "errors": {
    "400": {
      "description": null,
      "generatedName": "BadRequestError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "BadRequestErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-bad-request",
        "type": "reference",
      },
    },
    "401": {
      "description": null,
      "generatedName": "UnauthorizedError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "UnauthorizedErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-unauthorized",
        "type": "reference",
      },
    },
    "403": {
      "description": null,
      "generatedName": "ForbiddenError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "ForbiddenErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-forbidden",
        "type": "reference",
      },
    },
    "404": {
      "description": null,
      "generatedName": "NotFoundError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "NotFoundErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-not-found",
        "type": "reference",
      },
    },
    "409": {
      "description": null,
      "generatedName": "ConflictError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "ConflictErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-conflict",
        "type": "reference",
      },
    },
    "429": {
      "description": null,
      "generatedName": "TooManyRequestsError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "TooManyRequestsErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-too-many-requests",
        "type": "reference",
      },
    },
    "500": {
      "description": null,
      "generatedName": "InternalServerError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "InternalServerErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-internal-server-error",
        "type": "reference",
      },
    },
    "503": {
      "description": null,
      "generatedName": "ServiceUnavailableError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "ServiceUnavailableErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-service-unavailable",
        "type": "reference",
      },
    },
  },
  "globalHeaders": [],
  "hasEndpointsMarkedInternal": false,
  "nonRequestReferencedSchemas": [
    "accounts-create-response",
    "accounts-delete-response",
    "accounts-export-response",
    "accounts-get-response",
    "list-mode",
    "accounts-list-response",
    "accounts-update-response",
    "articles-count-response",
    "articles-create-response",
    "articles-delete-response",
    "articles-get-response",
    "articles-list-response",
    "articles-update-response",
    "artifacts-get-response",
    "artifacts-list-response",
    "artifacts-locate-response",
    "artifacts-prepare-response",
    "artifacts-versions-prepare-response",
    "auth-tokens-create-response",
    "auth-tokens-get-response",
    "auth-token-requested-token-type",
    "auth-tokens-list-response",
    "auth-tokens-update-response",
    "code-changes-create-response",
    "code-changes-delete-response",
    "code-changes-get-response",
    "code-changes-list-response",
    "code-changes-update-response",
    "conversations-create-response",
    "conversations-delete-response",
    "sla-summary-stage",
    "conversations-export-response",
    "conversations-get-response",
    "conversations-list-response",
    "conversations-update-response",
    "dev-org-auth-connections-create-response",
    "dev-org-auth-connections-get-response",
    "dev-org-auth-connections-list-response",
    "dev-org-auth-connections-update-response",
    "dev-users-get-response",
    "user-state",
    "dev-users-list-response",
    "dev-users-self-response",
    "engagement-type",
    "engagements-count-response",
    "engagements-create-response",
    "engagements-delete-response",
    "engagements-get-response",
    "engagements-list-response",
    "engagements-update-response",
    "event-source-get-response",
    "event-sources-schedule-event-response",
    "groups-create-response",
    "groups-get-response",
    "group-type",
    "group-member-type",
    "groups-list-response",
    "group-members-add-response",
    "group-members-list-response",
    "group-members-remove-response",
    "groups-update-response",
    "links-create-response",
    "links-delete-response",
    "links-get-response",
    "links-direction",
    "link-type",
    "links-list-response",
    "metric-definition-applies-to",
    "metric-definition-metric-type",
    "metric-definitions-list-response",
    "org-schedule-fragments-create-response",
    "org-schedule-fragments-get-response",
    "org-schedule-fragments-transition-response",
    "org-schedules-create-response",
    "org-schedules-get-response",
    "org-schedule-status",
    "org-schedules-list-response",
    "org-schedules-set-future-response",
    "org-schedules-transition-response",
    "org-schedules-update-response",
    "parts-create-response",
    "parts-delete-response",
    "parts-get-response",
    "part-type",
    "parts-list-response",
    "parts-update-response",
    "rev-orgs-create-response",
    "rev-orgs-delete-response",
    "rev-orgs-get-response",
    "rev-orgs-list-response",
    "rev-orgs-update-response",
    "rev-users-create-response",
    "rev-users-delete-response",
    "rev-users-get-response",
    "link-rev-user-to-rev-org-response",
    "rev-users-list-response",
    "unlink-rev-user-from-rev-org-response",
    "rev-users-update-response",
    "aggregated-schema-get-response",
    "custom-schema-fragments-get-response",
    "custom-schema-fragments-list-request-prune",
    "custom-schema-fragment-type",
    "custom-schema-fragments-list-response",
    "custom-schema-fragments-set-response",
    "stock-schema-fragments-get-response",
    "stock-schema-fragments-list-request-filter-preset",
    "stock-schema-fragments-list-request-prune",
    "stock-schema-fragments-list-response",
    "subtypes-list-response",
    "search-namespace",
    "search-sort-by-param",
    "search-sort-order-param",
    "search-core-response",
    "service-accounts-get-response",
    "slas-assign-response",
    "slas-create-response",
    "slas-get-response",
    "sla-status",
    "slas-list-response",
    "slas-transition-response",
    "slas-update-response",
    "snap-ins-resources-response",
    "snap-widgets-create-response",
    "sys-users-list-response",
    "sys-users-update-response",
    "tags-create-response",
    "tags-delete-response",
    "tags-get-response",
    "tags-list-response",
    "tags-update-response",
    "timeline-entries-create-response",
    "timeline-entries-delete-response",
    "timeline-entries-get-response",
    "timeline-entries-collection",
    "timeline-entry-visibility",
    "timeline-entries-list-response",
    "timeline-entries-update-response",
    "track-events-publish-response",
    "uoms-create-response",
    "uoms-get-response",
    "aggregation-detail-aggregation-type",
    "unit-type",
    "uoms-list-response",
    "uoms-update-response",
    "webhooks-create-response",
    "webhooks-delete-response",
    "webhooks-get-response",
    "webhooks-list-response",
    "webhooks-update-response",
    "works-create-response",
    "works-delete-response",
    "issue-priority",
    "sync-metadata-filter-sync-in-filter-status",
    "sync-metadata-filter-sync-out-filter-status",
    "ticket-channels",
    "ticket-severity",
    "work-type",
    "works-export-response",
    "works-get-response",
    "works-list-response",
    "works-update-response",
    "user-summary",
    "org-base",
    "artifact-summary",
    "tag-with-value",
    "search-summary-base",
    "account-summary",
    "org-base-summary",
    "set-tag-with-value",
    "account",
    "rev-org",
    "date-time-filter",
    "accounts-update-request-artifacts",
    "field-descriptor",
    "aggregated-schema",
    "custom-schema-fragment-condition",
    "schema-field-descriptor",
    "custom-schema-fragment-fragment-type",
    "custom-schema-fragment-summary",
    "custom-schema-fragment-base",
    "custom-schema-fragment-base-summary",
    "atom-base",
    "part-summary",
    "directory-summary",
    "resource",
    "article-summary",
    "atom-base-summary",
    "resource-summary",
    "shared-with-membership-filter",
    "access-level",
    "articles-create-request-resource",
    "shared-with-membership",
    "article-status",
    "article",
    "articles-update-request-applies-to-parts",
    "articles-update-request-artifacts",
    "articles-update-request-authored-by",
    "articles-update-request-extracted-content",
    "articles-update-request-owned-by",
    "articles-update-request-reorder",
    "articles-update-request-shared-with",
    "articles-update-request-tags",
    "artifact",
    "artifact-version",
    "artifacts-prepare-response-form-data",
    "artifacts-versions-prepare-response-form-data",
    "auth-token-status",
    "auth-token-grant-type",
    "auth-tokens-rev-info",
    "auth-token-subject-token-type",
    "auth-token-token-type",
    "auth-token",
    "auth-tokens-org-traits",
    "auth-tokens-user-traits",
    "part-base",
    "part-base-summary",
    "client-context-browser",
    "client-context-cpu",
    "client-context-device",
    "client-context-engine",
    "client-context-os",
    "client-context-page",
    "lines-of-code",
    "code-change-source",
    "code-change",
    "date-filter",
    "group-summary",
    "timeline-entry",
    "conversation-metadata",
    "legacy-stage",
    "conversation-summary",
    "conversations-create-request-message",
    "conversations-create-request-metadata",
    "stage-init",
    "conversations-create-request-type-value",
    "conversation",
    "sla-summary-filter",
    "stage-filter",
    "tag-with-value-filter",
    "conversations-update-request-applies-to-parts",
    "conversations-update-request-metadata",
    "stage-update",
    "conversations-update-request-tags",
    "conversations-update-request-user-sessions",
    "create-email-info",
    "create-email-inline-attachment",
    "vista-base-summary",
    "custom-schema-fragment",
    "custom-type-path-component",
    "stock-field-override",
    "stage-diagram-summary",
    "auth-connection",
    "auth-connection-toggle",
    "user-base",
    "external-identity",
    "user-base-summary",
    "dev-user",
    "dev-user-external-identity-filter",
    "snap-widget-namespace",
    "snap-widget-status",
    "snap-widget-base",
    "email-info",
    "email-inline-attachment",
    "engagements-create-request-engagement-type",
    "engagement",
    "engagements-update-request-artifact-ids",
    "engagements-update-request-members",
    "engagements-update-request-tags",
    "error-base",
    "error-bad-request-missing-dependency-dependency",
    "error-bad-request-unexpected-json-type-type",
    "part",
    "rev-user",
    "sla-tracker",
    "event-source-setup-instructions",
    "event-source-status",
    "event-source",
    "tag",
    "webhook",
    "work",
    "group-members-list-response-member",
    "member-summary",
    "grouped-vista-flavor",
    "dynamic-group-info",
    "group",
    "work-base",
    "legacy-stage-summary",
    "work-base-summary",
    "link-endpoint-summary",
    "link-summary",
    "link",
    "metric-data-point-dimension",
    "metric-definition",
    "metric-data-point",
    "metrics-data",
    "object-member-summary",
    "weekly-org-schedule",
    "org-schedule-fragment-overview",
    "org-schedule-interval",
    "org-schedule-fragment-status",
    "create-org-schedule-interval",
    "org-schedule-fragment",
    "set-weekly-org-schedule",
    "set-org-schedule-fragment-summary",
    "org-schedule",
    "org-summary",
    "parent-part-filter",
    "parts-update-request-artifacts",
    "parts-update-request-owned-by",
    "question-answer-summary",
    "org-environment",
    "rev-orgs-update-request-artifacts",
    "rev-users-update-request-artifacts",
    "rev-users-update-request-custom-schema-fragments",
    "schema-field-mfz-metadata",
    "schema-field-ui-metadata",
    "schema-field-descriptor-base",
    "schema-field-create-view-ui-metadata",
    "schema-field-detail-view-ui-metadata",
    "schema-field-filter-view-ui-metadata",
    "schema-field-list-view-ui-metadata",
    "schema-field-summary-view-ui-metadata",
    "schema-field-uenum-value",
    "search-result",
    "service-account",
    "set-support-metric-target",
    "set-sla-selector",
    "sla-selector-applies-to",
    "sla-selector-priority",
    "sla-selector-severity",
    "create-weekly-org-schedule-interval",
    "sla-compensation",
    "sla-evaluation-period",
    "sla-policy",
    "error",
    "rev-org-summary",
    "sla-assign-result",
    "accounts-filters",
    "set-sla-policy",
    "sla",
    "snap-ins-resources-response-event-sources-entry",
    "snap-ins-resources-response-keyrings-entry",
    "snap-in-version-summary",
    "snap-ins-resources-response-keyring-data",
    "snap-widget",
    "atom-summary",
    "stock-schema-fragment",
    "subtype",
    "sync-metadata-filter-sync-in-filter",
    "sync-metadata-filter-sync-out-filter",
    "sys-user",
    "tag-summary",
    "tags-update-allowed-values",
    "timeline-entry-object-type",
    "timeline-reaction",
    "timeline-thread",
    "timeline-entry-base",
    "timeline-comment-body-type",
    "timeline-snap-kit-body",
    "timeline-entry-base-summary",
    "timeline-entries-update-request-timeline-comment-artifacts",
    "timeline-entries-update-request-timeline-comment-link-previews",
    "client-context",
    "track-event",
    "aggregation-detail",
    "uom-metric-scope",
    "unit",
    "uom",
    "uoms-update-request-dimensions",
    "vista-summary",
    "webhook-event-type",
    "webhook-status",
    "event-account-created",
    "event-account-deleted",
    "event-account-updated",
    "event-conversation-created",
    "event-conversation-deleted",
    "event-conversation-updated",
    "event-dev-user-created",
    "event-dev-user-deleted",
    "event-dev-user-updated",
    "event-part-created",
    "event-part-deleted",
    "event-part-updated",
    "event-rev-org-created",
    "event-rev-org-deleted",
    "event-rev-org-updated",
    "event-rev-user-created",
    "event-rev-user-deleted",
    "event-rev-user-updated",
    "event-sla-tracker-created",
    "event-sla-tracker-deleted",
    "event-sla-tracker-updated",
    "event-tag-created",
    "event-tag-deleted",
    "event-tag-updated",
    "event-timeline-entry-created",
    "event-timeline-entry-deleted",
    "event-timeline-entry-updated",
    "webhook-event-verify",
    "event-webhook-created",
    "event-webhook-deleted",
    "event-webhook-updated",
    "event-work-created",
    "event-work-deleted",
    "event-work-updated",
    "webhooks-update-action",
    "webhooks-update-request-event-types",
    "work-summary",
    "custom-schema-spec",
    "opportunity-forecast-category",
    "opportunity-priority",
    "task-priority",
    "works-filter-issue",
    "works-filter-opportunity",
    "staged-info-filter",
    "sync-metadata-filter",
    "works-filter-ticket",
    "survey-aggregation-filter",
    "works-update-request-artifact-ids",
    "works-update-request-owned-by",
    "works-update-request-reported-by",
    "works-update-request-staged-info-staged-info-update",
    "works-update-request-tags",
    "works-update-request-issue-developed-with",
    "works-update-request-opportunity-contacts",
    "works-update-request-ticket-channels",
    "error-bad-request",
    "error-unauthorized",
    "error-forbidden",
    "error-not-found",
    "error-conflict",
    "error-too-many-requests",
    "error-internal-server-error",
    "error-service-unavailable",
  ],
  "schemas": {
    "access-level": {
      "description": null,
      "generatedName": "AccessLevel",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "external",
          "nameOverride": null,
          "value": "external",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "internal",
          "nameOverride": null,
          "value": "internal",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "private",
          "nameOverride": null,
          "value": "private",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "public",
          "nameOverride": null,
          "value": "public",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "restricted",
          "nameOverride": null,
          "value": "restricted",
        },
      ],
    },
    "account": {
      "allOf": [
        {
          "description": null,
          "generatedName": "OrgBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Account",
      "groupName": null,
      "nameOverride": "account",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "accountArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifacts attached to the Account.",
              "generatedName": "AccountArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "accountCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom fields.",
              "generatedName": "AccountCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "accountCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom schema fragments.",
              "generatedName": "AccountCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "accountDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the corresponding Account.",
              "generatedName": "AccountDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountDomains",
          "key": "domains",
          "schema": {
            "description": null,
            "generatedName": "accountDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Company's domain names. Example - 'devrev.ai'.",
              "generatedName": "AccountDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountExternalRefs",
          "key": "external_refs",
          "schema": {
            "description": "External refs are unique identifiers from your customer system of
records, stored as a list.
",
            "generatedName": "AccountExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AccountExternalRefsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": "List of Dev user IDs owning this Account.",
            "generatedName": "AccountOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AccountOwnedByItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountStockSchemaFragment",
          "key": "stock_schema_fragment",
          "schema": {
            "description": null,
            "generatedName": "accountStockSchemaFragment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Stock schema fragment.",
              "generatedName": "AccountStockSchemaFragment",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "accountSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Subtype corresponding to the custom type fragment.",
              "generatedName": "AccountSubtype",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "accountTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with an object.",
              "generatedName": "AccountTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "accountTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The Tier of the corresponding Account.",
              "generatedName": "AccountTier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "account-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AccountSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountSearchSummaryAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "AccountSearchSummaryAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": "account-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "account-summary": {
      "description": null,
      "generatedName": "AccountSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "org-base-summary",
      "type": "reference",
    },
    "accounts-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to create a new account in the Dev organization.
",
      "generatedName": "AccountsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the artifacts to associate with the account.",
              "generatedName": "AccountsCreateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsCreateRequestArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Application-defined custom fields.",
              "generatedName": "AccountsCreateRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountsCreateRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountsCreateRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the account.",
              "generatedName": "AccountsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": "Name of the account.",
            "generatedName": "AccountsCreateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestDomains",
          "key": "domains",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of company's domain names. Example - ['devrev.ai'].",
              "generatedName": "AccountsCreateRequestDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsCreateRequestDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestExternalRefs",
          "key": "external_refs",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External refs are unique identifiers from your customer system of
records, stored as a list. Currently the length of this field is
limited to 1.
",
              "generatedName": "AccountsCreateRequestExternalRefs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsCreateRequestExternalRefsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of Dev users owning this account.",
              "generatedName": "AccountsCreateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsCreateRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestSchemaFragmentIds",
          "key": "schema_fragment_ids",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestSchemaFragmentIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Schema fragment IDs associated with this account SOR.",
              "generatedName": "AccountsCreateRequestSchemaFragmentIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsCreateRequestSchemaFragmentIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the account.",
              "generatedName": "AccountsCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsCreateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The tier of the account.",
              "generatedName": "AccountsCreateRequestTier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateRequestWebsites",
          "key": "websites",
          "schema": {
            "description": null,
            "generatedName": "accountsCreateRequestWebsites",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of company websites. Example - ['www.devrev.ai',
'www.marketplace.devrev.ai'].
",
              "generatedName": "AccountsCreateRequestWebsites",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsCreateRequestWebsitesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a new account.",
      "generatedName": "AccountsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateResponseAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "AccountsCreateResponseAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": "account",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsCreateResponseDefaultRevOrg",
          "key": "default_rev_org",
          "schema": {
            "description": null,
            "generatedName": "AccountsCreateResponseDefaultRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "accounts-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to delete an account.",
      "generatedName": "AccountsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of account to delete.",
            "generatedName": "AccountsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "accounts-delete-response": {
      "description": "The response to deleting an account.",
      "generatedName": "AccountsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "AccountsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "AccountsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "accounts-export-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to export a collection of accounts.",
      "generatedName": "AccountsExportRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts created by the specified user(s).",
              "generatedName": "AccountsExportRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom fields.",
              "generatedName": "AccountsExportRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountsExportRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountsExportRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Array of display names of accounts to be filtered.",
              "generatedName": "AccountsExportRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestDisplayNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestDomains",
          "key": "domains",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Domains for accounts to be filtered.",
              "generatedName": "AccountsExportRequestDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestExternalRefs",
          "key": "external_refs",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Array of references of accounts to be filtered.",
              "generatedName": "AccountsExportRequestExternalRefs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestExternalRefsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestFirst",
          "key": "first",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestFirst",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of accounts to return. The default is '50'.",
              "generatedName": "AccountsExportRequestFirst",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsExportRequestModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts owned by the specified user(s).",
              "generatedName": "AccountsExportRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the accounts by and the direction to sort them in.
",
              "generatedName": "AccountsExportRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts on specified stages.",
              "generatedName": "AccountsExportRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "accountsExportRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of tags to be filtered.",
              "generatedName": "AccountsExportRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsExportRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-export-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to exporting a collection of accounts.",
      "generatedName": "AccountsExportResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsExportResponseAccounts",
          "key": "accounts",
          "schema": {
            "description": "The exported accounts.",
            "generatedName": "AccountsExportResponseAccounts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AccountsExportResponseAccountsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "account",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-filters": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AccountsFilters",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts created by the specified user(s).",
              "generatedName": "AccountsFiltersCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsFiltersCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsFiltersCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom fields.",
              "generatedName": "AccountsFiltersCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountsFiltersCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountsFiltersCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Array of display names of accounts to be filtered.",
              "generatedName": "AccountsFiltersDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsFiltersDisplayNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersDomains",
          "key": "domains",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Domains for accounts to be filtered.",
              "generatedName": "AccountsFiltersDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsFiltersDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersExternalRefs",
          "key": "external_refs",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Array of references of accounts to be filtered.",
              "generatedName": "AccountsFiltersExternalRefs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsFiltersExternalRefsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsFiltersModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts owned by the specified user(s).",
              "generatedName": "AccountsFiltersOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsFiltersOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts on specified stages.",
              "generatedName": "AccountsFiltersStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsFiltersStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsFiltersTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "accountsFiltersTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of tags to be filtered.",
              "generatedName": "AccountsFiltersTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsFiltersTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to get an account's information.",
      "generatedName": "AccountsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the account to be retrieved.",
            "generatedName": "AccountsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "accounts-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The returned account.",
      "generatedName": "AccountsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsGetResponseAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "AccountsGetResponseAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": "account",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "accounts-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "List the accounts.",
      "generatedName": "AccountsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts created by the specified user(s).",
              "generatedName": "AccountsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "AccountsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom fields.",
              "generatedName": "AccountsListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountsListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountsListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Array of display names of accounts to be filtered.",
              "generatedName": "AccountsListRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestDisplayNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestDomains",
          "key": "domains",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Domains for accounts to be filtered.",
              "generatedName": "AccountsListRequestDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestExternalRefs",
          "key": "external_refs",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Array of references of accounts to be filtered.",
              "generatedName": "AccountsListRequestExternalRefs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestExternalRefsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of accounts to return per page. The default is
'50'.
",
              "generatedName": "AccountsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsListRequestModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts owned by the specified user(s).",
              "generatedName": "AccountsListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the accounts by and the direction to sort them in.
",
              "generatedName": "AccountsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for accounts on specified stages.",
              "generatedName": "AccountsListRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "accountsListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of tags to be filtered.",
              "generatedName": "AccountsListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing all accounts matching the filter criteria.
",
      "generatedName": "AccountsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListResponseAccounts",
          "key": "accounts",
          "schema": {
            "description": "List containing all the accounts",
            "generatedName": "AccountsListResponseAccounts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AccountsListResponseAccountsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "account",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "accountsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "AccountsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "accountsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "AccountsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to update details of the account.",
      "generatedName": "AccountsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AccountsUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "accounts-update-request-artifacts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Application-defined custom fields.",
              "generatedName": "AccountsUpdateRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AccountsUpdateRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AccountsUpdateRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated description of the account.",
              "generatedName": "AccountsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated display name for the account.",
              "generatedName": "AccountsUpdateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestDomains",
          "key": "domains",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestDomains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated list of company's domain names. Example - ['devrev.ai'].
",
              "generatedName": "AccountsUpdateRequestDomains",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsUpdateRequestDomainsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestExternalRefs",
          "key": "external_refs",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestExternalRefs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated External Refs of account. Currently the length of this
field is limited to 1.
",
              "generatedName": "AccountsUpdateRequestExternalRefs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsUpdateRequestExternalRefsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of account to update.",
            "generatedName": "AccountsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated list of the users owning this account.",
              "generatedName": "AccountsUpdateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsUpdateRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestSchemaFragmentIds",
          "key": "schema_fragment_ids",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestSchemaFragmentIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Schema fragment IDs associated with this account SOR.",
              "generatedName": "AccountsUpdateRequestSchemaFragmentIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsUpdateRequestSchemaFragmentIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated tags list associated with the account.",
              "generatedName": "AccountsUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsUpdateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated tier of the account.",
              "generatedName": "AccountsUpdateRequestTier",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updated tier of the account.",
                "generatedName": "AccountsUpdateRequestTier",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-update-request-artifacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AccountsUpdateRequestArtifacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateRequestArtifactsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "accountsUpdateRequestArtifactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs to the provided artifact IDs.",
              "generatedName": "AccountsUpdateRequestArtifactsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AccountsUpdateRequestArtifactsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "accounts-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Updated account object.",
      "generatedName": "AccountsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "accountsUpdateResponseAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "AccountsUpdateResponseAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": "account",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "aggregated-schema": {
      "description": "List of custom fields from multiple source fragments.",
      "generatedName": "AggregatedSchema",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "AggregatedSchemaKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "AggregatedSchemaValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "aggregated-schema-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AggregatedSchemaGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "aggregatedSchemaGetRequestCustomSchemaFragmentIds",
          "key": "custom_schema_fragment_ids",
          "schema": {
            "description": "The list of custom schema fragment DONs which are to be aggregated.
",
            "generatedName": "AggregatedSchemaGetRequestCustomSchemaFragmentIds",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AggregatedSchemaGetRequestCustomSchemaFragmentIdsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "aggregatedSchemaGetRequestPerObjectSchema",
          "key": "per_object_schema",
          "schema": {
            "description": null,
            "generatedName": "aggregatedSchemaGetRequestPerObjectSchema",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Per object schema, if associated with the leaf type.",
              "generatedName": "AggregatedSchemaGetRequestPerObjectSchema",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AggregatedSchemaGetRequestPerObjectSchemaItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "field-descriptor",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "aggregatedSchemaGetRequestStockSchemaFragmentId",
          "key": "stock_schema_fragment_id",
          "schema": {
            "description": null,
            "generatedName": "aggregatedSchemaGetRequestStockSchemaFragmentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The stock schema fragment which is to be aggregated.",
              "generatedName": "AggregatedSchemaGetRequestStockSchemaFragmentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "aggregated-schema-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AggregatedSchemaGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "aggregatedSchemaGetResponseSchema",
          "key": "schema",
          "schema": {
            "description": null,
            "generatedName": "AggregatedSchemaGetResponseSchema",
            "groupName": null,
            "nameOverride": null,
            "schema": "aggregated-schema",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "aggregation-detail": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Stores aggregation type and dimension information.",
      "generatedName": "AggregationDetail",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "aggregationDetailAggregationType",
          "key": "aggregation_type",
          "schema": {
            "description": null,
            "generatedName": "AggregationDetailAggregationType",
            "groupName": null,
            "nameOverride": null,
            "schema": "aggregation-detail-aggregation-type",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "aggregationDetailUniqueDimension",
          "key": "unique_dimension",
          "schema": {
            "description": null,
            "generatedName": "aggregationDetailUniqueDimension",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Unique dimension if provided to be considered for grouping metering
data for the UOM.
",
              "generatedName": "AggregationDetailUniqueDimension",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "aggregation-detail-aggregation-type": {
      "description": "Aggregation type to be used while aggregating the metering data for the
UOM. 1] Sum - sum of all the values for the meter in a given period Ex.
{ M1:2, M1:4 } => {M1:6} 2] Minimum - min of all the values for the
meter in a given period Ex. { M1:2, M1:4 } => {M1:2} 3] Maximum - max
of all the values for the meter in a given period Ex. { M1:2, M1:4 } =>
{M1:4} 4] Unique Count - Sum of distinct unique dimension observed for
the meter in the given period (not considering the data from the
previous billing period) Ex. January {M1:{VM:VM0}}, February
{M1:{VM:VM1}, M1:{VM:VM2}, M1:{VM:VM1}} => {M1:2} 5] Running Total -
Sum of distinct active unique dimension observed for a meter in the
given period, taking into consideration the active data from the
previous billing cycle Ex. January {M1:{VM:VM0,on}, {M1:{VM:VM1,off}
February {M1:{VM:VM2, on}, M1:{VM:VM2, off}, M1:{VM:VM3, on}} => {M1:3}
6] Duration - Sum of distinct active unique dimension duration for a
meter in the given period, taking into consideration the active data
from the previous month Ex. January15 {M1:{VM:VM0,on, 4}} February15
{M1:{VM:VM0,off}, February18 {M1:{VM:VM1,on,5} => M1->
30*4*charge_per_day + 10*5*charge_per_day 7] Latest - consider the
latest/last meter in the given period 8] Oldest - consider the
oldest/first record in the given period.
",
      "generatedName": "AggregationDetailAggregationType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "duration",
          "nameOverride": null,
          "value": "duration",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "latest",
          "nameOverride": null,
          "value": "latest",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "maximum",
          "nameOverride": null,
          "value": "maximum",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "minimum",
          "nameOverride": null,
          "value": "minimum",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "oldest",
          "nameOverride": null,
          "value": "oldest",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "running_total",
          "nameOverride": null,
          "value": "running_total",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "sum",
          "nameOverride": null,
          "value": "sum",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "unique_count",
          "nameOverride": null,
          "value": "unique_count",
        },
      ],
    },
    "app-fragment": {
      "allOf": [
        {
          "description": null,
          "generatedName": "CustomSchemaFragmentBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragment-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AppFragment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "appFragmentApp",
          "key": "app",
          "schema": {
            "description": null,
            "generatedName": "appFragmentApp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "App this fragment applies to.",
              "generatedName": "AppFragmentApp",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "app-fragment-summary": {
      "description": null,
      "generatedName": "AppFragmentSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "custom-schema-fragment-base-summary",
      "type": "reference",
    },
    "article": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Article",
      "groupName": null,
      "nameOverride": "article",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": "Details of the parts relevant to the article.",
            "generatedName": "ArticleAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArticleAppliesToPartsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "part-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "articleDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the article.",
              "generatedName": "ArticleDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleExtractedContent",
          "key": "extracted_content",
          "schema": {
            "description": null,
            "generatedName": "articleExtractedContent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Artifacts containing the extracted content.",
              "generatedName": "ArticleExtractedContent",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticleExtractedContentItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleParent",
          "key": "parent",
          "schema": {
            "description": null,
            "generatedName": "articleParent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticleParent",
              "groupName": null,
              "nameOverride": null,
              "schema": "directory-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleRank",
          "key": "rank",
          "schema": {
            "description": null,
            "generatedName": "articleRank",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Rank of the article.",
              "generatedName": "ArticleRank",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleResource",
          "key": "resource",
          "schema": {
            "description": null,
            "generatedName": "articleResource",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticleResource",
              "groupName": null,
              "nameOverride": null,
              "schema": "resource",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "articleTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Title of the article.",
              "generatedName": "ArticleTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "article-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticleSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleSearchSummaryArticle",
          "key": "article",
          "schema": {
            "description": null,
            "generatedName": "ArticleSearchSummaryArticle",
            "groupName": null,
            "nameOverride": null,
            "schema": "article-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "article-status": {
      "description": "Status of the article.",
      "generatedName": "ArticleStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "archived",
          "nameOverride": null,
          "value": "archived",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "draft",
          "nameOverride": null,
          "value": "draft",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "published",
          "nameOverride": null,
          "value": "published",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "review_needed",
          "nameOverride": null,
          "value": "review_needed",
        },
      ],
    },
    "article-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticleSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleSummaryResource",
          "key": "resource",
          "schema": {
            "description": null,
            "generatedName": "articleSummaryResource",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticleSummaryResource",
              "groupName": null,
              "nameOverride": null,
              "schema": "resource-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articleSummaryTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "articleSummaryTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Title of the article.",
              "generatedName": "ArticleSummaryTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-count-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesCountRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCountRequestAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": null,
            "generatedName": "articlesCountRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles belonging to any of the provided parts.
",
              "generatedName": "ArticlesCountRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCountRequestAuthoredBy",
          "key": "authored_by",
          "schema": {
            "description": null,
            "generatedName": "articlesCountRequestAuthoredBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles authored by any of the provided users.
",
              "generatedName": "ArticlesCountRequestAuthoredBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestAuthoredByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCountRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "articlesCountRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles created by any of the provided users.
",
              "generatedName": "ArticlesCountRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCountRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "articlesCountRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles owned by any of the provided users.",
              "generatedName": "ArticlesCountRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCountRequestSharedWith",
          "key": "shared_with",
          "schema": {
            "description": null,
            "generatedName": "articlesCountRequestSharedWith",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filter for articles based on intended audience.",
              "generatedName": "ArticlesCountRequestSharedWith",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCountRequestSharedWithItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "shared-with-membership-filter",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-count-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesCountResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCountResponseCount",
          "key": "count",
          "schema": {
            "description": "The total number of articles matching the filter.",
            "generatedName": "ArticlesCountResponseCount",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "articles-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to create an article.",
      "generatedName": "ArticlesCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestAccessLevel",
          "key": "access_level",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestAccessLevel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesCreateRequestAccessLevel",
              "groupName": null,
              "nameOverride": null,
              "schema": "access-level",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": "The parts that the article applies to.",
            "generatedName": "ArticlesCreateRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArticlesCreateRequestAppliesToPartsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestAuthoredBy",
          "key": "authored_by",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestAuthoredBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The authors of the article.",
              "generatedName": "ArticlesCreateRequestAuthoredBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCreateRequestAuthoredByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description for the article.",
              "generatedName": "ArticlesCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestExtractedContent",
          "key": "extracted_content",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestExtractedContent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "ID of the extracted content artifact.",
              "generatedName": "ArticlesCreateRequestExtractedContent",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCreateRequestExtractedContentItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestLanguage",
          "key": "language",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestLanguage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Language of the article.",
              "generatedName": "ArticlesCreateRequestLanguage",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": "The users that own the article.",
            "generatedName": "ArticlesCreateRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArticlesCreateRequestOwnedByItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestParent",
          "key": "parent",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestParent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The parent directory of the article.",
              "generatedName": "ArticlesCreateRequestParent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestPublishedAt",
          "key": "published_at",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestPublishedAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The published date of the article.",
              "generatedName": "ArticlesCreateRequestPublishedAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestResource",
          "key": "resource",
          "schema": {
            "description": null,
            "generatedName": "ArticlesCreateRequestResource",
            "groupName": null,
            "nameOverride": null,
            "schema": "articles-create-request-resource",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestSharedWith",
          "key": "shared_with",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestSharedWith",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Information about the role the member receives due to the share.
",
              "generatedName": "ArticlesCreateRequestSharedWith",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCreateRequestSharedWithItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "shared-with-membership",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesCreateRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "article-status",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the article.",
              "generatedName": "ArticlesCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCreateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestTitle",
          "key": "title",
          "schema": {
            "description": "Name of the article.",
            "generatedName": "ArticlesCreateRequestTitle",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "articles-create-request-resource": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesCreateRequestResource",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestResourceArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestResourceArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "IDs of the artifacts.",
              "generatedName": "ArticlesCreateRequestResourceArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesCreateRequestResourceArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestResourcePublishedVersion",
          "key": "published_version",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestResourcePublishedVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The latest published version.",
              "generatedName": "ArticlesCreateRequestResourcePublishedVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateRequestResourceUrl",
          "key": "url",
          "schema": {
            "description": null,
            "generatedName": "articlesCreateRequestResourceUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "URL of the external article.",
              "generatedName": "ArticlesCreateRequestResourceUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Create article response.",
      "generatedName": "ArticlesCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesCreateResponseArticle",
          "key": "article",
          "schema": {
            "description": null,
            "generatedName": "ArticlesCreateResponseArticle",
            "groupName": null,
            "nameOverride": null,
            "schema": "article",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "articles-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete an article.",
      "generatedName": "ArticlesDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the article to delete.",
            "generatedName": "ArticlesDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "articles-delete-response": {
      "description": null,
      "generatedName": "ArticlesDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ArticlesDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ArticlesDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "articles-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get an article.",
      "generatedName": "ArticlesGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the required article.",
            "generatedName": "ArticlesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "articles-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Get article response.",
      "generatedName": "ArticlesGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesGetResponseArticle",
          "key": "article",
          "schema": {
            "description": null,
            "generatedName": "ArticlesGetResponseArticle",
            "groupName": null,
            "nameOverride": null,
            "schema": "article",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "articles-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to list articles.",
      "generatedName": "ArticlesListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles belonging to any of the provided parts.
",
              "generatedName": "ArticlesListRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesListRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestAuthoredBy",
          "key": "authored_by",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestAuthoredBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles authored by any of the provided users.
",
              "generatedName": "ArticlesListRequestAuthoredBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesListRequestAuthoredByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles created by any of the provided users.
",
              "generatedName": "ArticlesListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "ArticlesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of articles to return. The default is '50'.
",
              "generatedName": "ArticlesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for articles owned by any of the provided users.",
              "generatedName": "ArticlesListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListRequestSharedWith",
          "key": "shared_with",
          "schema": {
            "description": null,
            "generatedName": "articlesListRequestSharedWith",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filter for articles based on intended audience.",
              "generatedName": "ArticlesListRequestSharedWith",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesListRequestSharedWithItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "shared-with-membership-filter",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "List articles response.",
      "generatedName": "ArticlesListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListResponseArticles",
          "key": "articles",
          "schema": {
            "description": "The article entries matching the request.",
            "generatedName": "ArticlesListResponseArticles",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArticlesListResponseArticlesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "article",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "articlesListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "ArticlesListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "articlesListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "ArticlesListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesListResponseTotal",
          "key": "total",
          "schema": {
            "description": "Total number of article items for the request.",
            "generatedName": "ArticlesListResponseTotal",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to update an article.",
      "generatedName": "ArticlesUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestAccessLevel",
          "key": "access_level",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestAccessLevel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestAccessLevel",
              "groupName": null,
              "nameOverride": null,
              "schema": "access-level",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-applies-to-parts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-artifacts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestAuthoredBy",
          "key": "authored_by",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestAuthoredBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestAuthoredBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-authored-by",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated description of the article object, or unchanged if not
provided.
",
              "generatedName": "ArticlesUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestExtractedContent",
          "key": "extracted_content",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestExtractedContent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestExtractedContent",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-extracted-content",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The article's ID.",
            "generatedName": "ArticlesUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestLanguage",
          "key": "language",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestLanguage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the language of the article.",
              "generatedName": "ArticlesUpdateRequestLanguage",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-owned-by",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestParent",
          "key": "parent",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestParent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated parent directory for the article.",
              "generatedName": "ArticlesUpdateRequestParent",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The updated parent directory for the article.",
                "generatedName": "ArticlesUpdateRequestParent",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestPublishedVersion",
          "key": "published_version",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestPublishedVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the the latest published version.",
              "generatedName": "ArticlesUpdateRequestPublishedVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestReorder",
          "key": "reorder",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestReorder",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestReorder",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-reorder",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestSharedWith",
          "key": "shared_with",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestSharedWith",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestSharedWith",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-shared-with",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "article-status",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArticlesUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "schema": "articles-update-request-tags",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated title of the article object, or unchanged if not provided.
",
              "generatedName": "ArticlesUpdateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestUrl",
          "key": "url",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the URL of the external article.",
              "generatedName": "ArticlesUpdateRequestUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-applies-to-parts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestAppliesToParts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestAppliesToPartsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestAppliesToPartsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the parts that the article applies to.",
              "generatedName": "ArticlesUpdateRequestAppliesToPartsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesUpdateRequestAppliesToPartsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-artifacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestArtifacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestArtifactsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestArtifactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates IDs of the artifacts.",
              "generatedName": "ArticlesUpdateRequestArtifactsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesUpdateRequestArtifactsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-authored-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestAuthoredBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestAuthoredBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestAuthoredBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the users that authored the article.",
              "generatedName": "ArticlesUpdateRequestAuthoredBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesUpdateRequestAuthoredBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-extracted-content": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestExtractedContent",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestExtractedContentSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestExtractedContentSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Update the ID of the extracted content.",
              "generatedName": "ArticlesUpdateRequestExtractedContentSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesUpdateRequestExtractedContentSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-owned-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestOwnedBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestOwnedBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestOwnedBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
              "generatedName": "ArticlesUpdateRequestOwnedBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesUpdateRequestOwnedBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-reorder": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestReorder",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestReorderAfter",
          "key": "after",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestReorderAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The article after which the reordered article is placed.",
              "generatedName": "ArticlesUpdateRequestReorderAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestReorderBefore",
          "key": "before",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestReorderBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The article before which the reordered article is placed.
",
              "generatedName": "ArticlesUpdateRequestReorderBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-shared-with": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestSharedWith",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestSharedWithSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestSharedWithSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the field to the provided membership list.",
              "generatedName": "ArticlesUpdateRequestSharedWithSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesUpdateRequestSharedWithSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "shared-with-membership",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-request-tags": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateRequestTags",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateRequestTagsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "articlesUpdateRequestTagsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the provided tags on the article.",
              "generatedName": "ArticlesUpdateRequestTagsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ArticlesUpdateRequestTagsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "articles-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArticlesUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "articlesUpdateResponseArticle",
          "key": "article",
          "schema": {
            "description": null,
            "generatedName": "ArticlesUpdateResponseArticle",
            "groupName": null,
            "nameOverride": null,
            "schema": "article",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "artifact": {
      "description": null,
      "generatedName": "Artifact",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base",
      "type": "reference",
    },
    "artifact-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArtifactSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactSearchSummaryArtifact",
          "key": "artifact",
          "schema": {
            "description": null,
            "generatedName": "ArtifactSearchSummaryArtifact",
            "groupName": null,
            "nameOverride": null,
            "schema": "artifact-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "artifact-summary": {
      "description": null,
      "generatedName": "ArtifactSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "artifact-version": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The version of the artifact.",
      "generatedName": "ArtifactVersion",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactVersionModifiedBy",
          "key": "modified_by",
          "schema": {
            "description": null,
            "generatedName": "artifactVersionModifiedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ArtifactVersionModifiedBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactVersionTimestamp",
          "key": "timestamp",
          "schema": {
            "description": "The timestamp at which the version was created.",
            "generatedName": "ArtifactVersionTimestamp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactVersionVersion",
          "key": "version",
          "schema": {
            "description": "The version of the artifact.",
            "generatedName": "ArtifactVersionVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get an artifact's information.",
      "generatedName": "ArtifactsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The requested artifact's ID.",
            "generatedName": "ArtifactsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsGetRequestVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "artifactsGetRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The version of the artifact that needs to be fetched.",
              "generatedName": "ArtifactsGetRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "artifacts-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting an artifact's information.",
      "generatedName": "ArtifactsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsGetResponseArtifact",
          "key": "artifact",
          "schema": {
            "description": null,
            "generatedName": "ArtifactsGetResponseArtifact",
            "groupName": null,
            "nameOverride": null,
            "schema": "artifact",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsGetResponseVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "ArtifactsGetResponseVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": "artifact-version",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to list artifacts attached to an object.",
      "generatedName": "ArtifactsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsListRequestParentId",
          "key": "parent_id",
          "schema": {
            "description": "The ID of the object to filter artifacts.",
            "generatedName": "ArtifactsListRequestParentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to list artifacts attached to an object.",
      "generatedName": "ArtifactsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsListResponseArtifacts",
          "key": "artifacts",
          "schema": {
            "description": "The artifact's information.",
            "generatedName": "ArtifactsListResponseArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArtifactsListResponseArtifactsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifact",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "artifacts-locate-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get an artifact's download URL.",
      "generatedName": "ArtifactsLocateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsLocateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the artifact to get the URL for.",
            "generatedName": "ArtifactsLocateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsLocateRequestVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "artifactsLocateRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The version of the artifact that needs to be fetched.",
              "generatedName": "ArtifactsLocateRequestVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "artifacts-locate-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting an artifact's download URL.",
      "generatedName": "ArtifactsLocateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsLocateResponseExpiresAt",
          "key": "expires_at",
          "schema": {
            "description": null,
            "generatedName": "artifactsLocateResponseExpiresAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expiration timestamp of the URL.",
              "generatedName": "ArtifactsLocateResponseExpiresAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsLocateResponseUrl",
          "key": "url",
          "schema": {
            "description": "The artifact's download URL.",
            "generatedName": "ArtifactsLocateResponseUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-prepare-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to prepare a URL to upload a file.",
      "generatedName": "ArtifactsPrepareRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareRequestFileName",
          "key": "file_name",
          "schema": {
            "description": "The name of the file that's being uploaded.",
            "generatedName": "ArtifactsPrepareRequestFileName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareRequestFileType",
          "key": "file_type",
          "schema": {
            "description": null,
            "generatedName": "artifactsPrepareRequestFileType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The type of file that's being uploaded.",
              "generatedName": "ArtifactsPrepareRequestFileType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "artifacts-prepare-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to preparing a URL to upload a file.",
      "generatedName": "ArtifactsPrepareResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseFormData",
          "key": "form_data",
          "schema": {
            "description": "The POST policy form data.",
            "generatedName": "ArtifactsPrepareResponseFormData",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArtifactsPrepareResponseFormDataItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifacts-prepare-response-form-data",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseId",
          "key": "id",
          "schema": {
            "description": "The generated artifact's ID.",
            "generatedName": "ArtifactsPrepareResponseId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseUrl",
          "key": "url",
          "schema": {
            "description": "The URL that the file's data should be uploaded to.",
            "generatedName": "ArtifactsPrepareResponseUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-prepare-response-form-data": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArtifactsPrepareResponseFormData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseFormDataKey",
          "key": "key",
          "schema": {
            "description": "Key of the form field.",
            "generatedName": "ArtifactsPrepareResponseFormDataKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseFormDataValue",
          "key": "value",
          "schema": {
            "description": "Value corresponding to the key.",
            "generatedName": "ArtifactsPrepareResponseFormDataValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-versions-prepare-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to prepare a new version of an artifact.",
      "generatedName": "ArtifactsVersionsPrepareRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsVersionsPrepareRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the artifact to prepare a new version for.",
            "generatedName": "ArtifactsVersionsPrepareRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-versions-prepare-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to preparing a new artifact version.",
      "generatedName": "ArtifactsVersionsPrepareResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsVersionsPrepareResponseFormData",
          "key": "form_data",
          "schema": {
            "description": "The POST policy form data.",
            "generatedName": "ArtifactsVersionsPrepareResponseFormData",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArtifactsVersionsPrepareResponseFormDataItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifacts-versions-prepare-response-form-data",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsVersionsPrepareResponseUrl",
          "key": "url",
          "schema": {
            "description": "The URL that the file's data should be uploaded to.",
            "generatedName": "ArtifactsVersionsPrepareResponseUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-versions-prepare-response-form-data": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArtifactsVersionsPrepareResponseFormData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsVersionsPrepareResponseFormDataKey",
          "key": "key",
          "schema": {
            "description": "Key of the form field.",
            "generatedName": "ArtifactsVersionsPrepareResponseFormDataKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsVersionsPrepareResponseFormDataValue",
          "key": "value",
          "schema": {
            "description": "Value corresponding to the key.",
            "generatedName": "ArtifactsVersionsPrepareResponseFormDataValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "atom-base": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AtomBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "atomBaseCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AtomBaseCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "atomBaseCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the object was created.",
              "generatedName": "AtomBaseCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseDisplayId",
          "key": "display_id",
          "schema": {
            "description": null,
            "generatedName": "atomBaseDisplayId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable object ID unique to the Dev organization.",
              "generatedName": "AtomBaseDisplayId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseId",
          "key": "id",
          "schema": {
            "description": "Globally unique object ID.",
            "generatedName": "AtomBaseId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseModifiedBy",
          "key": "modified_by",
          "schema": {
            "description": null,
            "generatedName": "atomBaseModifiedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AtomBaseModifiedBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "atomBaseModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the object was last modified.",
              "generatedName": "AtomBaseModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "atom-base-summary": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AtomBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseSummaryDisplayId",
          "key": "display_id",
          "schema": {
            "description": null,
            "generatedName": "atomBaseSummaryDisplayId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable object ID unique to the Dev organization.",
              "generatedName": "AtomBaseSummaryDisplayId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseSummaryId",
          "key": "id",
          "schema": {
            "description": "Globally unique object ID.",
            "generatedName": "AtomBaseSummaryId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "atom-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "AtomSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "account": {
            "description": null,
            "generatedName": "ComponentsSchemasAccountSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "account-summary",
            "type": "reference",
          },
          "app_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasAppFragmentSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "app-fragment-summary",
            "type": "reference",
          },
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasCapabilitySummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "capability-summary",
            "type": "reference",
          },
          "conversation": {
            "description": null,
            "generatedName": "ComponentsSchemasConversationSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation-summary",
            "type": "reference",
          },
          "custom_type_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasCustomTypeFragmentSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "custom-type-fragment-summary",
            "type": "reference",
          },
          "dev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasDevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user-summary",
            "type": "reference",
          },
          "engagement": {
            "description": null,
            "generatedName": "ComponentsSchemasEngagementSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "engagement-summary",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasEnhancementSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "enhancement-summary",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasFeatureSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "feature-summary",
            "type": "reference",
          },
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasIssueSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "issue-summary",
            "type": "reference",
          },
          "meeting": {
            "description": null,
            "generatedName": "ComponentsSchemasMeetingSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "meeting-summary",
            "type": "reference",
          },
          "opportunity": {
            "description": null,
            "generatedName": "ComponentsSchemasOpportunitySummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "opportunity-summary",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasProductSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "product-summary",
            "type": "reference",
          },
          "rev_org": {
            "description": null,
            "generatedName": "ComponentsSchemasRevOrgSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org-summary",
            "type": "reference",
          },
          "rev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasRevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user-summary",
            "type": "reference",
          },
          "service_account": {
            "description": null,
            "generatedName": "ComponentsSchemasServiceAccountSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "service-account-summary",
            "type": "reference",
          },
          "sys_user": {
            "description": null,
            "generatedName": "ComponentsSchemasSysUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "sys-user-summary",
            "type": "reference",
          },
          "tag": {
            "description": null,
            "generatedName": "ComponentsSchemasTagSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag-summary",
            "type": "reference",
          },
          "task": {
            "description": null,
            "generatedName": "ComponentsSchemasTaskSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "task-summary",
            "type": "reference",
          },
          "tenant_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasTenantFragmentSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "tenant-fragment-summary",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasTicketSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "ticket-summary",
            "type": "reference",
          },
          "timeline_comment": {
            "description": null,
            "generatedName": "ComponentsSchemasTimelineCommentSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-comment-summary",
            "type": "reference",
          },
          "webhook": {
            "description": null,
            "generatedName": "ComponentsSchemasWebhookSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "atom-type": {
      "description": null,
      "generatedName": "AtomType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account",
          "nameOverride": null,
          "value": "account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "app_fragment",
          "nameOverride": null,
          "value": "app_fragment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "capability",
          "nameOverride": null,
          "value": "capability",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation",
          "nameOverride": null,
          "value": "conversation",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "custom_type_fragment",
          "nameOverride": null,
          "value": "custom_type_fragment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user",
          "nameOverride": null,
          "value": "dev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "engagement",
          "nameOverride": null,
          "value": "engagement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enhancement",
          "nameOverride": null,
          "value": "enhancement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "feature",
          "nameOverride": null,
          "value": "feature",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "issue",
          "nameOverride": null,
          "value": "issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "meeting",
          "nameOverride": null,
          "value": "meeting",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "opportunity",
          "nameOverride": null,
          "value": "opportunity",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "product",
          "nameOverride": null,
          "value": "product",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org",
          "nameOverride": null,
          "value": "rev_org",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user",
          "nameOverride": null,
          "value": "rev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "service_account",
          "nameOverride": null,
          "value": "service_account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "sys_user",
          "nameOverride": null,
          "value": "sys_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag",
          "nameOverride": null,
          "value": "tag",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "task",
          "nameOverride": null,
          "value": "task",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tenant_fragment",
          "nameOverride": null,
          "value": "tenant_fragment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_comment",
          "nameOverride": null,
          "value": "timeline_comment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "webhook",
          "nameOverride": null,
          "value": "webhook",
        },
      ],
    },
    "auth-connection": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "display_name",
            "schema": {
              "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
              "generatedName": "AuthConnectionDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                "generatedName": "AuthConnectionDisplayName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "enabled",
            "schema": {
              "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
              "generatedName": "AuthConnectionEnabled",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                "generatedName": "AuthConnectionEnabled",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "ID of the authentication connection.",
              "generatedName": "AuthConnectionId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": "Connection object that specifies the configuration for an
authentication connection that is set up for a Dev organization.
",
        "discriminantProperty": "type",
        "generatedName": "AuthConnection",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "google_apps": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-google-apps",
            "type": "reference",
          },
          "oidc": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-oidc",
            "type": "reference",
          },
          "samlp": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-saml",
            "type": "reference",
          },
          "social": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSocial",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-social",
            "type": "reference",
          },
          "waad": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-azure-ad",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "auth-connection-options-azure-ad": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for an Azure AD
authentication connection.
",
      "generatedName": "AuthConnectionOptionsAzureAd",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsAzureAdClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsAzureAdClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client ID for the Azure authentication connection.",
              "generatedName": "AuthConnectionOptionsAzureAdClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsAzureAdClientSecret",
          "key": "client_secret",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsAzureAdClientSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client secret for the Azure authentication connection.",
              "generatedName": "AuthConnectionOptionsAzureAdClientSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsAzureAdDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsAzureAdDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Domain URL of the Azure authentication connection.",
              "generatedName": "AuthConnectionOptionsAzureAdDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-google-apps": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for a Google Apps
authentication connection.
",
      "generatedName": "AuthConnectionOptionsGoogleApps",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsGoogleAppsClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsGoogleAppsClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client ID for the Google Apps authentication connection.",
              "generatedName": "AuthConnectionOptionsGoogleAppsClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsGoogleAppsClientSecret",
          "key": "client_secret",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsGoogleAppsClientSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client secret for the Google Apps authentication connection.
",
              "generatedName": "AuthConnectionOptionsGoogleAppsClientSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsGoogleAppsTenantDomain",
          "key": "tenant_domain",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsGoogleAppsTenantDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tenant domain URL of the Google Apps authentication connection.
",
              "generatedName": "AuthConnectionOptionsGoogleAppsTenantDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-oidc": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for an OIDC
authentication connection.
",
      "generatedName": "AuthConnectionOptionsOidc",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsOidcClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsOidcClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client ID for the OIDC authentication connection.",
              "generatedName": "AuthConnectionOptionsOidcClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsOidcClientSecret",
          "key": "client_secret",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsOidcClientSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client secret for the OIDC authentication connection.",
              "generatedName": "AuthConnectionOptionsOidcClientSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsOidcIssuer",
          "key": "issuer",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsOidcIssuer",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Issuer URL of the OIDC authentication connection.",
              "generatedName": "AuthConnectionOptionsOidcIssuer",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-saml": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for a SAML
authentication connection.
",
      "generatedName": "AuthConnectionOptionsSaml",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsSamlSignInEndpoint",
          "key": "sign_in_endpoint",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsSamlSignInEndpoint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sign In endpoint for the SAML authentication connection.",
              "generatedName": "AuthConnectionOptionsSamlSignInEndpoint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsSamlSigningCert",
          "key": "signing_cert",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsSamlSigningCert",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Signing certificate for the SAML authentication connection.
",
              "generatedName": "AuthConnectionOptionsSamlSigningCert",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-social": {
      "description": null,
      "generatedName": "AuthConnectionOptionsSocial",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "AuthConnectionOptionsSocialKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "AuthConnectionOptionsSocialValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "auth-connection-toggle": {
      "description": null,
      "generatedName": "AuthConnectionToggle",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "disable",
          "nameOverride": null,
          "value": "disable",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enable",
          "nameOverride": null,
          "value": "enable",
        },
      ],
    },
    "auth-connection-type": {
      "description": "Defines the type for the authentication connection. The configuration
for each authentication connection will depend on the type value.
",
      "generatedName": "AuthConnectionType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "google_apps",
          "nameOverride": null,
          "value": "google_apps",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "oidc",
          "nameOverride": null,
          "value": "oidc",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "samlp",
          "nameOverride": null,
          "value": "samlp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "social",
          "nameOverride": null,
          "value": "social",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "waad",
          "nameOverride": null,
          "value": "waad",
        },
      ],
    },
    "auth-token": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AuthToken",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authTokenClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier that represents the application that requested the
token. Only applicable for application access tokens.
",
              "generatedName": "AuthTokenClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenExpiresAt",
          "key": "expires_at",
          "schema": {
            "description": null,
            "generatedName": "authTokenExpiresAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time at which the token expires.",
              "generatedName": "AuthTokenExpiresAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenIssuedAt",
          "key": "issued_at",
          "schema": {
            "description": null,
            "generatedName": "authTokenIssuedAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time at which the token was issued.",
              "generatedName": "AuthTokenIssuedAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenRequestedTokenType",
          "key": "requested_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokenRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokenRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenScopes",
          "key": "scopes",
          "schema": {
            "description": null,
            "generatedName": "authTokenScopes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The scopes associated with the issued token.",
              "generatedName": "AuthTokenScopes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AuthTokenScopesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "authTokenStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokenStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-status",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenSubject",
          "key": "subject",
          "schema": {
            "description": null,
            "generatedName": "authTokenSubject",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The subject of the token.",
              "generatedName": "AuthTokenSubject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenTokenHint",
          "key": "token_hint",
          "schema": {
            "description": null,
            "generatedName": "authTokenTokenHint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A hint that identifies the token.",
              "generatedName": "AuthTokenTokenHint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-token-grant-type": {
      "description": "Specifies the process of obtaining a token.",
      "generatedName": "AuthTokenGrantType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthGrantTypeTokenIssue",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:grant-type:token-issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnIetfParamsOauthGrantTypeTokenExchange",
          "nameOverride": null,
          "value": "urn:ietf:params:oauth:grant-type:token-exchange",
        },
      ],
    },
    "auth-token-requested-token-type": {
      "description": "The type of the requested token.",
      "generatedName": "AuthTokenRequestedTokenType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeAat",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:aat",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeAatPublic",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:aat:public",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeDev",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:dev",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeGat",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:gat",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypePat",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:pat",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypePatActAs",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:pat:act-as",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeRat",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:rat",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeRev",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:rev",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:session",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSessionDev0",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:session:dev0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSessionOnetime",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:session:onetime",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSuper",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:super",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSys",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:sys",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
          "nameOverride": null,
          "value": "urn:ietf:params:oauth:token-type:jwt",
        },
      ],
    },
    "auth-token-status": {
      "description": "The status of the token.",
      "generatedName": "AuthTokenStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "active",
          "nameOverride": null,
          "value": "active",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "expired",
          "nameOverride": null,
          "value": "expired",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "revoked",
          "nameOverride": null,
          "value": "revoked",
        },
      ],
    },
    "auth-token-subject-token-type": {
      "description": "The type of the subject token.",
      "generatedName": "AuthTokenSubjectTokenType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeJwtAuth0",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeJwtDev",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:jwt:dev",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeRat",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:rat",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeRevinfo",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:revinfo",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:session",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSysu",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:sysu",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfo",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:userinfo",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfoProfile",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
          "nameOverride": null,
          "value": "urn:ietf:params:oauth:token-type:jwt",
        },
      ],
    },
    "auth-token-token-type": {
      "description": "The type of the issued token. Bearer is the only supported token type.
",
      "generatedName": "AuthTokenTokenType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "bearer",
      },
    },
    "auth-tokens-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to create a new token corresponding to the requested token
type.
",
      "generatedName": "AuthTokensCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestActAs",
          "key": "act_as",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestActAs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The unique ID of the Dev user to impersonate.",
              "generatedName": "AuthTokensCreateRequestActAs",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestAud",
          "key": "aud",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestAud",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expected audience values with respect to the token.",
              "generatedName": "AuthTokensCreateRequestAud",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AuthTokensCreateRequestAudItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier that represents the application which is requesting
the token. If no client_id is present in the request to generate an
application access token (AAT), DevRev will generate a client_id.
This client_id is only associated with an AAT.
",
              "generatedName": "AuthTokensCreateRequestClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestExpiresIn",
          "key": "expires_in",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestExpiresIn",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expected validity lifetime of the token in number of days. In
practice, the value should be based on the usage of the token.
",
              "generatedName": "AuthTokensCreateRequestExpiresIn",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestGrantType",
          "key": "grant_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestGrantType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestGrantType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-grant-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestRequestedTokenType",
          "key": "requested_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestRevInfo",
          "key": "rev_info",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestRevInfo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestRevInfo",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-tokens-rev-info",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestScope",
          "key": "scope",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestScope",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The requested set of scopes associated with the issued token. A
space-delimited list of values in which the order of values does
not matter.
",
              "generatedName": "AuthTokensCreateRequestScope",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestSubjectToken",
          "key": "subject_token",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestSubjectToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Represents the entity that requests the token. Not required when
requesting an application access token (AAT).
",
              "generatedName": "AuthTokensCreateRequestSubjectToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestSubjectTokenType",
          "key": "subject_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestSubjectTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestSubjectTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-subject-token-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestTokenHint",
          "key": "token_hint",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestTokenHint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A hint that identifies the token.",
              "generatedName": "AuthTokensCreateRequestTokenHint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to create a new token corresponding to the
requested token type.
",
      "generatedName": "AuthTokensCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseAccessToken",
          "key": "access_token",
          "schema": {
            "description": "The issued JSON Web Token (JWT) corresponding to the requested
token type.
",
            "generatedName": "AuthTokensCreateResponseAccessToken",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateResponseClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier that represents the application which is requesting
the token. Only present in a response corresponding to an
application access token (AAT).
",
              "generatedName": "AuthTokensCreateResponseClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseExpiresIn",
          "key": "expires_in",
          "schema": {
            "description": "The validity lifetime of the token specified in seconds since Unix
epoch.
",
            "generatedName": "AuthTokensCreateResponseExpiresIn",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseRefreshToken",
          "key": "refresh_token",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateResponseRefreshToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A token to refresh the issued token.",
              "generatedName": "AuthTokensCreateResponseRefreshToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseScope",
          "key": "scope",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateResponseScope",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The scopes associated with the issued token. A space-delimited list
of values in which the order of values does not matter.
",
              "generatedName": "AuthTokensCreateResponseScope",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseTokenType",
          "key": "token_type",
          "schema": {
            "description": null,
            "generatedName": "AuthTokensCreateResponseTokenType",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-token-token-type",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to revoke the token.",
      "generatedName": "AuthTokensDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensDeleteRequestTokenId",
          "key": "token_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensDeleteRequestTokenId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The unique identifier for the token under a given Dev organization.
If no token ID is provided, then the token ID will be set from the
JTI claim of the token in the authorization header.
",
              "generatedName": "AuthTokensDeleteRequestTokenId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get the token metadata.",
      "generatedName": "AuthTokensGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensGetRequestTokenId",
          "key": "token_id",
          "schema": {
            "description": "The unique identifier of the token under a given Dev organization.
",
            "generatedName": "AuthTokensGetRequestTokenId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to get the token metadata.",
      "generatedName": "AuthTokensGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensGetResponseToken",
          "key": "token",
          "schema": {
            "description": null,
            "generatedName": "AuthTokensGetResponseToken",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-token",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to list the token metadata.",
      "generatedName": "AuthTokensListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensListRequestClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensListRequestClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier that represents the application, which requested the
token. Only relevant for application access tokens.
",
              "generatedName": "AuthTokensListRequestClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensListRequestRequestedTokenType",
          "key": "requested_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensListRequestRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListRequestRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensListRequestSubject",
          "key": "subject",
          "schema": {
            "description": null,
            "generatedName": "authTokensListRequestSubject",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The subject associated with the token. In the absence of this
parameter, the ID of the authenticated entity is treated as the
subject.
",
              "generatedName": "AuthTokensListRequestSubject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to list the token metadata.",
      "generatedName": "AuthTokensListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensListResponseTokens",
          "key": "tokens",
          "schema": {
            "description": "The list of token metadata.",
            "generatedName": "AuthTokensListResponseTokens",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListResponseTokensItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-org-traits": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Carries Rev org info.",
      "generatedName": "AuthTokensOrgTraits",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Application-defined custom fields of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AuthTokensOrgTraitsCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AuthTokensOrgTraitsCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The description of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The display name of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The domain of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsPhoneNumbers",
          "key": "phone_numbers",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsPhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Phone numbers of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsPhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AuthTokensOrgTraitsPhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The tier of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsTier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-rev-info": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Carries info corresponding to the Rev user to be provisioned and/or
issue a Rev session token.
",
      "generatedName": "AuthTokensRevInfo",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoOrgRef",
          "key": "org_ref",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoOrgRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier which uniquely identifies a Rev org.",
              "generatedName": "AuthTokensRevInfoOrgRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoOrgTraits",
          "key": "org_traits",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoOrgTraits",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensRevInfoOrgTraits",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-tokens-org-traits",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoUserId",
          "key": "user_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoUserId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The unique ID of the Rev user.",
              "generatedName": "AuthTokensRevInfoUserId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoUserRef",
          "key": "user_ref",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoUserRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier which uniquely identifies a Rev user.",
              "generatedName": "AuthTokensRevInfoUserRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoUserTraits",
          "key": "user_traits",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoUserTraits",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensRevInfoUserTraits",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-tokens-user-traits",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-self-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete all the tokens created by the authenticated user,
that match with the provided token type.
",
      "generatedName": "AuthTokensSelfDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensSelfDeleteRequestRequestedTokenType",
          "key": "requested_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensSelfDeleteRequestRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensSelfDeleteRequestRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to update the token metadata.",
      "generatedName": "AuthTokensUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUpdateRequestTokenHint",
          "key": "token_hint",
          "schema": {
            "description": "A hint that identifies the token.",
            "generatedName": "AuthTokensUpdateRequestTokenHint",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUpdateRequestTokenId",
          "key": "token_id",
          "schema": {
            "description": "The unique identifier of the token under a given Dev organization.
",
            "generatedName": "AuthTokensUpdateRequestTokenId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to update the token metadata.",
      "generatedName": "AuthTokensUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUpdateResponseToken",
          "key": "token",
          "schema": {
            "description": null,
            "generatedName": "AuthTokensUpdateResponseToken",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-token",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-user-traits": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Carries Rev user info.",
      "generatedName": "AuthTokensUserTraits",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Application-defined custom fields of the Rev user.",
              "generatedName": "AuthTokensUserTraitsCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "AuthTokensUserTraitsCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "AuthTokensUserTraitsCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The description of the Rev user.",
              "generatedName": "AuthTokensUserTraitsDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The display name of the Rev user.",
              "generatedName": "AuthTokensUserTraitsDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The email address of the Rev user.",
              "generatedName": "AuthTokensUserTraitsEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsFullName",
          "key": "full_name",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsFullName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The full name of the Rev user.",
              "generatedName": "AuthTokensUserTraitsFullName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsPhoneNumbers",
          "key": "phone_numbers",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsPhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Phone numbers of the Rev user.",
              "generatedName": "AuthTokensUserTraitsPhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AuthTokensUserTraitsPhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "capability": {
      "description": null,
      "generatedName": "Capability",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base",
      "type": "reference",
    },
    "capability-summary": {
      "description": null,
      "generatedName": "CapabilitySummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "client-context": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Properties of client to be used in track API.",
      "generatedName": "ClientContext",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextBrowser",
          "key": "browser",
          "schema": {
            "description": null,
            "generatedName": "clientContextBrowser",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ClientContextBrowser",
              "groupName": null,
              "nameOverride": null,
              "schema": "client-context-browser",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextCpu",
          "key": "cpu",
          "schema": {
            "description": null,
            "generatedName": "clientContextCpu",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ClientContextCpu",
              "groupName": null,
              "nameOverride": null,
              "schema": "client-context-cpu",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextDevice",
          "key": "device",
          "schema": {
            "description": null,
            "generatedName": "clientContextDevice",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ClientContextDevice",
              "groupName": null,
              "nameOverride": null,
              "schema": "client-context-device",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextEngine",
          "key": "engine",
          "schema": {
            "description": null,
            "generatedName": "clientContextEngine",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ClientContextEngine",
              "groupName": null,
              "nameOverride": null,
              "schema": "client-context-engine",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextIp",
          "key": "ip",
          "schema": {
            "description": null,
            "generatedName": "clientContextIp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "IP address of the client.",
              "generatedName": "ClientContextIp",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextLocale",
          "key": "locale",
          "schema": {
            "description": null,
            "generatedName": "clientContextLocale",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The client's locale, example: en-US.",
              "generatedName": "ClientContextLocale",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextOs",
          "key": "os",
          "schema": {
            "description": null,
            "generatedName": "clientContextOs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ClientContextOs",
              "groupName": null,
              "nameOverride": null,
              "schema": "client-context-os",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextPage",
          "key": "page",
          "schema": {
            "description": null,
            "generatedName": "clientContextPage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ClientContextPage",
              "groupName": null,
              "nameOverride": null,
              "schema": "client-context-page",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextTimezone",
          "key": "timezone",
          "schema": {
            "description": null,
            "generatedName": "clientContextTimezone",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The client's timezone, example: Asia/Kolkata.",
              "generatedName": "ClientContextTimezone",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextUserAgent",
          "key": "user_agent",
          "schema": {
            "description": null,
            "generatedName": "clientContextUserAgent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "User agent of the client, example: Mozilla/5.0 (Macintosh; Intel
Mac OS X.
",
              "generatedName": "ClientContextUserAgent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "client-context-browser": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Properties of client's browser to be used in track API.",
      "generatedName": "ClientContextBrowser",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextBrowserName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "clientContextBrowserName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The browser's name, example: Chrome, Safari.",
              "generatedName": "ClientContextBrowserName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextBrowserVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "clientContextBrowserVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The browser's version, example: 53.0.2785.143.",
              "generatedName": "ClientContextBrowserVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "client-context-cpu": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Properties of client's CPU to be used in track API.",
      "generatedName": "ClientContextCpu",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextCpuArchitecture",
          "key": "architecture",
          "schema": {
            "description": null,
            "generatedName": "clientContextCpuArchitecture",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "CPU architecture, example: amd64.",
              "generatedName": "ClientContextCpuArchitecture",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "client-context-device": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Properties of client's device to be used in track API.",
      "generatedName": "ClientContextDevice",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextDeviceManufacturer",
          "key": "manufacturer",
          "schema": {
            "description": null,
            "generatedName": "clientContextDeviceManufacturer",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Device manufacturer, example: Apple.",
              "generatedName": "ClientContextDeviceManufacturer",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextDeviceModel",
          "key": "model",
          "schema": {
            "description": null,
            "generatedName": "clientContextDeviceModel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Device model, example: iphone 6s.",
              "generatedName": "ClientContextDeviceModel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextDeviceType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "clientContextDeviceType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Device type, example: mobile, tablet, desktop.",
              "generatedName": "ClientContextDeviceType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "client-context-engine": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Properties of client's engine to be used in track API.",
      "generatedName": "ClientContextEngine",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextEngineName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "clientContextEngineName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The engine's name, example: Blink, WebKit.",
              "generatedName": "ClientContextEngineName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextEngineVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "clientContextEngineVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The engine's version, example: 537.36.",
              "generatedName": "ClientContextEngineVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "client-context-os": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Properties of client's OS to be used in track API.",
      "generatedName": "ClientContextOs",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextOsName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "clientContextOsName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The OS's name, example : Windows, Mac OS X.",
              "generatedName": "ClientContextOsName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextOsVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "clientContextOsVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The OS's version, example : 10.11.1.",
              "generatedName": "ClientContextOsVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "client-context-page": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Properties of client's page to be used in track API.",
      "generatedName": "ClientContextPage",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextPageDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "clientContextPageDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Page domain, example: devrev.ai",
              "generatedName": "ClientContextPageDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextPagePath",
          "key": "path",
          "schema": {
            "description": null,
            "generatedName": "clientContextPagePath",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Page path, example: /pricing",
              "generatedName": "ClientContextPagePath",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextPageReferrer",
          "key": "referrer",
          "schema": {
            "description": null,
            "generatedName": "clientContextPageReferrer",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Page referrer, example: https://devrev.ai",
              "generatedName": "ClientContextPageReferrer",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextPageTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "clientContextPageTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Page title, example: Pricing",
              "generatedName": "ClientContextPageTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "clientContextPageUrl",
          "key": "url",
          "schema": {
            "description": null,
            "generatedName": "clientContextPageUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Page URL, example: https://devrev.ai/pricing",
              "generatedName": "ClientContextPageUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "code-change": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChange",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeBranch",
          "key": "branch",
          "schema": {
            "description": null,
            "generatedName": "codeChangeBranch",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the code branch in the repo.",
              "generatedName": "CodeChangeBranch",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "codeChangeDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Detailed description of the contents of this change.",
              "generatedName": "CodeChangeDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeExternalIdentifier",
          "key": "external_identifier",
          "schema": {
            "description": null,
            "generatedName": "codeChangeExternalIdentifier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Unique external identifier for this change.e.g Pull Request URL.
",
              "generatedName": "CodeChangeExternalIdentifier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeFilteredLoc",
          "key": "filtered_loc",
          "schema": {
            "description": null,
            "generatedName": "codeChangeFilteredLoc",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CodeChangeFilteredLoc",
              "groupName": null,
              "nameOverride": null,
              "schema": "lines-of-code",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeRepoUrl",
          "key": "repo_url",
          "schema": {
            "description": null,
            "generatedName": "codeChangeRepoUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "URL pointing to the repo this change was on.",
              "generatedName": "CodeChangeRepoUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeSource",
          "key": "source",
          "schema": {
            "description": null,
            "generatedName": "codeChangeSource",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CodeChangeSource",
              "groupName": null,
              "nameOverride": null,
              "schema": "code-change-source",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "codeChangeTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Title describing in brief the contents of this change.",
              "generatedName": "CodeChangeTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangeTotalLoc",
          "key": "total_loc",
          "schema": {
            "description": null,
            "generatedName": "codeChangeTotalLoc",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CodeChangeTotalLoc",
              "groupName": null,
              "nameOverride": null,
              "schema": "lines-of-code",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "code-change-source": {
      "description": "Source of the code change object.",
      "generatedName": "CodeChangeSource",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "github",
      },
    },
    "code-changes-create-request": {
      "description": null,
      "generatedName": "CodeChangesCreateRequest",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "CodeChangesCreateRequestKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "CodeChangesCreateRequestValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "code-changes-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesCreateResponseCodeChange",
          "key": "code_change",
          "schema": {
            "description": null,
            "generatedName": "CodeChangesCreateResponseCodeChange",
            "groupName": null,
            "nameOverride": null,
            "schema": "code-change",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "code-changes-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "ID of the code change object which is to be deleted.",
            "generatedName": "CodeChangesDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "code-changes-delete-response": {
      "description": null,
      "generatedName": "CodeChangesDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "CodeChangesDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "CodeChangesDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "code-changes-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesGetRequestId",
          "key": "id",
          "schema": {
            "description": "The code change object ID.",
            "generatedName": "CodeChangesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "code-changes-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesGetResponseCodeChange",
          "key": "code_change",
          "schema": {
            "description": null,
            "generatedName": "CodeChangesGetResponseCodeChange",
            "groupName": null,
            "nameOverride": null,
            "schema": "code-change",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "code-changes-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListRequestCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "codeChangesListRequestCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CodeChangesListRequestCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "codeChangesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "CodeChangesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "codeChangesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of code change objects to return. The default is
'50'.
",
              "generatedName": "CodeChangesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "codeChangesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CodeChangesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListRequestModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "codeChangesListRequestModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CodeChangesListRequestModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "code-changes-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListResponseCodeChanges",
          "key": "code_changes",
          "schema": {
            "description": "The list of requested code change objects.",
            "generatedName": "CodeChangesListResponseCodeChanges",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "CodeChangesListResponseCodeChangesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "code-change",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "codeChangesListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "CodeChangesListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "codeChangesListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "CodeChangesListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "code-changes-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the code change object to be updated.",
            "generatedName": "CodeChangesUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "code-changes-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CodeChangesUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "codeChangesUpdateResponseCodeChange",
          "key": "code_change",
          "schema": {
            "description": null,
            "generatedName": "CodeChangesUpdateResponseCodeChange",
            "groupName": null,
            "nameOverride": null,
            "schema": "code-change",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "conversation": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Conversation",
      "groupName": null,
      "nameOverride": "conversation",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "conversationDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the conversation object.",
              "generatedName": "ConversationDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "conversationGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": "group-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationMembers",
          "key": "members",
          "schema": {
            "description": "The users in the conversation.",
            "generatedName": "ConversationMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ConversationMembersItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationMessages",
          "key": "messages",
          "schema": {
            "description": null,
            "generatedName": "conversationMessages",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The latest messages on the conversation.",
              "generatedName": "ConversationMessages",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationMessagesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-entry",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationMetadata",
          "key": "metadata",
          "schema": {
            "description": null,
            "generatedName": "conversationMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationMetadata",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversation-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "conversationOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Owner IDs for the conversation.",
              "generatedName": "ConversationOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "user-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "conversationStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "legacy-stage",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "conversationTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the object.",
              "generatedName": "ConversationTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "conversationTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Title of the conversation object.",
              "generatedName": "ConversationTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversation-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Metadata on conversation.",
      "generatedName": "ConversationMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationMetadataUrlContext",
          "key": "url_context",
          "schema": {
            "description": null,
            "generatedName": "conversationMetadataUrlContext",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "URL from which the conversation was created if the conversation was
created via PLuG.
",
              "generatedName": "ConversationMetadataUrlContext",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversation-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationSearchSummaryConversation",
          "key": "conversation",
          "schema": {
            "description": null,
            "generatedName": "ConversationSearchSummaryConversation",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "conversation-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationSummaryTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "conversationSummaryTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Title of the conversation object.",
              "generatedName": "ConversationSummaryTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to create a new conversation.",
      "generatedName": "ConversationsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description for the conversation.",
              "generatedName": "ConversationsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The group that the conversation is associated with.",
              "generatedName": "ConversationsCreateRequestGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestIsSpam",
          "key": "is_spam",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the conversation is spam.",
              "generatedName": "ConversationsCreateRequestIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestMembers",
          "key": "members",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The users in the conversation.",
              "generatedName": "ConversationsCreateRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsCreateRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestMessages",
          "key": "messages",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestMessages",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Initial messages on the conversation.",
              "generatedName": "ConversationsCreateRequestMessages",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsCreateRequestMessagesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "conversations-create-request-message",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestMetadata",
          "key": "metadata",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsCreateRequestMetadata",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversations-create-request-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestSourceChannel",
          "key": "source_channel",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestSourceChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the conversation is from a source channel.",
              "generatedName": "ConversationsCreateRequestSourceChannel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsCreateRequestStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage-init",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the conversation.",
              "generatedName": "ConversationsCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsCreateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The title for the conversation.",
              "generatedName": "ConversationsCreateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "ConversationsCreateRequestType",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversations-create-request-type-value",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestUserSessions",
          "key": "user_sessions",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestUserSessions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of user sessions associated with the conversation.
",
              "generatedName": "ConversationsCreateRequestUserSessions",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsCreateRequestUserSessionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-create-request-message": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsCreateRequestMessage",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestMessageArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestMessageArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the artifacts to the message.",
              "generatedName": "ConversationsCreateRequestMessageArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsCreateRequestMessageArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestMessageBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestMessageBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The message's body.",
              "generatedName": "ConversationsCreateRequestMessageBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-create-request-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsCreateRequestMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateRequestMetadataUrlContext",
          "key": "url_context",
          "schema": {
            "description": null,
            "generatedName": "conversationsCreateRequestMetadataUrlContext",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsCreateRequestMetadataUrlContext",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-create-request-type-value": {
      "description": null,
      "generatedName": "ConversationsCreateRequestTypeValue",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "support",
      },
    },
    "conversations-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a new conversation.",
      "generatedName": "ConversationsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsCreateResponseConversation",
          "key": "conversation",
          "schema": {
            "description": null,
            "generatedName": "ConversationsCreateResponseConversation",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "conversations-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete a conversation.",
      "generatedName": "ConversationsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the conversation to delete.",
            "generatedName": "ConversationsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "conversations-delete-response": {
      "description": "The response for deleting a conversation.",
      "generatedName": "ConversationsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ConversationsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ConversationsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "conversations-export-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsExportRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations belonging to any of the provided parts.
",
              "generatedName": "ConversationsExportRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestFirst",
          "key": "first",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestFirst",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of conversation items to return. The default is '50',
the maximum is '5000'.
",
              "generatedName": "ConversationsExportRequestFirst",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversation that belong to the given groups.
",
              "generatedName": "ConversationsExportRequestGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestGroupItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestIsCreatorVerified",
          "key": "is_creator_verified",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestIsCreatorVerified",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations that are created by verified users.
",
              "generatedName": "ConversationsExportRequestIsCreatorVerified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestIsSpam",
          "key": "is_spam",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations that are spam.",
              "generatedName": "ConversationsExportRequestIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestMembers",
          "key": "members",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations where these users are participants.
",
              "generatedName": "ConversationsExportRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations owned by any of these users.",
              "generatedName": "ConversationsExportRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations that are associated with any of the
provided Rev organizations.
",
              "generatedName": "ConversationsExportRequestRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestSlaSummary",
          "key": "sla_summary",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestSlaSummary",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestSlaSummary",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-summary-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestSourceChannels",
          "key": "source_channels",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestSourceChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations with any of the provided source channels.
",
              "generatedName": "ConversationsExportRequestSourceChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestSourceChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportRequestStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations with any of the provided tags.",
              "generatedName": "ConversationsExportRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportRequestTagsV2",
          "key": "tags_v2",
          "schema": {
            "description": null,
            "generatedName": "conversationsExportRequestTagsV2",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations with any of the provided tags with value.
",
              "generatedName": "ConversationsExportRequestTagsV2",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsExportRequestTagsV2Item",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value-filter",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-export-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsExportResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsExportResponseConversations",
          "key": "conversations",
          "schema": {
            "description": "The resulting collection of conversation items.",
            "generatedName": "ConversationsExportResponseConversations",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ConversationsExportResponseConversationsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversation",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get a conversation's information.",
      "generatedName": "ConversationsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The requested conversation's ID.",
            "generatedName": "ConversationsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "conversations-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a conversation's information.",
      "generatedName": "ConversationsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsGetResponseConversation",
          "key": "conversation",
          "schema": {
            "description": null,
            "generatedName": "ConversationsGetResponseConversation",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "conversations-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get information about a list of conversations.
",
      "generatedName": "ConversationsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations belonging to any of the provided parts.
",
              "generatedName": "ConversationsListRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestAppliesToPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "ConversationsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversation that belong to the given groups.
",
              "generatedName": "ConversationsListRequestGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestGroupItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestIsCreatorVerified",
          "key": "is_creator_verified",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestIsCreatorVerified",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations that are created by verified users.
",
              "generatedName": "ConversationsListRequestIsCreatorVerified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestIsSpam",
          "key": "is_spam",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations that are spam.",
              "generatedName": "ConversationsListRequestIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of conversations to return. The default is '50'.
",
              "generatedName": "ConversationsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestMembers",
          "key": "members",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations where these users are participants.
",
              "generatedName": "ConversationsListRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations owned by any of these users.",
              "generatedName": "ConversationsListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations that are associated with any of the
provided Rev organizations.
",
              "generatedName": "ConversationsListRequestRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestSlaSummary",
          "key": "sla_summary",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestSlaSummary",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestSlaSummary",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-summary-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestSourceChannels",
          "key": "source_channels",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestSourceChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations with any of the provided source channels.
",
              "generatedName": "ConversationsListRequestSourceChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestSourceChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsListRequestStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations with any of the provided tags.",
              "generatedName": "ConversationsListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListRequestTagsV2",
          "key": "tags_v2",
          "schema": {
            "description": null,
            "generatedName": "conversationsListRequestTagsV2",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for conversations with any of the provided tags with value.
",
              "generatedName": "ConversationsListRequestTagsV2",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsListRequestTagsV2Item",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value-filter",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the conversations.",
      "generatedName": "ConversationsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListResponseConversations",
          "key": "conversations",
          "schema": {
            "description": "The list of conversations.",
            "generatedName": "ConversationsListResponseConversations",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ConversationsListResponseConversationsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversation",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "conversationsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "ConversationsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "conversationsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "ConversationsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to update a conversation.",
      "generatedName": "ConversationsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestAppliesToParts",
          "key": "applies_to_parts",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestAppliesToParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsUpdateRequestAppliesToParts",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversations-update-request-applies-to-parts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated description for the conversation.",
              "generatedName": "ConversationsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The group that the conversation is associated with.",
              "generatedName": "ConversationsUpdateRequestGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the conversation to update.",
            "generatedName": "ConversationsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestIsSpam",
          "key": "is_spam",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the conversation is spam.",
              "generatedName": "ConversationsUpdateRequestIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestMetadata",
          "key": "metadata",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsUpdateRequestMetadata",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversations-update-request-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsUpdateRequestStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage-update",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated status of the conversation.",
              "generatedName": "ConversationsUpdateRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversations-update-request-tags",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated title of the conversation.",
              "generatedName": "ConversationsUpdateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestUserSessions",
          "key": "user_sessions",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestUserSessions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsUpdateRequestUserSessions",
              "groupName": null,
              "nameOverride": null,
              "schema": "conversations-update-request-user-sessions",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-update-request-applies-to-parts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsUpdateRequestAppliesToParts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestAppliesToPartsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestAppliesToPartsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the parts that the conversation applies to.",
              "generatedName": "ConversationsUpdateRequestAppliesToPartsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsUpdateRequestAppliesToPartsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-update-request-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsUpdateRequestMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestMetadataUrlContext",
          "key": "url_context",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestMetadataUrlContext",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConversationsUpdateRequestMetadataUrlContext",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-update-request-tags": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsUpdateRequestTags",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestTagsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestTagsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the tag IDs to the provided tags.",
              "generatedName": "ConversationsUpdateRequestTagsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsUpdateRequestTagsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-update-request-user-sessions": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConversationsUpdateRequestUserSessions",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateRequestUserSessionsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "conversationsUpdateRequestUserSessionsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated user sessions that the conversation is associated with.
",
              "generatedName": "ConversationsUpdateRequestUserSessionsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ConversationsUpdateRequestUserSessionsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "conversations-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response for updating a conversation.",
      "generatedName": "ConversationsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conversationsUpdateResponseConversation",
          "key": "conversation",
          "schema": {
            "description": null,
            "generatedName": "ConversationsUpdateResponseConversation",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "create-email-info": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Information related to an email.",
      "generatedName": "CreateEmailInfo",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailInfoAddress",
          "key": "address",
          "schema": {
            "description": "The address of the email address.",
            "generatedName": "CreateEmailInfoAddress",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailInfoName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "createEmailInfoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the email address.",
              "generatedName": "CreateEmailInfoName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailInfoUser",
          "key": "user",
          "schema": {
            "description": null,
            "generatedName": "createEmailInfoUser",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the user associated with the email address.",
              "generatedName": "CreateEmailInfoUser",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "create-email-inline-attachment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "An inline attachment.",
      "generatedName": "CreateEmailInlineAttachment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailInlineAttachmentArtifact",
          "key": "artifact",
          "schema": {
            "description": null,
            "generatedName": "createEmailInlineAttachmentArtifact",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifact of the attachment.",
              "generatedName": "CreateEmailInlineAttachmentArtifact",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailInlineAttachmentContentId",
          "key": "content_id",
          "schema": {
            "description": null,
            "generatedName": "createEmailInlineAttachmentContentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The content id of the attachment.",
              "generatedName": "CreateEmailInlineAttachmentContentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "create-email-preview-widget": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "An email preview widget.",
      "generatedName": "CreateEmailPreviewWidget",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetBcc",
          "key": "bcc",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetBcc",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of bcc addresses.",
              "generatedName": "CreateEmailPreviewWidgetBcc",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateEmailPreviewWidgetBccItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "create-email-info",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetCc",
          "key": "cc",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetCc",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of cc addresses.",
              "generatedName": "CreateEmailPreviewWidgetCc",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateEmailPreviewWidgetCcItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "create-email-info",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetFrom",
          "key": "from",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetFrom",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of from addresses.",
              "generatedName": "CreateEmailPreviewWidgetFrom",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateEmailPreviewWidgetFromItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "create-email-info",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetHtmlBody",
          "key": "html_body",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetHtmlBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The html body of the email.",
              "generatedName": "CreateEmailPreviewWidgetHtmlBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetInReplyTo",
          "key": "in_reply_to",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetInReplyTo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The in reply to of the email.",
              "generatedName": "CreateEmailPreviewWidgetInReplyTo",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetInlines",
          "key": "inlines",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetInlines",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of inline attachments.",
              "generatedName": "CreateEmailPreviewWidgetInlines",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateEmailPreviewWidgetInlinesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "create-email-inline-attachment",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetMessageId",
          "key": "message_id",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetMessageId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The message id of the email.",
              "generatedName": "CreateEmailPreviewWidgetMessageId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetRawEmailArtifact",
          "key": "raw_email_artifact",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetRawEmailArtifact",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The raw email artifact.",
              "generatedName": "CreateEmailPreviewWidgetRawEmailArtifact",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetReferences",
          "key": "references",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetReferences",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of references in the email.",
              "generatedName": "CreateEmailPreviewWidgetReferences",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateEmailPreviewWidgetReferencesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetReplyTo",
          "key": "reply_to",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetReplyTo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of reply to addresses.",
              "generatedName": "CreateEmailPreviewWidgetReplyTo",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateEmailPreviewWidgetReplyToItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "create-email-info",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetSentTimestamp",
          "key": "sent_timestamp",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetSentTimestamp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time the email was sent.",
              "generatedName": "CreateEmailPreviewWidgetSentTimestamp",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetSubject",
          "key": "subject",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetSubject",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The subject of the email.",
              "generatedName": "CreateEmailPreviewWidgetSubject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetTextBody",
          "key": "text_body",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetTextBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The text body of the email.",
              "generatedName": "CreateEmailPreviewWidgetTextBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createEmailPreviewWidgetTo",
          "key": "to",
          "schema": {
            "description": null,
            "generatedName": "createEmailPreviewWidgetTo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of to addresses.",
              "generatedName": "CreateEmailPreviewWidgetTo",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateEmailPreviewWidgetToItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "create-email-info",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "create-org-schedule-interval": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateOrgScheduleInterval",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createOrgScheduleIntervalFrom",
          "key": "from",
          "schema": {
            "description": "Date (inclusive) on which the interval begins.",
            "generatedName": "CreateOrgScheduleIntervalFrom",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createOrgScheduleIntervalIsExcluded",
          "key": "is_excluded",
          "schema": {
            "description": null,
            "generatedName": "createOrgScheduleIntervalIsExcluded",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "If true, no organization schedule is looked up for these days and
they are marked as holidays.
",
              "generatedName": "CreateOrgScheduleIntervalIsExcluded",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createOrgScheduleIntervalName",
          "key": "name",
          "schema": {
            "description": "The name of the period, for example the event or holiday it
represents.
",
            "generatedName": "CreateOrgScheduleIntervalName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createOrgScheduleIntervalTo",
          "key": "to",
          "schema": {
            "description": null,
            "generatedName": "createOrgScheduleIntervalTo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Date (exclusive) on which the interval ends. If omitted, it is a
single day interval.
",
              "generatedName": "CreateOrgScheduleIntervalTo",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "create-weekly-org-schedule-interval": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CreateWeeklyOrgScheduleInterval",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createWeeklyOrgScheduleIntervalFrom",
          "key": "from",
          "schema": {
            "description": "Duration in minutes of the week when the interval starts. 0 is
Sunday midnight, when Sunday ends and Monday begins.
",
            "generatedName": "CreateWeeklyOrgScheduleIntervalFrom",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createWeeklyOrgScheduleIntervalTo",
          "key": "to",
          "schema": {
            "description": "Duration in minutes of the week when the interval ends (must be
larger than 'from'). 0 is Sunday midnight, when Sunday ends and
Monday begins.
",
            "generatedName": "CreateWeeklyOrgScheduleIntervalTo",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "curated-vista-summary": {
      "description": "Static collection of Devrev objects.",
      "generatedName": "CuratedVistaSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "vista-base-summary",
      "type": "reference",
    },
    "custom-schema-fragment": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "CustomSchemaFragment",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "app_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasAppFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "app-fragment",
            "type": "reference",
          },
          "custom_type_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasCustomTypeFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "custom-type-fragment",
            "type": "reference",
          },
          "tenant_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasTenantFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "tenant-fragment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "custom-schema-fragment-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseConditions",
          "key": "conditions",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseConditions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The conditions associated with the fields.",
              "generatedName": "CustomSchemaFragmentBaseConditions",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentBaseConditionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-schema-fragment-condition",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseDeprecated",
          "key": "deprecated",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseDeprecated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Indicates if the fragment has been deprecated. Modifications to
this field are done in-place and don't result in creation of a new
fragment in chain.
",
              "generatedName": "CustomSchemaFragmentBaseDeprecated",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the custom schema fragment.",
              "generatedName": "CustomSchemaFragmentBaseDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseFields",
          "key": "fields",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of all fields in this custom schema fragment.",
              "generatedName": "CustomSchemaFragmentBaseFields",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentBaseFieldsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "schema-field-descriptor",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseFragmentType",
          "key": "fragment_type",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseFragmentType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentBaseFragmentType",
              "groupName": null,
              "nameOverride": null,
              "schema": "custom-schema-fragment-fragment-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseLeafType",
          "key": "leaf_type",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Leaf type this fragment applies to.",
              "generatedName": "CustomSchemaFragmentBaseLeafType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseNewFragmentRef",
          "key": "new_fragment_ref",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseNewFragmentRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentBaseNewFragmentRef",
              "groupName": null,
              "nameOverride": null,
              "schema": "custom-schema-fragment-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentBaseOldFragmentRef",
          "key": "old_fragment_ref",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentBaseOldFragmentRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentBaseOldFragmentRef",
              "groupName": null,
              "nameOverride": null,
              "schema": "custom-schema-fragment-summary",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragment-base-summary": {
      "description": null,
      "generatedName": "CustomSchemaFragmentBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "custom-schema-fragment-condition": {
      "description": "The condition associated with a field.",
      "generatedName": "CustomSchemaFragmentCondition",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "CustomSchemaFragmentConditionKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "CustomSchemaFragmentConditionValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "custom-schema-fragment-fragment-type": {
      "description": "Type of the custom schema fragment.",
      "generatedName": "CustomSchemaFragmentFragmentType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "app",
          "nameOverride": null,
          "value": "app",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "custom_type",
          "nameOverride": null,
          "value": "custom_type",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tenant",
          "nameOverride": null,
          "value": "tenant",
        },
      ],
    },
    "custom-schema-fragment-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "CustomSchemaFragmentSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "app_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasAppFragmentSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "app-fragment-summary",
            "type": "reference",
          },
          "custom_type_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasCustomTypeFragmentSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "custom-type-fragment-summary",
            "type": "reference",
          },
          "tenant_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasTenantFragmentSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "tenant-fragment-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "custom-schema-fragment-type": {
      "description": null,
      "generatedName": "CustomSchemaFragmentType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "app_fragment",
          "nameOverride": null,
          "value": "app_fragment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "custom_type_fragment",
          "nameOverride": null,
          "value": "custom_type_fragment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tenant_fragment",
          "nameOverride": null,
          "value": "tenant_fragment",
        },
      ],
    },
    "custom-schema-fragments-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the custom schema fragment.",
            "generatedName": "CustomSchemaFragmentsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragments-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsGetResponseFragment",
          "key": "fragment",
          "schema": {
            "description": null,
            "generatedName": "CustomSchemaFragmentsGetResponseFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "custom-schema-fragment",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragments-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestApp",
          "key": "app",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestApp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of app names.",
              "generatedName": "CustomSchemaFragmentsListRequestApp",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestAppItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from, otherwise if not provided,
then iteration starts from the beginning.
",
              "generatedName": "CustomSchemaFragmentsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestDeprecated",
          "key": "deprecated",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestDeprecated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether only deprecated fragments should be filtered.",
              "generatedName": "CustomSchemaFragmentsListRequestDeprecated",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestLeafType",
          "key": "leaf_type",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of leaf types.",
              "generatedName": "CustomSchemaFragmentsListRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestLeafTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of items.",
              "generatedName": "CustomSchemaFragmentsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestPrune",
          "key": "prune",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestPrune",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of fields which are not required in the payload and can be
pruned away.
",
              "generatedName": "CustomSchemaFragmentsListRequestPrune",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestPruneItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-schema-fragments-list-request-prune",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of fields to sort the items by and how to sort them.
",
              "generatedName": "CustomSchemaFragmentsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of subtypes.",
              "generatedName": "CustomSchemaFragmentsListRequestSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListRequestTypes",
          "key": "types",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListRequestTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom schema fragment of the provided types.
",
              "generatedName": "CustomSchemaFragmentsListRequestTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsListRequestTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-schema-fragment-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragments-list-request-prune": {
      "description": null,
      "generatedName": "CustomSchemaFragmentsListRequestPrune",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "fields",
      },
    },
    "custom-schema-fragments-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListResponseCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsListResponseCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from, otherwise if not provided,
then iteration starts from the beginning.
",
              "generatedName": "CustomSchemaFragmentsListResponseCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsListResponseResult",
          "key": "result",
          "schema": {
            "description": "The custom schema fragments.",
            "generatedName": "CustomSchemaFragmentsListResponseResult",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "CustomSchemaFragmentsListResponseResultItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "custom-schema-fragment",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragments-set-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "conditions",
            "schema": {
              "description": "List of conditions for this fragment.",
              "generatedName": "CustomSchemaFragmentsSetRequestConditions",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "List of conditions for this fragment.",
                "generatedName": "CustomSchemaFragmentsSetRequestConditions",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "CustomSchemaFragmentsSetRequestConditionsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "custom-schema-fragment-condition",
                  "type": "reference",
                },
              },
            },
          },
          {
            "key": "deleted_fields",
            "schema": {
              "description": "List of field names which are being dropped.",
              "generatedName": "CustomSchemaFragmentsSetRequestDeletedFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "List of field names which are being dropped.",
                "generatedName": "CustomSchemaFragmentsSetRequestDeletedFields",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "CustomSchemaFragmentsSetRequestDeletedFieldsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "deprecated",
            "schema": {
              "description": "Whether this fragment has been deprecated.",
              "generatedName": "CustomSchemaFragmentsSetRequestDeprecated",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Whether this fragment has been deprecated.",
                "generatedName": "CustomSchemaFragmentsSetRequestDeprecated",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "description",
            "schema": {
              "description": "The description of the custom schema fragment.",
              "generatedName": "CustomSchemaFragmentsSetRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "fields",
            "schema": {
              "description": "List of all fields in this fragment.",
              "generatedName": "CustomSchemaFragmentsSetRequestFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "List of all fields in this fragment.",
                "generatedName": "CustomSchemaFragmentsSetRequestFields",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "CustomSchemaFragmentsSetRequestFieldsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "schema-field-descriptor",
                  "type": "reference",
                },
              },
            },
          },
          {
            "key": "leaf_type",
            "schema": {
              "description": "The leaf type this fragment applies to.",
              "generatedName": "CustomSchemaFragmentsSetRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "CustomSchemaFragmentsSetRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "app_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasCustomSchemaFragmentsSetRequestAppFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "custom-schema-fragments-set-request-app-fragment",
            "type": "reference",
          },
          "custom_type_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasCustomSchemaFragmentsSetRequestCustomTypeFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "custom-schema-fragments-set-request-custom-type-fragment",
            "type": "reference",
          },
          "tenant_fragment": {
            "description": null,
            "generatedName": "ComponentsSchemasCustomSchemaFragmentsSetRequestTenantFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "custom-schema-fragments-set-request-tenant-fragment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "custom-schema-fragments-set-request-app-fragment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsSetRequestAppFragment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetRequestAppFragmentApp",
          "key": "app",
          "schema": {
            "description": "The app this fragment applies to.",
            "generatedName": "CustomSchemaFragmentsSetRequestAppFragmentApp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragments-set-request-custom-type-fragment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentPath",
          "key": "path",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentPath",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Path components used to display available custom types in tree
form.
",
              "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragmentPath",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragmentPathItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-type-path-component",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentStageDiagram",
          "key": "stage_diagram",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentStageDiagram",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the associated custom stage diagram.",
              "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragmentStageDiagram",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentStockFieldOverrides",
          "key": "stock_field_overrides",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentStockFieldOverrides",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of Per-DevOrg stock field overrides.",
              "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragmentStockFieldOverrides",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragmentStockFieldOverridesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "stock-field-override",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentSubtype",
          "key": "subtype",
          "schema": {
            "description": "The string used to populate the subtype in the leaf type.
",
            "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragmentSubtype",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentSubtypeDisplayName",
          "key": "subtype_display_name",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsSetRequestCustomTypeFragmentSubtypeDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The display name of the subtype.",
              "generatedName": "CustomSchemaFragmentsSetRequestCustomTypeFragmentSubtypeDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragments-set-request-tenant-fragment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsSetRequestTenantFragment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetRequestTenantFragmentStockFieldOverrides",
          "key": "stock_field_overrides",
          "schema": {
            "description": null,
            "generatedName": "customSchemaFragmentsSetRequestTenantFragmentStockFieldOverrides",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of Per-DevOrg stock field overrides.",
              "generatedName": "CustomSchemaFragmentsSetRequestTenantFragmentStockFieldOverrides",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaFragmentsSetRequestTenantFragmentStockFieldOverridesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "stock-field-override",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-fragments-set-request-type": {
      "description": null,
      "generatedName": "CustomSchemaFragmentsSetRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "app_fragment",
          "nameOverride": null,
          "value": "app_fragment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "custom_type_fragment",
          "nameOverride": null,
          "value": "custom_type_fragment",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tenant_fragment",
          "nameOverride": null,
          "value": "tenant_fragment",
        },
      ],
    },
    "custom-schema-fragments-set-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomSchemaFragmentsSetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaFragmentsSetResponseId",
          "key": "id",
          "schema": {
            "description": "The ID of the custom schema fragment.",
            "generatedName": "CustomSchemaFragmentsSetResponseId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "custom-schema-spec": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Requested custom schemas described abstractly. Every provided schema's
custom field must be specified, otherwise a bad request error is
returned. If a new custom schema specifier is provided, then it will be
added to the work, otherwise if a custom schema is omitted from the
specifier, it remains unmodified.
",
      "generatedName": "CustomSchemaSpec",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaSpecApps",
          "key": "apps",
          "schema": {
            "description": null,
            "generatedName": "customSchemaSpecApps",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of apps that are requested.",
              "generatedName": "CustomSchemaSpecApps",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CustomSchemaSpecAppsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaSpecSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "customSchemaSpecSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the subtype requested.",
              "generatedName": "CustomSchemaSpecSubtype",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaSpecTenantFragment",
          "key": "tenant_fragment",
          "schema": {
            "description": null,
            "generatedName": "customSchemaSpecTenantFragment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the tenant schema is requested.",
              "generatedName": "CustomSchemaSpecTenantFragment",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customSchemaSpecValidateRequiredFields",
          "key": "validate_required_fields",
          "schema": {
            "description": null,
            "generatedName": "customSchemaSpecValidateRequiredFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether to enforce required fields validation.",
              "generatedName": "CustomSchemaSpecValidateRequiredFields",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "custom-type-fragment": {
      "allOf": [
        {
          "description": null,
          "generatedName": "CustomSchemaFragmentBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "custom-schema-fragment-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "CustomTypeFragment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customTypeFragmentStageDiagram",
          "key": "stage_diagram",
          "schema": {
            "description": null,
            "generatedName": "customTypeFragmentStageDiagram",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "CustomTypeFragmentStageDiagram",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage-diagram-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customTypeFragmentSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "customTypeFragmentSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string used to populate the subtype in the leaf type.
",
              "generatedName": "CustomTypeFragmentSubtype",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "customTypeFragmentSubtypeDisplayName",
          "key": "subtype_display_name",
          "schema": {
            "description": null,
            "generatedName": "customTypeFragmentSubtypeDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Display name of the subtype. Modifications to this field are done
in-place and don't result in creation of a new fragment in chain.
",
              "generatedName": "CustomTypeFragmentSubtypeDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "custom-type-fragment-summary": {
      "description": null,
      "generatedName": "CustomTypeFragmentSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "custom-schema-fragment-base-summary",
      "type": "reference",
    },
    "custom-type-path-component": {
      "description": "Path component for rendering custom type lists in tree form.",
      "generatedName": "CustomTypePathComponent",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "CustomTypePathComponentKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "CustomTypePathComponentValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "date-filter": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": "Provides ways to specify date ranges on objects.",
        "discriminantProperty": "type",
        "generatedName": "DateFilter",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "preset": {
            "description": null,
            "generatedName": "ComponentsSchemasDateTimePreset",
            "groupName": null,
            "nameOverride": null,
            "schema": "date-time-preset",
            "type": "reference",
          },
          "range": {
            "description": null,
            "generatedName": "ComponentsSchemasDateTimeFilter",
            "groupName": null,
            "nameOverride": null,
            "schema": "date-time-filter",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "date-filter-type": {
      "description": "Type of date filter.",
      "generatedName": "DateFilterType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "preset",
          "nameOverride": null,
          "value": "preset",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "range",
          "nameOverride": null,
          "value": "range",
        },
      ],
    },
    "date-time-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DateTimeFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFilterAfter",
          "key": "after",
          "schema": {
            "description": null,
            "generatedName": "dateTimeFilterAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for objects created after the provided timestamp
(inclusive).
",
              "generatedName": "DateTimeFilterAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimeFilterBefore",
          "key": "before",
          "schema": {
            "description": null,
            "generatedName": "dateTimeFilterBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for objects created before the provided timestamp
(inclusive).
",
              "generatedName": "DateTimeFilterBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "date-time-preset": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": "Provides preset types for date filter.",
        "discriminantProperty": "preset_type",
        "generatedName": "DateTimePreset",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "last_n_days": {
            "description": null,
            "generatedName": "ComponentsSchemasDateTimePresetLastNDays",
            "groupName": null,
            "nameOverride": null,
            "schema": "date-time-preset-last-n-days",
            "type": "reference",
          },
          "next_n_days": {
            "description": null,
            "generatedName": "ComponentsSchemasDateTimePresetNextNDays",
            "groupName": null,
            "nameOverride": null,
            "schema": "date-time-preset-next-n-days",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "date-time-preset-last-n-days": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DateTimePresetLastNDays",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimePresetLastNDaysDays",
          "key": "days",
          "schema": {
            "description": "The range starts from the current timestamp and continues for the
past n days.
",
            "generatedName": "DateTimePresetLastNDaysDays",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "date-time-preset-next-n-days": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DateTimePresetNextNDays",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "dateTimePresetNextNDaysDays",
          "key": "days",
          "schema": {
            "description": "The range starts from the current timestamp and continues for the
next n days.
",
            "generatedName": "DateTimePresetNextNDaysDays",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "date-time-preset-type": {
      "description": "Type of date preset.",
      "generatedName": "DateTimePresetType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "last_n_days",
          "nameOverride": null,
          "value": "last_n_days",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "next_n_days",
          "nameOverride": null,
          "value": "next_n_days",
        },
      ],
    },
    "dev-org-auth-connections-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "display_name",
            "schema": {
              "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
              "generatedName": "DevOrgAuthConnectionsCreateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                "generatedName": "DevOrgAuthConnectionsCreateRequestDisplayName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        ],
        "description": "Request to create a new enterprise authentication connection.
",
        "discriminantProperty": "type",
        "generatedName": "DevOrgAuthConnectionsCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "google_apps": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-google-apps",
            "type": "reference",
          },
          "oidc": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-oidc",
            "type": "reference",
          },
          "samlp": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-saml",
            "type": "reference",
          },
          "waad": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-azure-ad",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "dev-org-auth-connections-create-request-type": {
      "description": "Defines the type for the authentication connection. Different types of
authentication connections have different configuration parameters.
",
      "generatedName": "DevOrgAuthConnectionsCreateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "google_apps",
          "nameOverride": null,
          "value": "google_apps",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "oidc",
          "nameOverride": null,
          "value": "oidc",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "samlp",
          "nameOverride": null,
          "value": "samlp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "waad",
          "nameOverride": null,
          "value": "waad",
        },
      ],
    },
    "dev-org-auth-connections-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to create a new enterprise authentication
connection.
",
      "generatedName": "DevOrgAuthConnectionsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsCreateResponseAuthConnection",
          "key": "auth_connection",
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsCreateResponseAuthConnection",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to delete an enterprise authentication connection for a Dev
organization. A default connection and a connection which is currently
enabled cannot be deleted.
",
      "generatedName": "DevOrgAuthConnectionsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "ID of the authentication connection to be deleted.",
            "generatedName": "DevOrgAuthConnectionsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to get configuration details of organization's authentication
Connection.
",
      "generatedName": "DevOrgAuthConnectionsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsGetRequestId",
          "key": "id",
          "schema": {
            "description": "ID of the authentication connection.",
            "generatedName": "DevOrgAuthConnectionsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object encapsulating the configuration details of an
authentication connection.
",
      "generatedName": "DevOrgAuthConnectionsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsGetResponseAuthConnection",
          "key": "auth_connection",
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsGetResponseAuthConnection",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object for the request to list all the social and enterprise
authentication connections configured for a Dev organization.
",
      "generatedName": "DevOrgAuthConnectionsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsListResponseAuthConnections",
          "key": "auth_connections",
          "schema": {
            "description": "List of all the authentication connections currently configured for
a Dev organization.
",
            "generatedName": "DevOrgAuthConnectionsListResponseAuthConnections",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "DevOrgAuthConnectionsListResponseAuthConnectionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-connection",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-toggle-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to enable or disable an authentication connection for a Dev
organization.
",
      "generatedName": "DevOrgAuthConnectionsToggleRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsToggleRequestId",
          "key": "id",
          "schema": {
            "description": "ID of the authentication connection to be toggled.",
            "generatedName": "DevOrgAuthConnectionsToggleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsToggleRequestToggle",
          "key": "toggle",
          "schema": {
            "description": null,
            "generatedName": "devOrgAuthConnectionsToggleRequestToggle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "DevOrgAuthConnectionsToggleRequestToggle",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-connection-toggle",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "display_name",
            "schema": {
              "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
              "generatedName": "DevOrgAuthConnectionsUpdateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                "generatedName": "DevOrgAuthConnectionsUpdateRequestDisplayName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "ID of the authentication connection which is to be updated.
",
              "generatedName": "DevOrgAuthConnectionsUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": "Request to update an enterprise authentication connection for a Dev
organization.
",
        "discriminantProperty": "type",
        "generatedName": "DevOrgAuthConnectionsUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "google_apps": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-google-apps",
            "type": "reference",
          },
          "none": {
            "description": null,
            "generatedName": "ComponentsSchemasEmpty",
            "groupName": null,
            "nameOverride": null,
            "schema": "empty",
            "type": "reference",
          },
          "oidc": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-oidc",
            "type": "reference",
          },
          "samlp": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-saml",
            "type": "reference",
          },
          "waad": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-azure-ad",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "dev-org-auth-connections-update-request-type": {
      "description": "Specifies the type for the authentication connection. Different types
of authentication connections have different configuration parameters
that can be updated.
",
      "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "google_apps",
          "nameOverride": null,
          "value": "google_apps",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "none",
          "nameOverride": null,
          "value": "none",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "oidc",
          "nameOverride": null,
          "value": "oidc",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "samlp",
          "nameOverride": null,
          "value": "samlp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "waad",
          "nameOverride": null,
          "value": "waad",
        },
      ],
    },
    "dev-org-auth-connections-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to update an enterprise authentication
connection.
",
      "generatedName": "DevOrgAuthConnectionsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsUpdateResponseAuthConnection",
          "key": "auth_connection",
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsUpdateResponseAuthConnection",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "dev-user": {
      "allOf": [
        {
          "description": null,
          "generatedName": "UserBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "user-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DevUser",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUserExternalIdentities",
          "key": "external_identities",
          "schema": {
            "description": null,
            "generatedName": "devUserExternalIdentities",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "IDs of the Dev User outside the DevRev SOR.",
              "generatedName": "DevUserExternalIdentities",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUserExternalIdentitiesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "external-identity",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-user-external-identity-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DevUserExternalIdentityFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUserExternalIdentityFilterId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "devUserExternalIdentityFilterId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Unique ID of the user in the external source.",
              "generatedName": "DevUserExternalIdentityFilterId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUserExternalIdentityFilterIssuer",
          "key": "issuer",
          "schema": {
            "description": null,
            "generatedName": "devUserExternalIdentityFilterIssuer",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Issuer of the external identity of the user.",
              "generatedName": "DevUserExternalIdentityFilterIssuer",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-user-summary": {
      "description": null,
      "generatedName": "DevUserSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "user-base-summary",
      "type": "reference",
    },
    "dev-users-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to get a Dev user's information.",
      "generatedName": "DevUsersGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersGetRequestId",
          "key": "id",
          "schema": {
            "description": "User ID of the requested Dev user.",
            "generatedName": "DevUsersGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "dev-users-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting the information for the Dev user.",
      "generatedName": "DevUsersGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersGetResponseDevUser",
          "key": "dev_user",
          "schema": {
            "description": null,
            "generatedName": "DevUsersGetResponseDevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "dev-users-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to get the list of Dev user's information.",
      "generatedName": "DevUsersListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "devUsersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "DevUsersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListRequestEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "devUsersListRequestEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters Dev users based on email addresses.",
              "generatedName": "DevUsersListRequestEmail",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestEmailItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListRequestExternalIdentity",
          "key": "external_identity",
          "schema": {
            "description": null,
            "generatedName": "devUsersListRequestExternalIdentity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters Dev users based on external identity.",
              "generatedName": "DevUsersListRequestExternalIdentity",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestExternalIdentityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "dev-user-external-identity-filter",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "devUsersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of Dev users to return. The default is '50'.
",
              "generatedName": "DevUsersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "devUsersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "devUsersListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the Dev users by and the direction to sort them.
",
              "generatedName": "DevUsersListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListRequestState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "devUsersListRequestState",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters Dev users based on state.",
              "generatedName": "DevUsersListRequestState",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestStateItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "user-state",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-users-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the Dev users.",
      "generatedName": "DevUsersListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListResponseDevUsers",
          "key": "dev_users",
          "schema": {
            "description": "The list of Dev users.",
            "generatedName": "DevUsersListResponseDevUsers",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "DevUsersListResponseDevUsersItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "dev-user",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "devUsersListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "DevUsersListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "devUsersListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "DevUsersListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-users-self-request": {
      "description": "A request to get the authenticated user's information.",
      "generatedName": "DevUsersSelfRequest",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "DevUsersSelfRequestKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "DevUsersSelfRequestValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "dev-users-self-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting the information for the authenticated user.
",
      "generatedName": "DevUsersSelfResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersSelfResponseDevUser",
          "key": "dev_user",
          "schema": {
            "description": null,
            "generatedName": "DevUsersSelfResponseDevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "directory-summary": {
      "description": null,
      "generatedName": "DirectorySummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "dynamic-group-info": {
      "description": "Information to define dynamic groups.",
      "generatedName": "DynamicGroupInfo",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "DynamicGroupInfoKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "DynamicGroupInfoValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "dynamic-vista-summary": {
      "description": "Dynamic collection of Devrev objects, all adhering to a specific
filter.
",
      "generatedName": "DynamicVistaSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "vista-base-summary",
      "type": "reference",
    },
    "email-info": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EmailInfo",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailInfoAddress",
          "key": "address",
          "schema": {
            "description": "The email address.",
            "generatedName": "EmailInfoAddress",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailInfoName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "emailInfoName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The email recipient's name.",
              "generatedName": "EmailInfoName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailInfoUser",
          "key": "user",
          "schema": {
            "description": null,
            "generatedName": "emailInfoUser",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EmailInfoUser",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "email-inline-attachment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EmailInlineAttachment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailInlineAttachmentArtifact",
          "key": "artifact",
          "schema": {
            "description": null,
            "generatedName": "emailInlineAttachmentArtifact",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EmailInlineAttachmentArtifact",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifact-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailInlineAttachmentContentId",
          "key": "content_id",
          "schema": {
            "description": null,
            "generatedName": "emailInlineAttachmentContentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The content id of the attachment.",
              "generatedName": "EmailInlineAttachmentContentId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "email-preview-widget": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SnapWidgetBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "snap-widget-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EmailPreviewWidget",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetBcc",
          "key": "bcc",
          "schema": {
            "description": "The list of bcc addresses.",
            "generatedName": "EmailPreviewWidgetBcc",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetBccItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "email-info",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetCc",
          "key": "cc",
          "schema": {
            "description": "The list of cc addresses.",
            "generatedName": "EmailPreviewWidgetCc",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetCcItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "email-info",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetFrom",
          "key": "from",
          "schema": {
            "description": "The list of from addresses.",
            "generatedName": "EmailPreviewWidgetFrom",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetFromItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "email-info",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetHtmlBody",
          "key": "html_body",
          "schema": {
            "description": null,
            "generatedName": "emailPreviewWidgetHtmlBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The html body of the email.",
              "generatedName": "EmailPreviewWidgetHtmlBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetInReplyTo",
          "key": "in_reply_to",
          "schema": {
            "description": null,
            "generatedName": "emailPreviewWidgetInReplyTo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The in-reply-to header of the email.",
              "generatedName": "EmailPreviewWidgetInReplyTo",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetInlines",
          "key": "inlines",
          "schema": {
            "description": "The list of inline attachments.",
            "generatedName": "EmailPreviewWidgetInlines",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetInlinesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "email-inline-attachment",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetMessageId",
          "key": "message_id",
          "schema": {
            "description": null,
            "generatedName": "emailPreviewWidgetMessageId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The message id of the email.",
              "generatedName": "EmailPreviewWidgetMessageId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetRawEmailArtifact",
          "key": "raw_email_artifact",
          "schema": {
            "description": null,
            "generatedName": "emailPreviewWidgetRawEmailArtifact",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetRawEmailArtifact",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifact-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetReferences",
          "key": "references",
          "schema": {
            "description": "The references header in the email.",
            "generatedName": "EmailPreviewWidgetReferences",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetReferencesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetReplyTo",
          "key": "reply_to",
          "schema": {
            "description": "The list of reply to addresses.",
            "generatedName": "EmailPreviewWidgetReplyTo",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetReplyToItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "email-info",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetSentTimestamp",
          "key": "sent_timestamp",
          "schema": {
            "description": null,
            "generatedName": "emailPreviewWidgetSentTimestamp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time the email was sent.",
              "generatedName": "EmailPreviewWidgetSentTimestamp",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetSubject",
          "key": "subject",
          "schema": {
            "description": null,
            "generatedName": "emailPreviewWidgetSubject",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The subject of the email.",
              "generatedName": "EmailPreviewWidgetSubject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetTextBody",
          "key": "text_body",
          "schema": {
            "description": null,
            "generatedName": "emailPreviewWidgetTextBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The text body of the email.",
              "generatedName": "EmailPreviewWidgetTextBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailPreviewWidgetTo",
          "key": "to",
          "schema": {
            "description": "The list of to addresses.",
            "generatedName": "EmailPreviewWidgetTo",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EmailPreviewWidgetToItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "email-info",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "empty": {
      "description": null,
      "generatedName": "Empty",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "EmptyKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": "empty",
      "type": "map",
      "value": {
        "generatedName": "EmptyValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "engagement": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Engagement",
      "groupName": null,
      "nameOverride": "engagement",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "engagementDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the engagement object.",
              "generatedName": "EngagementDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "engagement-summary": {
      "description": null,
      "generatedName": "EngagementSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "engagement-type": {
      "description": "Type of engagement.",
      "generatedName": "EngagementType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "call",
          "nameOverride": null,
          "value": "call",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "default",
          "nameOverride": null,
          "value": "default",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "email",
          "nameOverride": null,
          "value": "email",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "linked_in",
          "nameOverride": null,
          "value": "linked_in",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "meeting",
          "nameOverride": null,
          "value": "meeting",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "offline",
          "nameOverride": null,
          "value": "offline",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "survey",
          "nameOverride": null,
          "value": "survey",
        },
      ],
    },
    "engagements-count-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsCountRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCountRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "engagementsCountRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for meetings with the provided external_refs.",
              "generatedName": "EngagementsCountRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCountRequestMembers",
          "key": "members",
          "schema": {
            "description": null,
            "generatedName": "engagementsCountRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for engagement of the provided members.",
              "generatedName": "EngagementsCountRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCountRequestParent",
          "key": "parent",
          "schema": {
            "description": null,
            "generatedName": "engagementsCountRequestParent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for engagements with the provided parent.",
              "generatedName": "EngagementsCountRequestParent",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestParentItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCountRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "engagementsCountRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for engagement of the provided types.",
              "generatedName": "EngagementsCountRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCountRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "engagement-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "engagements-count-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsCountResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCountResponseCount",
          "key": "count",
          "schema": {
            "description": "The number of engagements matching the filter.",
            "generatedName": "EngagementsCountResponseCount",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "engagements-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "engagementsCreateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the artifacts to associate with the engagement.
",
              "generatedName": "EngagementsCreateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCreateRequestArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "engagementsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The description of the engagement.",
              "generatedName": "EngagementsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestEngagementType",
          "key": "engagement_type",
          "schema": {
            "description": null,
            "generatedName": "engagementsCreateRequestEngagementType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EngagementsCreateRequestEngagementType",
              "groupName": null,
              "nameOverride": null,
              "schema": "engagements-create-request-engagement-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "engagementsCreateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External Reference for the engagement.",
              "generatedName": "EngagementsCreateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestExternalUrl",
          "key": "external_url",
          "schema": {
            "description": null,
            "generatedName": "engagementsCreateRequestExternalUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External URL for the engagement.",
              "generatedName": "EngagementsCreateRequestExternalUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestMembers",
          "key": "members",
          "schema": {
            "description": "IDs of the users that were part of the engagement.",
            "generatedName": "EngagementsCreateRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EngagementsCreateRequestMembersItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestParent",
          "key": "parent",
          "schema": {
            "description": "The parent object ID in which the engagement was created.
Currently, only accounts and opportunities are supported.
",
            "generatedName": "EngagementsCreateRequestParent",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestScheduledDate",
          "key": "scheduled_date",
          "schema": {
            "description": "The date and time when the engagement was scheduled.",
            "generatedName": "EngagementsCreateRequestScheduledDate",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "engagementsCreateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the engagement.",
              "generatedName": "EngagementsCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsCreateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateRequestTitle",
          "key": "title",
          "schema": {
            "description": "The title of the engagement.",
            "generatedName": "EngagementsCreateRequestTitle",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "engagements-create-request-engagement-type": {
      "description": "The type of engagement.",
      "generatedName": "EngagementsCreateRequestEngagementType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "call",
          "nameOverride": null,
          "value": "call",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "default",
          "nameOverride": null,
          "value": "default",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "email",
          "nameOverride": null,
          "value": "email",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "linked_in",
          "nameOverride": null,
          "value": "linked_in",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "offline",
          "nameOverride": null,
          "value": "offline",
        },
      ],
    },
    "engagements-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsCreateResponseEngagement",
          "key": "engagement",
          "schema": {
            "description": null,
            "generatedName": "EngagementsCreateResponseEngagement",
            "groupName": null,
            "nameOverride": null,
            "schema": "engagement",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "engagements-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The engagement ID.",
            "generatedName": "EngagementsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "engagements-delete-response": {
      "description": null,
      "generatedName": "EngagementsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "EngagementsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "EngagementsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "engagements-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The engagement ID.",
            "generatedName": "EngagementsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "engagements-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsGetResponseEngagement",
          "key": "engagement",
          "schema": {
            "description": null,
            "generatedName": "EngagementsGetResponseEngagement",
            "groupName": null,
            "nameOverride": null,
            "schema": "engagement",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "engagements-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "EngagementsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for meetings with the provided external_refs.",
              "generatedName": "EngagementsListRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of engagements to return.",
              "generatedName": "EngagementsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestMembers",
          "key": "members",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for engagement of the provided members.",
              "generatedName": "EngagementsListRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestMembersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EngagementsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestParent",
          "key": "parent",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestParent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for engagements with the provided parent.",
              "generatedName": "EngagementsListRequestParent",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestParentItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the engagements by and the direction to sort them.
",
              "generatedName": "EngagementsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "engagementsListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for engagement of the provided types.",
              "generatedName": "EngagementsListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "engagement-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "engagements-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListResponseEngagements",
          "key": "engagements",
          "schema": {
            "description": "The list of engagements.",
            "generatedName": "EngagementsListResponseEngagements",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "EngagementsListResponseEngagementsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "engagement",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "engagementsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "EngagementsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "engagementsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "EngagementsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "engagements-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EngagementsUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "engagements-update-request-artifact-ids",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the description of the engagement.",
              "generatedName": "EngagementsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External Reference for the engagement.",
              "generatedName": "EngagementsUpdateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestExternalUrl",
          "key": "external_url",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestExternalUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the external URL for the engagement.",
              "generatedName": "EngagementsUpdateRequestExternalUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The engagement ID.",
            "generatedName": "EngagementsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestMembers",
          "key": "members",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EngagementsUpdateRequestMembers",
              "groupName": null,
              "nameOverride": null,
              "schema": "engagements-update-request-members",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestScheduledDate",
          "key": "scheduled_date",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestScheduledDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the date and time when the engagement was scheduled.
",
              "generatedName": "EngagementsUpdateRequestScheduledDate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the date and time when the engagement was scheduled.
",
                "generatedName": "EngagementsUpdateRequestScheduledDate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EngagementsUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "schema": "engagements-update-request-tags",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the title of the engagement.",
              "generatedName": "EngagementsUpdateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "engagements-update-request-artifact-ids": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsUpdateRequestArtifactIds",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestArtifactIdsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestArtifactIdsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs to the provided artifact IDs.",
              "generatedName": "EngagementsUpdateRequestArtifactIdsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsUpdateRequestArtifactIdsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "engagements-update-request-members": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsUpdateRequestMembers",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestMembersSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestMembersSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the members to the provided user IDs. If specified, this must
not be empty.
",
              "generatedName": "EngagementsUpdateRequestMembersSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsUpdateRequestMembersSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "engagements-update-request-tags": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsUpdateRequestTags",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateRequestTagsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "engagementsUpdateRequestTagsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the provided tags on the engagement item.",
              "generatedName": "EngagementsUpdateRequestTagsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "EngagementsUpdateRequestTagsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "engagements-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EngagementsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "engagementsUpdateResponseEngagement",
          "key": "engagement",
          "schema": {
            "description": null,
            "generatedName": "EngagementsUpdateResponseEngagement",
            "groupName": null,
            "nameOverride": null,
            "schema": "engagement",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "enhancement": {
      "description": null,
      "generatedName": "Enhancement",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base",
      "type": "reference",
    },
    "enhancement-summary": {
      "description": null,
      "generatedName": "EnhancementSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "error": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Error",
      "groupName": null,
      "nameOverride": "error",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorMessage",
          "key": "message",
          "schema": {
            "description": "Information about the error.",
            "generatedName": "ErrorMessage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorStatus",
          "key": "status",
          "schema": {
            "description": "The corresponding HTTP status code.",
            "generatedName": "ErrorStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "errorType",
            "groupName": null,
            "nameOverride": "error",
            "type": "optional",
            "value": {
              "description": "The error type.",
              "generatedName": "ErrorType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-bad-request-bad-request": {
      "description": null,
      "generatedName": "ErrorBadRequestBadRequest",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorBadRequestBadRequestKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorBadRequestBadRequestValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-bad-request-invalid-api-version": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestInvalidApiVersion",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidApiVersionValue",
          "key": "value",
          "schema": {
            "description": "The provided API version.",
            "generatedName": "ErrorBadRequestInvalidApiVersionValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-invalid-enum-value": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestInvalidEnumValue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidEnumValueAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": "The allowed values for the field.",
            "generatedName": "ErrorBadRequestInvalidEnumValueAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ErrorBadRequestInvalidEnumValueAllowedValuesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidEnumValueFieldName",
          "key": "field_name",
          "schema": {
            "description": "The field whose enum value is invalid.",
            "generatedName": "ErrorBadRequestInvalidEnumValueFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidEnumValueValue",
          "key": "value",
          "schema": {
            "description": "The value that was received.",
            "generatedName": "ErrorBadRequestInvalidEnumValueValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-invalid-field": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestInvalidField",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidFieldFieldName",
          "key": "field_name",
          "schema": {
            "description": "The field name that's invalid.",
            "generatedName": "ErrorBadRequestInvalidFieldFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-missing-dependency": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestMissingDependency",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingDependencyDependencies",
          "key": "dependencies",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestMissingDependencyDependencies",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The dependent fields.",
              "generatedName": "ErrorBadRequestMissingDependencyDependencies",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ErrorBadRequestMissingDependencyDependenciesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "error-bad-request-missing-dependency-dependency",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingDependencyDependentFieldName",
          "key": "dependent_field_name",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestMissingDependencyDependentFieldName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The field on which the value depends.",
              "generatedName": "ErrorBadRequestMissingDependencyDependentFieldName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingDependencyDependentFieldValue",
          "key": "dependent_field_value",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestMissingDependencyDependentFieldValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The value which needs to be set of the dependent field.",
              "generatedName": "ErrorBadRequestMissingDependencyDependentFieldValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingDependencyProvidedFieldName",
          "key": "provided_field_name",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestMissingDependencyProvidedFieldName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The field whose value was received.",
              "generatedName": "ErrorBadRequestMissingDependencyProvidedFieldName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingDependencyProvidedFieldValue",
          "key": "provided_field_value",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestMissingDependencyProvidedFieldValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The value that was received.",
              "generatedName": "ErrorBadRequestMissingDependencyProvidedFieldValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-missing-dependency-dependency": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestMissingDependencyDependency",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingDependencyDependencyFieldName",
          "key": "field_name",
          "schema": {
            "description": "The dependent field name.",
            "generatedName": "ErrorBadRequestMissingDependencyDependencyFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingDependencyDependencyFieldValue",
          "key": "field_value",
          "schema": {
            "description": "The dependent field value.",
            "generatedName": "ErrorBadRequestMissingDependencyDependencyFieldValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-missing-required-field": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestMissingRequiredField",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingRequiredFieldFieldName",
          "key": "field_name",
          "schema": {
            "description": "The missing field's name.",
            "generatedName": "ErrorBadRequestMissingRequiredFieldFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-parse-error": {
      "description": null,
      "generatedName": "ErrorBadRequestParseError",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorBadRequestParseErrorKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorBadRequestParseErrorValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-bad-request-stale-schema-fragments": {
      "description": "Error indicating that the request contained one or more stale schema
fragments, which are schema fragments that have been replaced by a
newer version and are therefore considered deprecated schema fragments.
The caller should refresh and use the latest schema fragments in their
request.
",
      "generatedName": "ErrorBadRequestStaleSchemaFragments",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorBadRequestStaleSchemaFragmentsKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorBadRequestStaleSchemaFragmentsValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-bad-request-type": {
      "description": null,
      "generatedName": "ErrorBadRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "bad_request",
          "nameOverride": null,
          "value": "bad_request",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "invalid_api_version",
          "nameOverride": null,
          "value": "invalid_api_version",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "invalid_enum_value",
          "nameOverride": null,
          "value": "invalid_enum_value",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "invalid_field",
          "nameOverride": null,
          "value": "invalid_field",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "missing_dependency",
          "nameOverride": null,
          "value": "missing_dependency",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "missing_required_field",
          "nameOverride": null,
          "value": "missing_required_field",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "parse_error",
          "nameOverride": null,
          "value": "parse_error",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "stale_schema_fragments",
          "nameOverride": null,
          "value": "stale_schema_fragments",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "unexpected_json_type",
          "nameOverride": null,
          "value": "unexpected_json_type",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "value_not_permitted",
          "nameOverride": null,
          "value": "value_not_permitted",
        },
      ],
    },
    "error-bad-request-unexpected-json-type": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestUnexpectedJsonType",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestUnexpectedJsonTypeActual",
          "key": "actual",
          "schema": {
            "description": null,
            "generatedName": "ErrorBadRequestUnexpectedJsonTypeActual",
            "groupName": null,
            "nameOverride": null,
            "schema": "error-bad-request-unexpected-json-type-type",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestUnexpectedJsonTypeExpected",
          "key": "expected",
          "schema": {
            "description": null,
            "generatedName": "ErrorBadRequestUnexpectedJsonTypeExpected",
            "groupName": null,
            "nameOverride": null,
            "schema": "error-bad-request-unexpected-json-type-type",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestUnexpectedJsonTypeFieldName",
          "key": "field_name",
          "schema": {
            "description": "The field name that's invalid.",
            "generatedName": "ErrorBadRequestUnexpectedJsonTypeFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-unexpected-json-type-type": {
      "description": null,
      "generatedName": "ErrorBadRequestUnexpectedJsonTypeType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "array",
          "nameOverride": null,
          "value": "array",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "bool",
          "nameOverride": null,
          "value": "bool",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "null",
          "nameOverride": null,
          "value": "null",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "number",
          "nameOverride": null,
          "value": "number",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "object",
          "nameOverride": null,
          "value": "object",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "string",
          "nameOverride": null,
          "value": "string",
        },
      ],
    },
    "error-bad-request-value-not-permitted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestValueNotPermitted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestValueNotPermittedAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestValueNotPermittedAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the field.",
              "generatedName": "ErrorBadRequestValueNotPermittedAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ErrorBadRequestValueNotPermittedAllowedValuesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestValueNotPermittedFieldName",
          "key": "field_name",
          "schema": {
            "description": "The field whose value is not permitted.",
            "generatedName": "ErrorBadRequestValueNotPermittedFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestValueNotPermittedReason",
          "key": "reason",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestValueNotPermittedReason",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The reason the value isn't permitted.",
              "generatedName": "ErrorBadRequestValueNotPermittedReason",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "error-base": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBaseDetail",
          "key": "detail",
          "schema": {
            "description": null,
            "generatedName": "errorBaseDetail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Error detail information.",
              "generatedName": "ErrorBaseDetail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBaseMessage",
          "key": "message",
          "schema": {
            "description": null,
            "generatedName": "errorBaseMessage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The message associated with the error.",
              "generatedName": "ErrorBaseMessage",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "error-conflict": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorConflict",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-conflict-conflict": {
      "description": null,
      "generatedName": "ErrorConflictConflict",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorConflictConflictKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorConflictConflictValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-conflict-type": {
      "description": null,
      "generatedName": "ErrorConflictType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "conflict",
      },
    },
    "error-forbidden": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorForbidden",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-forbidden-forbidden": {
      "description": null,
      "generatedName": "ErrorForbiddenForbidden",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorForbiddenForbiddenKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorForbiddenForbiddenValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-forbidden-type": {
      "description": null,
      "generatedName": "ErrorForbiddenType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "forbidden",
      },
    },
    "error-internal-server-error": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorInternalServerError",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-internal-server-error-internal-error": {
      "description": null,
      "generatedName": "ErrorInternalServerErrorInternalError",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorInternalServerErrorInternalErrorKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorInternalServerErrorInternalErrorValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-internal-server-error-type": {
      "description": null,
      "generatedName": "ErrorInternalServerErrorType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "internal_error",
      },
    },
    "error-not-found": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorNotFound",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-not-found-not-found": {
      "description": null,
      "generatedName": "ErrorNotFoundNotFound",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorNotFoundNotFoundKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorNotFoundNotFoundValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-not-found-type": {
      "description": null,
      "generatedName": "ErrorNotFoundType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "not_found",
      },
    },
    "error-service-unavailable": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorServiceUnavailable",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-service-unavailable-service-unavailable": {
      "description": null,
      "generatedName": "ErrorServiceUnavailableServiceUnavailable",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorServiceUnavailableServiceUnavailableKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorServiceUnavailableServiceUnavailableValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-service-unavailable-type": {
      "description": null,
      "generatedName": "ErrorServiceUnavailableType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "service_unavailable",
      },
    },
    "error-too-many-requests": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorTooManyRequests",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-too-many-requests-too-many-requests": {
      "description": null,
      "generatedName": "ErrorTooManyRequestsTooManyRequests",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorTooManyRequestsTooManyRequestsKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorTooManyRequestsTooManyRequestsValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-too-many-requests-type": {
      "description": null,
      "generatedName": "ErrorTooManyRequestsType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "too_many_requests",
      },
    },
    "error-unauthorized": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorUnauthorized",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-unauthorized-type": {
      "description": null,
      "generatedName": "ErrorUnauthorizedType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "unauthenticated",
      },
    },
    "error-unauthorized-unauthenticated": {
      "description": null,
      "generatedName": "ErrorUnauthorizedUnauthenticated",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorUnauthorizedUnauthenticatedKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorUnauthorizedUnauthenticatedValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "event-account-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventAccountCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventAccountCreatedAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "EventAccountCreatedAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": "account",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-account-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventAccountDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventAccountDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the account that was deleted.",
            "generatedName": "EventAccountDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-account-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventAccountUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventAccountUpdatedAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "EventAccountUpdatedAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": "account",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-conversation-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventConversationCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConversationCreatedConversation",
          "key": "conversation",
          "schema": {
            "description": null,
            "generatedName": "EventConversationCreatedConversation",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-conversation-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventConversationDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConversationDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the conversation that was deleted.",
            "generatedName": "EventConversationDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-conversation-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventConversationUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventConversationUpdatedConversation",
          "key": "conversation",
          "schema": {
            "description": null,
            "generatedName": "EventConversationUpdatedConversation",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-dev-user-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventDevUserCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventDevUserCreatedDevUser",
          "key": "dev_user",
          "schema": {
            "description": null,
            "generatedName": "EventDevUserCreatedDevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-dev-user-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventDevUserDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventDevUserDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the Dev user that was deleted.",
            "generatedName": "EventDevUserDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-dev-user-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventDevUserUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventDevUserUpdatedDevUser",
          "key": "dev_user",
          "schema": {
            "description": null,
            "generatedName": "EventDevUserUpdatedDevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-part-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventPartCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventPartCreatedPart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "EventPartCreatedPart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-part-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventPartDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventPartDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the part that was deleted.",
            "generatedName": "EventPartDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-part-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventPartUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventPartUpdatedPart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "EventPartUpdatedPart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-org-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevOrgCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevOrgCreatedRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "EventRevOrgCreatedRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-org-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevOrgDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevOrgDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the Rev organization that was deleted.",
            "generatedName": "EventRevOrgDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-org-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevOrgUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevOrgUpdatedRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "EventRevOrgUpdatedRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-user-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevUserCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevUserCreatedRevUser",
          "key": "rev_user",
          "schema": {
            "description": null,
            "generatedName": "EventRevUserCreatedRevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-user-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevUserDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevUserDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the Rev user that was deleted.",
            "generatedName": "EventRevUserDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-user-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevUserUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevUserUpdatedRevUser",
          "key": "rev_user",
          "schema": {
            "description": null,
            "generatedName": "EventRevUserUpdatedRevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-sla-tracker-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSlaTrackerCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSlaTrackerCreatedSlaTracker",
          "key": "sla_tracker",
          "schema": {
            "description": null,
            "generatedName": "EventSlaTrackerCreatedSlaTracker",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla-tracker",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-sla-tracker-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSlaTrackerDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSlaTrackerDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the SLA tracker that was deleted.",
            "generatedName": "EventSlaTrackerDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-sla-tracker-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSlaTrackerUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSlaTrackerUpdatedSlaTracker",
          "key": "sla_tracker",
          "schema": {
            "description": null,
            "generatedName": "EventSlaTrackerUpdatedSlaTracker",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla-tracker",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-source": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSource",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceConfig",
          "key": "config",
          "schema": {
            "description": null,
            "generatedName": "eventSourceConfig",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Configuration of the event source. Fields depend on the event
source type.
",
              "generatedName": "EventSourceConfig",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "EventSourceConfigKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "EventSourceConfigValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "eventSourceName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the event source.",
              "generatedName": "EventSourceName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceSetupInstructions",
          "key": "setup_instructions",
          "schema": {
            "description": null,
            "generatedName": "eventSourceSetupInstructions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EventSourceSetupInstructions",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-source-setup-instructions",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "eventSourceStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EventSourceStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-source-status",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceTriggerUrl",
          "key": "trigger_url",
          "schema": {
            "description": null,
            "generatedName": "eventSourceTriggerUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The URL to trigger the event source. Valid only for HTTP
based-event sources. This URL supports both GET and POST requests.
",
              "generatedName": "EventSourceTriggerUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "event-source-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSourceGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceGetRequestId",
          "key": "id",
          "schema": {
            "description": "The event source's ID.",
            "generatedName": "EventSourceGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-source-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSourceGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceGetResponseEventSource",
          "key": "event_source",
          "schema": {
            "description": null,
            "generatedName": "EventSourceGetResponseEventSource",
            "groupName": null,
            "nameOverride": null,
            "schema": "event-source",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-source-setup-instructions": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Instructions for setting up the event source.",
      "generatedName": "EventSourceSetupInstructions",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourceSetupInstructionsContent",
          "key": "content",
          "schema": {
            "description": null,
            "generatedName": "eventSourceSetupInstructionsContent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Content of the instructions.",
              "generatedName": "EventSourceSetupInstructionsContent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "event-source-status": {
      "description": "Status of the event source. Note that paused/blocked event sources
return NotFound error on triggering.
",
      "generatedName": "EventSourceStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "active",
          "nameOverride": null,
          "value": "active",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "blocked",
          "nameOverride": null,
          "value": "blocked",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "paused",
          "nameOverride": null,
          "value": "paused",
        },
      ],
    },
    "event-sources-delete-scheduled-event-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSourcesDeleteScheduledEventRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesDeleteScheduledEventRequestEventKey",
          "key": "event_key",
          "schema": {
            "description": "The event key for the event which we want to delete.",
            "generatedName": "EventSourcesDeleteScheduledEventRequestEventKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesDeleteScheduledEventRequestId",
          "key": "id",
          "schema": {
            "description": "The event source's ID.",
            "generatedName": "EventSourcesDeleteScheduledEventRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-sources-schedule-event-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSourcesScheduleEventRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesScheduleEventRequestEventKey",
          "key": "event_key",
          "schema": {
            "description": null,
            "generatedName": "eventSourcesScheduleEventRequestEventKey",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A unique key for this event (scoped to an event source) used for
updating/getting/deleting scheduled events.
",
              "generatedName": "EventSourcesScheduleEventRequestEventKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesScheduleEventRequestEventType",
          "key": "event_type",
          "schema": {
            "description": "The type of the event.",
            "generatedName": "EventSourcesScheduleEventRequestEventType",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesScheduleEventRequestId",
          "key": "id",
          "schema": {
            "description": "The event source's ID.",
            "generatedName": "EventSourcesScheduleEventRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesScheduleEventRequestPayload",
          "key": "payload",
          "schema": {
            "description": "The raw payload of the event.",
            "generatedName": "EventSourcesScheduleEventRequestPayload",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesScheduleEventRequestPublishAt",
          "key": "publish_at",
          "schema": {
            "description": null,
            "generatedName": "eventSourcesScheduleEventRequestPublishAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The timestamp at which the event should be published. The event is
guaranteed to be published after this. If omitted, the event is
published immediately.
",
              "generatedName": "EventSourcesScheduleEventRequestPublishAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesScheduleEventRequestUpdateIfExists",
          "key": "update_if_exists",
          "schema": {
            "description": null,
            "generatedName": "eventSourcesScheduleEventRequestUpdateIfExists",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether or not to update an existing scheduled event with the same
event key. If this is false, and an event is already scheduled with
the same event key, then HTTP 409 Conflict is returned.
",
              "generatedName": "EventSourcesScheduleEventRequestUpdateIfExists",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "event-sources-schedule-event-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventSourcesScheduleEventResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventSourcesScheduleEventResponseEventKey",
          "key": "event_key",
          "schema": {
            "description": null,
            "generatedName": "eventSourcesScheduleEventResponseEventKey",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event key for this event. Auto-generated if the caller doesn't
specify the event key. This may be empty if the event was published
immediately.
",
              "generatedName": "EventSourcesScheduleEventResponseEventKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "event-tag-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTagCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTagCreatedTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "EventTagCreatedTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-tag-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTagDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTagDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag that was deleted.",
            "generatedName": "EventTagDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-tag-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTagUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTagUpdatedTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "EventTagUpdatedTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-timeline-entry-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTimelineEntryCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTimelineEntryCreatedEntry",
          "key": "entry",
          "schema": {
            "description": null,
            "generatedName": "EventTimelineEntryCreatedEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-timeline-entry-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTimelineEntryDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTimelineEntryDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the timeline entry that was deleted.",
            "generatedName": "EventTimelineEntryDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-timeline-entry-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTimelineEntryUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTimelineEntryUpdatedEntry",
          "key": "entry",
          "schema": {
            "description": null,
            "generatedName": "EventTimelineEntryUpdatedEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-webhook-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWebhookCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWebhookCreatedWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "EventWebhookCreatedWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-webhook-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWebhookDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWebhookDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the webhook that was deleted.",
            "generatedName": "EventWebhookDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-webhook-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWebhookUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWebhookUpdatedWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "EventWebhookUpdatedWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-work-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWorkCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWorkCreatedWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "EventWorkCreatedWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-work-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWorkDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWorkDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the work that was deleted.",
            "generatedName": "EventWorkDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-work-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWorkUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWorkUpdatedWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "EventWorkUpdatedWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "external-identity": {
      "description": "External identity of a user.",
      "generatedName": "ExternalIdentity",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ExternalIdentityKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ExternalIdentityValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "feature": {
      "description": null,
      "generatedName": "Feature",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base",
      "type": "reference",
    },
    "feature-summary": {
      "description": null,
      "generatedName": "FeatureSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "field-descriptor": {
      "description": "Set of field attributes.",
      "generatedName": "FieldDescriptor",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "FieldDescriptorKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "FieldDescriptorValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "group": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Group",
      "groupName": null,
      "nameOverride": "group",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "groupDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the group.",
              "generatedName": "GroupDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupIsDefault",
          "key": "is_default",
          "schema": {
            "description": "Whether it is a default group.",
            "generatedName": "GroupIsDefault",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMemberType",
          "key": "member_type",
          "schema": {
            "description": null,
            "generatedName": "groupMemberType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupMemberType",
              "groupName": null,
              "nameOverride": null,
              "schema": "group-member-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "groupName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the group.",
              "generatedName": "GroupName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupOwner",
          "key": "owner",
          "schema": {
            "description": null,
            "generatedName": "groupOwner",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupOwner",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "group-member-type": {
      "description": "Type of the members in the group.",
      "generatedName": "GroupMemberType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user",
          "nameOverride": null,
          "value": "dev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user",
          "nameOverride": null,
          "value": "rev_user",
        },
      ],
    },
    "group-members-add-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to add a new member to a group.",
      "generatedName": "GroupMembersAddRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersAddRequestGroup",
          "key": "group",
          "schema": {
            "description": "ID of the group where the member is being added.",
            "generatedName": "GroupMembersAddRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersAddRequestMember",
          "key": "member",
          "schema": {
            "description": "ID of the member to be added.",
            "generatedName": "GroupMembersAddRequestMember",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "group-members-add-response": {
      "description": null,
      "generatedName": "GroupMembersAddResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "GroupMembersAddResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "GroupMembersAddResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "group-members-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to list group members.",
      "generatedName": "GroupMembersListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "groupMembersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "GroupMembersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListRequestGroup",
          "key": "group",
          "schema": {
            "description": "ID of the group for which to list members.",
            "generatedName": "GroupMembersListRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "groupMembersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of members to return. If not set, then the
default is '50'.
",
              "generatedName": "GroupMembersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "groupMembersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupMembersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "group-members-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "List of group members.",
      "generatedName": "GroupMembersListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListResponseMembers",
          "key": "members",
          "schema": {
            "description": "List of members.",
            "generatedName": "GroupMembersListResponseMembers",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "GroupMembersListResponseMembersItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "group-members-list-response-member",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "groupMembersListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "GroupMembersListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "groupMembersListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "GroupMembersListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "group-members-list-response-member": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A group member.",
      "generatedName": "GroupMembersListResponseMember",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersListResponseMemberMember",
          "key": "member",
          "schema": {
            "description": null,
            "generatedName": "GroupMembersListResponseMemberMember",
            "groupName": null,
            "nameOverride": null,
            "schema": "member-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "group-members-remove-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to remove a group member.",
      "generatedName": "GroupMembersRemoveRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersRemoveRequestGroup",
          "key": "group",
          "schema": {
            "description": "ID of the group where the member is being removed.",
            "generatedName": "GroupMembersRemoveRequestGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupMembersRemoveRequestMember",
          "key": "member",
          "schema": {
            "description": "ID of the member to be removed.",
            "generatedName": "GroupMembersRemoveRequestMember",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "group-members-remove-response": {
      "description": null,
      "generatedName": "GroupMembersRemoveResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "GroupMembersRemoveResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "GroupMembersRemoveResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "group-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GroupSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupSearchSummaryGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "GroupSearchSummaryGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": "group-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "group-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GroupSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupSummaryName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "groupSummaryName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the group.",
              "generatedName": "GroupSummaryName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "group-type": {
      "description": "Type of the group.",
      "generatedName": "GroupType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dynamic",
          "nameOverride": null,
          "value": "dynamic",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "static",
          "nameOverride": null,
          "value": "static",
        },
      ],
    },
    "grouped-vista-flavor": {
      "description": "Denotes the use case of the grouped vista.",
      "generatedName": "GroupedVistaFlavor",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "nnl",
          "nameOverride": null,
          "value": "nnl",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "sprint_board",
          "nameOverride": null,
          "value": "sprint_board",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "support_inbox",
          "nameOverride": null,
          "value": "support_inbox",
        },
      ],
    },
    "grouped-vista-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "VistaBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "vista-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": "Represents a group of multiple vistas as a single unit.",
      "generatedName": "GroupedVistaSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupedVistaSummaryFlavor",
          "key": "flavor",
          "schema": {
            "description": null,
            "generatedName": "groupedVistaSummaryFlavor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupedVistaSummaryFlavor",
              "groupName": null,
              "nameOverride": null,
              "schema": "grouped-vista-flavor",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "groups-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to create a new group.",
      "generatedName": "GroupsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": "Description of the group.",
            "generatedName": "GroupsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsCreateRequestDynamicGroupInfo",
          "key": "dynamic_group_info",
          "schema": {
            "description": null,
            "generatedName": "groupsCreateRequestDynamicGroupInfo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupsCreateRequestDynamicGroupInfo",
              "groupName": null,
              "nameOverride": null,
              "schema": "dynamic-group-info",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsCreateRequestMemberType",
          "key": "member_type",
          "schema": {
            "description": null,
            "generatedName": "groupsCreateRequestMemberType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupsCreateRequestMemberType",
              "groupName": null,
              "nameOverride": null,
              "schema": "group-member-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsCreateRequestName",
          "key": "name",
          "schema": {
            "description": "Unique name of the group.",
            "generatedName": "GroupsCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsCreateRequestOwner",
          "key": "owner",
          "schema": {
            "description": null,
            "generatedName": "groupsCreateRequestOwner",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Owner of the group.",
              "generatedName": "GroupsCreateRequestOwner",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsCreateRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "groupsCreateRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupsCreateRequestType",
              "groupName": null,
              "nameOverride": null,
              "schema": "group-type",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "groups-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to group creation.",
      "generatedName": "GroupsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsCreateResponseGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "GroupsCreateResponseGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": "group",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "groups-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to get information about a group.",
      "generatedName": "GroupsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the group to get.",
            "generatedName": "GroupsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "groups-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting the group.",
      "generatedName": "GroupsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsGetResponseGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "GroupsGetResponseGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": "group",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "groups-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to get information about a list of groups.",
      "generatedName": "GroupsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "groupsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "GroupsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListRequestGroupType",
          "key": "group_type",
          "schema": {
            "description": null,
            "generatedName": "groupsListRequestGroupType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters the groups based on the group type.",
              "generatedName": "GroupsListRequestGroupType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GroupsListRequestGroupTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "group-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "groupsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of groups to return. The default is '50'.
",
              "generatedName": "GroupsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListRequestMemberType",
          "key": "member_type",
          "schema": {
            "description": null,
            "generatedName": "groupsListRequestMemberType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters the groups on basis of member type.",
              "generatedName": "GroupsListRequestMemberType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GroupsListRequestMemberTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "group-member-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "groupsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GroupsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "groupsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Comma-separated fields to sort the groups by.",
              "generatedName": "GroupsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GroupsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "groups-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the groups.",
      "generatedName": "GroupsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListResponseGroups",
          "key": "groups",
          "schema": {
            "description": "The list of groups.",
            "generatedName": "GroupsListResponseGroups",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "GroupsListResponseGroupsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "group",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "groupsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "GroupsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "groupsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "GroupsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "groups-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to update a group.",
      "generatedName": "GroupsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "groupsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated group's description.",
              "generatedName": "GroupsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the group to update.",
            "generatedName": "GroupsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsUpdateRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "groupsUpdateRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated group's name.",
              "generatedName": "GroupsUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsUpdateRequestOwner",
          "key": "owner",
          "schema": {
            "description": null,
            "generatedName": "groupsUpdateRequestOwner",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated group's owner.",
              "generatedName": "GroupsUpdateRequestOwner",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "groups-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to group update.",
      "generatedName": "GroupsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "groupsUpdateResponseGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "GroupsUpdateResponseGroup",
            "groupName": null,
            "nameOverride": null,
            "schema": "group",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "issue": {
      "allOf": [
        {
          "description": null,
          "generatedName": "WorkBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "work-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Issue",
      "groupName": null,
      "nameOverride": "issue",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "issueDevelopedWith",
          "key": "developed_with",
          "schema": {
            "description": null,
            "generatedName": "issueDevelopedWith",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Parts associated based on git events.",
              "generatedName": "IssueDevelopedWith",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "IssueDevelopedWithItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "part-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "issuePriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "issuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "IssuePriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "issue-priority",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "issue-priority": {
      "description": "Priority of the work based upon impact and criticality.",
      "generatedName": "IssuePriority",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p0",
          "nameOverride": null,
          "value": "p0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p1",
          "nameOverride": null,
          "value": "p1",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p2",
          "nameOverride": null,
          "value": "p2",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p3",
          "nameOverride": null,
          "value": "p3",
        },
      ],
    },
    "issue-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "WorkBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "work-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "IssueSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "issueSummaryPriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "issueSummaryPriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "IssueSummaryPriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "issue-priority",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "legacy-stage": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Describes the current stage of a work item.",
      "generatedName": "LegacyStage",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "legacyStageName",
          "key": "name",
          "schema": {
            "description": "Current stage name of the work item.",
            "generatedName": "LegacyStageName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "legacy-stage-summary": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Describes the current stage of a work item.",
      "generatedName": "LegacyStageSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "legacyStageSummaryName",
          "key": "name",
          "schema": {
            "description": "Current stage name of the work item.",
            "generatedName": "LegacyStageSummaryName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "lines-of-code": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Details of lines of code in this code change.",
      "generatedName": "LinesOfCode",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linesOfCodeFileCount",
          "key": "file_count",
          "schema": {
            "description": null,
            "generatedName": "linesOfCodeFileCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Count of files involved in this code change.",
              "generatedName": "LinesOfCodeFileCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linesOfCodeLinesAdded",
          "key": "lines_added",
          "schema": {
            "description": null,
            "generatedName": "linesOfCodeLinesAdded",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Number of new lines added in this code change.",
              "generatedName": "LinesOfCodeLinesAdded",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linesOfCodeLinesDeleted",
          "key": "lines_deleted",
          "schema": {
            "description": null,
            "generatedName": "linesOfCodeLinesDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Number of lines deleted in this code change.",
              "generatedName": "LinesOfCodeLinesDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linesOfCodeLinesModified",
          "key": "lines_modified",
          "schema": {
            "description": null,
            "generatedName": "linesOfCodeLinesModified",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Number of lines modified in this code change.",
              "generatedName": "LinesOfCodeLinesModified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "link": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Link",
      "groupName": null,
      "nameOverride": "link",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkLinkType",
          "key": "link_type",
          "schema": {
            "description": null,
            "generatedName": "LinkLinkType",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-type",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkSource",
          "key": "source",
          "schema": {
            "description": null,
            "generatedName": "LinkSource",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-endpoint-summary",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkTarget",
          "key": "target",
          "schema": {
            "description": null,
            "generatedName": "LinkTarget",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-endpoint-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "link-endpoint-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "LinkEndpointSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasCapabilitySummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "capability-summary",
            "type": "reference",
          },
          "conversation": {
            "description": null,
            "generatedName": "ComponentsSchemasConversationSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation-summary",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasEnhancementSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "enhancement-summary",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasFeatureSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "feature-summary",
            "type": "reference",
          },
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasIssueSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "issue-summary",
            "type": "reference",
          },
          "opportunity": {
            "description": null,
            "generatedName": "ComponentsSchemasOpportunitySummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "opportunity-summary",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasProductSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "product-summary",
            "type": "reference",
          },
          "task": {
            "description": null,
            "generatedName": "ComponentsSchemasTaskSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "task-summary",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasTicketSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "ticket-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "link-endpoint-type": {
      "description": null,
      "generatedName": "LinkEndpointType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "capability",
          "nameOverride": null,
          "value": "capability",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation",
          "nameOverride": null,
          "value": "conversation",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enhancement",
          "nameOverride": null,
          "value": "enhancement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "feature",
          "nameOverride": null,
          "value": "feature",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "issue",
          "nameOverride": null,
          "value": "issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "opportunity",
          "nameOverride": null,
          "value": "opportunity",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "product",
          "nameOverride": null,
          "value": "product",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "task",
          "nameOverride": null,
          "value": "task",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
      ],
    },
    "link-rev-user-to-rev-org-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to link a rev user to a rev org.",
      "generatedName": "LinkRevUserToRevOrgRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkRevUserToRevOrgRequestRevOrgDon",
          "key": "rev_org_don",
          "schema": {
            "description": "The don of the rev org to link the rev user to.",
            "generatedName": "LinkRevUserToRevOrgRequestRevOrgDon",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkRevUserToRevOrgRequestUserDon",
          "key": "user_don",
          "schema": {
            "description": "The don of the rev user to link.",
            "generatedName": "LinkRevUserToRevOrgRequestUserDon",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "link-rev-user-to-rev-org-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to link a rev user to a rev org.",
      "generatedName": "LinkRevUserToRevOrgResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkRevUserToRevOrgResponseRevUser",
          "key": "rev_user",
          "schema": {
            "description": null,
            "generatedName": "LinkRevUserToRevOrgResponseRevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "link-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "LinkSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkSearchSummaryLink",
          "key": "link",
          "schema": {
            "description": null,
            "generatedName": "LinkSearchSummaryLink",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "link-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "LinkSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkSummaryLinkType",
          "key": "link_type",
          "schema": {
            "description": null,
            "generatedName": "LinkSummaryLinkType",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-type",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkSummarySource",
          "key": "source",
          "schema": {
            "description": null,
            "generatedName": "LinkSummarySource",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-endpoint-summary",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linkSummaryTarget",
          "key": "target",
          "schema": {
            "description": null,
            "generatedName": "LinkSummaryTarget",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-endpoint-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "link-type": {
      "description": "Type of link used to define the relationship.",
      "generatedName": "LinkType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "developed_with",
          "nameOverride": null,
          "value": "developed_with",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "imports",
          "nameOverride": null,
          "value": "imports",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "is_dependent_on",
          "nameOverride": null,
          "value": "is_dependent_on",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "is_duplicate_of",
          "nameOverride": null,
          "value": "is_duplicate_of",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "is_parent_of",
          "nameOverride": null,
          "value": "is_parent_of",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "is_part_of",
          "nameOverride": null,
          "value": "is_part_of",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "is_related_to",
          "nameOverride": null,
          "value": "is_related_to",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "serves",
          "nameOverride": null,
          "value": "serves",
        },
      ],
    },
    "links-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to create a new link.",
      "generatedName": "LinksCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksCreateRequestLinkType",
          "key": "link_type",
          "schema": {
            "description": null,
            "generatedName": "LinksCreateRequestLinkType",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-type",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksCreateRequestSource",
          "key": "source",
          "schema": {
            "description": "The ID of the source object.",
            "generatedName": "LinksCreateRequestSource",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksCreateRequestTarget",
          "key": "target",
          "schema": {
            "description": "The ID of the target object.",
            "generatedName": "LinksCreateRequestTarget",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "links-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a new link.",
      "generatedName": "LinksCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksCreateResponseLink",
          "key": "link",
          "schema": {
            "description": null,
            "generatedName": "LinksCreateResponseLink",
            "groupName": null,
            "nameOverride": null,
            "schema": "link",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "links-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete a link.",
      "generatedName": "LinksDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the link to delete.",
            "generatedName": "LinksDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "links-delete-response": {
      "description": "The response for deleting a link.",
      "generatedName": "LinksDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "LinksDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "LinksDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "links-direction": {
      "description": "The direction of link, which can either be outbound such that the
object is the source of the link, otherwise inbound where the object is
the target of the link.
",
      "generatedName": "LinksDirection",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "is_source",
          "nameOverride": null,
          "value": "is_source",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "is_target",
          "nameOverride": null,
          "value": "is_target",
        },
      ],
    },
    "links-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get a link's information.",
      "generatedName": "LinksGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksGetRequestId",
          "key": "id",
          "schema": {
            "description": "The requested link's ID.",
            "generatedName": "LinksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "links-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a link's information.",
      "generatedName": "LinksGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksGetResponseLink",
          "key": "link",
          "schema": {
            "description": null,
            "generatedName": "LinksGetResponseLink",
            "groupName": null,
            "nameOverride": null,
            "schema": "link",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "links-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get information about a list of links.",
      "generatedName": "LinksListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "linksListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "LinksListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListRequestDirection",
          "key": "direction",
          "schema": {
            "description": null,
            "generatedName": "linksListRequestDirection",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestDirection",
              "groupName": null,
              "nameOverride": null,
              "schema": "links-direction",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "linksListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of links to return. If not set, then the default
is '50'.
",
              "generatedName": "LinksListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListRequestLinkType",
          "key": "link_type",
          "schema": {
            "description": null,
            "generatedName": "linksListRequestLinkType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The link type(s) to filter for, otherwise if not present, all link
types are included.
",
              "generatedName": "LinksListRequestLinkType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "LinksListRequestLinkTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "link-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "linksListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "LinksListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListRequestObject",
          "key": "object",
          "schema": {
            "description": "The ID of the object to list the links for.",
            "generatedName": "LinksListRequestObject",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListRequestTypes",
          "key": "types",
          "schema": {
            "description": null,
            "generatedName": "linksListRequestTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The link types to filter for, otherwise if not present, all link
types are included.
",
              "generatedName": "LinksListRequestTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "LinksListRequestTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "link-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "links-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the links.",
      "generatedName": "LinksListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListResponseLinks",
          "key": "links",
          "schema": {
            "description": "The list of links.",
            "generatedName": "LinksListResponseLinks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "LinksListResponseLinksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "link",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "linksListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "LinksListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "linksListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "linksListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "LinksListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "list-mode": {
      "description": "The iteration mode to use. If "after", then entries after the provided
cursor will be returned, or if no cursor is provided, then from the
beginning. If "before", then entries before the provided cursor will be
returned, or if no cursor is provided, then from the end. Entries will
always be returned in the specified sort-by order.
",
      "generatedName": "ListMode",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "after",
          "nameOverride": null,
          "value": "after",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "before",
          "nameOverride": null,
          "value": "before",
        },
      ],
    },
    "meeting-summary": {
      "description": null,
      "generatedName": "MeetingSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "member-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "MemberSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "dev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasDevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user-summary",
            "type": "reference",
          },
          "rev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasRevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user-summary",
            "type": "reference",
          },
          "sys_user": {
            "description": null,
            "generatedName": "ComponentsSchemasSysUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "sys-user-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "member-type": {
      "description": null,
      "generatedName": "MemberType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user",
          "nameOverride": null,
          "value": "dev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user",
          "nameOverride": null,
          "value": "rev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "sys_user",
          "nameOverride": null,
          "value": "sys_user",
        },
      ],
    },
    "metric-data-point": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MetricDataPoint",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDataPointDimensions",
          "key": "dimensions",
          "schema": {
            "description": null,
            "generatedName": "metricDataPointDimensions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Key-value pairs for specifying additional attributes.",
              "generatedName": "MetricDataPointDimensions",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "MetricDataPointDimensionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "metric-data-point-dimension",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDataPointId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "metricDataPointId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An ID that uniquely identifies the metric data point. This ID will
be used for deduplication. Clients can generate its own ID and send
it in the request. If not provided, DevRev will perform
content-based deduplication.
",
              "generatedName": "MetricDataPointId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDataPointTimestamp",
          "key": "timestamp",
          "schema": {
            "description": "Timestamp when metric value is captured.",
            "generatedName": "MetricDataPointTimestamp",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDataPointValue",
          "key": "value",
          "schema": {
            "description": "The value corresponding to the metric. For simply recording
occurrence of an event, this value should be 1.0.
",
            "generatedName": "MetricDataPointValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "metric-data-point-dimension": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MetricDataPointDimension",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDataPointDimensionKey",
          "key": "key",
          "schema": {
            "description": "The key for the dimension. The keys must be unique and it is not
allowed to have more than one value with the same key. Key must be
at least one character long and cannot be longer than 64
characters.Key can only contain alphanumeric characters (A-Z, a-z,
and 0-9) and underscores (_). Key cannot start with a number and is
case-insensitive.
",
            "generatedName": "MetricDataPointDimensionKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDataPointDimensionValue",
          "key": "value",
          "schema": {
            "description": "The value for the dimension. Value could be any string and cannot
be longer than 256 characters.
",
            "generatedName": "MetricDataPointDimensionValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "metric-definition": {
      "description": null,
      "generatedName": "MetricDefinition",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base",
      "type": "reference",
    },
    "metric-definition-applies-to": {
      "description": "The list of item types on which the metric might be applied.",
      "generatedName": "MetricDefinitionAppliesTo",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation",
          "nameOverride": null,
          "value": "conversation",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
      ],
    },
    "metric-definition-metric-type": {
      "description": "The type of the metric. 'time' metrics track the time spent in some
state, supporting operations like 'start', 'stop', 'pause', 'resume'.
'value' metrics track a value, supporting operations like 'set',
'increment', 'decrement'.
",
      "generatedName": "MetricDefinitionMetricType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "time",
          "nameOverride": null,
          "value": "time",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "value",
          "nameOverride": null,
          "value": "value",
        },
      ],
    },
    "metric-definitions-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MetricDefinitionsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListRequestAppliesToType",
          "key": "applies_to_type",
          "schema": {
            "description": null,
            "generatedName": "metricDefinitionsListRequestAppliesToType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The type of objects the metric definition applies to.",
              "generatedName": "MetricDefinitionsListRequestAppliesToType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "MetricDefinitionsListRequestAppliesToTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "metric-definition-applies-to",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "metricDefinitionsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "MetricDefinitionsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "metricDefinitionsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of records to return. The default is '50'.
",
              "generatedName": "MetricDefinitionsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "metricDefinitionsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "MetricDefinitionsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "metricDefinitionsListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The type of metric definitions sought.",
              "generatedName": "MetricDefinitionsListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "MetricDefinitionsListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "metric-definition-metric-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "metric-definitions-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MetricDefinitionsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListResponseMetricDefinitions",
          "key": "metric_definitions",
          "schema": {
            "description": "The list of metric definitions.",
            "generatedName": "MetricDefinitionsListResponseMetricDefinitions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "MetricDefinitionsListResponseMetricDefinitionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "metric-definition",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "metricDefinitionsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "MetricDefinitionsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricDefinitionsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "metricDefinitionsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "MetricDefinitionsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "metrics-data": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MetricsData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricsDataDataPoints",
          "key": "data_points",
          "schema": {
            "description": "One or more data points collected for a given metric such as object
usage, object state etc.
",
            "generatedName": "MetricsDataDataPoints",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "MetricsDataDataPointsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "metric-data-point",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricsDataName",
          "key": "name",
          "schema": {
            "description": "Name of the metric which is being measured. For example,
num_api_calls, num_active_users, etc.
",
            "generatedName": "MetricsDataName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricsDataOrgRef",
          "key": "org_ref",
          "schema": {
            "description": "Rev Org ID or external_ref for which metric is being published.Rev
Org ID is DevRev DON ID. For example,
don:identity:dvrv-us-1:devo/0:revo/156. External_ref is the
identification of DevRev customer's customers and maintained by
DevRev's customers. Devrev will internally resolve external_ref to
Rev Org ID and use it for further processing. For example,
external_ref=org_customer_1 may resolve to
don:identity:dvrv-us-1:devo/0:revo/155.
",
            "generatedName": "MetricsDataOrgRef",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricsDataUserRef",
          "key": "user_ref",
          "schema": {
            "description": null,
            "generatedName": "metricsDataUserRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Rev User ID or user ref for which metric is being published.
",
              "generatedName": "MetricsDataUserRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "metrics-data-ingest-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "MetricsDataIngestRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "metricsDataIngestRequestMetrics",
          "key": "metrics",
          "schema": {
            "description": "Metrics data received from Dev orgs.",
            "generatedName": "MetricsDataIngestRequestMetrics",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "MetricsDataIngestRequestMetricsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "metrics-data",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "object-member-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ObjectMemberSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "objectMemberSearchSummaryObjectMember",
          "key": "object_member",
          "schema": {
            "description": null,
            "generatedName": "ObjectMemberSearchSummaryObjectMember",
            "groupName": null,
            "nameOverride": null,
            "schema": "object-member-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "object-member-summary": {
      "description": null,
      "generatedName": "ObjectMemberSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "opportunity": {
      "description": null,
      "generatedName": "Opportunity",
      "groupName": null,
      "nameOverride": null,
      "schema": "work-base",
      "type": "reference",
    },
    "opportunity-forecast-category": {
      "description": "Forecast category of the opportunity.",
      "generatedName": "OpportunityForecastCategory",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "commit",
          "nameOverride": null,
          "value": "commit",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "omitted",
          "nameOverride": null,
          "value": "omitted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "pipeline",
          "nameOverride": null,
          "value": "pipeline",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "strong_upside",
          "nameOverride": null,
          "value": "strong_upside",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "upside",
          "nameOverride": null,
          "value": "upside",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "won",
          "nameOverride": null,
          "value": "won",
        },
      ],
    },
    "opportunity-priority": {
      "description": "Priority of the opportunity.",
      "generatedName": "OpportunityPriority",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p0",
          "nameOverride": null,
          "value": "p0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p1",
          "nameOverride": null,
          "value": "p1",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p2",
          "nameOverride": null,
          "value": "p2",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p3",
          "nameOverride": null,
          "value": "p3",
        },
      ],
    },
    "opportunity-summary": {
      "description": null,
      "generatedName": "OpportunitySummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "work-base-summary",
      "type": "reference",
    },
    "org-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgBaseDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "orgBaseDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the Organization.",
              "generatedName": "OrgBaseDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "org-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgBaseSummaryDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "orgBaseSummaryDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the Organization.",
              "generatedName": "OrgBaseSummaryDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "org-environment": {
      "description": "The environment of the Org. Defaults to 'production' if not specified.
",
      "generatedName": "OrgEnvironment",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "production",
          "nameOverride": null,
          "value": "production",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "staging",
          "nameOverride": null,
          "value": "staging",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "test",
          "nameOverride": null,
          "value": "test",
        },
      ],
    },
    "org-schedule": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedule",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleDefaultWeeklyOrgSchedule",
          "key": "default_weekly_org_schedule",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleDefaultWeeklyOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "OrgScheduleDefaultWeeklyOrgSchedule",
              "groupName": null,
              "nameOverride": null,
              "schema": "weekly-org-schedule",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleMinValidDays",
          "key": "min_valid_days",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleMinValidDays",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The schedule must be valid and well-defined for at least this many
days in the future, otherwise a warning notification is generated.
Default is 0 if not specified.
",
              "generatedName": "OrgScheduleMinValidDays",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable name.",
              "generatedName": "OrgScheduleName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleOrgScheduleFragments",
          "key": "org_schedule_fragments",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleOrgScheduleFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of schedule fragments. It must be an ordered list of
contiguous fragments (the next starting when the previous one
ends), updates in a published schedule are only allowed to add new
ones to the future.
",
              "generatedName": "OrgScheduleOrgScheduleFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgScheduleOrgScheduleFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "org-schedule-fragment-overview",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "OrgScheduleStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule-status",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleTimezone",
          "key": "timezone",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleTimezone",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timezone in which this is defined. Only organization schedules in
the same timezone can be directly combined.
",
              "generatedName": "OrgScheduleTimezone",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleValidUntil",
          "key": "valid_until",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleValidUntil",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Derived field indicating when a valid organization schedule will
become invalid. If omitted, the schedule is already invalid. A
schedule is valid if it has a weekly schedule for all named periods
for all its schedule fragments, and if it has a schedule fragment
for the time period in question.
",
              "generatedName": "OrgScheduleValidUntil",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleWeeklyOrgSchedules",
          "key": "weekly_org_schedules",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleWeeklyOrgSchedules",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "If the organization schedule fragment specifies that the given day
belongs to a named period, a weekly schedule from this list with
the matching name will be selected.
",
              "generatedName": "OrgScheduleWeeklyOrgSchedules",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgScheduleWeeklyOrgSchedulesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "weekly-org-schedule",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-fragment": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgScheduleFragment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentFrom",
          "key": "from",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleFragmentFrom",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The date (inclusive) on which the organization schedule fragment
begins.
",
              "generatedName": "OrgScheduleFragmentFrom",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentIntervals",
          "key": "intervals",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleFragmentIntervals",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Periods during which the schedule is considered to be 'off' or to
be in some specific named period.
",
              "generatedName": "OrgScheduleFragmentIntervals",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgScheduleFragmentIntervalsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "org-schedule-interval",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleFragmentName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable name, indicating the purpose of the schedule.
",
              "generatedName": "OrgScheduleFragmentName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentRegionCodes",
          "key": "region_codes",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleFragmentRegionCodes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "CLDR region code of the countries/regions it is meant to be valid
for. Does not drive logic, serves only for easier filtering and
organization.
",
              "generatedName": "OrgScheduleFragmentRegionCodes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgScheduleFragmentRegionCodesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "OrgScheduleFragmentStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule-fragment-status",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentTo",
          "key": "to",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleFragmentTo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The date (exclusive) on which the organization schedule fragment's
validity ends.
",
              "generatedName": "OrgScheduleFragmentTo",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-fragment-overview": {
      "description": "The representation of the organization schedule fragment embedded
inside a organization schedule, used to quickly look up the schedule
fragment for the right period.
",
      "generatedName": "OrgScheduleFragmentOverview",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "OrgScheduleFragmentOverviewKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "OrgScheduleFragmentOverviewValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "org-schedule-fragment-status": {
      "description": "Status determines how an item can be used. In 'draft' status an item
can be edited but can't be used. When 'published' the item can longer
be edited but can be used. 'Archived' is read-only.
",
      "generatedName": "OrgScheduleFragmentStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "archived",
          "nameOverride": null,
          "value": "archived",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "draft",
          "nameOverride": null,
          "value": "draft",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "published",
          "nameOverride": null,
          "value": "published",
        },
      ],
    },
    "org-schedule-fragments-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgScheduleFragmentsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsCreateRequestFrom",
          "key": "from",
          "schema": {
            "description": "Date (inclusive) on which the organization schedule fragment
begins.
",
            "generatedName": "OrgScheduleFragmentsCreateRequestFrom",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsCreateRequestIntervals",
          "key": "intervals",
          "schema": {
            "description": "The intervals that comprise the schedule fragment.",
            "generatedName": "OrgScheduleFragmentsCreateRequestIntervals",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "OrgScheduleFragmentsCreateRequestIntervalsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "create-org-schedule-interval",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsCreateRequestName",
          "key": "name",
          "schema": {
            "description": "Name of the organization schedule fragment.",
            "generatedName": "OrgScheduleFragmentsCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsCreateRequestRegionCodes",
          "key": "region_codes",
          "schema": {
            "description": null,
            "generatedName": "orgScheduleFragmentsCreateRequestRegionCodes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "CLDR region code of the countries/regions it is meant to be valid
for. Does not drive logic, serves only for easier filtering and
organization.
",
              "generatedName": "OrgScheduleFragmentsCreateRequestRegionCodes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgScheduleFragmentsCreateRequestRegionCodesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsCreateRequestTo",
          "key": "to",
          "schema": {
            "description": "Date (exclusive) on which the organization schedule fragment's
validity ends.
",
            "generatedName": "OrgScheduleFragmentsCreateRequestTo",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-fragments-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgScheduleFragmentsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsCreateResponseOrgScheduleFragment",
          "key": "org_schedule_fragment",
          "schema": {
            "description": null,
            "generatedName": "OrgScheduleFragmentsCreateResponseOrgScheduleFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule-fragment",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-fragments-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgScheduleFragmentsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsGetRequestId",
          "key": "id",
          "schema": {
            "description": "Organization schedule Fragment ID.",
            "generatedName": "OrgScheduleFragmentsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-fragments-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgScheduleFragmentsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsGetResponseOrgScheduleFragment",
          "key": "org_schedule_fragment",
          "schema": {
            "description": null,
            "generatedName": "OrgScheduleFragmentsGetResponseOrgScheduleFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule-fragment",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-fragments-transition-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgScheduleFragmentsTransitionRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsTransitionRequestId",
          "key": "id",
          "schema": {
            "description": "Organization schedule Fragment ID.",
            "generatedName": "OrgScheduleFragmentsTransitionRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsTransitionRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "OrgScheduleFragmentsTransitionRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule-fragment-status",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-fragments-transition-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgScheduleFragmentsTransitionResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgScheduleFragmentsTransitionResponseOrgScheduleFragment",
          "key": "org_schedule_fragment",
          "schema": {
            "description": null,
            "generatedName": "OrgScheduleFragmentsTransitionResponseOrgScheduleFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule-fragment",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedule-interval": {
      "description": "An optionally named period on day granularity.",
      "generatedName": "OrgScheduleInterval",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "OrgScheduleIntervalKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "OrgScheduleIntervalValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "org-schedule-status": {
      "description": "Status determines how an item can be used. In 'draft' status an item
can be edited but can't be used. When 'published' the item can longer
be edited but can be used. 'Archived' is read-only.
",
      "generatedName": "OrgScheduleStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "archived",
          "nameOverride": null,
          "value": "archived",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "draft",
          "nameOverride": null,
          "value": "draft",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "published",
          "nameOverride": null,
          "value": "published",
        },
      ],
    },
    "org-schedules-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesCreateRequestDefaultWeeklyOrgSchedule",
          "key": "default_weekly_org_schedule",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesCreateRequestDefaultWeeklyOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesCreateRequestDefaultWeeklyOrgSchedule",
              "groupName": null,
              "nameOverride": null,
              "schema": "set-weekly-org-schedule",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesCreateRequestMinValidDays",
          "key": "min_valid_days",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesCreateRequestMinValidDays",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Organization schedule must be valid for at least this many days in
the future. Meaning organization schedule fragments must cover this
period. 0 if omitted.
",
              "generatedName": "OrgSchedulesCreateRequestMinValidDays",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesCreateRequestName",
          "key": "name",
          "schema": {
            "description": "Human-readable name.",
            "generatedName": "OrgSchedulesCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesCreateRequestOrgScheduleFragments",
          "key": "org_schedule_fragments",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesCreateRequestOrgScheduleFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of organization schedule fragments with no overlaps or gaps.
",
              "generatedName": "OrgSchedulesCreateRequestOrgScheduleFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesCreateRequestOrgScheduleFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-org-schedule-fragment-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesCreateRequestTimezone",
          "key": "timezone",
          "schema": {
            "description": "Timezone in which the organization schedule applies. Expected to be
a valid IANA time zone name such as America/New_York.
",
            "generatedName": "OrgSchedulesCreateRequestTimezone",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesCreateRequestWeeklyOrgSchedules",
          "key": "weekly_org_schedules",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesCreateRequestWeeklyOrgSchedules",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "If this day belongs to a named period according to the currently
active organization schedule fragment, a weekly organization
schedule from this list with the corresponding name will apply.
",
              "generatedName": "OrgSchedulesCreateRequestWeeklyOrgSchedules",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesCreateRequestWeeklyOrgSchedulesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-weekly-org-schedule",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesCreateResponseOrgSchedule",
          "key": "org_schedule",
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesCreateResponseOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesGetRequestId",
          "key": "id",
          "schema": {
            "description": "Organization schedule ID.",
            "generatedName": "OrgSchedulesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesGetResponseOrgSchedule",
          "key": "org_schedule",
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesGetResponseOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListRequestCreatedById",
          "key": "created_by_id",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListRequestCreatedById",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Creator ID the filter matches.",
              "generatedName": "OrgSchedulesListRequestCreatedById",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesListRequestCreatedByIdItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "OrgSchedulesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Max number of organization schedules returned in a page. Default is
50.
",
              "generatedName": "OrgSchedulesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The organization schedule statuses the filter matches.",
              "generatedName": "OrgSchedulesListRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesListRequestStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "org-schedule-status",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListRequestValidUntil",
          "key": "valid_until",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListRequestValidUntil",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListRequestValidUntil",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "OrgSchedulesListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListResponseOrgSchedules",
          "key": "org_schedules",
          "schema": {
            "description": "The list of organization schedules.",
            "generatedName": "OrgSchedulesListResponseOrgSchedules",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesListResponseOrgSchedulesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-schedule",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "OrgSchedulesListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-set-future-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesSetFutureRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesSetFutureRequestId",
          "key": "id",
          "schema": {
            "description": "Organization schedule ID.",
            "generatedName": "OrgSchedulesSetFutureRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesSetFutureRequestOrgScheduleFragmentId",
          "key": "org_schedule_fragment_id",
          "schema": {
            "description": "Organization schedule Fragment ID.",
            "generatedName": "OrgSchedulesSetFutureRequestOrgScheduleFragmentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-set-future-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesSetFutureResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesSetFutureResponseOrgSchedule",
          "key": "org_schedule",
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesSetFutureResponseOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-transition-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesTransitionRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesTransitionRequestId",
          "key": "id",
          "schema": {
            "description": "Organization schedule ID.",
            "generatedName": "OrgSchedulesTransitionRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesTransitionRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesTransitionRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule-status",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-transition-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesTransitionResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesTransitionResponseOrgSchedule",
          "key": "org_schedule",
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesTransitionResponseOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateRequestDefaultWeeklyOrgSchedule",
          "key": "default_weekly_org_schedule",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesUpdateRequestDefaultWeeklyOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "OrgSchedulesUpdateRequestDefaultWeeklyOrgSchedule",
              "groupName": null,
              "nameOverride": null,
              "schema": "set-weekly-org-schedule",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "Organization schedule ID.",
            "generatedName": "OrgSchedulesUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateRequestMinValidDays",
          "key": "min_valid_days",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesUpdateRequestMinValidDays",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Organization schedule must be valid for at least this many days in
the future. Meaning organization schedule fragments must cover this
period. 0 if omitted.
",
              "generatedName": "OrgSchedulesUpdateRequestMinValidDays",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesUpdateRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable name.",
              "generatedName": "OrgSchedulesUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateRequestOrgScheduleFragments",
          "key": "org_schedule_fragments",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesUpdateRequestOrgScheduleFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of organization schedule fragments with no overlaps or gaps.
",
              "generatedName": "OrgSchedulesUpdateRequestOrgScheduleFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesUpdateRequestOrgScheduleFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-org-schedule-fragment-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateRequestTimezone",
          "key": "timezone",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesUpdateRequestTimezone",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timezone in which the organization schedule applies. Expected to be
a valid IANA time zone name such as America/New_York.
",
              "generatedName": "OrgSchedulesUpdateRequestTimezone",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateRequestWeeklyOrgSchedules",
          "key": "weekly_org_schedules",
          "schema": {
            "description": null,
            "generatedName": "orgSchedulesUpdateRequestWeeklyOrgSchedules",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "If this day belongs to a named period according to the currently
active organization schedule fragment, a weekly organization
schedule from this list with the corresponding name will apply.
",
              "generatedName": "OrgSchedulesUpdateRequestWeeklyOrgSchedules",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "OrgSchedulesUpdateRequestWeeklyOrgSchedulesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-weekly-org-schedule",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "org-schedules-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSchedulesUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSchedulesUpdateResponseOrgSchedule",
          "key": "org_schedule",
          "schema": {
            "description": null,
            "generatedName": "OrgSchedulesUpdateResponseOrgSchedule",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-schedule",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgSearchSummaryOrg",
          "key": "org",
          "schema": {
            "description": null,
            "generatedName": "OrgSearchSummaryOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "org-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "OrgSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "account": {
            "description": null,
            "generatedName": "ComponentsSchemasAccountSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "account-summary",
            "type": "reference",
          },
          "rev_org": {
            "description": null,
            "generatedName": "ComponentsSchemasRevOrgSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "org-type": {
      "description": null,
      "generatedName": "OrgType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account",
          "nameOverride": null,
          "value": "account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org",
          "nameOverride": null,
          "value": "rev_org",
        },
      ],
    },
    "parent-part-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The filter for specifying parent part.",
      "generatedName": "ParentPartFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "parentPartFilterLevel",
          "key": "level",
          "schema": {
            "description": null,
            "generatedName": "parentPartFilterLevel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Number of levels to fetch the part hierarchy up to.",
              "generatedName": "ParentPartFilterLevel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "parentPartFilterParts",
          "key": "parts",
          "schema": {
            "description": "Part IDs to fetch the hierarchy for.",
            "generatedName": "ParentPartFilterParts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ParentPartFilterPartsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "part": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "Part",
        "groupName": null,
        "nameOverride": "part",
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasCapability",
            "groupName": null,
            "nameOverride": null,
            "schema": "capability",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasEnhancement",
            "groupName": null,
            "nameOverride": null,
            "schema": "enhancement",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasFeature",
            "groupName": null,
            "nameOverride": null,
            "schema": "feature",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasProduct",
            "groupName": null,
            "nameOverride": null,
            "schema": "product",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "part-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "partBaseArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The attached artifacts.",
              "generatedName": "PartBaseArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartBaseArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "partBaseCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom fields.",
              "generatedName": "PartBaseCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "PartBaseCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "PartBaseCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "partBaseCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom schema fragments.",
              "generatedName": "PartBaseCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartBaseCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "partBaseDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the part.",
              "generatedName": "PartBaseDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseName",
          "key": "name",
          "schema": {
            "description": "Name of the part.",
            "generatedName": "PartBaseName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": "The users that own the part.",
            "generatedName": "PartBaseOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartBaseOwnedByItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseStockSchemaFragment",
          "key": "stock_schema_fragment",
          "schema": {
            "description": null,
            "generatedName": "partBaseStockSchemaFragment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Stock schema fragment.",
              "generatedName": "PartBaseStockSchemaFragment",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "partBaseSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Subtype corresponding to the custom type fragment.",
              "generatedName": "PartBaseSubtype",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "partBaseTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the object.",
              "generatedName": "PartBaseTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartBaseTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "part-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseSummaryName",
          "key": "name",
          "schema": {
            "description": "Name of the part.",
            "generatedName": "PartBaseSummaryName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "part-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partSearchSummaryPart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "PartSearchSummaryPart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "part-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "PartSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasCapabilitySummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "capability-summary",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasEnhancementSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "enhancement-summary",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasFeatureSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "feature-summary",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasProductSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "product-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "part-type": {
      "description": null,
      "generatedName": "PartType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "capability",
          "nameOverride": null,
          "value": "capability",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enhancement",
          "nameOverride": null,
          "value": "enhancement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "feature",
          "nameOverride": null,
          "value": "feature",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "product",
          "nameOverride": null,
          "value": "product",
        },
      ],
    },
    "parts-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "artifacts",
            "schema": {
              "description": "The IDs of the artifacts.",
              "generatedName": "PartsCreateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The IDs of the artifacts.",
                "generatedName": "PartsCreateRequestArtifacts",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "PartsCreateRequestArtifactsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "custom_fields",
            "schema": {
              "description": "Custom fields.",
              "generatedName": "PartsCreateRequestCustomFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Custom fields.",
                "generatedName": "PartsCreateRequestCustomFields",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "PartsCreateRequestCustomFieldsKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "PartsCreateRequestCustomFieldsValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
          {
            "key": "custom_schema_fragments",
            "schema": {
              "description": "The custom schema fragments to use.",
              "generatedName": "PartsCreateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The custom schema fragments to use.",
                "generatedName": "PartsCreateRequestCustomSchemaFragments",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "PartsCreateRequestCustomSchemaFragmentsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "description",
            "schema": {
              "description": "Description of the part.",
              "generatedName": "PartsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Description of the part.",
                "generatedName": "PartsCreateRequestDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "name",
            "schema": {
              "description": "Name of the part.",
              "generatedName": "PartsCreateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": "The users that own the part.",
              "generatedName": "PartsCreateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsCreateRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "PartsCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestCapability",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-capability",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestEnhancement",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-enhancement",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestFeature",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-feature",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestProduct",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-product",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "parts-create-request-capability": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateRequestCapability",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestCapabilityParentPart",
          "key": "parent_part",
          "schema": {
            "description": "ID of the parent product for the capability.",
            "generatedName": "PartsCreateRequestCapabilityParentPart",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsCreateRequestCapabilityParentPartItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-create-request-enhancement": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateRequestEnhancement",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestEnhancementParentPart",
          "key": "parent_part",
          "schema": {
            "description": "ID of the parent part on which the enhancement is to be created.
",
            "generatedName": "PartsCreateRequestEnhancementParentPart",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsCreateRequestEnhancementParentPartItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestEnhancementTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "partsCreateRequestEnhancementTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Target close date by which enhancement is expected to be closed.
",
              "generatedName": "PartsCreateRequestEnhancementTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestEnhancementTargetStartDate",
          "key": "target_start_date",
          "schema": {
            "description": null,
            "generatedName": "partsCreateRequestEnhancementTargetStartDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Target start date by which enhancement is expected to be started.
Example Date Format: 2000-11-01T01:01:01Z
",
              "generatedName": "PartsCreateRequestEnhancementTargetStartDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-create-request-feature": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateRequestFeature",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestFeatureParentPart",
          "key": "parent_part",
          "schema": {
            "description": "ID of the parent capability/feature for the feature.",
            "generatedName": "PartsCreateRequestFeatureParentPart",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsCreateRequestFeatureParentPartItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-create-request-product": {
      "description": null,
      "generatedName": "PartsCreateRequestProduct",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsCreateRequestProductKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsCreateRequestProductValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateResponsePart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "PartsCreateResponsePart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "parts-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the part to delete.",
            "generatedName": "PartsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "parts-delete-response": {
      "description": null,
      "generatedName": "PartsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the part to retrieve.",
            "generatedName": "PartsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "parts-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsGetResponsePart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "PartsGetResponsePart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "parts-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for parts created by any of these users.",
              "generatedName": "PartsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "PartsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of parts to return. The default is '50'.
",
              "generatedName": "PartsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for parts of the provided name(s).",
              "generatedName": "PartsListRequestName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for parts owned by any of these users.",
              "generatedName": "PartsListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestParentPart",
          "key": "parent_part",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestParentPart",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestParentPart",
              "groupName": null,
              "nameOverride": null,
              "schema": "parent-part-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "partsListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for parts of the provided type(s).",
              "generatedName": "PartsListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "part-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "partsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "PartsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListResponseParts",
          "key": "parts",
          "schema": {
            "description": "The list of parts.",
            "generatedName": "PartsListResponseParts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsListResponsePartsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "part",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "partsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "PartsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "artifacts",
            "schema": {
              "description": null,
              "generatedName": "PartsUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PartsUpdateRequestArtifacts",
                "groupName": null,
                "nameOverride": null,
                "schema": "parts-update-request-artifacts",
                "type": "reference",
              },
            },
          },
          {
            "key": "custom_fields",
            "schema": {
              "description": "Custom fields.",
              "generatedName": "PartsUpdateRequestCustomFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Custom fields.",
                "generatedName": "PartsUpdateRequestCustomFields",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "PartsUpdateRequestCustomFieldsKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "PartsUpdateRequestCustomFieldsValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
          {
            "key": "custom_schema_fragments",
            "schema": {
              "description": "The custom schema fragments to use.",
              "generatedName": "PartsUpdateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The custom schema fragments to use.",
                "generatedName": "PartsUpdateRequestCustomSchemaFragments",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "PartsUpdateRequestCustomSchemaFragmentsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "description",
            "schema": {
              "description": "The updated description of the part.",
              "generatedName": "PartsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The updated description of the part.",
                "generatedName": "PartsUpdateRequestDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "The ID of the part to update.",
              "generatedName": "PartsUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "name",
            "schema": {
              "description": "The updated name of the part.",
              "generatedName": "PartsUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The updated name of the part.",
                "generatedName": "PartsUpdateRequestName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": null,
              "generatedName": "PartsUpdateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PartsUpdateRequestOwnedBy",
                "groupName": null,
                "nameOverride": null,
                "schema": "parts-update-request-owned-by",
                "type": "reference",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "PartsUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestCapability",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-capability",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestEnhancement",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-enhancement",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestFeature",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-feature",
            "type": "reference",
          },
          "none": {
            "description": null,
            "generatedName": "ComponentsSchemasEmpty",
            "groupName": null,
            "nameOverride": null,
            "schema": "empty",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestProduct",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-product",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "parts-update-request-artifacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsUpdateRequestArtifacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateRequestArtifactsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "partsUpdateRequestArtifactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the artifacts to the provided IDs.",
              "generatedName": "PartsUpdateRequestArtifactsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsUpdateRequestArtifactsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-update-request-capability": {
      "description": null,
      "generatedName": "PartsUpdateRequestCapability",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsUpdateRequestCapabilityKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsUpdateRequestCapabilityValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-update-request-enhancement": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsUpdateRequestEnhancement",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateRequestEnhancementTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "partsUpdateRequestEnhancementTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the target close date of the enhancement.",
              "generatedName": "PartsUpdateRequestEnhancementTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateRequestEnhancementTargetStartDate",
          "key": "target_start_date",
          "schema": {
            "description": null,
            "generatedName": "partsUpdateRequestEnhancementTargetStartDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the target start date of the enhancement. Example Date
Format: 2000-11-01T01:01:01Z
",
              "generatedName": "PartsUpdateRequestEnhancementTargetStartDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-update-request-feature": {
      "description": null,
      "generatedName": "PartsUpdateRequestFeature",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsUpdateRequestFeatureKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsUpdateRequestFeatureValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-update-request-owned-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsUpdateRequestOwnedBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateRequestOwnedBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "partsUpdateRequestOwnedBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
              "generatedName": "PartsUpdateRequestOwnedBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsUpdateRequestOwnedBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-update-request-product": {
      "description": null,
      "generatedName": "PartsUpdateRequestProduct",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsUpdateRequestProductKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsUpdateRequestProductValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateResponsePart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "PartsUpdateResponsePart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "product": {
      "description": null,
      "generatedName": "Product",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base",
      "type": "reference",
    },
    "product-summary": {
      "description": null,
      "generatedName": "ProductSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "question-answer-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "QuestionAnswerSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "questionAnswerSearchSummaryQuestionAnswer",
          "key": "question_answer",
          "schema": {
            "description": null,
            "generatedName": "QuestionAnswerSearchSummaryQuestionAnswer",
            "groupName": null,
            "nameOverride": null,
            "schema": "question-answer-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "question-answer-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "QuestionAnswerSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "questionAnswerSummaryQuestion",
          "key": "question",
          "schema": {
            "description": null,
            "generatedName": "questionAnswerSummaryQuestion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The Question.",
              "generatedName": "QuestionAnswerSummaryQuestion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "resource": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Resource details.",
      "generatedName": "Resource",
      "groupName": null,
      "nameOverride": "resource",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "resourceArtifacts",
            "groupName": null,
            "nameOverride": "resource",
            "type": "optional",
            "value": {
              "description": "Ids of the artifacts.",
              "generatedName": "ResourceArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ResourceArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceUrl",
          "key": "url",
          "schema": {
            "description": null,
            "generatedName": "resourceUrl",
            "groupName": null,
            "nameOverride": "resource",
            "type": "optional",
            "value": {
              "description": "URL of the external article.",
              "generatedName": "ResourceUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "resource-summary": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Resource details.",
      "generatedName": "ResourceSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceSummaryArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "resourceSummaryArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Ids of the artifacts.",
              "generatedName": "ResourceSummaryArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ResourceSummaryArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "resourceSummaryUrl",
          "key": "url",
          "schema": {
            "description": null,
            "generatedName": "resourceSummaryUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "URL of the external article.",
              "generatedName": "ResourceSummaryUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-org": {
      "allOf": [
        {
          "description": null,
          "generatedName": "OrgBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevOrg",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "revOrgAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgAccount",
              "groupName": null,
              "nameOverride": null,
              "schema": "account-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "revOrgArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifacts attached to the Rev organization.",
              "generatedName": "RevOrgArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "revOrgCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom fields.",
              "generatedName": "RevOrgCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevOrgCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevOrgCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "revOrgCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom schema fragments.",
              "generatedName": "RevOrgCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revOrgDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev organization.",
              "generatedName": "RevOrgDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "revOrgDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Company's domain name. Example - 'devrev.ai'.",
              "generatedName": "RevOrgDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revOrgExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a unique identifier for the Rev (customer)
organization from your primary customer system of records. If none
is specified, a system-generated identifier will be assigned to the
organization.
",
              "generatedName": "RevOrgExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgStockSchemaFragment",
          "key": "stock_schema_fragment",
          "schema": {
            "description": null,
            "generatedName": "revOrgStockSchemaFragment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Stock schema fragment.",
              "generatedName": "RevOrgStockSchemaFragment",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "revOrgSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Subtype corresponding to the custom type fragment.",
              "generatedName": "RevOrgSubtype",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revOrgTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with an object.",
              "generatedName": "RevOrgTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-org-summary": {
      "description": null,
      "generatedName": "RevOrgSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "org-base-summary",
      "type": "reference",
    },
    "rev-orgs-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to create a new Rev organization in the Dev
organization.
",
      "generatedName": "RevOrgsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Account Id to associate with this Rev organization.",
              "generatedName": "RevOrgsCreateRequestAccount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the artifacts to associate with the Rev organization.
",
              "generatedName": "RevOrgsCreateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsCreateRequestArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Application-defined custom fields.",
              "generatedName": "RevOrgsCreateRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevOrgsCreateRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevOrgsCreateRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Schema fragment IDs associated with this Rev organization.
",
              "generatedName": "RevOrgsCreateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsCreateRequestCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev organization.",
              "generatedName": "RevOrgsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": "Name of the Rev organization.",
            "generatedName": "RevOrgsCreateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Company's domain name. Example - 'devrev.ai'.",
              "generatedName": "RevOrgsCreateRequestDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestEnvironment",
          "key": "environment",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestEnvironment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsCreateRequestEnvironment",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-environment",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
              "generatedName": "RevOrgsCreateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the Rev organization.",
              "generatedName": "RevOrgsCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsCreateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The tier of the RevOrg.",
              "generatedName": "RevOrgsCreateRequestTier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object for request to create a new Rev organization.
",
      "generatedName": "RevOrgsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateResponseRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "RevOrgsCreateResponseRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to delete a Rev organization.",
      "generatedName": "RevOrgsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of Rev organization to delete.",
            "generatedName": "RevOrgsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-delete-response": {
      "description": "The response to deleting a Rev organization.",
      "generatedName": "RevOrgsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "RevOrgsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "RevOrgsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "rev-orgs-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to get Rev organization's information.",
      "generatedName": "RevOrgsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsGetRequestAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "revOrgsGetRequestAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of account for which default Rev organization is to be
fetched.
",
              "generatedName": "RevOrgsGetRequestAccount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsGetRequestId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "revOrgsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the required Rev organization.",
              "generatedName": "RevOrgsGetRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a Rev organization's information.",
      "generatedName": "RevOrgsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsGetResponseRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "RevOrgsGetResponseRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to get the list of Rev organizations for the authenticated
user's Dev organization.
",
      "generatedName": "RevOrgsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters by account.",
              "generatedName": "RevOrgsListRequestAccount",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestAccountItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters by creator.",
              "generatedName": "RevOrgsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "RevOrgsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestCustomFieldFilter",
          "key": "custom_field_filter",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestCustomFieldFilter",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters on custom fields. Input will be of the format
(custom_field_filter=field_name1:val1,val2,val3&custom_field_filter=field_name2:val1,val2).
",
              "generatedName": "RevOrgsListRequestCustomFieldFilter",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestCustomFieldFilterItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom fields.",
              "generatedName": "RevOrgsListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevOrgsListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevOrgsListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Array of display names of Rev orgs to be filtered.",
              "generatedName": "RevOrgsListRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestDisplayNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of external refs to filter Rev organizations for.",
              "generatedName": "RevOrgsListRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of Rev organizations to be retrieved per page.
",
              "generatedName": "RevOrgsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the Rev organizations by and the direction to sort
them.
",
              "generatedName": "RevOrgsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of tags to be filtered.",
              "generatedName": "RevOrgsListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a list of Rev organizations' information.
",
      "generatedName": "RevOrgsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "RevOrgsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "RevOrgsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListResponseRevOrgs",
          "key": "rev_orgs",
          "schema": {
            "description": "List with all of the Rev organizations' information.",
            "generatedName": "RevOrgsListResponseRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListResponseRevOrgsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "rev-org",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to update information of the Rev organization.
",
      "generatedName": "RevOrgsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "New account ID to associate with this Rev organization.",
              "generatedName": "RevOrgsUpdateRequestAccount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "rev-orgs-update-request-artifacts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Schema fragment IDs associated with this Rev organization.
",
              "generatedName": "RevOrgsUpdateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsUpdateRequestCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev organization.",
              "generatedName": "RevOrgsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Customer chosen name for the Rev organization.",
              "generatedName": "RevOrgsUpdateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Company's domain name. Example - 'devrev.ai'.",
              "generatedName": "RevOrgsUpdateRequestDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestEnvironment",
          "key": "environment",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestEnvironment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsUpdateRequestEnvironment",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-environment",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
              "generatedName": "RevOrgsUpdateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of Rev organization to update.",
            "generatedName": "RevOrgsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the Rev organization.",
              "generatedName": "RevOrgsUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsUpdateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The tier of the RevOrg.",
              "generatedName": "RevOrgsUpdateRequestTier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-update-request-artifacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevOrgsUpdateRequestArtifacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestArtifactsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestArtifactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs to the provided artifact IDs.",
              "generatedName": "RevOrgsUpdateRequestArtifactsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsUpdateRequestArtifactsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object to updating Rev organization's information.",
      "generatedName": "RevOrgsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateResponseRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "RevOrgsUpdateResponseRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-user": {
      "allOf": [
        {
          "description": null,
          "generatedName": "UserBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "user-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevUser",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "revUserArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifacts attached to the Rev user.",
              "generatedName": "RevUserArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUserArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "revUserCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom fields.",
              "generatedName": "RevUserCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevUserCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevUserCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "revUserCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom schema fragments.",
              "generatedName": "RevUserCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUserCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revUserDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev user.",
              "generatedName": "RevUserDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revUserExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
              "generatedName": "RevUserExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserIsVerified",
          "key": "is_verified",
          "schema": {
            "description": null,
            "generatedName": "revUserIsVerified",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the Rev user is verified or not.",
              "generatedName": "RevUserIsVerified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "revUserRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUserRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserStockSchemaFragment",
          "key": "stock_schema_fragment",
          "schema": {
            "description": null,
            "generatedName": "revUserStockSchemaFragment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Stock schema fragment.",
              "generatedName": "RevUserStockSchemaFragment",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "revUserSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Subtype corresponding to the custom type fragment.",
              "generatedName": "RevUserSubtype",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revUserTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the object.",
              "generatedName": "RevUserTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUserTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-user-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "UserBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "user-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevUserSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserSummaryExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revUserSummaryExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
              "generatedName": "RevUserSummaryExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserSummaryRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "revUserSummaryRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUserSummaryRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-summary",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-users-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to create a new Rev user for a Rev organization.
",
      "generatedName": "RevUsersCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the artifacts to associate with the Rev user.",
              "generatedName": "RevUsersCreateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersCreateRequestArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Application-defined custom fields.",
              "generatedName": "RevUsersCreateRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevUsersCreateRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevUsersCreateRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The schema fragment IDs associated with the Rev user.",
              "generatedName": "RevUsersCreateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersCreateRequestCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev user.",
              "generatedName": "RevUsersCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The user's display name. The name is non-unique and mutable.
",
              "generatedName": "RevUsersCreateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Email address of the Rev user.",
              "generatedName": "RevUsersCreateRequestEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a mutable unique identifier for a user within the
Dev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
              "generatedName": "RevUsersCreateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestPhoneNumbers",
          "key": "phone_numbers",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestPhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Phone numbers, in E.164 format, of the Rev user.",
              "generatedName": "RevUsersCreateRequestPhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersCreateRequestPhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of Rev organization for which a Rev user is to be created.
",
              "generatedName": "RevUsersCreateRequestRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revUsersCreateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the Rev user.",
              "generatedName": "RevUsersCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersCreateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-users-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object for creating a new Rev user for Rev organization.
",
      "generatedName": "RevUsersCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersCreateResponseRevUser",
          "key": "rev_user",
          "schema": {
            "description": null,
            "generatedName": "RevUsersCreateResponseRevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-users-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to delete a Rev user.",
      "generatedName": "RevUsersDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of Rev user to delete.",
            "generatedName": "RevUsersDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "rev-users-delete-response": {
      "description": "The response to deleting a Rev user of a Rev organization.",
      "generatedName": "RevUsersDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "RevUsersDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "RevUsersDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "rev-users-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to get a Rev user.",
      "generatedName": "RevUsersGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of Rev user to be retrieved.",
            "generatedName": "RevUsersGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "rev-users-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The returned Rev user.",
      "generatedName": "RevUsersGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersGetResponseRevUser",
          "key": "rev_user",
          "schema": {
            "description": null,
            "generatedName": "RevUsersGetResponseRevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-users-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Gets the list of Rev users belonging to the authenticated user's Dev
Organization which the user is also authorized to access.
",
      "generatedName": "RevUsersListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for Rev users that were created by the specified user(s).
",
              "generatedName": "RevUsersListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "RevUsersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom fields.",
              "generatedName": "RevUsersListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevUsersListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevUsersListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of emails of Rev users to be filtered.",
              "generatedName": "RevUsersListRequestEmail",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestEmailItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of external refs to filter Rev users for.",
              "generatedName": "RevUsersListRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestIsVerified",
          "key": "is_verified",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestIsVerified",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Value of is_verified field to filter the Rev users.",
              "generatedName": "RevUsersListRequestIsVerified",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of Rev users to return. The default is '50'.
",
              "generatedName": "RevUsersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUsersListRequestModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-time-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestPhoneNumbers",
          "key": "phone_numbers",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestPhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of phone numbers, in E.164 format, to filter Rev users on.
",
              "generatedName": "RevUsersListRequestPhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestPhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of IDs of Rev organizations to be filtered.",
              "generatedName": "RevUsersListRequestRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the Rev users by and the direction to sort them.
",
              "generatedName": "RevUsersListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revUsersListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of tags to be filtered.",
              "generatedName": "RevUsersListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-users-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing all Rev users matching the filter criteria.
",
      "generatedName": "RevUsersListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "revUsersListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "RevUsersListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "revUsersListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "RevUsersListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersListResponseRevUsers",
          "key": "rev_users",
          "schema": {
            "description": "List containing all the Rev users.",
            "generatedName": "RevUsersListResponseRevUsers",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RevUsersListResponseRevUsersItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "rev-user",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-users-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to update details of a Rev user.",
      "generatedName": "RevUsersUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUsersUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "rev-users-update-request-artifacts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Application-defined custom fields.",
              "generatedName": "RevUsersUpdateRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RevUsersUpdateRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RevUsersUpdateRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUsersUpdateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "schema": "rev-users-update-request-custom-schema-fragments",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated description of the Rev user.",
              "generatedName": "RevUsersUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated display name of the Rev user.",
              "generatedName": "RevUsersUpdateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated email address of the Rev user.",
              "generatedName": "RevUsersUpdateRequestEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated external ref value of the Rev user.",
              "generatedName": "RevUsersUpdateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of Rev user to update.",
            "generatedName": "RevUsersUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestPhoneNumbers",
          "key": "phone_numbers",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestPhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The phone numbers, in E.164 format, of the Rev user.",
              "generatedName": "RevUsersUpdateRequestPhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersUpdateRequestPhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the Rev user.",
              "generatedName": "RevUsersUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersUpdateRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-users-update-request-artifacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevUsersUpdateRequestArtifacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestArtifactsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestArtifactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs to the provided artifact IDs.",
              "generatedName": "RevUsersUpdateRequestArtifactsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersUpdateRequestArtifactsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-users-update-request-custom-schema-fragments": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevUsersUpdateRequestCustomSchemaFragments",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateRequestCustomSchemaFragmentsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "revUsersUpdateRequestCustomSchemaFragmentsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs to the provided schema fragment IDs.",
              "generatedName": "RevUsersUpdateRequestCustomSchemaFragmentsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevUsersUpdateRequestCustomSchemaFragmentsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-users-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Updated Rev user object.",
      "generatedName": "RevUsersUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUsersUpdateResponseRevUser",
          "key": "rev_user",
          "schema": {
            "description": null,
            "generatedName": "RevUsersUpdateResponseRevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "schema-bool-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaBoolFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaBoolFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaBoolFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaBoolFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-bool-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaBoolListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaBoolListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaBoolListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaBoolListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaBoolListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-composite-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaCompositeFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaCompositeFieldDescriptorCompositeType",
          "key": "composite_type",
          "schema": {
            "description": null,
            "generatedName": "schemaCompositeFieldDescriptorCompositeType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Composite type. Required when field type is composite.",
              "generatedName": "SchemaCompositeFieldDescriptorCompositeType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-composite-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaCompositeListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaCompositeListFieldDescriptorCompositeType",
          "key": "composite_type",
          "schema": {
            "description": null,
            "generatedName": "schemaCompositeListFieldDescriptorCompositeType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Composite type. Required when field type is composite.",
              "generatedName": "SchemaCompositeListFieldDescriptorCompositeType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-date-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaDateFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDateFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaDateFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaDateFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-date-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaDateListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDateListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaDateListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaDateListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaDateListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-double-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaDoubleFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDoubleFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaDoubleFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaDoubleFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-double-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaDoubleListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaDoubleListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaDoubleListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaDoubleListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaDoubleListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-enum-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaEnumFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaEnumFieldDescriptorAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": "Allowed values for the field.",
            "generatedName": "SchemaEnumFieldDescriptorAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaEnumFieldDescriptorAllowedValuesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaEnumFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaEnumFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaEnumFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-enum-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaEnumListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaEnumListFieldDescriptorAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": "Allowed values for the field.",
            "generatedName": "SchemaEnumListFieldDescriptorAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaEnumListFieldDescriptorAllowedValuesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaEnumListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaEnumListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaEnumListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaEnumListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-field-create-view-ui-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Create view UI hint overrides.",
      "generatedName": "SchemaFieldCreateViewUiMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldCreateViewUiMetadataIsHidden",
          "key": "is_hidden",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldCreateViewUiMetadataIsHidden",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether field is hidden in the UI create view.",
              "generatedName": "SchemaFieldCreateViewUiMetadataIsHidden",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-field-descriptor": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": "Set of field attributes.",
        "discriminantProperty": "field_type",
        "generatedName": "SchemaFieldDescriptor",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "array": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaFieldDescriptorArrayType",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-field-descriptor-array-type",
            "type": "reference",
          },
          "bool": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaBoolFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-bool-field-descriptor",
            "type": "reference",
          },
          "composite": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaCompositeFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-composite-field-descriptor",
            "type": "reference",
          },
          "date": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaDateFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-date-field-descriptor",
            "type": "reference",
          },
          "double": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaDoubleFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-double-field-descriptor",
            "type": "reference",
          },
          "enum": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaEnumFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-enum-field-descriptor",
            "type": "reference",
          },
          "id": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaIdFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-id-field-descriptor",
            "type": "reference",
          },
          "int": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaIntFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-int-field-descriptor",
            "type": "reference",
          },
          "rich_text": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaRichTextFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-rich-text-field-descriptor",
            "type": "reference",
          },
          "text": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaTextFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-text-field-descriptor",
            "type": "reference",
          },
          "timestamp": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaTimestampFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-timestamp-field-descriptor",
            "type": "reference",
          },
          "tokens": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaTokensFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-tokens-field-descriptor",
            "type": "reference",
          },
          "uenum": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaUenumFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-uenum-field-descriptor",
            "type": "reference",
          },
          "unknown": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaUnknownFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-unknown-field-descriptor",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "schema-field-descriptor-array-type": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "eq_items",
            "schema": {
              "description": "The exact array length.",
              "generatedName": "SchemaFieldDescriptorArrayTypeEqItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The exact array length.",
                "generatedName": "SchemaFieldDescriptorArrayTypeEqItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "max_items",
            "schema": {
              "description": "The maximum array length.",
              "generatedName": "SchemaFieldDescriptorArrayTypeMaxItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum array length.",
                "generatedName": "SchemaFieldDescriptorArrayTypeMaxItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "min_items",
            "schema": {
              "description": "The minimum array length.",
              "generatedName": "SchemaFieldDescriptorArrayTypeMinItems",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The minimum array length.",
                "generatedName": "SchemaFieldDescriptorArrayTypeMinItems",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "base_type",
        "generatedName": "SchemaFieldDescriptorArrayType",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "bool": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaBoolListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-bool-list-field-descriptor",
            "type": "reference",
          },
          "composite": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaCompositeListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-composite-list-field-descriptor",
            "type": "reference",
          },
          "date": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaDateListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-date-list-field-descriptor",
            "type": "reference",
          },
          "double": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaDoubleListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-double-list-field-descriptor",
            "type": "reference",
          },
          "enum": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaEnumListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-enum-list-field-descriptor",
            "type": "reference",
          },
          "id": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaIdListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-id-list-field-descriptor",
            "type": "reference",
          },
          "int": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaIntListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-int-list-field-descriptor",
            "type": "reference",
          },
          "rich_text": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaRichTextListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-rich-text-list-field-descriptor",
            "type": "reference",
          },
          "text": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaTextListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-text-list-field-descriptor",
            "type": "reference",
          },
          "timestamp": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaTimestampListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-timestamp-list-field-descriptor",
            "type": "reference",
          },
          "tokens": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaTokensListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-tokens-list-field-descriptor",
            "type": "reference",
          },
          "uenum": {
            "description": null,
            "generatedName": "ComponentsSchemasSchemaUenumListFieldDescriptor",
            "groupName": null,
            "nameOverride": null,
            "schema": "schema-uenum-list-field-descriptor",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "schema-field-descriptor-array-type-base-type": {
      "description": null,
      "generatedName": "SchemaFieldDescriptorArrayTypeBaseType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "bool",
          "nameOverride": null,
          "value": "bool",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "composite",
          "nameOverride": null,
          "value": "composite",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "date",
          "nameOverride": null,
          "value": "date",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "double",
          "nameOverride": null,
          "value": "double",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enum",
          "nameOverride": null,
          "value": "enum",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "id",
          "nameOverride": null,
          "value": "id",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "int",
          "nameOverride": null,
          "value": "int",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rich_text",
          "nameOverride": null,
          "value": "rich_text",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "text",
          "nameOverride": null,
          "value": "text",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timestamp",
          "nameOverride": null,
          "value": "timestamp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tokens",
          "nameOverride": null,
          "value": "tokens",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "uenum",
          "nameOverride": null,
          "value": "uenum",
        },
      ],
    },
    "schema-field-descriptor-base": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaFieldDescriptorBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDescriptorBaseDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the field.",
              "generatedName": "SchemaFieldDescriptorBaseDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseIsFilterable",
          "key": "is_filterable",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDescriptorBaseIsFilterable",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether this field is filterable, groupable and sortable.
",
              "generatedName": "SchemaFieldDescriptorBaseIsFilterable",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseIsPii",
          "key": "is_pii",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDescriptorBaseIsPii",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether this field can hold Personally Identifiable Information
(PII).
",
              "generatedName": "SchemaFieldDescriptorBaseIsPii",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseIsRequired",
          "key": "is_required",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDescriptorBaseIsRequired",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether this field is required or not.",
              "generatedName": "SchemaFieldDescriptorBaseIsRequired",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseMfz",
          "key": "mfz",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDescriptorBaseMfz",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaFieldDescriptorBaseMfz",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-mfz-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseName",
          "key": "name",
          "schema": {
            "description": "Name of the field.",
            "generatedName": "SchemaFieldDescriptorBaseName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseOrigin",
          "key": "origin",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDescriptorBaseOrigin",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Type this field is from.",
              "generatedName": "SchemaFieldDescriptorBaseOrigin",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDescriptorBaseUi",
          "key": "ui",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDescriptorBaseUi",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaFieldDescriptorBaseUi",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-ui-metadata",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-field-descriptor-field-type": {
      "description": null,
      "generatedName": "SchemaFieldDescriptorFieldType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "array",
          "nameOverride": null,
          "value": "array",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "bool",
          "nameOverride": null,
          "value": "bool",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "composite",
          "nameOverride": null,
          "value": "composite",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "date",
          "nameOverride": null,
          "value": "date",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "double",
          "nameOverride": null,
          "value": "double",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enum",
          "nameOverride": null,
          "value": "enum",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "id",
          "nameOverride": null,
          "value": "id",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "int",
          "nameOverride": null,
          "value": "int",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rich_text",
          "nameOverride": null,
          "value": "rich_text",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "text",
          "nameOverride": null,
          "value": "text",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timestamp",
          "nameOverride": null,
          "value": "timestamp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tokens",
          "nameOverride": null,
          "value": "tokens",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "uenum",
          "nameOverride": null,
          "value": "uenum",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "unknown",
          "nameOverride": null,
          "value": "unknown",
        },
      ],
    },
    "schema-field-detail-view-ui-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Detail view UI hint overrides.",
      "generatedName": "SchemaFieldDetailViewUiMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldDetailViewUiMetadataIsHidden",
          "key": "is_hidden",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldDetailViewUiMetadataIsHidden",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is hidden in the UI detail view.",
              "generatedName": "SchemaFieldDetailViewUiMetadataIsHidden",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-field-filter-view-ui-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Filter view UI hint overrides.",
      "generatedName": "SchemaFieldFilterViewUiMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldFilterViewUiMetadataIsHidden",
          "key": "is_hidden",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldFilterViewUiMetadataIsHidden",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether field is hidden in the UI filter view.",
              "generatedName": "SchemaFieldFilterViewUiMetadataIsHidden",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-field-list-view-ui-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "List view UI hint overrides.",
      "generatedName": "SchemaFieldListViewUiMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldListViewUiMetadataIsHidden",
          "key": "is_hidden",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldListViewUiMetadataIsHidden",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is hidden in the UI list view.",
              "generatedName": "SchemaFieldListViewUiMetadataIsHidden",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-field-mfz-metadata": {
      "description": "The schema of MFZ specific fields.",
      "generatedName": "SchemaFieldMfzMetadata",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "SchemaFieldMfzMetadataKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "SchemaFieldMfzMetadataValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "schema-field-summary-view-ui-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Summary view UI hint overrides.",
      "generatedName": "SchemaFieldSummaryViewUiMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldSummaryViewUiMetadataIsHidden",
          "key": "is_hidden",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldSummaryViewUiMetadataIsHidden",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether field is hidden in the UI summary view.",
              "generatedName": "SchemaFieldSummaryViewUiMetadataIsHidden",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-field-uenum-value": {
      "description": "A unified enum value.",
      "generatedName": "SchemaFieldUenumValue",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "SchemaFieldUenumValueKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "SchemaFieldUenumValueValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "schema-field-ui-metadata": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The schema of ui specific fields.",
      "generatedName": "SchemaFieldUiMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataCreateView",
          "key": "create_view",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataCreateView",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaFieldUiMetadataCreateView",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-create-view-ui-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataDetailView",
          "key": "detail_view",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataDetailView",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaFieldUiMetadataDetailView",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-detail-view-ui-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The display name of the field.",
              "generatedName": "SchemaFieldUiMetadataDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataFilterView",
          "key": "filter_view",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataFilterView",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaFieldUiMetadataFilterView",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-filter-view-ui-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataGroupName",
          "key": "group_name",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataGroupName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An optional group name for the field.",
              "generatedName": "SchemaFieldUiMetadataGroupName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsActiveInDetailView",
          "key": "is_active_in_detail_view",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsActiveInDetailView",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is active in the UI detail view.",
              "generatedName": "SchemaFieldUiMetadataIsActiveInDetailView",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsBulkActionEnabled",
          "key": "is_bulk_action_enabled",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsBulkActionEnabled",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field supports bulk action.",
              "generatedName": "SchemaFieldUiMetadataIsBulkActionEnabled",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsGroupable",
          "key": "is_groupable",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsGroupable",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is groupable in the UI.",
              "generatedName": "SchemaFieldUiMetadataIsGroupable",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsHidden",
          "key": "is_hidden",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsHidden",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is hidden in the UI.",
              "generatedName": "SchemaFieldUiMetadataIsHidden",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsHiddenDuringCreate",
          "key": "is_hidden_during_create",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsHiddenDuringCreate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is hidden in the UI during creation.",
              "generatedName": "SchemaFieldUiMetadataIsHiddenDuringCreate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsReadOnly",
          "key": "is_read_only",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsReadOnly",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is read-only in the UI.",
              "generatedName": "SchemaFieldUiMetadataIsReadOnly",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsShownInSummary",
          "key": "is_shown_in_summary",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsShownInSummary",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is shown in the UI summary view.",
              "generatedName": "SchemaFieldUiMetadataIsShownInSummary",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataIsSortable",
          "key": "is_sortable",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataIsSortable",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the field is sortable in the UI.",
              "generatedName": "SchemaFieldUiMetadataIsSortable",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataListView",
          "key": "list_view",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataListView",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaFieldUiMetadataListView",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-list-view-ui-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataPlaceholder",
          "key": "placeholder",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataPlaceholder",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A placeholder for the field.",
              "generatedName": "SchemaFieldUiMetadataPlaceholder",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataSummaryView",
          "key": "summary_view",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataSummaryView",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SchemaFieldUiMetadataSummaryView",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-summary-view-ui-metadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaFieldUiMetadataTooltip",
          "key": "tooltip",
          "schema": {
            "description": null,
            "generatedName": "schemaFieldUiMetadataTooltip",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tooltip for the field.",
              "generatedName": "SchemaFieldUiMetadataTooltip",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-id-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaIdFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIdFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaIdFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaIdFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIdFieldDescriptorIdType",
          "key": "id_type",
          "schema": {
            "description": null,
            "generatedName": "schemaIdFieldDescriptorIdType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Object ID types. Required when field type is ID.",
              "generatedName": "SchemaIdFieldDescriptorIdType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaIdFieldDescriptorIdTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-id-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaIdListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIdListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaIdListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaIdListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaIdListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIdListFieldDescriptorIdType",
          "key": "id_type",
          "schema": {
            "description": null,
            "generatedName": "schemaIdListFieldDescriptorIdType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Object ID types. Required when field type is ID.",
              "generatedName": "SchemaIdListFieldDescriptorIdType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaIdListFieldDescriptorIdTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-int-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaIntFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaIntFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaIntFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntFieldDescriptorGt",
          "key": "gt",
          "schema": {
            "description": null,
            "generatedName": "schemaIntFieldDescriptorGt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum value for the integer (exclusive).",
              "generatedName": "SchemaIntFieldDescriptorGt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntFieldDescriptorGte",
          "key": "gte",
          "schema": {
            "description": null,
            "generatedName": "schemaIntFieldDescriptorGte",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum value for the integer (inclusive).",
              "generatedName": "SchemaIntFieldDescriptorGte",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntFieldDescriptorLt",
          "key": "lt",
          "schema": {
            "description": null,
            "generatedName": "schemaIntFieldDescriptorLt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum value for the integer (exclusive).",
              "generatedName": "SchemaIntFieldDescriptorLt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntFieldDescriptorLte",
          "key": "lte",
          "schema": {
            "description": null,
            "generatedName": "schemaIntFieldDescriptorLte",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum value for the integer (inclusive).",
              "generatedName": "SchemaIntFieldDescriptorLte",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-int-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaIntListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaIntListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaIntListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaIntListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntListFieldDescriptorGt",
          "key": "gt",
          "schema": {
            "description": null,
            "generatedName": "schemaIntListFieldDescriptorGt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum value for the integer (exclusive).",
              "generatedName": "SchemaIntListFieldDescriptorGt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntListFieldDescriptorGte",
          "key": "gte",
          "schema": {
            "description": null,
            "generatedName": "schemaIntListFieldDescriptorGte",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum value for the integer (inclusive).",
              "generatedName": "SchemaIntListFieldDescriptorGte",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntListFieldDescriptorLt",
          "key": "lt",
          "schema": {
            "description": null,
            "generatedName": "schemaIntListFieldDescriptorLt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum value for the integer (exclusive).",
              "generatedName": "SchemaIntListFieldDescriptorLt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaIntListFieldDescriptorLte",
          "key": "lte",
          "schema": {
            "description": null,
            "generatedName": "schemaIntListFieldDescriptorLte",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum value for the integer (inclusive).",
              "generatedName": "SchemaIntListFieldDescriptorLte",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-rich-text-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaRichTextFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorContains",
          "key": "contains",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorContains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The contained substring.",
              "generatedName": "SchemaRichTextFieldDescriptorContains",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaRichTextFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorEqLen",
          "key": "eq_len",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorEqLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The exact string length.",
              "generatedName": "SchemaRichTextFieldDescriptorEqLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorMaxLen",
          "key": "max_len",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorMaxLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum string length.",
              "generatedName": "SchemaRichTextFieldDescriptorMaxLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorMinLen",
          "key": "min_len",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorMinLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum string length.",
              "generatedName": "SchemaRichTextFieldDescriptorMinLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorPattern",
          "key": "pattern",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorPattern",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string pattern (regular expression).",
              "generatedName": "SchemaRichTextFieldDescriptorPattern",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorPrefix",
          "key": "prefix",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorPrefix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string prefix.",
              "generatedName": "SchemaRichTextFieldDescriptorPrefix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextFieldDescriptorSuffix",
          "key": "suffix",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextFieldDescriptorSuffix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string suffix.",
              "generatedName": "SchemaRichTextFieldDescriptorSuffix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-rich-text-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaRichTextListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorContains",
          "key": "contains",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorContains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The contained substring.",
              "generatedName": "SchemaRichTextListFieldDescriptorContains",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaRichTextListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaRichTextListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorEqLen",
          "key": "eq_len",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorEqLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The exact string length.",
              "generatedName": "SchemaRichTextListFieldDescriptorEqLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorMaxLen",
          "key": "max_len",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorMaxLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum string length.",
              "generatedName": "SchemaRichTextListFieldDescriptorMaxLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorMinLen",
          "key": "min_len",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorMinLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum string length.",
              "generatedName": "SchemaRichTextListFieldDescriptorMinLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorPattern",
          "key": "pattern",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorPattern",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string pattern (regular expression).",
              "generatedName": "SchemaRichTextListFieldDescriptorPattern",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorPrefix",
          "key": "prefix",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorPrefix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string prefix.",
              "generatedName": "SchemaRichTextListFieldDescriptorPrefix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaRichTextListFieldDescriptorSuffix",
          "key": "suffix",
          "schema": {
            "description": null,
            "generatedName": "schemaRichTextListFieldDescriptorSuffix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string suffix.",
              "generatedName": "SchemaRichTextListFieldDescriptorSuffix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-text-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaTextFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorContains",
          "key": "contains",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorContains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The contained substring.",
              "generatedName": "SchemaTextFieldDescriptorContains",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaTextFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorEqLen",
          "key": "eq_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorEqLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The exact string length.",
              "generatedName": "SchemaTextFieldDescriptorEqLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorMaxLen",
          "key": "max_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorMaxLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum string length.",
              "generatedName": "SchemaTextFieldDescriptorMaxLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorMinLen",
          "key": "min_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorMinLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum string length.",
              "generatedName": "SchemaTextFieldDescriptorMinLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorPattern",
          "key": "pattern",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorPattern",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string pattern (regular expression).",
              "generatedName": "SchemaTextFieldDescriptorPattern",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorPrefix",
          "key": "prefix",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorPrefix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string prefix.",
              "generatedName": "SchemaTextFieldDescriptorPrefix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextFieldDescriptorSuffix",
          "key": "suffix",
          "schema": {
            "description": null,
            "generatedName": "schemaTextFieldDescriptorSuffix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string suffix.",
              "generatedName": "SchemaTextFieldDescriptorSuffix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-text-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaTextListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorContains",
          "key": "contains",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorContains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The contained substring.",
              "generatedName": "SchemaTextListFieldDescriptorContains",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaTextListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaTextListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorEqLen",
          "key": "eq_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorEqLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The exact string length.",
              "generatedName": "SchemaTextListFieldDescriptorEqLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorMaxLen",
          "key": "max_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorMaxLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum string length.",
              "generatedName": "SchemaTextListFieldDescriptorMaxLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorMinLen",
          "key": "min_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorMinLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum string length.",
              "generatedName": "SchemaTextListFieldDescriptorMinLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorPattern",
          "key": "pattern",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorPattern",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string pattern (regular expression).",
              "generatedName": "SchemaTextListFieldDescriptorPattern",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorPrefix",
          "key": "prefix",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorPrefix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string prefix.",
              "generatedName": "SchemaTextListFieldDescriptorPrefix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTextListFieldDescriptorSuffix",
          "key": "suffix",
          "schema": {
            "description": null,
            "generatedName": "schemaTextListFieldDescriptorSuffix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string suffix.",
              "generatedName": "SchemaTextListFieldDescriptorSuffix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-timestamp-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaTimestampFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTimestampFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaTimestampFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaTimestampFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-timestamp-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaTimestampListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTimestampListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaTimestampListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaTimestampListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaTimestampListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-tokens-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaTokensFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorContains",
          "key": "contains",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorContains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The contained substring.",
              "generatedName": "SchemaTokensFieldDescriptorContains",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaTokensFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorEqLen",
          "key": "eq_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorEqLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The exact string length.",
              "generatedName": "SchemaTokensFieldDescriptorEqLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorMaxLen",
          "key": "max_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorMaxLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum string length.",
              "generatedName": "SchemaTokensFieldDescriptorMaxLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorMinLen",
          "key": "min_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorMinLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum string length.",
              "generatedName": "SchemaTokensFieldDescriptorMinLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorPattern",
          "key": "pattern",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorPattern",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string pattern (regular expression).",
              "generatedName": "SchemaTokensFieldDescriptorPattern",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorPrefix",
          "key": "prefix",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorPrefix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string prefix.",
              "generatedName": "SchemaTokensFieldDescriptorPrefix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensFieldDescriptorSuffix",
          "key": "suffix",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensFieldDescriptorSuffix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string suffix.",
              "generatedName": "SchemaTokensFieldDescriptorSuffix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-tokens-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaTokensListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorContains",
          "key": "contains",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorContains",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The contained substring.",
              "generatedName": "SchemaTokensListFieldDescriptorContains",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaTokensListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaTokensListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorEqLen",
          "key": "eq_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorEqLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The exact string length.",
              "generatedName": "SchemaTokensListFieldDescriptorEqLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorMaxLen",
          "key": "max_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorMaxLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum string length.",
              "generatedName": "SchemaTokensListFieldDescriptorMaxLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorMinLen",
          "key": "min_len",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorMinLen",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The minimum string length.",
              "generatedName": "SchemaTokensListFieldDescriptorMinLen",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorPattern",
          "key": "pattern",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorPattern",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string pattern (regular expression).",
              "generatedName": "SchemaTokensListFieldDescriptorPattern",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorPrefix",
          "key": "prefix",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorPrefix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string prefix.",
              "generatedName": "SchemaTokensListFieldDescriptorPrefix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaTokensListFieldDescriptorSuffix",
          "key": "suffix",
          "schema": {
            "description": null,
            "generatedName": "schemaTokensListFieldDescriptorSuffix",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The string suffix.",
              "generatedName": "SchemaTokensListFieldDescriptorSuffix",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-uenum-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaUenumFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaUenumFieldDescriptorAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": "Allowed values for the field.",
            "generatedName": "SchemaUenumFieldDescriptorAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaUenumFieldDescriptorAllowedValuesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-uenum-value",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaUenumFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaUenumFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaUenumFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-uenum-list-field-descriptor": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SchemaFieldDescriptorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "schema-field-descriptor-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SchemaUenumListFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaUenumListFieldDescriptorAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": "Allowed values for the field.",
            "generatedName": "SchemaUenumListFieldDescriptorAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SchemaUenumListFieldDescriptorAllowedValuesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-uenum-value",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "schemaUenumListFieldDescriptorDefaultValue",
          "key": "default_value",
          "schema": {
            "description": null,
            "generatedName": "schemaUenumListFieldDescriptorDefaultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Default value.",
              "generatedName": "SchemaUenumListFieldDescriptorDefaultValue",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SchemaUenumListFieldDescriptorDefaultValueItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "schema-unknown-field-descriptor": {
      "description": null,
      "generatedName": "SchemaUnknownFieldDescriptor",
      "groupName": null,
      "nameOverride": null,
      "schema": "schema-field-descriptor-base",
      "type": "reference",
    },
    "search-core-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Search request.",
      "generatedName": "SearchCoreRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "searchCoreRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor from where to begin iteration. Start from beginning if
not provided.
",
              "generatedName": "SearchCoreRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "searchCoreRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of items to return in a page. The default is
'10'.
",
              "generatedName": "SearchCoreRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreRequestNamespaces",
          "key": "namespaces",
          "schema": {
            "description": null,
            "generatedName": "searchCoreRequestNamespaces",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The namespaces to search in.",
              "generatedName": "SearchCoreRequestNamespaces",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SearchCoreRequestNamespacesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "search-namespace",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreRequestQuery",
          "key": "query",
          "schema": {
            "description": "The query string. Search query language:
https://docs.devrev.ai/product/search#fields
",
            "generatedName": "SearchCoreRequestQuery",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "searchCoreRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SearchCoreRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "search-sort-by-param",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreRequestSortOrder",
          "key": "sort_order",
          "schema": {
            "description": null,
            "generatedName": "searchCoreRequestSortOrder",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SearchCoreRequestSortOrder",
              "groupName": null,
              "nameOverride": null,
              "schema": "search-sort-order-param",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "search-core-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Search response.",
      "generatedName": "SearchCoreResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreResponseCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "searchCoreResponseCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor from where to begin iteration. Start from beginning if
not provided.
",
              "generatedName": "SearchCoreResponseCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchCoreResponseResults",
          "key": "results",
          "schema": {
            "description": "The search results.",
            "generatedName": "SearchCoreResponseResults",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SearchCoreResponseResultsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "search-result",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "search-namespace": {
      "description": "The namespaces to search in.",
      "generatedName": "SearchNamespace",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account",
          "nameOverride": null,
          "value": "account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "article",
          "nameOverride": null,
          "value": "article",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "capability",
          "nameOverride": null,
          "value": "capability",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "component",
          "nameOverride": null,
          "value": "component",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation",
          "nameOverride": null,
          "value": "conversation",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "custom_part",
          "nameOverride": null,
          "value": "custom_part",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "custom_work",
          "nameOverride": null,
          "value": "custom_work",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user",
          "nameOverride": null,
          "value": "dev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enhancement",
          "nameOverride": null,
          "value": "enhancement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "feature",
          "nameOverride": null,
          "value": "feature",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "group",
          "nameOverride": null,
          "value": "group",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "issue",
          "nameOverride": null,
          "value": "issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "linkable",
          "nameOverride": null,
          "value": "linkable",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "microservice",
          "nameOverride": null,
          "value": "microservice",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "object_member",
          "nameOverride": null,
          "value": "object_member",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "opportunity",
          "nameOverride": null,
          "value": "opportunity",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "product",
          "nameOverride": null,
          "value": "product",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "project",
          "nameOverride": null,
          "value": "project",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "question_answer",
          "nameOverride": null,
          "value": "question_answer",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org",
          "nameOverride": null,
          "value": "rev_org",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user",
          "nameOverride": null,
          "value": "rev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "runnable",
          "nameOverride": null,
          "value": "runnable",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "service_account",
          "nameOverride": null,
          "value": "service_account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "sys_user",
          "nameOverride": null,
          "value": "sys_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag",
          "nameOverride": null,
          "value": "tag",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "task",
          "nameOverride": null,
          "value": "task",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "vista",
          "nameOverride": null,
          "value": "vista",
        },
      ],
    },
    "search-result": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "SearchResult",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "account": {
            "description": null,
            "generatedName": "ComponentsSchemasAccountSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "account-search-summary",
            "type": "reference",
          },
          "article": {
            "description": null,
            "generatedName": "ComponentsSchemasArticleSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "article-search-summary",
            "type": "reference",
          },
          "artifact": {
            "description": null,
            "generatedName": "ComponentsSchemasArtifactSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "artifact-search-summary",
            "type": "reference",
          },
          "conversation": {
            "description": null,
            "generatedName": "ComponentsSchemasConversationSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "conversation-search-summary",
            "type": "reference",
          },
          "group": {
            "description": null,
            "generatedName": "ComponentsSchemasGroupSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "group-search-summary",
            "type": "reference",
          },
          "link": {
            "description": null,
            "generatedName": "ComponentsSchemasLinkSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "link-search-summary",
            "type": "reference",
          },
          "object_member": {
            "description": null,
            "generatedName": "ComponentsSchemasObjectMemberSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "object-member-search-summary",
            "type": "reference",
          },
          "org": {
            "description": null,
            "generatedName": "ComponentsSchemasOrgSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "org-search-summary",
            "type": "reference",
          },
          "part": {
            "description": null,
            "generatedName": "ComponentsSchemasPartSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "part-search-summary",
            "type": "reference",
          },
          "question_answer": {
            "description": null,
            "generatedName": "ComponentsSchemasQuestionAnswerSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "question-answer-search-summary",
            "type": "reference",
          },
          "tag": {
            "description": null,
            "generatedName": "ComponentsSchemasTagSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag-search-summary",
            "type": "reference",
          },
          "user": {
            "description": null,
            "generatedName": "ComponentsSchemasUserSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "user-search-summary",
            "type": "reference",
          },
          "vista": {
            "description": null,
            "generatedName": "ComponentsSchemasVistaSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "vista-search-summary",
            "type": "reference",
          },
          "work": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkSearchSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "work-search-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "search-result-type": {
      "description": null,
      "generatedName": "SearchResultType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account",
          "nameOverride": null,
          "value": "account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "article",
          "nameOverride": null,
          "value": "article",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "artifact",
          "nameOverride": null,
          "value": "artifact",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation",
          "nameOverride": null,
          "value": "conversation",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "group",
          "nameOverride": null,
          "value": "group",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "link",
          "nameOverride": null,
          "value": "link",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "object_member",
          "nameOverride": null,
          "value": "object_member",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "org",
          "nameOverride": null,
          "value": "org",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "part",
          "nameOverride": null,
          "value": "part",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "question_answer",
          "nameOverride": null,
          "value": "question_answer",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag",
          "nameOverride": null,
          "value": "tag",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "user",
          "nameOverride": null,
          "value": "user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "vista",
          "nameOverride": null,
          "value": "vista",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "work",
          "nameOverride": null,
          "value": "work",
        },
      ],
    },
    "search-sort-by-param": {
      "description": "Search sort by parameters.",
      "generatedName": "SearchSortByParam",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "created_date",
          "nameOverride": null,
          "value": "created_date",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "modified_date",
          "nameOverride": null,
          "value": "modified_date",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "relevance",
          "nameOverride": null,
          "value": "relevance",
        },
      ],
    },
    "search-sort-order-param": {
      "description": "Search sort order parameters.",
      "generatedName": "SearchSortOrderParam",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "asc",
          "nameOverride": null,
          "value": "asc",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "desc",
          "nameOverride": null,
          "value": "desc",
        },
      ],
    },
    "search-summary-base": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchSummaryBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchSummaryBaseModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "searchSummaryBaseModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the object was last modified.",
              "generatedName": "SearchSummaryBaseModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchSummaryBaseSnippet",
          "key": "snippet",
          "schema": {
            "description": null,
            "generatedName": "searchSummaryBaseSnippet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Text snippet where the search hit occurred.",
              "generatedName": "SearchSummaryBaseSnippet",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "service-account": {
      "description": null,
      "generatedName": "ServiceAccount",
      "groupName": null,
      "nameOverride": null,
      "schema": "user-base",
      "type": "reference",
    },
    "service-account-summary": {
      "description": null,
      "generatedName": "ServiceAccountSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "user-base-summary",
      "type": "reference",
    },
    "service-accounts-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request object to get a service account's information.",
      "generatedName": "ServiceAccountsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "serviceAccountsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the requested service account.",
            "generatedName": "ServiceAccountsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "service-accounts-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response object that carries the service account's information
corresponding to the request.
",
      "generatedName": "ServiceAccountsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "serviceAccountsGetResponseServiceAccount",
          "key": "service_account",
          "schema": {
            "description": null,
            "generatedName": "ServiceAccountsGetResponseServiceAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": "service-account",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "set-org-schedule-fragment-summary": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SetOrgScheduleFragmentSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setOrgScheduleFragmentSummaryId",
          "key": "id",
          "schema": {
            "description": "Organization schedule fragment ID.",
            "generatedName": "SetOrgScheduleFragmentSummaryId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "set-sla-policy": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SetSlaPolicy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaPolicyMetrics",
          "key": "metrics",
          "schema": {
            "description": null,
            "generatedName": "setSlaPolicyMetrics",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Metrics to apply to the selected items.",
              "generatedName": "SetSlaPolicyMetrics",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SetSlaPolicyMetricsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-support-metric-target",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaPolicyName",
          "key": "name",
          "schema": {
            "description": "Human-readable name.",
            "generatedName": "SetSlaPolicyName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaPolicySelector",
          "key": "selector",
          "schema": {
            "description": null,
            "generatedName": "SetSlaPolicySelector",
            "groupName": null,
            "nameOverride": null,
            "schema": "set-sla-selector",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "set-sla-selector": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SetSlaSelector",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorAppliesTo",
          "key": "applies_to",
          "schema": {
            "description": null,
            "generatedName": "SetSlaSelectorAppliesTo",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla-selector-applies-to",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "setSlaSelectorCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom fields with their fully qualified names and associated with
their exact allowed values. The SLA policy applies to records where
all named custom fields have exactly the specified values. If the
value is null, the field must have null value or not be present.
",
              "generatedName": "SetSlaSelectorCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "SetSlaSelectorCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "SetSlaSelectorCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorParts",
          "key": "parts",
          "schema": {
            "description": null,
            "generatedName": "setSlaSelectorParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA policy applies to the tickets of these parts.",
              "generatedName": "SetSlaSelectorParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SetSlaSelectorPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorPriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "setSlaSelectorPriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA policy applies to conversations with these priorities.
",
              "generatedName": "SetSlaSelectorPriority",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SetSlaSelectorPriorityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-selector-priority",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "setSlaSelectorSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA policy applies to tickets with these severities.",
              "generatedName": "SetSlaSelectorSeverity",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SetSlaSelectorSeverityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-selector-severity",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorSourceChannel",
          "key": "source_channel",
          "schema": {
            "description": null,
            "generatedName": "setSlaSelectorSourceChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA policy applies to conversations with these sources.
",
              "generatedName": "SetSlaSelectorSourceChannel",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SetSlaSelectorSourceChannelItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "setSlaSelectorSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA policy applies to tickets with these subtypes.",
              "generatedName": "SetSlaSelectorSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SetSlaSelectorSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSlaSelectorTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "setSlaSelectorTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA policy applies to items with these tags.",
              "generatedName": "SetSlaSelectorTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SetSlaSelectorTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "set-support-metric-target": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SetSupportMetricTarget",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSupportMetricTargetMetric",
          "key": "metric",
          "schema": {
            "description": "The metric to apply.",
            "generatedName": "SetSupportMetricTargetMetric",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSupportMetricTargetOrgScheduleId",
          "key": "org_schedule_id",
          "schema": {
            "description": null,
            "generatedName": "setSupportMetricTargetOrgScheduleId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The organization schedule controlling this metrics calculation.
Time based metrics don't consume time while their schedule is off.
",
              "generatedName": "SetSupportMetricTargetOrgScheduleId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSupportMetricTargetPerformance",
          "key": "performance",
          "schema": {
            "description": null,
            "generatedName": "setSupportMetricTargetPerformance",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The percentage of instances for which this metric's target must not
be breached, in order to avoid breaching the overall SLA policy.
",
              "generatedName": "SetSupportMetricTargetPerformance",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSupportMetricTargetTarget",
          "key": "target",
          "schema": {
            "description": "The target value to be achieved, for example the time in which to
do something, or the maximum allowed number of message pairs. The
units and interpretation of the value is controlled by the
properties of the referenced metric.
",
            "generatedName": "SetSupportMetricTargetTarget",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setSupportMetricTargetWarningTarget",
          "key": "warning_target",
          "schema": {
            "description": null,
            "generatedName": "setSupportMetricTargetWarningTarget",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The threshold in the same units as target where the metric is
considered to be 'at risk'.
",
              "generatedName": "SetSupportMetricTargetWarningTarget",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "set-tag-with-value": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SetTagWithValue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setTagWithValueId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag.",
            "generatedName": "SetTagWithValueId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setTagWithValueValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "setTagWithValueValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
              "generatedName": "SetTagWithValueValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "set-weekly-org-schedule": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SetWeeklyOrgSchedule",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setWeeklyOrgScheduleIntervals",
          "key": "intervals",
          "schema": {
            "description": "The 'on' intervals of the week.",
            "generatedName": "SetWeeklyOrgScheduleIntervals",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SetWeeklyOrgScheduleIntervalsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "create-weekly-org-schedule-interval",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setWeeklyOrgSchedulePeriodName",
          "key": "period_name",
          "schema": {
            "description": "The name of the period during which the organization schedule
applies.
",
            "generatedName": "SetWeeklyOrgSchedulePeriodName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "shared-with-membership": {
      "description": "Information about the role the member receives due to the share.
",
      "generatedName": "SharedWithMembership",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "SharedWithMembershipKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "SharedWithMembershipValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "shared-with-membership-filter": {
      "description": "Filter on target item based on intended audience.",
      "generatedName": "SharedWithMembershipFilter",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "SharedWithMembershipFilterKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "SharedWithMembershipFilterValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "sla": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Sla",
      "groupName": null,
      "nameOverride": "sla",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaCompensation",
          "key": "compensation",
          "schema": {
            "description": null,
            "generatedName": "slaCompensation",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlaCompensation",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-compensation",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "slaDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the purpose and capabilities of the SLA.",
              "generatedName": "SlaDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaEvaluationPeriod",
          "key": "evaluation_period",
          "schema": {
            "description": null,
            "generatedName": "slaEvaluationPeriod",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlaEvaluationPeriod",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-evaluation-period",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaName",
          "key": "name",
          "schema": {
            "description": "Human-readable name.",
            "generatedName": "SlaName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaPolicies",
          "key": "policies",
          "schema": {
            "description": null,
            "generatedName": "slaPolicies",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The policies encompassed by this SLA, ordered in decreasing
priority.
",
              "generatedName": "SlaPolicies",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SlaPoliciesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-policy",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "SlaStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla-status",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "sla-assign-result": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlaAssignResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaAssignResultError",
          "key": "error",
          "schema": {
            "description": null,
            "generatedName": "slaAssignResultError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlaAssignResultError",
              "groupName": null,
              "nameOverride": null,
              "schema": "error",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaAssignResultRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "SlaAssignResultRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "sla-compensation": {
      "description": "Describes the compensation to be provided in case of SLA breach. It is
not 'self-executing', it is the responsibility of the organization
providing the SLA to actually transfer the promised credit, resource or
other payment.
",
      "generatedName": "SlaCompensation",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "SlaCompensationKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "SlaCompensationValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "sla-evaluation-period": {
      "description": "Specifies the frequency of when the contractually-meaningful evaluation
of the SLA happens. The organization for their own information might
evaluate the various metrics contained in the policy as often as we can
make it feasible for them, but only the evaluation at the end of the
evaluation period triggers a compensation and needs to be shared with
the customer.
",
      "generatedName": "SlaEvaluationPeriod",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "monthly",
          "nameOverride": null,
          "value": "monthly",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "quarterly",
          "nameOverride": null,
          "value": "quarterly",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "weekly",
          "nameOverride": null,
          "value": "weekly",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "yearly",
          "nameOverride": null,
          "value": "yearly",
        },
      ],
    },
    "sla-policy": {
      "description": "A policy that represents a promise to your revs.",
      "generatedName": "SlaPolicy",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "SlaPolicyKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "SlaPolicyValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "sla-selector-applies-to": {
      "description": "The item type for which the SLA policy applies.",
      "generatedName": "SlaSelectorAppliesTo",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation",
          "nameOverride": null,
          "value": "conversation",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
      ],
    },
    "sla-selector-priority": {
      "description": "Th SLA policy applies to conversations with these priorities.
",
      "generatedName": "SlaSelectorPriority",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p0",
          "nameOverride": null,
          "value": "p0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p1",
          "nameOverride": null,
          "value": "p1",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p2",
          "nameOverride": null,
          "value": "p2",
        },
      ],
    },
    "sla-selector-severity": {
      "description": "The SLA policy applies to tickets with these severities.",
      "generatedName": "SlaSelectorSeverity",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "blocker",
          "nameOverride": null,
          "value": "blocker",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "high",
          "nameOverride": null,
          "value": "high",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "low",
          "nameOverride": null,
          "value": "low",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "medium",
          "nameOverride": null,
          "value": "medium",
        },
      ],
    },
    "sla-status": {
      "description": "Status determines how an item can be used. In 'draft' status an item
can be edited but can't be used. When 'published' the item can longer
be edited but can be used. 'Archived' is read-only.
",
      "generatedName": "SlaStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "archived",
          "nameOverride": null,
          "value": "archived",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "draft",
          "nameOverride": null,
          "value": "draft",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "published",
          "nameOverride": null,
          "value": "published",
        },
      ],
    },
    "sla-summary-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The filter for SLA summary.",
      "generatedName": "SlaSummaryFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaSummaryFilterStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "slaSummaryFilterStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for records with any of the provided SLA stages.",
              "generatedName": "SlaSummaryFilterStage",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SlaSummaryFilterStageItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-summary-stage",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slaSummaryFilterTargetTime",
          "key": "target_time",
          "schema": {
            "description": null,
            "generatedName": "slaSummaryFilterTargetTime",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlaSummaryFilterTargetTime",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "sla-summary-stage": {
      "description": "The stage of the SLA. This is the metric stage which is closest to
breach.
",
      "generatedName": "SlaSummaryStage",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "breached",
          "nameOverride": null,
          "value": "breached",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "completed",
          "nameOverride": null,
          "value": "completed",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "paused",
          "nameOverride": null,
          "value": "paused",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "running",
          "nameOverride": null,
          "value": "running",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "warning",
          "nameOverride": null,
          "value": "warning",
        },
      ],
    },
    "sla-tracker": {
      "description": null,
      "generatedName": "SlaTracker",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base",
      "type": "reference",
    },
    "slas-assign-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasAssignRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasAssignRequestId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "slasAssignRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA which would be assigned to the Rev organizations. If
omitted, the SLA of all the rev organizations referenced will be
unset.
",
              "generatedName": "SlasAssignRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasAssignRequestRevOrgs",
          "key": "rev_orgs",
          "schema": {
            "description": "The Rev organizations to apply the SLA to.",
            "generatedName": "SlasAssignRequestRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SlasAssignRequestRevOrgsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "slas-assign-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasAssignResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasAssignResponseResults",
          "key": "results",
          "schema": {
            "description": "The list of outcomes for each Rev organization.",
            "generatedName": "SlasAssignResponseResults",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SlasAssignResponseResultsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-assign-result",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "slas-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasCreateRequestAccountSelector",
          "key": "account_selector",
          "schema": {
            "description": null,
            "generatedName": "slasCreateRequestAccountSelector",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlasCreateRequestAccountSelector",
              "groupName": null,
              "nameOverride": null,
              "schema": "accounts-filters",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "slasCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the purpose and capabilities of the SLA.",
              "generatedName": "SlasCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasCreateRequestEvaluationPeriod",
          "key": "evaluation_period",
          "schema": {
            "description": null,
            "generatedName": "slasCreateRequestEvaluationPeriod",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlasCreateRequestEvaluationPeriod",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-evaluation-period",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasCreateRequestName",
          "key": "name",
          "schema": {
            "description": "Human-readable name.",
            "generatedName": "SlasCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasCreateRequestPolicies",
          "key": "policies",
          "schema": {
            "description": null,
            "generatedName": "slasCreateRequestPolicies",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The policies encompassed by this SLA, ordered in decreasing
priority.
",
              "generatedName": "SlasCreateRequestPolicies",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SlasCreateRequestPoliciesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-sla-policy",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "slas-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasCreateResponseSla",
          "key": "sla",
          "schema": {
            "description": null,
            "generatedName": "SlasCreateResponseSla",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "slas-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the SLA to get.",
            "generatedName": "SlasGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "slas-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasGetResponseSla",
          "key": "sla",
          "schema": {
            "description": null,
            "generatedName": "SlasGetResponseSla",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "slas-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "slasListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "SlasListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "slasListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of SLAs to return. The default is '50'.
",
              "generatedName": "SlasListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "slasListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlasListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasListRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "slasListRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SLA statuses the filter matches.",
              "generatedName": "SlasListRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SlasListRequestStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sla-status",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "slas-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "slasListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "SlasListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "slasListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "SlasListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasListResponseSlas",
          "key": "slas",
          "schema": {
            "description": "The list of SLAs.",
            "generatedName": "SlasListResponseSlas",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SlasListResponseSlasItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "slas-transition-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasTransitionRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasTransitionRequestId",
          "key": "id",
          "schema": {
            "description": "The updated SLA.",
            "generatedName": "SlasTransitionRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasTransitionRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "SlasTransitionRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla-status",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "slas-transition-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasTransitionResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasTransitionResponseSla",
          "key": "sla",
          "schema": {
            "description": null,
            "generatedName": "SlasTransitionResponseSla",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "slas-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasUpdateRequestAccountSelector",
          "key": "account_selector",
          "schema": {
            "description": null,
            "generatedName": "slasUpdateRequestAccountSelector",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlasUpdateRequestAccountSelector",
              "groupName": null,
              "nameOverride": null,
              "schema": "accounts-filters",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "slasUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the purpose and capabilities of the SLA.",
              "generatedName": "SlasUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasUpdateRequestEvaluationPeriod",
          "key": "evaluation_period",
          "schema": {
            "description": null,
            "generatedName": "slasUpdateRequestEvaluationPeriod",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SlasUpdateRequestEvaluationPeriod",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-evaluation-period",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The SLA's ID.",
            "generatedName": "SlasUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasUpdateRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "slasUpdateRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable name.",
              "generatedName": "SlasUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasUpdateRequestPolicies",
          "key": "policies",
          "schema": {
            "description": null,
            "generatedName": "slasUpdateRequestPolicies",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The policies encompassed by this SLA, ordered in decreasing
priority, the whole array will be overwritten by the contents of
this array.
",
              "generatedName": "SlasUpdateRequestPolicies",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SlasUpdateRequestPoliciesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-sla-policy",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "slas-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlasUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slasUpdateResponseSla",
          "key": "sla",
          "schema": {
            "description": null,
            "generatedName": "SlasUpdateResponseSla",
            "groupName": null,
            "nameOverride": null,
            "schema": "sla",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "snap-in-version-summary": {
      "description": null,
      "generatedName": "SnapInVersionSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "snap-ins-resources-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SnapInsResourcesRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the snap-in to get resources for.",
            "generatedName": "SnapInsResourcesRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesRequestUser",
          "key": "user",
          "schema": {
            "description": "The ID of the user to get resources for.",
            "generatedName": "SnapInsResourcesRequestUser",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "snap-ins-resources-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SnapInsResourcesResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseEventSources",
          "key": "event_sources",
          "schema": {
            "description": null,
            "generatedName": "snapInsResourcesResponseEventSources",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SnapInsResourcesResponseEventSources",
              "groupName": null,
              "nameOverride": null,
              "schema": "snap-ins-resources-response-event-sources-entry",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseInputs",
          "key": "inputs",
          "schema": {
            "description": null,
            "generatedName": "snapInsResourcesResponseInputs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The inputs for the snap-in.",
              "generatedName": "SnapInsResourcesResponseInputs",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "SnapInsResourcesResponseInputsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "SnapInsResourcesResponseInputsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseKeyrings",
          "key": "keyrings",
          "schema": {
            "description": null,
            "generatedName": "snapInsResourcesResponseKeyrings",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SnapInsResourcesResponseKeyrings",
              "groupName": null,
              "nameOverride": null,
              "schema": "snap-ins-resources-response-keyrings-entry",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseSnapInVersion",
          "key": "snap_in_version",
          "schema": {
            "description": null,
            "generatedName": "SnapInsResourcesResponseSnapInVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": "snap-in-version-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "snap-ins-resources-response-event-sources-entry": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SnapInsResourcesResponseEventSourcesEntry",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseEventSourcesEntryKey",
          "key": "key",
          "schema": {
            "description": null,
            "generatedName": "SnapInsResourcesResponseEventSourcesEntryKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseEventSourcesEntryValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "SnapInsResourcesResponseEventSourcesEntryValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "snap-ins-resources-response-keyring-data": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SnapInsResourcesResponseKeyringData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseKeyringDataId",
          "key": "id",
          "schema": {
            "description": "The ID of the keyring.",
            "generatedName": "SnapInsResourcesResponseKeyringDataId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseKeyringDataSecret",
          "key": "secret",
          "schema": {
            "description": "The secret value of the keyring. This must be handled with caution.
",
            "generatedName": "SnapInsResourcesResponseKeyringDataSecret",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "snap-ins-resources-response-keyrings-entry": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SnapInsResourcesResponseKeyringsEntry",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseKeyringsEntryKey",
          "key": "key",
          "schema": {
            "description": null,
            "generatedName": "SnapInsResourcesResponseKeyringsEntryKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapInsResourcesResponseKeyringsEntryValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "SnapInsResourcesResponseKeyringsEntryValue",
            "groupName": null,
            "nameOverride": null,
            "schema": "snap-ins-resources-response-keyring-data",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "snap-widget": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "SnapWidget",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "email_preview": {
            "description": null,
            "generatedName": "ComponentsSchemasEmailPreviewWidget",
            "groupName": null,
            "nameOverride": null,
            "schema": "email-preview-widget",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "snap-widget-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SnapWidgetBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapWidgetBaseName",
          "key": "name",
          "schema": {
            "description": "A human readable name for the snap widget.",
            "generatedName": "SnapWidgetBaseName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapWidgetBaseNamespace",
          "key": "namespace",
          "schema": {
            "description": null,
            "generatedName": "snapWidgetBaseNamespace",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SnapWidgetBaseNamespace",
              "groupName": null,
              "nameOverride": null,
              "schema": "snap-widget-namespace",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapWidgetBaseStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "SnapWidgetBaseStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "snap-widget-status",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "snap-widget-namespace": {
      "description": "Logical grouping of snap widgets. Useful for filtering.",
      "generatedName": "SnapWidgetNamespace",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "email_preview",
          "nameOverride": null,
          "value": "email_preview",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "link_preview",
          "nameOverride": null,
          "value": "link_preview",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "plug_nudge",
          "nameOverride": null,
          "value": "plug_nudge",
        },
      ],
    },
    "snap-widget-status": {
      "description": "The status of the snap widget.",
      "generatedName": "SnapWidgetStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "draft",
          "nameOverride": null,
          "value": "draft",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "published",
          "nameOverride": null,
          "value": "published",
        },
      ],
    },
    "snap-widget-type": {
      "description": null,
      "generatedName": "SnapWidgetType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "email_preview",
      },
    },
    "snap-widgets-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "name",
            "schema": {
              "description": "A human readable name for the snap widget.",
              "generatedName": "SnapWidgetsCreateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "namespace",
            "schema": {
              "description": null,
              "generatedName": "SnapWidgetsCreateRequestNamespace",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SnapWidgetsCreateRequestNamespace",
                "groupName": null,
                "nameOverride": null,
                "schema": "snap-widget-namespace",
                "type": "reference",
              },
            },
          },
          {
            "key": "status",
            "schema": {
              "description": null,
              "generatedName": "SnapWidgetsCreateRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SnapWidgetsCreateRequestStatus",
                "groupName": null,
                "nameOverride": null,
                "schema": "snap-widget-status",
                "type": "reference",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "SnapWidgetsCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "email_preview": {
            "description": null,
            "generatedName": "ComponentsSchemasCreateEmailPreviewWidget",
            "groupName": null,
            "nameOverride": null,
            "schema": "create-email-preview-widget",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "snap-widgets-create-request-type": {
      "description": null,
      "generatedName": "SnapWidgetsCreateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "email_preview",
      },
    },
    "snap-widgets-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SnapWidgetsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "snapWidgetsCreateResponseSnapWidget",
          "key": "snap_widget",
          "schema": {
            "description": null,
            "generatedName": "SnapWidgetsCreateResponseSnapWidget",
            "groupName": null,
            "nameOverride": null,
            "schema": "snap-widget",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "stage-diagram-summary": {
      "description": null,
      "generatedName": "StageDiagramSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "stage-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The filter for stages.",
      "generatedName": "StageFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stageFilterName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "stageFilterName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for records in the provided stage(s) by name.",
              "generatedName": "StageFilterName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StageFilterNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "stage-init": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Sets an object's initial stage.",
      "generatedName": "StageInit",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stageInitName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "stageInitName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the stage.",
              "generatedName": "StageInitName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "stage-update": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Updates an object's stage.",
      "generatedName": "StageUpdate",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stageUpdateName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "stageUpdateName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated name of the stage, otherwise unchanged if not set.
",
              "generatedName": "StageUpdateName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "staged-info-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StagedInfoFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stagedInfoFilterIsStaged",
          "key": "is_staged",
          "schema": {
            "description": null,
            "generatedName": "stagedInfoFilterIsStaged",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for issues that are staged.",
              "generatedName": "StagedInfoFilterIsStaged",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "stock-field-override": {
      "description": "A stock field override.",
      "generatedName": "StockFieldOverride",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "StockFieldOverrideKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "StockFieldOverrideValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "stock-schema-fragment": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StockSchemaFragment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the schema.",
              "generatedName": "StockSchemaFragmentDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentFields",
          "key": "fields",
          "schema": {
            "description": "List of all fields in this schema.",
            "generatedName": "StockSchemaFragmentFields",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentFieldsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "schema-field-descriptor",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentLeafType",
          "key": "leaf_type",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Leaf type this fragment applies to.",
              "generatedName": "StockSchemaFragmentLeafType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentNewFragmentRef",
          "key": "new_fragment_ref",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentNewFragmentRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentNewFragmentRef",
              "groupName": null,
              "nameOverride": null,
              "schema": "atom-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentOldFragmentRef",
          "key": "old_fragment_ref",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentOldFragmentRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentOldFragmentRef",
              "groupName": null,
              "nameOverride": null,
              "schema": "atom-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentTitle",
          "key": "title",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Title of the schema.",
              "generatedName": "StockSchemaFragmentTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "stock-schema-fragments-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StockSchemaFragmentsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsGetRequestId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the stock schema fragment.",
              "generatedName": "StockSchemaFragmentsGetRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsGetRequestLeafType",
          "key": "leaf_type",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsGetRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The leaf type this fragment applies to.",
              "generatedName": "StockSchemaFragmentsGetRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "stock-schema-fragments-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StockSchemaFragmentsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsGetResponseFragment",
          "key": "fragment",
          "schema": {
            "description": null,
            "generatedName": "StockSchemaFragmentsGetResponseFragment",
            "groupName": null,
            "nameOverride": null,
            "schema": "stock-schema-fragment",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "stock-schema-fragments-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StockSchemaFragmentsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from, otherwise if not provided,
then iteration starts from the beginning.
",
              "generatedName": "StockSchemaFragmentsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListRequestFilterPreset",
          "key": "filter_preset",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsListRequestFilterPreset",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListRequestFilterPreset",
              "groupName": null,
              "nameOverride": null,
              "schema": "stock-schema-fragments-list-request-filter-preset",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListRequestLeafType",
          "key": "leaf_type",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsListRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of leaf types.",
              "generatedName": "StockSchemaFragmentsListRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StockSchemaFragmentsListRequestLeafTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of items.",
              "generatedName": "StockSchemaFragmentsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListRequestPrune",
          "key": "prune",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsListRequestPrune",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of fields which are not required in the payload and can be
pruned away.
",
              "generatedName": "StockSchemaFragmentsListRequestPrune",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StockSchemaFragmentsListRequestPruneItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "stock-schema-fragments-list-request-prune",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of fields to sort the items by and how to sort them.
",
              "generatedName": "StockSchemaFragmentsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StockSchemaFragmentsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "stock-schema-fragments-list-request-filter-preset": {
      "description": null,
      "generatedName": "StockSchemaFragmentsListRequestFilterPreset",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "customizable_types_preset",
          "nameOverride": null,
          "value": "customizable_types_preset",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "no_preset",
          "nameOverride": null,
          "value": "no_preset",
        },
      ],
    },
    "stock-schema-fragments-list-request-prune": {
      "description": null,
      "generatedName": "StockSchemaFragmentsListRequestPrune",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "composite_schemas",
          "nameOverride": null,
          "value": "composite_schemas",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "fields",
          "nameOverride": null,
          "value": "fields",
        },
      ],
    },
    "stock-schema-fragments-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "StockSchemaFragmentsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListResponseCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "stockSchemaFragmentsListResponseCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from, otherwise if not provided,
then iteration starts from the beginning.
",
              "generatedName": "StockSchemaFragmentsListResponseCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stockSchemaFragmentsListResponseResult",
          "key": "result",
          "schema": {
            "description": "The stock schema fragments.",
            "generatedName": "StockSchemaFragmentsListResponseResult",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "StockSchemaFragmentsListResponseResultItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "stock-schema-fragment",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "subtype": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Subtype",
      "groupName": null,
      "nameOverride": "subtype",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "subtypeDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "subtypeDisplayName",
            "groupName": null,
            "nameOverride": "subtype",
            "type": "optional",
            "value": {
              "description": "Display name of the subtype.",
              "generatedName": "SubtypeDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "subtypeFragmentId",
          "key": "fragment_id",
          "schema": {
            "description": "DON of the custom type fragment this subtype belongs to.",
            "generatedName": "SubtypeFragmentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "subtypeLeafType",
          "key": "leaf_type",
          "schema": {
            "description": "Leaf type for the subtype.",
            "generatedName": "SubtypeLeafType",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "subtypeValue",
          "key": "value",
          "schema": {
            "description": "Value of the subtype.",
            "generatedName": "SubtypeValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "subtypes-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SubtypesListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "subtypesListRequestLeafType",
          "key": "leaf_type",
          "schema": {
            "description": null,
            "generatedName": "subtypesListRequestLeafType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Leaf type for which subtypes are required.",
              "generatedName": "SubtypesListRequestLeafType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "subtypesListRequestLeafTypes",
          "key": "leaf_types",
          "schema": {
            "description": null,
            "generatedName": "subtypesListRequestLeafTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of leaf types for which subtypes are required.",
              "generatedName": "SubtypesListRequestLeafTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SubtypesListRequestLeafTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "subtypes-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SubtypesListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "subtypesListResponseSubtypes",
          "key": "subtypes",
          "schema": {
            "description": "List of subtypes.",
            "generatedName": "SubtypesListResponseSubtypes",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SubtypesListResponseSubtypesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "subtype",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "survey-aggregation-filter": {
      "description": "The filter for survey aggregation.",
      "generatedName": "SurveyAggregationFilter",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "SurveyAggregationFilterKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "SurveyAggregationFilterValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "sync-metadata-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SyncMetadataFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterLastSyncIn",
          "key": "last_sync_in",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterLastSyncIn",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SyncMetadataFilterLastSyncIn",
              "groupName": null,
              "nameOverride": null,
              "schema": "sync-metadata-filter-sync-in-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterLastSyncOut",
          "key": "last_sync_out",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterLastSyncOut",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SyncMetadataFilterLastSyncOut",
              "groupName": null,
              "nameOverride": null,
              "schema": "sync-metadata-filter-sync-out-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterOriginSystem",
          "key": "origin_system",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterOriginSystem",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for issues synced from this specific origin system.
",
              "generatedName": "SyncMetadataFilterOriginSystem",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SyncMetadataFilterOriginSystemItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "sync-metadata-filter-sync-in-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SyncMetadataFilterSyncInFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterSyncInFilterStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterSyncInFilterStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for works with selected sync statuses.",
              "generatedName": "SyncMetadataFilterSyncInFilterStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SyncMetadataFilterSyncInFilterStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sync-metadata-filter-sync-in-filter-status",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterSyncInFilterSyncDate",
          "key": "sync_date",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterSyncInFilterSyncDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SyncMetadataFilterSyncInFilterSyncDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterSyncInFilterSyncUnit",
          "key": "sync_unit",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterSyncInFilterSyncUnit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for works modified with selected sync units.",
              "generatedName": "SyncMetadataFilterSyncInFilterSyncUnit",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SyncMetadataFilterSyncInFilterSyncUnitItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "sync-metadata-filter-sync-in-filter-status": {
      "description": null,
      "generatedName": "SyncMetadataFilterSyncInFilterStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "failed",
          "nameOverride": null,
          "value": "failed",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "modified",
          "nameOverride": null,
          "value": "modified",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "staged",
          "nameOverride": null,
          "value": "staged",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "succeeded",
          "nameOverride": null,
          "value": "succeeded",
        },
      ],
    },
    "sync-metadata-filter-sync-out-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SyncMetadataFilterSyncOutFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterSyncOutFilterStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterSyncOutFilterStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for works with selected sync statuses.",
              "generatedName": "SyncMetadataFilterSyncOutFilterStatus",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SyncMetadataFilterSyncOutFilterStatusItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "sync-metadata-filter-sync-out-filter-status",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterSyncOutFilterSyncDate",
          "key": "sync_date",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterSyncOutFilterSyncDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SyncMetadataFilterSyncOutFilterSyncDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "syncMetadataFilterSyncOutFilterSyncUnit",
          "key": "sync_unit",
          "schema": {
            "description": null,
            "generatedName": "syncMetadataFilterSyncOutFilterSyncUnit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for works modified with selected sync units.",
              "generatedName": "SyncMetadataFilterSyncOutFilterSyncUnit",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SyncMetadataFilterSyncOutFilterSyncUnitItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "sync-metadata-filter-sync-out-filter-status": {
      "description": null,
      "generatedName": "SyncMetadataFilterSyncOutFilterStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "failed",
          "nameOverride": null,
          "value": "failed",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "succeeded",
          "nameOverride": null,
          "value": "succeeded",
        },
      ],
    },
    "sys-user": {
      "description": null,
      "generatedName": "SysUser",
      "groupName": null,
      "nameOverride": null,
      "schema": "user-base",
      "type": "reference",
    },
    "sys-user-summary": {
      "description": null,
      "generatedName": "SysUserSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "user-base-summary",
      "type": "reference",
    },
    "sys-users-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to get the list of system user's information.",
      "generatedName": "SysUsersListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "sysUsersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "SysUsersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "sysUsersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of system users to return. Value can range from
'1' to '100', with a default of '50'.
",
              "generatedName": "SysUsersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "sysUsersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SysUsersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "sysUsersListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the system users by and the direction to sort them.
",
              "generatedName": "SysUsersListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SysUsersListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "sys-users-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the system users.",
      "generatedName": "SysUsersListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "sysUsersListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "SysUsersListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "sysUsersListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "SysUsersListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersListResponseSysUsers",
          "key": "sys_users",
          "schema": {
            "description": "The list of system users.",
            "generatedName": "SysUsersListResponseSysUsers",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SysUsersListResponseSysUsersItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "sys-user",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "sys-users-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to update information of the system user.",
      "generatedName": "SysUsersUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersUpdateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "sysUsersUpdateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated display name for the system user.",
              "generatedName": "SysUsersUpdateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersUpdateRequestDisplayPicture",
          "key": "display_picture",
          "schema": {
            "description": null,
            "generatedName": "sysUsersUpdateRequestDisplayPicture",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Artifact ID of the system user's new display picture.",
              "generatedName": "SysUsersUpdateRequestDisplayPicture",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Artifact ID of the system user's new display picture.",
                "generatedName": "SysUsersUpdateRequestDisplayPicture",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersUpdateRequestFullName",
          "key": "full_name",
          "schema": {
            "description": null,
            "generatedName": "sysUsersUpdateRequestFullName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updated full name for the system user.",
              "generatedName": "SysUsersUpdateRequestFullName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of system user to update.",
            "generatedName": "SysUsersUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "sys-users-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Updated Sys user object.",
      "generatedName": "SysUsersUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sysUsersUpdateResponseSysUser",
          "key": "sys_user",
          "schema": {
            "description": null,
            "generatedName": "SysUsersUpdateResponseSysUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "sys-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "tag": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Tag",
      "groupName": null,
      "nameOverride": "tag",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": null,
            "generatedName": "tagAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the tag, where a value is provided when a
tag is associated with an object. If empty, then no value should be
provided when the association is made.
",
              "generatedName": "TagAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagAllowedValuesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "tagDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An informative description for the tag that should provide context
on the tag's purpose and usage.
",
              "generatedName": "TagDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagName",
          "key": "name",
          "schema": {
            "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
            "generatedName": "TagName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tag-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TagSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagSearchSummaryTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagSearchSummaryTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "tag-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TagSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagSummaryName",
          "key": "name",
          "schema": {
            "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
            "generatedName": "TagSummaryName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tag-with-value": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TagWithValue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagWithValueTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagWithValueTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag-summary",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagWithValueValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "tagWithValueValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The value for the object's association with the tag.",
              "generatedName": "TagWithValueValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "tag-with-value-filter": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TagWithValueFilter",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagWithValueFilterId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "tagWithValueFilterId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the tag.",
              "generatedName": "TagWithValueFilterId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagWithValueFilterValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "tagWithValueFilterValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
              "generatedName": "TagWithValueFilterValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to create a new tag.",
      "generatedName": "TagsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateRequestAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": null,
            "generatedName": "tagsCreateRequestAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the tag, or empty if no values are
permitted.
",
              "generatedName": "TagsCreateRequestAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsCreateRequestAllowedValuesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "tagsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The description for the tag.",
              "generatedName": "TagsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateRequestName",
          "key": "name",
          "schema": {
            "description": "The name for the tag, which must be unique across all tags.
",
            "generatedName": "TagsCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tags-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a new tag.",
      "generatedName": "TagsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateResponseTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagsCreateResponseTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "tags-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete a tag.",
      "generatedName": "TagsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag to delete.",
            "generatedName": "TagsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tags-delete-response": {
      "description": "The response for deleting a tag.",
      "generatedName": "TagsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "TagsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "TagsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "tags-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get a tag's information.",
      "generatedName": "TagsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The requested tag's ID.",
            "generatedName": "TagsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tags-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a tag's information.",
      "generatedName": "TagsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsGetResponseTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagsGetResponseTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "tags-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get information about a list of tags.",
      "generatedName": "TagsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "tagsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "TagsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "tagsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of tags to return. The default is '50'.
",
              "generatedName": "TagsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "tagsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "tagsListRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tags with the provided names.",
              "generatedName": "TagsListRequestName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsListRequestNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "tagsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort tags by and the direction to sort them.",
              "generatedName": "TagsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the tags.",
      "generatedName": "TagsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "tagsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "TagsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "tagsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "TagsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListResponseTags",
          "key": "tags",
          "schema": {
            "description": "The list of tags.",
            "generatedName": "TagsListResponseTags",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "TagsListResponseTagsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "tag",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-update-allowed-values": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Specifies an update to a tag's allowed values.",
      "generatedName": "TagsUpdateAllowedValues",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateAllowedValuesSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateAllowedValuesSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the allowed values for the tag.",
              "generatedName": "TagsUpdateAllowedValuesSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsUpdateAllowedValuesSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to update a tag.",
      "generatedName": "TagsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateRequestAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TagsUpdateRequestAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "tags-update-allowed-values",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated description of the tag.",
              "generatedName": "TagsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag to update.",
            "generatedName": "TagsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated name of the tag. The name must be unique across all
tags.
",
              "generatedName": "TagsUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response for updating a tag.",
      "generatedName": "TagsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateResponseTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagsUpdateResponseTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "task": {
      "description": null,
      "generatedName": "Task",
      "groupName": null,
      "nameOverride": null,
      "schema": "work-base",
      "type": "reference",
    },
    "task-priority": {
      "description": "Priority of the work based upon impact and criticality.",
      "generatedName": "TaskPriority",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p0",
          "nameOverride": null,
          "value": "p0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p1",
          "nameOverride": null,
          "value": "p1",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p2",
          "nameOverride": null,
          "value": "p2",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p3",
          "nameOverride": null,
          "value": "p3",
        },
      ],
    },
    "task-summary": {
      "description": null,
      "generatedName": "TaskSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "work-base-summary",
      "type": "reference",
    },
    "tenant-fragment": {
      "description": null,
      "generatedName": "TenantFragment",
      "groupName": null,
      "nameOverride": null,
      "schema": "custom-schema-fragment-base",
      "type": "reference",
    },
    "tenant-fragment-summary": {
      "description": null,
      "generatedName": "TenantFragmentSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "custom-schema-fragment-base-summary",
      "type": "reference",
    },
    "ticket": {
      "allOf": [
        {
          "description": null,
          "generatedName": "WorkBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "work-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Ticket",
      "groupName": null,
      "nameOverride": "ticket",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketChannels",
          "key": "channels",
          "schema": {
            "description": null,
            "generatedName": "ticketChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Channels of the ticket.",
              "generatedName": "TicketChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TicketChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-channels",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "ticketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": "group-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "ticketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "ticketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "schema": "ticket-severity",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketSourceChannel",
          "key": "source_channel",
          "schema": {
            "description": null,
            "generatedName": "ticketSourceChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Source channel of the ticket.",
              "generatedName": "TicketSourceChannel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ticket-channels": {
      "description": "Channels of the ticket.",
      "generatedName": "TicketChannels",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "email",
          "nameOverride": null,
          "value": "email",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "plug",
          "nameOverride": null,
          "value": "plug",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "slack",
          "nameOverride": null,
          "value": "slack",
        },
      ],
    },
    "ticket-severity": {
      "description": "Severity of the ticket.",
      "generatedName": "TicketSeverity",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "blocker",
          "nameOverride": null,
          "value": "blocker",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "high",
          "nameOverride": null,
          "value": "high",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "low",
          "nameOverride": null,
          "value": "low",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "medium",
          "nameOverride": null,
          "value": "medium",
        },
      ],
    },
    "ticket-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "WorkBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "work-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TicketSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketSummaryRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "ticketSummaryRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketSummaryRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketSummarySeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "ticketSummarySeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketSummarySeverity",
              "groupName": null,
              "nameOverride": null,
              "schema": "ticket-severity",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-comment": {
      "allOf": [
        {
          "description": null,
          "generatedName": "TimelineEntryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entry-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineComment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifacts for the comment.",
              "generatedName": "TimelineCommentArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineCommentArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The comment's body. If the comment has been deleted, then no body
will appear in the response.
",
              "generatedName": "TimelineCommentBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentBodyType",
          "key": "body_type",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentBodyType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineCommentBodyType",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-comment-body-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentSnapKitBody",
          "key": "snap_kit_body",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentSnapKitBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineCommentSnapKitBody",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-snap-kit-body",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentSnapWidgetBody",
          "key": "snap_widget_body",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentSnapWidgetBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The snap widget body of the comment.",
              "generatedName": "TimelineCommentSnapWidgetBody",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineCommentSnapWidgetBodyItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "snap-widget",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-comment-body-type": {
      "description": "The type of the body to use for the comment.",
      "generatedName": "TimelineCommentBodyType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "snap_kit",
          "nameOverride": null,
          "value": "snap_kit",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "snap_widget",
          "nameOverride": null,
          "value": "snap_widget",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "text",
          "nameOverride": null,
          "value": "text",
        },
      ],
    },
    "timeline-comment-summary": {
      "description": null,
      "generatedName": "TimelineCommentSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "timeline-entry-base-summary",
      "type": "reference",
    },
    "timeline-entries-collection": {
      "description": "Describes collections of timeline entries.",
      "generatedName": "TimelineEntriesCollection",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "discussions",
          "nameOverride": null,
          "value": "discussions",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "events",
          "nameOverride": null,
          "value": "events",
        },
      ],
    },
    "timeline-entries-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "collections",
            "schema": {
              "description": "The collection(s) that the entry belongs to, otherwise if not
provided, then the entry's default collection is used.
",
              "generatedName": "TimelineEntriesCreateRequestCollections",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The collection(s) that the entry belongs to, otherwise if not
provided, then the entry's default collection is used.
",
                "generatedName": "TimelineEntriesCreateRequestCollections",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "TimelineEntriesCreateRequestCollectionsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "timeline-entries-collection",
                  "type": "reference",
                },
              },
            },
          },
          {
            "key": "expires_at",
            "schema": {
              "description": "If set, then the entry is ephemeral and will be deleted after the
provided time. The minimum value should be at least a minute more
than the current timestamp.
",
              "generatedName": "TimelineEntriesCreateRequestExpiresAt",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "If set, then the entry is ephemeral and will be deleted after the
provided time. The minimum value should be at least a minute more
than the current timestamp.
",
                "generatedName": "TimelineEntriesCreateRequestExpiresAt",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "labels",
            "schema": {
              "description": "The labels to be associated with the entry.",
              "generatedName": "TimelineEntriesCreateRequestLabels",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The labels to be associated with the entry.",
                "generatedName": "TimelineEntriesCreateRequestLabels",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "TimelineEntriesCreateRequestLabelsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "object",
            "schema": {
              "description": "The ID of the object to create the timeline entry for.",
              "generatedName": "TimelineEntriesCreateRequestObject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "private_to",
            "schema": {
              "description": "If the visibility of the entry is private, this specifies the users
that the entry is private to. Note the creator is always implicitly
included in this list.
",
              "generatedName": "TimelineEntriesCreateRequestPrivateTo",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "If the visibility of the entry is private, this specifies the users
that the entry is private to. Note the creator is always implicitly
included in this list.
",
                "generatedName": "TimelineEntriesCreateRequestPrivateTo",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "TimelineEntriesCreateRequestPrivateToItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "visibility",
            "schema": {
              "description": null,
              "generatedName": "TimelineEntriesCreateRequestVisibility",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesCreateRequestVisibility",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-entry-visibility",
                "type": "reference",
              },
            },
          },
        ],
        "description": "The request to create a timeline entry for an object.",
        "discriminantProperty": "type",
        "generatedName": "TimelineEntriesCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "timeline_comment": {
            "description": null,
            "generatedName": "ComponentsSchemasTimelineEntriesCreateRequestTimelineComment",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entries-create-request-timeline-comment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "timeline-entries-create-request-timeline-comment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntriesCreateRequestTimelineComment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the artifacts attached to the comment.",
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The comment's body.",
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentBodyType",
          "key": "body_type",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentBodyType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentBodyType",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-comment-body-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentLinkPreviews",
          "key": "link_previews",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentLinkPreviews",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the previews of the links posted in the comment.
",
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentLinkPreviews",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentLinkPreviewsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapKitBody",
          "key": "snap_kit_body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapKitBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapKitBody",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-snap-kit-body",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapWidgetBody",
          "key": "snap_widget_body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapWidgetBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The snap widget body of the comment.",
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapWidgetBody",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapWidgetBodyItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-create-request-type": {
      "description": null,
      "generatedName": "TimelineEntriesCreateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "timeline_comment",
      },
    },
    "timeline-entries-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a timeline entry for an object.",
      "generatedName": "TimelineEntriesCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateResponseTimelineEntry",
          "key": "timeline_entry",
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesCreateResponseTimelineEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete a timeline entry from an object.",
      "generatedName": "TimelineEntriesDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the timeline entry to delete.",
            "generatedName": "TimelineEntriesDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-delete-response": {
      "description": "The response to deleting a timeline entry from an object.",
      "generatedName": "TimelineEntriesDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "TimelineEntriesDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "TimelineEntriesDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "timeline-entries-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get a timeline entry.",
      "generatedName": "TimelineEntriesGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesGetRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the timeline entry to get.",
            "generatedName": "TimelineEntriesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to getting a timeline entry.",
      "generatedName": "TimelineEntriesGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesGetResponseTimelineEntry",
          "key": "timeline_entry",
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesGetResponseTimelineEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to list timeline entries for an object.",
      "generatedName": "TimelineEntriesListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListRequestCollections",
          "key": "collections",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListRequestCollections",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The collection(s) to list entries from, otherwise if not provided,
all entries are returned.
",
              "generatedName": "TimelineEntriesListRequestCollections",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesListRequestCollectionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-entries-collection",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "TimelineEntriesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListRequestLabels",
          "key": "labels",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListRequestLabels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for entries containing at least one of the provided labels,
otherwise if no labels are provided, then no label filtering is
done.
",
              "generatedName": "TimelineEntriesListRequestLabels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesListRequestLabelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of entries to return. If not set, then this
defaults to \`50\`.
",
              "generatedName": "TimelineEntriesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListRequestObject",
          "key": "object",
          "schema": {
            "description": "The ID of the object to list timeline entries for.",
            "generatedName": "TimelineEntriesListRequestObject",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListRequestVisibility",
          "key": "visibility",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListRequestVisibility",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The visibility of the timeline entries to filter for. Note this is
a strict filter, such that only entries with the exact visibilities
specified will be returned.
",
              "generatedName": "TimelineEntriesListRequestVisibility",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesListRequestVisibilityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-entry-visibility",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing timeline entries for an object.",
      "generatedName": "TimelineEntriesListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "TimelineEntriesListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "TimelineEntriesListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListResponseTimelineEntries",
          "key": "timeline_entries",
          "schema": {
            "description": "The timeline entries for the object.",
            "generatedName": "TimelineEntriesListResponseTimelineEntries",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListResponseTimelineEntriesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-entry",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "id",
            "schema": {
              "description": "The ID of the timeline entry to update.",
              "generatedName": "TimelineEntriesUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": "The request to update a timeline entry.",
        "discriminantProperty": "type",
        "generatedName": "TimelineEntriesUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "timeline_comment": {
            "description": null,
            "generatedName": "ComponentsSchemasTimelineEntriesUpdateRequestTimelineComment",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entries-update-request-timeline-comment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "timeline-entries-update-request-timeline-comment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-entries-update-request-timeline-comment-artifacts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated comment's body.",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentBodyType",
          "key": "body_type",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentBodyType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBodyType",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-comment-body-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviews",
          "key": "link_previews",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviews",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviews",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-entries-update-request-timeline-comment-link-previews",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentSnapKitBody",
          "key": "snap_kit_body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentSnapKitBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentSnapKitBody",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-snap-kit-body",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-update-request-timeline-comment-artifacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
          "key": "add",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Adds the provided artifacts to the comment. An artifact cannot be
added more than once, i.e. nothing is done if the artifact is
already attached. Mutually exclusive with \`set\`.
",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsAddItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
          "key": "remove",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Removes the provided artifacts from the comment. If an artifact is
not present, then it's ignored. Mututally exclusive with \`set\`.
",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsRemoveItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the field to the provided artifacts.",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-update-request-timeline-comment-link-previews": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviews",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviewsAdd",
          "key": "add",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviewsAdd",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Adds the provided link previews to the comment. A link preview
cannot be added more than once, i.e. nothing is done if the link
preview is already present. Mutually exclusive with \`set\`.
",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviewsAdd",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviewsAddItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviewsRemove",
          "key": "remove",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviewsRemove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Removes the provided link previews from the comment. If a link
preview is not present, then it's ignored. Mutually exclusive with
\`set\`.
",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviewsRemove",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviewsRemoveItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviewsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentLinkPreviewsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Set the link previews to the provided IDs.",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviewsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentLinkPreviewsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-update-request-type": {
      "description": null,
      "generatedName": "TimelineEntriesUpdateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "timeline_comment",
      },
    },
    "timeline-entries-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to updating a timeline entry.",
      "generatedName": "TimelineEntriesUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateResponseTimelineEntry",
          "key": "timeline_entry",
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesUpdateResponseTimelineEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entry": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "TimelineEntry",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "timeline_comment": {
            "description": null,
            "generatedName": "ComponentsSchemasTimelineComment",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-comment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "timeline-entry-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntryBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntryBaseLabels",
          "key": "labels",
          "schema": {
            "description": null,
            "generatedName": "timelineEntryBaseLabels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Labels that are associated with the Timeline entry.",
              "generatedName": "TimelineEntryBaseLabels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntryBaseLabelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntryBaseObject",
          "key": "object",
          "schema": {
            "description": "The object that the Timeline entry belongs to.",
            "generatedName": "TimelineEntryBaseObject",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntryBaseObjectDisplayId",
          "key": "object_display_id",
          "schema": {
            "description": "The display ID of the object that the Timeline entry belongs to.
",
            "generatedName": "TimelineEntryBaseObjectDisplayId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntryBaseObjectType",
          "key": "object_type",
          "schema": {
            "description": null,
            "generatedName": "timelineEntryBaseObjectType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntryBaseObjectType",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-entry-object-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntryBaseReactions",
          "key": "reactions",
          "schema": {
            "description": null,
            "generatedName": "timelineEntryBaseReactions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The reactions to the entry.",
              "generatedName": "TimelineEntryBaseReactions",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntryBaseReactionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-reaction",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntryBaseThread",
          "key": "thread",
          "schema": {
            "description": null,
            "generatedName": "timelineEntryBaseThread",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntryBaseThread",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-thread",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntryBaseVisibility",
          "key": "visibility",
          "schema": {
            "description": null,
            "generatedName": "timelineEntryBaseVisibility",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntryBaseVisibility",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-entry-visibility",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entry-base-summary": {
      "description": null,
      "generatedName": "TimelineEntryBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "timeline-entry-object-type": {
      "description": "The type of object that the Timeline entry belongs to.",
      "generatedName": "TimelineEntryObjectType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account",
          "nameOverride": null,
          "value": "account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "capability",
          "nameOverride": null,
          "value": "capability",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation",
          "nameOverride": null,
          "value": "conversation",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "engagement",
          "nameOverride": null,
          "value": "engagement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enhancement",
          "nameOverride": null,
          "value": "enhancement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "feature",
          "nameOverride": null,
          "value": "feature",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "issue",
          "nameOverride": null,
          "value": "issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "meeting",
          "nameOverride": null,
          "value": "meeting",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "opportunity",
          "nameOverride": null,
          "value": "opportunity",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "product",
          "nameOverride": null,
          "value": "product",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org",
          "nameOverride": null,
          "value": "rev_org",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user",
          "nameOverride": null,
          "value": "rev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "task",
          "nameOverride": null,
          "value": "task",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_comment",
          "nameOverride": null,
          "value": "timeline_comment",
        },
      ],
    },
    "timeline-entry-type": {
      "description": null,
      "generatedName": "TimelineEntryType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "timeline_comment",
      },
    },
    "timeline-entry-visibility": {
      "description": "The visibility of the entry. If 'private', then the entry is only
visible to the creator, 'internal' is visible with the Dev
organization, 'external' is visible to the Dev organzation and Rev
users, and 'public' is visible to all. If not set, then the default
visibility is 'external'.
",
      "generatedName": "TimelineEntryVisibility",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "external",
          "nameOverride": null,
          "value": "external",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "internal",
          "nameOverride": null,
          "value": "internal",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "private",
          "nameOverride": null,
          "value": "private",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "public",
          "nameOverride": null,
          "value": "public",
        },
      ],
    },
    "timeline-reaction": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Reaction.",
      "generatedName": "TimelineReaction",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineReactionEmoji",
          "key": "emoji",
          "schema": {
            "description": null,
            "generatedName": "timelineReactionEmoji",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The reaction emoji's unicode codepoint, e.g. "1f44d".",
              "generatedName": "TimelineReactionEmoji",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineReactionReacted",
          "key": "reacted",
          "schema": {
            "description": null,
            "generatedName": "timelineReactionReacted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the requesting user reacted.",
              "generatedName": "TimelineReactionReacted",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineReactionTotalUsers",
          "key": "total_users",
          "schema": {
            "description": null,
            "generatedName": "timelineReactionTotalUsers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The total number of users with this reaction.",
              "generatedName": "TimelineReactionTotalUsers",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-snap-kit-body": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Snap Kit Body of the comment.",
      "generatedName": "TimelineSnapKitBody",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineSnapKitBodyBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "timelineSnapKitBodyBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The JSON body of the SnapKit.",
              "generatedName": "TimelineSnapKitBodyBody",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "TimelineSnapKitBodyBodyKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "TimelineSnapKitBodyBodyValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineSnapKitBodySnapInActionName",
          "key": "snap_in_action_name",
          "schema": {
            "description": null,
            "generatedName": "timelineSnapKitBodySnapInActionName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of an action defined in the SnapIn. The combination of
snap_in_id and snap_in_action_name uniquely identifies the
interaction object which is to be called when actions on a snapkit
element is taken.
",
              "generatedName": "TimelineSnapKitBodySnapInActionName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineSnapKitBodySnapInId",
          "key": "snap_in_id",
          "schema": {
            "description": null,
            "generatedName": "timelineSnapKitBodySnapInId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "ID of the snap-in which created the SnapKit.",
              "generatedName": "TimelineSnapKitBodySnapInId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-thread": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Thread.",
      "generatedName": "TimelineThread",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineThreadTotalReplies",
          "key": "total_replies",
          "schema": {
            "description": null,
            "generatedName": "timelineThreadTotalReplies",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The total number of replies in the thread.",
              "generatedName": "TimelineThreadTotalReplies",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "track-event": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TrackEvent",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "trackEventClientContext",
          "key": "client_context",
          "schema": {
            "description": null,
            "generatedName": "trackEventClientContext",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TrackEventClientContext",
              "groupName": null,
              "nameOverride": null,
              "schema": "client-context",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "trackEventEventId",
          "key": "event_id",
          "schema": {
            "description": null,
            "generatedName": "trackEventEventId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Unique ID for the event.",
              "generatedName": "TrackEventEventId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "trackEventEventTime",
          "key": "event_time",
          "schema": {
            "description": null,
            "generatedName": "trackEventEventTime",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The timestamp at which the event occurred.",
              "generatedName": "TrackEventEventTime",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "trackEventName",
          "key": "name",
          "schema": {
            "description": "Name of the event.",
            "generatedName": "TrackEventName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "trackEventPayload",
          "key": "payload",
          "schema": {
            "description": "Payload of the event",
            "generatedName": "TrackEventPayload",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "TrackEventPayloadKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "TrackEventPayloadValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "track-events-publish-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TrackEventsPublishRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "trackEventsPublishRequestEventsList",
          "key": "events_list",
          "schema": {
            "description": null,
            "generatedName": "TrackEventsPublishRequestEventsList",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "TrackEventsPublishRequestEventsListItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "track-event",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "track-events-publish-response": {
      "description": null,
      "generatedName": "TrackEventsPublishResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "TrackEventsPublishResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "TrackEventsPublishResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "unit": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Unit encapsulates the name of the unit and the type of the unit. For
example, '#Number of API calls' where name is 'number_of_api_calls' and
type is 'number'.
",
      "generatedName": "Unit",
      "groupName": null,
      "nameOverride": "unit",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "unitName",
          "key": "name",
          "schema": {
            "description": "This represents human readable unit name of the UOM For example,
number of API calls.
",
            "generatedName": "UnitName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "unitType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "UnitType",
            "groupName": null,
            "nameOverride": null,
            "schema": "unit-type",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "unit-type": {
      "description": "This defines the UOM unit type. For example, for 'number of video
calls', unit type will be a number.
",
      "generatedName": "UnitType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "boolean",
          "nameOverride": null,
          "value": "boolean",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "number",
          "nameOverride": null,
          "value": "number",
        },
      ],
    },
    "unlink-rev-user-from-rev-org-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to unlink a rev user from a rev org.",
      "generatedName": "UnlinkRevUserFromRevOrgRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "unlinkRevUserFromRevOrgRequestRevOrgDon",
          "key": "rev_org_don",
          "schema": {
            "description": "The don of the rev org to unlink the rev user from.",
            "generatedName": "UnlinkRevUserFromRevOrgRequestRevOrgDon",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "unlinkRevUserFromRevOrgRequestUserDon",
          "key": "user_don",
          "schema": {
            "description": "The don of the rev user to unlink.",
            "generatedName": "UnlinkRevUserFromRevOrgRequestUserDon",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "unlink-rev-user-from-rev-org-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to unlink a rev user from a rev org.",
      "generatedName": "UnlinkRevUserFromRevOrgResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "unlinkRevUserFromRevOrgResponseRevUser",
          "key": "rev_user",
          "schema": {
            "description": null,
            "generatedName": "UnlinkRevUserFromRevOrgResponseRevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "uom": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Uom",
      "groupName": null,
      "nameOverride": "uom",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomAggregationDetails",
          "key": "aggregation_details",
          "schema": {
            "description": null,
            "generatedName": "UomAggregationDetails",
            "groupName": null,
            "nameOverride": null,
            "schema": "aggregation-detail",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "uomDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the UOM.",
              "generatedName": "UomDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomDimensions",
          "key": "dimensions",
          "schema": {
            "description": null,
            "generatedName": "uomDimensions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of dimensions that can be emitted along with the metering
data.
",
              "generatedName": "UomDimensions",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomDimensionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomIsEnabled",
          "key": "is_enabled",
          "schema": {
            "description": "If set to true, then the UOM can be configured as part of
entitlements in skus and metering data only for the enabled uoms
will be passed through the metering pipeline.
",
            "generatedName": "UomIsEnabled",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomMetricName",
          "key": "metric_name",
          "schema": {
            "description": "Human readable metric name of the UOM.",
            "generatedName": "UomMetricName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomMetricScope",
          "key": "metric_scope",
          "schema": {
            "description": null,
            "generatedName": "UomMetricScope",
            "groupName": null,
            "nameOverride": null,
            "schema": "uom-metric-scope",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomName",
          "key": "name",
          "schema": {
            "description": "Human readable name of the UOM.",
            "generatedName": "UomName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomPart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "uomPart",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UomPart",
              "groupName": null,
              "nameOverride": null,
              "schema": "part-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomProduct",
          "key": "product",
          "schema": {
            "description": null,
            "generatedName": "UomProduct",
            "groupName": null,
            "nameOverride": null,
            "schema": "part-summary",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomUnit",
          "key": "unit",
          "schema": {
            "description": null,
            "generatedName": "UomUnit",
            "groupName": null,
            "nameOverride": null,
            "schema": "unit",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "uom-metric-scope": {
      "description": "The granularity at which the metrics ingestion data is to be emitted
for the UOM.
",
      "generatedName": "UomMetricScope",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "org",
          "nameOverride": null,
          "value": "org",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "user",
          "nameOverride": null,
          "value": "user",
        },
      ],
    },
    "uoms-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestAggregationDetail",
          "key": "aggregation_detail",
          "schema": {
            "description": null,
            "generatedName": "UomsCreateRequestAggregationDetail",
            "groupName": null,
            "nameOverride": null,
            "schema": "aggregation-detail",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "uomsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Unit of Measurement (UOM).",
              "generatedName": "UomsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestDimensions",
          "key": "dimensions",
          "schema": {
            "description": null,
            "generatedName": "uomsCreateRequestDimensions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The list of dimensions that can be emitted as part of metrics data.
Dimensions consist of list of key-value pairs. For example, if the
UOM is 'number_of_api_calls', then dimensions can be ['api_name',
'api_version'].Dimension keys can only contain alphanumeric
characters (A-Z, a-z, and 0-9) and underscores (_). Dimension keys
cannot start with a number and is case-insensitive.Dimension keys
must be unique and it is not allowed to have more than one value
with the same key.Metrics data ingested in DevRev metrics format
will be grouped and aggregated based on the dimensions specified in
UOM.
",
              "generatedName": "UomsCreateRequestDimensions",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsCreateRequestDimensionsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestMetricName",
          "key": "metric_name",
          "schema": {
            "description": "Name of the Unit of Measurement (UOM). Unit of Measurement is a
unit of measure defined over a part offered by a Dev Org. A single
part can have multiple unit of measurements defined over it. For
example, a part can be 'video call', one UOM defined on this can be
'number_of_calls', other UOM can be 'call_duration' etc.Metric name
should be unique across all UOMs in a Dev Org.Metric name can only
contain alphanumeric characters (A-Z, a-z, and 0-9) and underscores
(_). Metric name cannot start with a number and is
case-insensitive.
",
            "generatedName": "UomsCreateRequestMetricName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestName",
          "key": "name",
          "schema": {
            "description": "Human readable name of the Unit of Measurement (UOM).",
            "generatedName": "UomsCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestPartId",
          "key": "part_id",
          "schema": {
            "description": null,
            "generatedName": "uomsCreateRequestPartId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The part ID for which the Unit of Measurement (UOM) is defined.
When defined, ingested metrics data will be associated with part
and product specified in UOM.
",
              "generatedName": "UomsCreateRequestPartId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestProductId",
          "key": "product_id",
          "schema": {
            "description": "The product ID for which the Unit of Measurement (UOM) is defined.
",
            "generatedName": "UomsCreateRequestProductId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateRequestUnit",
          "key": "unit",
          "schema": {
            "description": null,
            "generatedName": "UomsCreateRequestUnit",
            "groupName": null,
            "nameOverride": null,
            "schema": "unit",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "uoms-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsCreateResponseUom",
          "key": "uom",
          "schema": {
            "description": null,
            "generatedName": "UomsCreateResponseUom",
            "groupName": null,
            "nameOverride": null,
            "schema": "uom",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "uoms-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The Unit of Measurement (UOM)'s DON.",
            "generatedName": "UomsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "uoms-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsGetRequestId",
          "key": "id",
          "schema": {
            "description": "The Unit of Measurement (UOM)'s DON.",
            "generatedName": "UomsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "uoms-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsGetResponseUom",
          "key": "uom",
          "schema": {
            "description": null,
            "generatedName": "UomsGetResponseUom",
            "groupName": null,
            "nameOverride": null,
            "schema": "uom",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "uoms-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestAggregationTypes",
          "key": "aggregation_types",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestAggregationTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of aggregation types for filtering list of UOMs.",
              "generatedName": "UomsListRequestAggregationTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestAggregationTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "aggregation-detail-aggregation-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "UomsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestIds",
          "key": "ids",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of Unit of Measurement (UOM) DONs to be used in filtering
complete list of UOMs defined in a Dev Org.
",
              "generatedName": "UomsListRequestIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of UOMs to be returned in a response. The
default is '50'.
",
              "generatedName": "UomsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestMetricNames",
          "key": "metric_names",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestMetricNames",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of metric names for filtering list of UOMs.",
              "generatedName": "UomsListRequestMetricNames",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestMetricNamesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UomsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestPartIds",
          "key": "part_ids",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestPartIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of part IDs for filtering list of UOMs.",
              "generatedName": "UomsListRequestPartIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestPartIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestProductIds",
          "key": "product_ids",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestProductIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of product IDs for filtering list of UOMs.",
              "generatedName": "UomsListRequestProductIds",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestProductIdsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the Unit Of Measuments (UOMs) by and the direction
to sort them.
",
              "generatedName": "UomsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListRequestUnitTypes",
          "key": "unit_types",
          "schema": {
            "description": null,
            "generatedName": "uomsListRequestUnitTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of unit types for filtering list of UOMs.",
              "generatedName": "UomsListRequestUnitTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsListRequestUnitTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "unit-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "uoms-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "uomsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "UomsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "uomsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "UomsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsListResponseUoms",
          "key": "uoms",
          "schema": {
            "description": "The list of Unit of Measurement (UOM) objects.",
            "generatedName": "UomsListResponseUoms",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UomsListResponseUomsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "uom",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "uoms-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestAggregationType",
          "key": "aggregation_type",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestAggregationType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UomsUpdateRequestAggregationType",
              "groupName": null,
              "nameOverride": null,
              "schema": "aggregation-detail-aggregation-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Unit of Measurement (UOM).",
              "generatedName": "UomsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestDimensions",
          "key": "dimensions",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestDimensions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UomsUpdateRequestDimensions",
              "groupName": null,
              "nameOverride": null,
              "schema": "uoms-update-request-dimensions",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The Unit of Measurement (UOM)'s DON.",
            "generatedName": "UomsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestIsEnabled",
          "key": "is_enabled",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestIsEnabled",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Flag used to enable/disable the Unit of Measurement (UOM). When
disabled, any metricsrecords ingested against this UOM will be
dropped.
",
              "generatedName": "UomsUpdateRequestIsEnabled",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human readable name of the Unit of Measurement (UOM).",
              "generatedName": "UomsUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestPartId",
          "key": "part_id",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestPartId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The part ID such as feature or capability for which the Unit of
Measurement (UOM) is defined.
",
              "generatedName": "UomsUpdateRequestPartId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestProductId",
          "key": "product_id",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestProductId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The product ID for which the Unit of Measurement (UOM) is defined.
",
              "generatedName": "UomsUpdateRequestProductId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestUnit",
          "key": "unit",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestUnit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Unit name of the Unit of Measurement (UOM).",
              "generatedName": "UomsUpdateRequestUnit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "uoms-update-request-dimensions": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsUpdateRequestDimensions",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestDimensionsAdd",
          "key": "add",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestDimensionsAdd",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Adds the provided dimensions to the UOM.",
              "generatedName": "UomsUpdateRequestDimensionsAdd",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsUpdateRequestDimensionsAddItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateRequestDimensionsRemove",
          "key": "remove",
          "schema": {
            "description": null,
            "generatedName": "uomsUpdateRequestDimensionsRemove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Removes the provided dimensions from the UOM.",
              "generatedName": "UomsUpdateRequestDimensionsRemove",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UomsUpdateRequestDimensionsRemoveItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "uoms-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UomsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uomsUpdateResponseUom",
          "key": "uom",
          "schema": {
            "description": null,
            "generatedName": "UomsUpdateResponseUom",
            "groupName": null,
            "nameOverride": null,
            "schema": "uom",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "user-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UserBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The user's display name. The name is non-unique and mutable.
",
              "generatedName": "UserBaseDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseDisplayPicture",
          "key": "display_picture",
          "schema": {
            "description": null,
            "generatedName": "userBaseDisplayPicture",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseDisplayPicture",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifact-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "userBaseEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Email address of the user.",
              "generatedName": "UserBaseEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseFullName",
          "key": "full_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseFullName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Full name of the user.",
              "generatedName": "UserBaseFullName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBasePhoneNumbers",
          "key": "phone_numbers",
          "schema": {
            "description": null,
            "generatedName": "userBasePhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Phone numbers of the user.",
              "generatedName": "UserBasePhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UserBasePhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "userBaseState",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseState",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-state",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "user-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UserBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The user's display name. The name is non-unique and mutable.
",
              "generatedName": "UserBaseSummaryDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryDisplayPicture",
          "key": "display_picture",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryDisplayPicture",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseSummaryDisplayPicture",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifact-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Email address of the user.",
              "generatedName": "UserBaseSummaryEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryFullName",
          "key": "full_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryFullName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Full name of the user.",
              "generatedName": "UserBaseSummaryFullName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryState",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseSummaryState",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-state",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "user-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UserSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userSearchSummaryUser",
          "key": "user",
          "schema": {
            "description": null,
            "generatedName": "UserSearchSummaryUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "user-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "user-state": {
      "description": "State of the user.",
      "generatedName": "UserState",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "active",
          "nameOverride": null,
          "value": "active",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "deactivated",
          "nameOverride": null,
          "value": "deactivated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "deleted",
          "nameOverride": null,
          "value": "deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "locked",
          "nameOverride": null,
          "value": "locked",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "shadow",
          "nameOverride": null,
          "value": "shadow",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "unassigned",
          "nameOverride": null,
          "value": "unassigned",
        },
      ],
    },
    "user-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "UserSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "dev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasDevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user-summary",
            "type": "reference",
          },
          "rev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasRevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user-summary",
            "type": "reference",
          },
          "service_account": {
            "description": null,
            "generatedName": "ComponentsSchemasServiceAccountSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "service-account-summary",
            "type": "reference",
          },
          "sys_user": {
            "description": null,
            "generatedName": "ComponentsSchemasSysUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "sys-user-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "user-type": {
      "description": null,
      "generatedName": "UserType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user",
          "nameOverride": null,
          "value": "dev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user",
          "nameOverride": null,
          "value": "rev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "service_account",
          "nameOverride": null,
          "value": "service_account",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "sys_user",
          "nameOverride": null,
          "value": "sys_user",
        },
      ],
    },
    "vista-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "VistaBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "vistaBaseSummaryName",
          "key": "name",
          "schema": {
            "description": "Name of the vista.",
            "generatedName": "VistaBaseSummaryName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "vista-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "VistaSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "vistaSearchSummaryVista",
          "key": "vista",
          "schema": {
            "description": null,
            "generatedName": "VistaSearchSummaryVista",
            "groupName": null,
            "nameOverride": null,
            "schema": "vista-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "vista-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": "Represents a collection of DevRev objects.",
        "discriminantProperty": "type",
        "generatedName": "VistaSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "curated": {
            "description": null,
            "generatedName": "ComponentsSchemasCuratedVistaSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "curated-vista-summary",
            "type": "reference",
          },
          "dynamic": {
            "description": null,
            "generatedName": "ComponentsSchemasDynamicVistaSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "dynamic-vista-summary",
            "type": "reference",
          },
          "grouped": {
            "description": null,
            "generatedName": "ComponentsSchemasGroupedVistaSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "grouped-vista-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "vista-type": {
      "description": "Type of vista object.",
      "generatedName": "VistaType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "curated",
          "nameOverride": null,
          "value": "curated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dynamic",
          "nameOverride": null,
          "value": "dynamic",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "grouped",
          "nameOverride": null,
          "value": "grouped",
        },
      ],
    },
    "webhook": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Webhook",
      "groupName": null,
      "nameOverride": "webhook",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventTypes",
          "key": "event_types",
          "schema": {
            "description": null,
            "generatedName": "webhookEventTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types that the webhook will receive.",
              "generatedName": "WebhookEventTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhookEventTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookSecret",
          "key": "secret",
          "schema": {
            "description": "The secret to use for verifying webhook events.",
            "generatedName": "WebhookSecret",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "WebhookStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook-status",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookUrl",
          "key": "url",
          "schema": {
            "description": "The URL of the webhook endpoint.",
            "generatedName": "WebhookUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhook-event-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhookEventRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestAccountCreated",
          "key": "account_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestAccountCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestAccountCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-account-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestAccountDeleted",
          "key": "account_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestAccountDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestAccountDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-account-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestAccountUpdated",
          "key": "account_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestAccountUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestAccountUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-account-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestConversationCreated",
          "key": "conversation_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestConversationCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestConversationCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-conversation-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestConversationDeleted",
          "key": "conversation_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestConversationDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestConversationDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-conversation-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestConversationUpdated",
          "key": "conversation_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestConversationUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestConversationUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-conversation-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestDevUserCreated",
          "key": "dev_user_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestDevUserCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestDevUserCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-dev-user-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestDevUserDeleted",
          "key": "dev_user_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestDevUserDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestDevUserDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-dev-user-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestDevUserUpdated",
          "key": "dev_user_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestDevUserUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestDevUserUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-dev-user-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestId",
          "key": "id",
          "schema": {
            "description": "The event's ID.",
            "generatedName": "WebhookEventRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestPartCreated",
          "key": "part_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestPartCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestPartCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-part-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestPartDeleted",
          "key": "part_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestPartDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestPartDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-part-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestPartUpdated",
          "key": "part_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestPartUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestPartUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-part-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevOrgCreated",
          "key": "rev_org_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevOrgCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevOrgCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-org-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevOrgDeleted",
          "key": "rev_org_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevOrgDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevOrgDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-org-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevOrgUpdated",
          "key": "rev_org_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevOrgUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevOrgUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-org-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevUserCreated",
          "key": "rev_user_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevUserCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevUserCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-user-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevUserDeleted",
          "key": "rev_user_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevUserDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevUserDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-user-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevUserUpdated",
          "key": "rev_user_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevUserUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevUserUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-user-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestSlaTrackerCreated",
          "key": "sla_tracker_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestSlaTrackerCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestSlaTrackerCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-sla-tracker-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestSlaTrackerDeleted",
          "key": "sla_tracker_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestSlaTrackerDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestSlaTrackerDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-sla-tracker-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestSlaTrackerUpdated",
          "key": "sla_tracker_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestSlaTrackerUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestSlaTrackerUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-sla-tracker-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTagCreated",
          "key": "tag_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTagCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTagCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-tag-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTagDeleted",
          "key": "tag_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTagDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTagDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-tag-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTagUpdated",
          "key": "tag_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTagUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTagUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-tag-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimelineEntryCreated",
          "key": "timeline_entry_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimelineEntryCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTimelineEntryCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-timeline-entry-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimelineEntryDeleted",
          "key": "timeline_entry_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimelineEntryDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTimelineEntryDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-timeline-entry-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimelineEntryUpdated",
          "key": "timeline_entry_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimelineEntryUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTimelineEntryUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-timeline-entry-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimestamp",
          "key": "timestamp",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimestamp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp of the webhook's invocation for the event. Note this
should be used to protect against replay attacks, where the event
should only be processed if the timestamp isn't stale by several
seconds.
",
              "generatedName": "WebhookEventRequestTimestamp",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestType",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhook-event-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestVerify",
          "key": "verify",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestVerify",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestVerify",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhook-event-verify",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookCreated",
          "key": "webhook_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWebhookCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWebhookCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-webhook-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookDeleted",
          "key": "webhook_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWebhookDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWebhookDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-webhook-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookId",
          "key": "webhook_id",
          "schema": {
            "description": "ID of the webhook for the event.",
            "generatedName": "WebhookEventRequestWebhookId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookUpdated",
          "key": "webhook_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWebhookUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWebhookUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-webhook-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWorkCreated",
          "key": "work_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWorkCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWorkCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-work-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWorkDeleted",
          "key": "work_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWorkDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWorkDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-work-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWorkUpdated",
          "key": "work_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWorkUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWorkUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-work-updated",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhook-event-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhookEventResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventResponseChallenge",
          "key": "challenge",
          "schema": {
            "description": null,
            "generatedName": "webhookEventResponseChallenge",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The challenge from the "verify" request, otherwise this should not
be set for other request types.
",
              "generatedName": "WebhookEventResponseChallenge",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhook-event-type": {
      "description": "The event types that the webhook will receive.",
      "generatedName": "WebhookEventType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account_created",
          "nameOverride": null,
          "value": "account_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account_deleted",
          "nameOverride": null,
          "value": "account_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "account_updated",
          "nameOverride": null,
          "value": "account_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation_created",
          "nameOverride": null,
          "value": "conversation_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation_deleted",
          "nameOverride": null,
          "value": "conversation_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "conversation_updated",
          "nameOverride": null,
          "value": "conversation_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user_created",
          "nameOverride": null,
          "value": "dev_user_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user_deleted",
          "nameOverride": null,
          "value": "dev_user_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user_updated",
          "nameOverride": null,
          "value": "dev_user_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "part_created",
          "nameOverride": null,
          "value": "part_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "part_deleted",
          "nameOverride": null,
          "value": "part_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "part_updated",
          "nameOverride": null,
          "value": "part_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org_created",
          "nameOverride": null,
          "value": "rev_org_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org_deleted",
          "nameOverride": null,
          "value": "rev_org_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org_updated",
          "nameOverride": null,
          "value": "rev_org_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user_created",
          "nameOverride": null,
          "value": "rev_user_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user_deleted",
          "nameOverride": null,
          "value": "rev_user_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user_updated",
          "nameOverride": null,
          "value": "rev_user_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag_created",
          "nameOverride": null,
          "value": "tag_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag_deleted",
          "nameOverride": null,
          "value": "tag_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag_updated",
          "nameOverride": null,
          "value": "tag_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_entry_created",
          "nameOverride": null,
          "value": "timeline_entry_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_entry_deleted",
          "nameOverride": null,
          "value": "timeline_entry_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_entry_updated",
          "nameOverride": null,
          "value": "timeline_entry_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "verify",
          "nameOverride": null,
          "value": "verify",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "webhook_created",
          "nameOverride": null,
          "value": "webhook_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "webhook_deleted",
          "nameOverride": null,
          "value": "webhook_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "webhook_updated",
          "nameOverride": null,
          "value": "webhook_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "work_created",
          "nameOverride": null,
          "value": "work_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "work_deleted",
          "nameOverride": null,
          "value": "work_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "work_updated",
          "nameOverride": null,
          "value": "work_updated",
        },
      ],
    },
    "webhook-event-verify": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhookEventVerify",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventVerifyChallenge",
          "key": "challenge",
          "schema": {
            "description": "The challenge that must be echoed in the response.",
            "generatedName": "WebhookEventVerifyChallenge",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhook-status": {
      "description": "The status of the webhook.",
      "generatedName": "WebhookStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "active",
          "nameOverride": null,
          "value": "active",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "inactive",
          "nameOverride": null,
          "value": "inactive",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "unverified",
          "nameOverride": null,
          "value": "unverified",
        },
      ],
    },
    "webhook-summary": {
      "description": null,
      "generatedName": "WebhookSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "webhooks-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to create a new webhook.",
      "generatedName": "WebhooksCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateRequestEventTypes",
          "key": "event_types",
          "schema": {
            "description": null,
            "generatedName": "webhooksCreateRequestEventTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types that the webhook endpoint will receive.",
              "generatedName": "WebhooksCreateRequestEventTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksCreateRequestEventTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateRequestSecret",
          "key": "secret",
          "schema": {
            "description": null,
            "generatedName": "webhooksCreateRequestSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The secret to use when verifying webhook events. If provided, the
secret must be between 8 and 32 bytes (inclusive). If not set, a
secret will be automatically generated and provided in the
response.
",
              "generatedName": "WebhooksCreateRequestSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateRequestUrl",
          "key": "url",
          "schema": {
            "description": "The URL of the webhook endpoint.",
            "generatedName": "WebhooksCreateRequestUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a new webhook.",
      "generatedName": "WebhooksCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateResponseWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "WebhooksCreateResponseWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete a webhook.",
      "generatedName": "WebhooksDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "ID for the webhook.",
            "generatedName": "WebhooksDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-delete-response": {
      "description": "The response to deleting the webhook.",
      "generatedName": "WebhooksDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "WebhooksDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "WebhooksDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "webhooks-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to get a webhook's information.",
      "generatedName": "WebhooksGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksGetRequestId",
          "key": "id",
          "schema": {
            "description": "ID for the webhook.",
            "generatedName": "WebhooksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting the information for the webhook.",
      "generatedName": "WebhooksGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksGetResponseWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "WebhooksGetResponseWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-list-request": {
      "description": "The request to list the webhooks.",
      "generatedName": "WebhooksListRequest",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "WebhooksListRequestKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "WebhooksListRequestValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "webhooks-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the webhooks.",
      "generatedName": "WebhooksListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksListResponseWebhooks",
          "key": "webhooks",
          "schema": {
            "description": "The list of webhooks.",
            "generatedName": "WebhooksListResponseWebhooks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WebhooksListResponseWebhooksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhook",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhooks-update-action": {
      "description": "The action to update the webhook's status.",
      "generatedName": "WebhooksUpdateAction",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "activate",
          "nameOverride": null,
          "value": "activate",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "deactivate",
          "nameOverride": null,
          "value": "deactivate",
        },
      ],
    },
    "webhooks-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to update a webhook.",
      "generatedName": "WebhooksUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestAction",
          "key": "action",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestAction",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhooksUpdateRequestAction",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhooks-update-action",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypes",
          "key": "event_types",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhooksUpdateRequestEventTypes",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhooks-update-request-event-types",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "ID for the webhook.",
            "generatedName": "WebhooksUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestSecret",
          "key": "secret",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "If provided, updates the secret that's used when verifying webhook
events, which must be between 8 and 32 bytes (inclusive). Otherwise
if empty, then a new secret is generated. If the webhook is active,
then its status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
              "generatedName": "WebhooksUpdateRequestSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestUrl",
          "key": "url",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The webhook's updated URL. If the webhook is active, then the
webhook's status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
              "generatedName": "WebhooksUpdateRequestUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhooks-update-request-event-types": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhooksUpdateRequestEventTypes",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypesAdd",
          "key": "add",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypesAdd",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types to add. If a provided event type is already set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
              "generatedName": "WebhooksUpdateRequestEventTypesAdd",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksUpdateRequestEventTypesAddItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypesRemove",
          "key": "remove",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypesRemove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types to remove. If a provided event type isn't set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
              "generatedName": "WebhooksUpdateRequestEventTypesRemove",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksUpdateRequestEventTypesRemoveItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypesSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypesSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated event types, which will replace the webhook's current
event types. Note this is mutually exclusive with 'add' and
'remove'.
",
              "generatedName": "WebhooksUpdateRequestEventTypesSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksUpdateRequestEventTypesSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "webhooks-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to updating the webhook.",
      "generatedName": "WebhooksUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateResponseWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "WebhooksUpdateResponseWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "weekly-org-schedule": {
      "description": "The schedule for each week.",
      "generatedName": "WeeklyOrgSchedule",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "WeeklyOrgScheduleKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "WeeklyOrgScheduleValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "work": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "Work",
        "groupName": null,
        "nameOverride": "work",
        "schemas": {
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasIssue",
            "groupName": null,
            "nameOverride": null,
            "schema": "issue",
            "type": "reference",
          },
          "opportunity": {
            "description": null,
            "generatedName": "ComponentsSchemasOpportunity",
            "groupName": null,
            "nameOverride": null,
            "schema": "opportunity",
            "type": "reference",
          },
          "task": {
            "description": null,
            "generatedName": "ComponentsSchemasTask",
            "groupName": null,
            "nameOverride": null,
            "schema": "task",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasTicket",
            "groupName": null,
            "nameOverride": null,
            "schema": "ticket",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "work-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseAppliesToPart",
          "key": "applies_to_part",
          "schema": {
            "description": null,
            "generatedName": "workBaseAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkBaseAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "schema": "part-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "workBaseArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifacts attached to the work item.",
              "generatedName": "WorkBaseArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorkBaseArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "workBaseBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Body of the work object.",
              "generatedName": "WorkBaseBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "workBaseCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom fields.",
              "generatedName": "WorkBaseCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorkBaseCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "WorkBaseCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseCustomSchemaFragments",
          "key": "custom_schema_fragments",
          "schema": {
            "description": null,
            "generatedName": "workBaseCustomSchemaFragments",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Custom schema fragments.",
              "generatedName": "WorkBaseCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorkBaseCustomSchemaFragmentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": "The users that own the work.",
            "generatedName": "WorkBaseOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorkBaseOwnedByItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseReportedBy",
          "key": "reported_by",
          "schema": {
            "description": null,
            "generatedName": "workBaseReportedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Users that reported the work.",
              "generatedName": "WorkBaseReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorkBaseReportedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "user-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "workBaseStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkBaseStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "legacy-stage",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseStockSchemaFragment",
          "key": "stock_schema_fragment",
          "schema": {
            "description": null,
            "generatedName": "workBaseStockSchemaFragment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Stock schema fragment.",
              "generatedName": "WorkBaseStockSchemaFragment",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "workBaseSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Subtype corresponding to the custom type fragment.",
              "generatedName": "WorkBaseSubtype",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "workBaseTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the object.",
              "generatedName": "WorkBaseTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorkBaseTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "workBaseTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the work is expected to be complete.",
              "generatedName": "WorkBaseTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseTitle",
          "key": "title",
          "schema": {
            "description": "Title of the work object.",
            "generatedName": "WorkBaseTitle",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "work-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseSummaryOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": "The users that own the work.",
            "generatedName": "WorkBaseSummaryOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorkBaseSummaryOwnedByItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseSummaryStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "workBaseSummaryStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkBaseSummaryStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "legacy-stage-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseSummaryTitle",
          "key": "title",
          "schema": {
            "description": "Title of the work object.",
            "generatedName": "WorkBaseSummaryTitle",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "work-search-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "SearchSummaryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "search-summary-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkSearchSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workSearchSummaryWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "WorkSearchSummaryWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work-summary",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "work-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorkSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasIssueSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "issue-summary",
            "type": "reference",
          },
          "opportunity": {
            "description": null,
            "generatedName": "ComponentsSchemasOpportunitySummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "opportunity-summary",
            "type": "reference",
          },
          "task": {
            "description": null,
            "generatedName": "ComponentsSchemasTaskSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "task-summary",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasTicketSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "ticket-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "work-type": {
      "description": null,
      "generatedName": "WorkType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "issue",
          "nameOverride": null,
          "value": "issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "opportunity",
          "nameOverride": null,
          "value": "opportunity",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "task",
          "nameOverride": null,
          "value": "task",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
      ],
    },
    "works-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "applies_to_part",
            "schema": {
              "description": "The [part](https://devrev.ai/docs/product/parts) that the work
applies to. Specifying a part is required when creating tickets and
issues.
",
              "generatedName": "WorksCreateRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "artifacts",
            "schema": {
              "description": "The IDs of the artifacts to associate with the work item.
",
              "generatedName": "WorksCreateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The IDs of the artifacts to associate with the work item.
",
                "generatedName": "WorksCreateRequestArtifacts",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksCreateRequestArtifactsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "body",
            "schema": {
              "description": "Body of the work object.",
              "generatedName": "WorksCreateRequestBody",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Body of the work object.",
                "generatedName": "WorksCreateRequestBody",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "custom_fields",
            "schema": {
              "description": "Custom fields.",
              "generatedName": "WorksCreateRequestCustomFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Custom fields.",
                "generatedName": "WorksCreateRequestCustomFields",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "WorksCreateRequestCustomFieldsKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "WorksCreateRequestCustomFieldsValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
          {
            "key": "custom_schema_fragments",
            "schema": {
              "description": "The custom schema fragments to use.",
              "generatedName": "WorksCreateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The custom schema fragments to use.",
                "generatedName": "WorksCreateRequestCustomSchemaFragments",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksCreateRequestCustomSchemaFragmentsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "custom_schema_spec",
            "schema": {
              "description": null,
              "generatedName": "WorksCreateRequestCustomSchemaSpec",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestCustomSchemaSpec",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-schema-spec",
                "type": "reference",
              },
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": "The users that own the work.",
              "generatedName": "WorksCreateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "reported_by",
            "schema": {
              "description": "The users that reported the work.",
              "generatedName": "WorksCreateRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The users that reported the work.",
                "generatedName": "WorksCreateRequestReportedBy",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksCreateRequestReportedByItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "stage",
            "schema": {
              "description": null,
              "generatedName": "WorksCreateRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestStage",
                "groupName": null,
                "nameOverride": null,
                "schema": "stage-init",
                "type": "reference",
              },
            },
          },
          {
            "key": "tags",
            "schema": {
              "description": "Tags associated with the work item.",
              "generatedName": "WorksCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Tags associated with the work item.",
                "generatedName": "WorksCreateRequestTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksCreateRequestTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "set-tag-with-value",
                  "type": "reference",
                },
              },
            },
          },
          {
            "key": "target_close_date",
            "schema": {
              "description": "Timestamp for when the work is expected to be complete.",
              "generatedName": "WorksCreateRequestTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Timestamp for when the work is expected to be complete.",
                "generatedName": "WorksCreateRequestTargetCloseDate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "title",
            "schema": {
              "description": "Title of the work object.",
              "generatedName": "WorksCreateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorksCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksCreateRequestIssue",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-create-request-issue",
            "type": "reference",
          },
          "opportunity": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksCreateRequestOpportunity",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-create-request-opportunity",
            "type": "reference",
          },
          "task": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksCreateRequestTask",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-create-request-task",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksCreateRequestTicket",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-create-request-ticket",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "works-create-request-issue": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateRequestIssue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestIssueDevelopedWith",
          "key": "developed_with",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestIssueDevelopedWith",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the parts associated with issue.",
              "generatedName": "WorksCreateRequestIssueDevelopedWith",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestIssueDevelopedWithItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestIssuePriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksCreateRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "issue-priority",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestIssuePriorityV2",
          "key": "priority_v2",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestIssuePriorityV2",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Priority enum id of the work based upon impact and criticality.
",
              "generatedName": "WorksCreateRequestIssuePriorityV2",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestIssueSprint",
          "key": "sprint",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestIssueSprint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The sprint that the issue belongs to.",
              "generatedName": "WorksCreateRequestIssueSprint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-create-request-opportunity": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateRequestOpportunity",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestOpportunityAccount",
          "key": "account",
          "schema": {
            "description": "The ID of the account that the opportunity is associated with.
",
            "generatedName": "WorksCreateRequestOpportunityAccount",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestOpportunityAmount",
          "key": "amount",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestOpportunityAmount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Total opportunity amount.",
              "generatedName": "WorksCreateRequestOpportunityAmount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestOpportunityContacts",
          "key": "contacts",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestOpportunityContacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Contacts involved in the opportunity.",
              "generatedName": "WorksCreateRequestOpportunityContacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestOpportunityContactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestOpportunityCustomerBudget",
          "key": "customer_budget",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestOpportunityCustomerBudget",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Budget of the customer.",
              "generatedName": "WorksCreateRequestOpportunityCustomerBudget",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestOpportunityForecastCategory",
          "key": "forecast_category",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestOpportunityForecastCategory",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksCreateRequestOpportunityForecastCategory",
              "groupName": null,
              "nameOverride": null,
              "schema": "opportunity-forecast-category",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestOpportunityPriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestOpportunityPriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksCreateRequestOpportunityPriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "opportunity-priority",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestOpportunityProbability",
          "key": "probability",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestOpportunityProbability",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The probability of winning the deal, lies between 0.0 and 1.0.
",
              "generatedName": "WorksCreateRequestOpportunityProbability",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-create-request-task": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateRequestTask",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTaskEmbedded",
          "key": "embedded",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTaskEmbedded",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the task is embedded in the work.",
              "generatedName": "WorksCreateRequestTaskEmbedded",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTaskPriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTaskPriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksCreateRequestTaskPriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "task-priority",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTaskStartDate",
          "key": "start_date",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTaskStartDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the task was started.",
              "generatedName": "WorksCreateRequestTaskStartDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-create-request-ticket": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateRequestTicket",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketChannels",
          "key": "channels",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Channels of the ticket.",
              "generatedName": "WorksCreateRequestTicketChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestTicketChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-channels",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The group that the ticket is associated with.",
              "generatedName": "WorksCreateRequestTicketGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketIsSpam",
          "key": "is_spam",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the ticket is spam.",
              "generatedName": "WorksCreateRequestTicketIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The Rev organization that the ticket is associated with.",
              "generatedName": "WorksCreateRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksCreateRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "schema": "ticket-severity",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketSourceChannel",
          "key": "source_channel",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketSourceChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The source channel of the ticket.",
              "generatedName": "WorksCreateRequestTicketSourceChannel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateResponseWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "WorksCreateResponseWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "works-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The work's ID.",
            "generatedName": "WorksDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "works-delete-response": {
      "description": null,
      "generatedName": "WorksDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "WorksDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "WorksDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "works-export-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksExportRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestActualCloseDate",
          "key": "actual_close_date",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestActualCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestActualCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestAppliesToPart",
          "key": "applies_to_part",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work belonging to any of the provided parts.",
              "generatedName": "WorksExportRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestAppliesToPartItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work created by any of these users.",
              "generatedName": "WorksExportRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom fields.",
              "generatedName": "WorksExportRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorksExportRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "WorksExportRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestFirst",
          "key": "first",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestFirst",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of work items to return. The default is '50', the
maximum is '5000'.
",
              "generatedName": "WorksExportRequestFirst",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestIssue",
          "key": "issue",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestIssue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssue",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-filter-issue",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestOpportunity",
          "key": "opportunity",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestOpportunity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestOpportunity",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-filter-opportunity",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work owned by any of these users.",
              "generatedName": "WorksExportRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestReportedBy",
          "key": "reported_by",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestReportedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work reported by any of these users.",
              "generatedName": "WorksExportRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestReportedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the work items by and the direction to sort them.
",
              "generatedName": "WorksExportRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestStagedInfo",
          "key": "staged_info",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestStagedInfo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestStagedInfo",
              "groupName": null,
              "nameOverride": null,
              "schema": "staged-info-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestSyncMetadata",
          "key": "sync_metadata",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestSyncMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestSyncMetadata",
              "groupName": null,
              "nameOverride": null,
              "schema": "sync-metadata-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work with any of the provided tags.",
              "generatedName": "WorksExportRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestTicket",
          "key": "ticket",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestTicket",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicket",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-filter-ticket",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "worksExportRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work of the provided types.",
              "generatedName": "WorksExportRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "work-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-export-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksExportResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportResponseWorks",
          "key": "works",
          "schema": {
            "description": "The resulting collection of work items.",
            "generatedName": "WorksExportResponseWorks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorksExportResponseWorksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "work",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-filter-issue": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksFilterIssue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterIssueAccounts",
          "key": "accounts",
          "schema": {
            "description": null,
            "generatedName": "worksFilterIssueAccounts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for issues with any of the provided Accounts.",
              "generatedName": "WorksFilterIssueAccounts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterIssueAccountsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterIssuePriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksFilterIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for issues with any of the provided priorities.",
              "generatedName": "WorksFilterIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterIssuePriorityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "issue-priority",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterIssuePriorityV2",
          "key": "priority_v2",
          "schema": {
            "description": null,
            "generatedName": "worksFilterIssuePriorityV2",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for issues with any of the provided priority enum ids.
",
              "generatedName": "WorksFilterIssuePriorityV2",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterIssuePriorityV2Item",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterIssueRevOrgs",
          "key": "rev_orgs",
          "schema": {
            "description": null,
            "generatedName": "worksFilterIssueRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for issues with any of the provided Rev organizations.
",
              "generatedName": "WorksFilterIssueRevOrgs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterIssueRevOrgsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterIssueSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "worksFilterIssueSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for issues with any of the provided subtypes.",
              "generatedName": "WorksFilterIssueSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterIssueSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-filter-opportunity": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksFilterOpportunity",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterOpportunityAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "worksFilterOpportunityAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for opportunities belonging to any of the provided
accounts.
",
              "generatedName": "WorksFilterOpportunityAccount",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterOpportunityAccountItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterOpportunityContacts",
          "key": "contacts",
          "schema": {
            "description": null,
            "generatedName": "worksFilterOpportunityContacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for opportunities with any of the provided contacts.
",
              "generatedName": "WorksFilterOpportunityContacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterOpportunityContactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterOpportunitySubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "worksFilterOpportunitySubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for opportunity with any of the provided subtypes.
",
              "generatedName": "WorksFilterOpportunitySubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterOpportunitySubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-filter-ticket": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksFilterTicket",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketChannels",
          "key": "channels",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets with any of the provided channels.",
              "generatedName": "WorksFilterTicketChannels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterTicketChannelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-channels",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets belonging to specific groups.",
              "generatedName": "WorksFilterTicketGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterTicketGroupItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketIsSpam",
          "key": "is_spam",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets that are spam.",
              "generatedName": "WorksFilterTicketIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketNeedsResponse",
          "key": "needs_response",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketNeedsResponse",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets that need response.",
              "generatedName": "WorksFilterTicketNeedsResponse",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets that are associated with any of the provided
Rev organizations.
",
              "generatedName": "WorksFilterTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterTicketRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets with any of the provided severities.",
              "generatedName": "WorksFilterTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterTicketSeverityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-severity",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketSlaSummary",
          "key": "sla_summary",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketSlaSummary",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksFilterTicketSlaSummary",
              "groupName": null,
              "nameOverride": null,
              "schema": "sla-summary-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketSourceChannel",
          "key": "source_channel",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketSourceChannel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets with any of the provided source channels.
",
              "generatedName": "WorksFilterTicketSourceChannel",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterTicketSourceChannelItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketSubtype",
          "key": "subtype",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketSubtype",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for tickets with any of the provided subtypes.",
              "generatedName": "WorksFilterTicketSubtype",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksFilterTicketSubtypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksFilterTicketSurveys",
          "key": "surveys",
          "schema": {
            "description": null,
            "generatedName": "worksFilterTicketSurveys",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksFilterTicketSurveys",
              "groupName": null,
              "nameOverride": null,
              "schema": "survey-aggregation-filter",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-get-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksGetRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksGetRequestId",
          "key": "id",
          "schema": {
            "description": "The work's ID.",
            "generatedName": "WorksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "works-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksGetResponseWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "WorksGetResponseWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "works-list-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksListRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestActualCloseDate",
          "key": "actual_close_date",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestActualCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestActualCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestAppliesToPart",
          "key": "applies_to_part",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work belonging to any of the provided parts.",
              "generatedName": "WorksListRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestAppliesToPartItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work created by any of these users.",
              "generatedName": "WorksListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestCursor",
          "key": "cursor",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor to resume iteration from. If not provided, then
iteration starts from the beginning.
",
              "generatedName": "WorksListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestCustomFields",
          "key": "custom_fields",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestCustomFields",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for custom fields.",
              "generatedName": "WorksListRequestCustomFields",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorksListRequestCustomFieldsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "WorksListRequestCustomFieldsValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestIssue",
          "key": "issue",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestIssue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssue",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-filter-issue",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of works to return. The default is '50'.
",
              "generatedName": "WorksListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestMode",
          "key": "mode",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestOpportunity",
          "key": "opportunity",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestOpportunity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestOpportunity",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-filter-opportunity",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work owned by any of these users.",
              "generatedName": "WorksListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestReportedBy",
          "key": "reported_by",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestReportedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work reported by any of these users.",
              "generatedName": "WorksListRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestReportedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestSortBy",
          "key": "sort_by",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Fields to sort the works by and the direction to sort them.
",
              "generatedName": "WorksListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestStagedInfo",
          "key": "staged_info",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestStagedInfo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestStagedInfo",
              "groupName": null,
              "nameOverride": null,
              "schema": "staged-info-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestSyncMetadata",
          "key": "sync_metadata",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestSyncMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestSyncMetadata",
              "groupName": null,
              "nameOverride": null,
              "schema": "sync-metadata-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work with any of the provided tags.",
              "generatedName": "WorksListRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": "date-filter",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestTicket",
          "key": "ticket",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestTicket",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicket",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-filter-ticket",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "worksListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Filters for work of the provided types.",
              "generatedName": "WorksListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "work-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "worksListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "WorksListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "worksListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "WorksListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListResponseWorks",
          "key": "works",
          "schema": {
            "description": "The list of works.",
            "generatedName": "WorksListResponseWorks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorksListResponseWorksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "work",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "applies_to_part",
            "schema": {
              "description": "Updates the part that the work item applies to.",
              "generatedName": "WorksUpdateRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the part that the work item applies to.",
                "generatedName": "WorksUpdateRequestAppliesToPart",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "artifacts",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestArtifacts",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-artifact-ids",
                "type": "reference",
              },
            },
          },
          {
            "key": "body",
            "schema": {
              "description": "Updated body of the work object, or unchanged if not provided.
",
              "generatedName": "WorksUpdateRequestBody",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updated body of the work object, or unchanged if not provided.
",
                "generatedName": "WorksUpdateRequestBody",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "custom_fields",
            "schema": {
              "description": "Custom fields.",
              "generatedName": "WorksUpdateRequestCustomFields",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Custom fields.",
                "generatedName": "WorksUpdateRequestCustomFields",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "WorksUpdateRequestCustomFieldsKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "WorksUpdateRequestCustomFieldsValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
          {
            "key": "custom_schema_fragments",
            "schema": {
              "description": "The custom schema fragments to use.",
              "generatedName": "WorksUpdateRequestCustomSchemaFragments",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The custom schema fragments to use.",
                "generatedName": "WorksUpdateRequestCustomSchemaFragments",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksUpdateRequestCustomSchemaFragmentsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "custom_schema_spec",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestCustomSchemaSpec",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestCustomSchemaSpec",
                "groupName": null,
                "nameOverride": null,
                "schema": "custom-schema-spec",
                "type": "reference",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "The work's ID.",
              "generatedName": "WorksUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestOwnedBy",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-owned-by",
                "type": "reference",
              },
            },
          },
          {
            "key": "reported_by",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestReportedBy",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-reported-by",
                "type": "reference",
              },
            },
          },
          {
            "key": "stage",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestStage",
                "groupName": null,
                "nameOverride": null,
                "schema": "stage-update",
                "type": "reference",
              },
            },
          },
          {
            "key": "staged_info",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestStagedInfo",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestStagedInfo",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-staged-info-staged-info-update",
                "type": "reference",
              },
            },
          },
          {
            "key": "tags",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestTags",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-tags",
                "type": "reference",
              },
            },
          },
          {
            "key": "target_close_date",
            "schema": {
              "description": "Updates the timestamp for when the work is expected to be complete.
",
              "generatedName": "WorksUpdateRequestTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the timestamp for when the work is expected to be complete.
",
                "generatedName": "WorksUpdateRequestTargetCloseDate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "title",
            "schema": {
              "description": "Updated title of the work object, or unchanged if not provided.
",
              "generatedName": "WorksUpdateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updated title of the work object, or unchanged if not provided.
",
                "generatedName": "WorksUpdateRequestTitle",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorksUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksUpdateRequestIssue",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-update-request-issue",
            "type": "reference",
          },
          "none": {
            "description": null,
            "generatedName": "ComponentsSchemasEmpty",
            "groupName": null,
            "nameOverride": null,
            "schema": "empty",
            "type": "reference",
          },
          "opportunity": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksUpdateRequestOpportunity",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-update-request-opportunity",
            "type": "reference",
          },
          "task": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksUpdateRequestTask",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-update-request-task",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksUpdateRequestTicket",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-update-request-ticket",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "works-update-request-artifact-ids": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestArtifactIds",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestArtifactIdsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestArtifactIdsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs to the provided artifact IDs.",
              "generatedName": "WorksUpdateRequestArtifactIdsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestArtifactIdsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-issue": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestIssue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestIssueDevelopedWith",
          "key": "developed_with",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestIssueDevelopedWith",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestIssueDevelopedWith",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-update-request-issue-developed-with",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestIssuePriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "issue-priority",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestIssuePriorityV2",
          "key": "priority_v2",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestIssuePriorityV2",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Priority enum id of the work based upon impact and criticality.
",
              "generatedName": "WorksUpdateRequestIssuePriorityV2",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestIssueSprint",
          "key": "sprint",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestIssueSprint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the sprint that the issue belongs to.",
              "generatedName": "WorksUpdateRequestIssueSprint",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the sprint that the issue belongs to.",
                "generatedName": "WorksUpdateRequestIssueSprint",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-issue-developed-with": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestIssueDevelopedWith",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestIssueDevelopedWithSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestIssueDevelopedWithSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs of the parts associated with issue.",
              "generatedName": "WorksUpdateRequestIssueDevelopedWithSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestIssueDevelopedWithSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-opportunity": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestOpportunity",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOpportunityAccount",
          "key": "account",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestOpportunityAccount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the account that the opportunity is associated with.
",
              "generatedName": "WorksUpdateRequestOpportunityAccount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOpportunityAmount",
          "key": "amount",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestOpportunityAmount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the total opportunity amount.",
              "generatedName": "WorksUpdateRequestOpportunityAmount",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the total opportunity amount.",
                "generatedName": "WorksUpdateRequestOpportunityAmount",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOpportunityContacts",
          "key": "contacts",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestOpportunityContacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestOpportunityContacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-update-request-opportunity-contacts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOpportunityCustomerBudget",
          "key": "customer_budget",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestOpportunityCustomerBudget",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the customer budget.",
              "generatedName": "WorksUpdateRequestOpportunityCustomerBudget",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the customer budget.",
                "generatedName": "WorksUpdateRequestOpportunityCustomerBudget",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOpportunityProbability",
          "key": "probability",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestOpportunityProbability",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the probability of winning the deal, lies between 0.0 and
1.0.
",
              "generatedName": "WorksUpdateRequestOpportunityProbability",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the probability of winning the deal, lies between 0.0 and
1.0.
",
                "generatedName": "WorksUpdateRequestOpportunityProbability",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-opportunity-contacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestOpportunityContacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOpportunityContactsSet",
          "key": "set",
          "schema": {
            "description": "Sets the contact IDs to the provided contact IDs.",
            "generatedName": "WorksUpdateRequestOpportunityContactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestOpportunityContactsSetItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-owned-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestOwnedBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOwnedBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestOwnedBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
              "generatedName": "WorksUpdateRequestOwnedBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestOwnedBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-reported-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestReportedBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestReportedBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestReportedBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the users that reported the work to the provided user IDs.
",
              "generatedName": "WorksUpdateRequestReportedBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestReportedBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-staged-info-staged-info-update": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestStagedInfoStagedInfoUpdate",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestStagedInfoStagedInfoUpdateUnresolvedFields",
          "key": "unresolved_fields",
          "schema": {
            "description": "Updates the unresolved fields of the staged work.",
            "generatedName": "WorksUpdateRequestStagedInfoStagedInfoUpdateUnresolvedFields",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestStagedInfoStagedInfoUpdateUnresolvedFieldsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-tags": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestTags",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTagsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTagsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the provided tags on the work item.",
              "generatedName": "WorksUpdateRequestTagsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestTagsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-task": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestTask",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTaskEmbedded",
          "key": "embedded",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTaskEmbedded",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Whether the task is embedded in the work.",
              "generatedName": "WorksUpdateRequestTaskEmbedded",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTaskPriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTaskPriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestTaskPriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "task-priority",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTaskStartDate",
          "key": "start_date",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTaskStartDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the task was started.",
              "generatedName": "WorksUpdateRequestTaskStartDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-ticket": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestTicket",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketChannels",
          "key": "channels",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketChannels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestTicketChannels",
              "groupName": null,
              "nameOverride": null,
              "schema": "works-update-request-ticket-channels",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the group that the ticket is associated with.",
              "generatedName": "WorksUpdateRequestTicketGroup",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the group that the ticket is associated with.",
                "generatedName": "WorksUpdateRequestTicketGroup",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketIsSpam",
          "key": "is_spam",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketIsSpam",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates whether the ticket is spam.",
              "generatedName": "WorksUpdateRequestTicketIsSpam",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the Rev organization that the ticket is associated with.
",
              "generatedName": "WorksUpdateRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the Rev organization that the ticket is associated with.
",
                "generatedName": "WorksUpdateRequestTicketRevOrg",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "schema": "ticket-severity",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-ticket-channels": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestTicketChannels",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketChannelsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketChannelsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the channels to the provided channels.",
              "generatedName": "WorksUpdateRequestTicketChannelsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestTicketChannelsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-channels",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateResponseWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "WorksUpdateResponseWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
  },
  "securitySchemes": {
    "auth-token": {
      "headerEnvVar": null,
      "headerName": "Authorization",
      "headerVariableName": null,
      "prefix": null,
      "type": "header",
    },
  },
  "servers": [
    {
      "description": "DevRev API endpoint.",
      "name": null,
      "url": "https://api.devrev.ai",
    },
  ],
  "tags": {
    "orderedTagIds": [
      "accounts",
      "articles",
      "artifacts",
      "auth-connection",
      "auth-tokens",
      "conversations",
      "customization",
      "dev-orgs",
      "dev-users",
      "engagements",
      "event-source",
      "groups",
      "links",
      "parts",
      "product-usage",
      "rev-orgs",
      "rev-users",
      "schedules",
      "search",
      "service-accounts",
      "slas",
      "snap-ins",
      "snap-widgets",
      "sys-users",
      "tags",
      "timeline-entries",
      "webhooks",
      "works",
    ],
    "tagsById": {
      "accounts": {
        "description": "Accounts management APIs",
        "id": "accounts",
      },
      "articles": {
        "description": "Articles management APIs.",
        "id": "articles",
      },
      "artifacts": {
        "description": "Artifact (file) management APIs.",
        "id": "artifacts",
      },
      "auth-connection": {
        "description": "Auth Connections of DevOrg.",
        "id": "auth-connection",
      },
      "auth-tokens": {
        "description": "Security token interactions.",
        "id": "auth-tokens",
      },
      "conversations": {
        "description": "DevRev conversation interaction.",
        "id": "conversations",
      },
      "customization": {
        "description": "DevRev customization.",
        "id": "customization",
      },
      "dev-orgs": {
        "description": "Dev organization interactions.",
        "id": "dev-orgs",
      },
      "dev-users": {
        "description": "Dev user interactions.",
        "id": "dev-users",
      },
      "engagements": {
        "description": "DevRev engagements.",
        "id": "engagements",
      },
      "event-source": {
        "description": "Event source interactions.",
        "id": "event-source",
      },
      "groups": {
        "description": "Manages groups in a Dev organization.",
        "id": "groups",
      },
      "links": {
        "description": "DevRev link interactions.",
        "id": "links",
      },
      "parts": {
        "description": "DevRev part interactions.",
        "id": "parts",
      },
      "product-usage": {
        "description": "Product Usage APIs",
        "id": "product-usage",
      },
      "rev-orgs": {
        "description": "Rev organization interactions.",
        "id": "rev-orgs",
      },
      "rev-users": {
        "description": "Rev user interactions.",
        "id": "rev-users",
      },
      "schedules": {
        "description": "Management APIs for availability schedules.",
        "id": "schedules",
      },
      "search": {
        "description": "DevRev search.",
        "id": "search",
      },
      "service-accounts": {
        "description": "Service account interactions",
        "id": "service-accounts",
      },
      "slas": {
        "description": "Management APIs for Service Level Agreements.",
        "id": "slas",
      },
      "snap-ins": {
        "description": "DevRev snap-ins interactions.",
        "id": "snap-ins",
      },
      "snap-widgets": {
        "description": "SnapWidget APIs",
        "id": "snap-widgets",
      },
      "sys-users": {
        "description": "System user interactions",
        "id": "sys-users",
      },
      "tags": {
        "description": "DevRev tag interactions.",
        "id": "tags",
      },
      "timeline-entries": {
        "description": "APIs to manage timeline entries for objects.",
        "id": "timeline-entries",
      },
      "webhooks": {
        "description": "Webhook event APIs.",
        "id": "webhooks",
      },
      "works": {
        "description": "DevRev work interactions.",
        "id": "works",
      },
    },
  },
  "title": "DevRev REST API",
  "variables": {},
  "webhooks": [],
}
`;

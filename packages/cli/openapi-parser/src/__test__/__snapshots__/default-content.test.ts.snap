// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser default-content parse open api 1`] = `
{
  "basePath": null,
  "channel": [],
  "description": "The Gemini API allows developers to build generative AI applications using Gemini models. Gemini is our most capable model, built from the ground up to be multimodal. It can generalize and seamlessly understand, operate across, and combine different types of information including language, images, audio, video, and code. You can use the Gemini API for use cases like reasoning across text and images, content generation, dialogue agents, summarization and classification systems, and more.",
  "endpoints": [
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Generates a response from the model given an input
\`GenerateContentRequest\`.

Input capabilities differ between models, including tuned models. See the
[model guide](https://ai.google.dev/models/gemini) and
[tuning guide](https://ai.google.dev/docs/model_tuning_guidance) for
details.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "model",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "contents": {
                "type": "array",
                "value": [
                  {
                    "properties": {},
                    "type": "object",
                  },
                ],
              },
              "model": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "candidates": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "finishReason": {
                        "type": "enum",
                        "value": "FINISH_REASON_UNSPECIFIED",
                      },
                      "index": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "safetyRatings": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "category": {
                                "type": "enum",
                                "value": "HARM_CATEGORY_UNSPECIFIED",
                              },
                              "probability": {
                                "type": "enum",
                                "value": "HARM_PROBABILITY_UNSPECIFIED",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "tokenCount": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "promptFeedback": {
                "properties": {
                  "blockReason": {
                    "type": "enum",
                    "value": "BLOCK_REASON_UNSPECIFIED",
                  },
                  "safetyRatings": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "category": {
                            "type": "enum",
                            "value": "HARM_CATEGORY_UNSPECIFIED",
                          },
                          "probability": {
                            "type": "enum",
                            "value": "HARM_PROBABILITY_UNSPECIFIED",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
              "usageMetadata": {
                "properties": {
                  "candidatesTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "promptTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "totalTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "GenerateContentRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "POST",
      "operationId": "GenerateContent",
      "pagination": null,
      "path": "/v1/models/{model}:generateContent",
      "pathParameters": [
        {
          "description": null,
          "name": "model",
          "schema": {
            "description": null,
            "generatedName": "GenerateContentRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": {
        "additionalProperties": false,
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateContentRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateContentRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateContentResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Generates a response from the model given an input
\`GenerateContentRequest\`.

Input capabilities differ between models, including tuned models. See the
[model guide](https://ai.google.dev/models/gemini) and
[tuning guide](https://ai.google.dev/docs/model_tuning_guidance) for
details.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "tunedModel",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "tunedModel",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "contents": {
                "type": "array",
                "value": [
                  {
                    "properties": {},
                    "type": "object",
                  },
                ],
              },
              "model": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "candidates": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "finishReason": {
                        "type": "enum",
                        "value": "FINISH_REASON_UNSPECIFIED",
                      },
                      "index": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "safetyRatings": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "category": {
                                "type": "enum",
                                "value": "HARM_CATEGORY_UNSPECIFIED",
                              },
                              "probability": {
                                "type": "enum",
                                "value": "HARM_PROBABILITY_UNSPECIFIED",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "tokenCount": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "promptFeedback": {
                "properties": {
                  "blockReason": {
                    "type": "enum",
                    "value": "BLOCK_REASON_UNSPECIFIED",
                  },
                  "safetyRatings": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "category": {
                            "type": "enum",
                            "value": "HARM_CATEGORY_UNSPECIFIED",
                          },
                          "probability": {
                            "type": "enum",
                            "value": "HARM_PROBABILITY_UNSPECIFIED",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
              "usageMetadata": {
                "properties": {
                  "candidatesTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "promptTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "totalTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "GenerateContentByTunedModelRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "POST",
      "operationId": "GenerateContentByTunedModel",
      "pagination": null,
      "path": "/v1/tunedModels/{tunedModel}:generateContent",
      "pathParameters": [
        {
          "description": null,
          "name": "tunedModel",
          "schema": {
            "description": null,
            "generatedName": "GenerateContentByTunedModelRequestTunedModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentByTunedModelRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentByTunedModelRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentByTunedModelRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentByTunedModelRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentByTunedModelRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentByTunedModelRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GenerateContentByTunedModelRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GenerateContentByTunedModelRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": {
        "additionalProperties": false,
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateContentByTunedModelRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateContentRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateContentByTunedModelResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateContentResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Generates a streamed response from the model given an input
\`GenerateContentRequest\`.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "model",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "contents": {
                "type": "array",
                "value": [
                  {
                    "properties": {},
                    "type": "object",
                  },
                ],
              },
              "model": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "candidates": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "finishReason": {
                        "type": "enum",
                        "value": "FINISH_REASON_UNSPECIFIED",
                      },
                      "index": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "safetyRatings": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "category": {
                                "type": "enum",
                                "value": "HARM_CATEGORY_UNSPECIFIED",
                              },
                              "probability": {
                                "type": "enum",
                                "value": "HARM_PROBABILITY_UNSPECIFIED",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "tokenCount": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "promptFeedback": {
                "properties": {
                  "blockReason": {
                    "type": "enum",
                    "value": "BLOCK_REASON_UNSPECIFIED",
                  },
                  "safetyRatings": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "category": {
                            "type": "enum",
                            "value": "HARM_CATEGORY_UNSPECIFIED",
                          },
                          "probability": {
                            "type": "enum",
                            "value": "HARM_PROBABILITY_UNSPECIFIED",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
              "usageMetadata": {
                "properties": {
                  "candidatesTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "promptTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "totalTokenCount": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "StreamGenerateContentRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "POST",
      "operationId": "StreamGenerateContent",
      "pagination": null,
      "path": "/v1/models/{model}:streamGenerateContent",
      "pathParameters": [
        {
          "description": null,
          "name": "model",
          "schema": {
            "description": null,
            "generatedName": "StreamGenerateContentRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StreamGenerateContentRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StreamGenerateContentRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StreamGenerateContentRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StreamGenerateContentRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StreamGenerateContentRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StreamGenerateContentRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "StreamGenerateContentRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "StreamGenerateContentRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": {
        "additionalProperties": false,
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "StreamGenerateContentRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateContentRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "StreamGenerateContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateContentResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Generates an embedding from the model given an input \`Content\`.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "model",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "content": {
                "properties": {},
                "type": "object",
              },
              "model": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "embedding": {
                "properties": {
                  "values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "float",
                          "value": 1.1,
                        },
                      },
                    ],
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "EmbedContentRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "POST",
      "operationId": "EmbedContent",
      "pagination": null,
      "path": "/v1/models/{model}:embedContent",
      "pathParameters": [
        {
          "description": null,
          "name": "model",
          "schema": {
            "description": null,
            "generatedName": "EmbedContentRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EmbedContentRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EmbedContentRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EmbedContentRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EmbedContentRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EmbedContentRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EmbedContentRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "EmbedContentRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EmbedContentRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": {
        "additionalProperties": false,
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "EmbedContentRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "EmbedContentRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "EmbedContentResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "EmbedContentResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Generates multiple embeddings from the model given input text in a
synchronous call.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "model",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "requests": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "content": {
                        "properties": {},
                        "type": "object",
                      },
                      "model": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "model",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "embeddings": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "values": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "float",
                              "value": 1.1,
                            },
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "BatchEmbedContentsRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "POST",
      "operationId": "BatchEmbedContents",
      "pagination": null,
      "path": "/v1/models/{model}:batchEmbedContents",
      "pathParameters": [
        {
          "description": null,
          "name": "model",
          "schema": {
            "description": null,
            "generatedName": "BatchEmbedContentsRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BatchEmbedContentsRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "BatchEmbedContentsRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BatchEmbedContentsRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "BatchEmbedContentsRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BatchEmbedContentsRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "BatchEmbedContentsRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "BatchEmbedContentsRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "BatchEmbedContentsRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": {
        "additionalProperties": false,
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "BatchEmbedContentsRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "BatchEmbedContentsRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "BatchEmbedContentsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "BatchEmbedContentsResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Runs a model's tokenizer on input content and returns the token count.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "model",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "totalTokens": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "CountTokensRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "POST",
      "operationId": "CountTokens",
      "pagination": null,
      "path": "/v1/models/{model}:countTokens",
      "pathParameters": [
        {
          "description": null,
          "name": "model",
          "schema": {
            "description": null,
            "generatedName": "CountTokensRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CountTokensRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CountTokensRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CountTokensRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CountTokensRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CountTokensRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CountTokensRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CountTokensRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CountTokensRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": {
        "additionalProperties": false,
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CountTokensRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "CountTokensRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CountTokensResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "CountTokensResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Lists operations that match the specified filter in the request. If the
server doesn't support this method, it returns \`UNIMPLEMENTED\`.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "nextPageToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "nextPageToken",
                },
              },
              "operations": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "done": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "value": true,
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ListOperationsRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "GET",
      "operationId": "ListOperations",
      "pagination": null,
      "path": "/v1/operations",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
        {
          "description": "The standard list filter.",
          "name": "filter",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsRequestFilter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsRequestFilter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The standard list page size.",
          "name": "pageSize",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsRequestPageSize",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsRequestPageSize",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The standard list page token.",
          "name": "pageToken",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsRequestPageToken",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsRequestPageToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ListOperationsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ListOperationsResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Lists operations that match the specified filter in the request. If the
server doesn't support this method, it returns \`UNIMPLEMENTED\`.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "tunedModel",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "tunedModel",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "nextPageToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "nextPageToken",
                },
              },
              "operations": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "done": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "value": true,
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ListOperationsByTunedModelRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "GET",
      "operationId": "ListOperationsByTunedModel",
      "pagination": null,
      "path": "/v1/tunedModels/{tunedModel}/operations",
      "pathParameters": [
        {
          "description": null,
          "name": "tunedModel",
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestTunedModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsByTunedModelRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsByTunedModelRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsByTunedModelRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsByTunedModelRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
        {
          "description": "The standard list filter.",
          "name": "filter",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestFilter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsByTunedModelRequestFilter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The standard list page size.",
          "name": "pageSize",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestPageSize",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsByTunedModelRequestPageSize",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The standard list page token.",
          "name": "pageToken",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListOperationsByTunedModelRequestPageToken",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListOperationsByTunedModelRequestPageToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ListOperationsByTunedModelResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ListOperationsResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Gets the latest state of a long-running operation.  Clients can use this
method to poll the operation result at intervals as recommended by the API
service.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "tunedModel",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "tunedModel",
                },
              },
            },
            {
              "name": "operation",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "operation",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "done": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "value": true,
                },
              },
              "error": {
                "properties": {
                  "code": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "details": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "message": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "message",
                    },
                  },
                },
                "type": "object",
              },
              "metadata": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "metadata",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "response": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "response",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "GetOperationRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "GET",
      "operationId": "GetOperation",
      "pagination": null,
      "path": "/v1/tunedModels/{tunedModel}/operations/{operation}",
      "pathParameters": [
        {
          "description": null,
          "name": "tunedModel",
          "schema": {
            "description": null,
            "generatedName": "GetOperationRequestTunedModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": null,
          "name": "operation",
          "schema": {
            "description": null,
            "generatedName": "GetOperationRequestOperation",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetOperationRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetOperationRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetOperationRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetOperationRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetOperationRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetOperationRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetOperationRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetOperationRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GetOperationResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "Operation",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Deletes a long-running operation. This method indicates that the client is
no longer interested in the operation result. It does not cancel the
operation. If the server doesn't support this method, it returns
\`google.rpc.Code.UNIMPLEMENTED\`.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "operationsId",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "operationsId",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "DeleteOperationRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "DELETE",
      "operationId": "DeleteOperation",
      "pagination": null,
      "path": "/v1/operations/{operationsId}",
      "pathParameters": [
        {
          "description": "Part of \`name\`. The name of the operation resource to be deleted.",
          "name": "operationsId",
          "schema": {
            "description": null,
            "generatedName": "DeleteOperationRequestOperationsId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DeleteOperationRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DeleteOperationRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DeleteOperationRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DeleteOperationRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DeleteOperationRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DeleteOperationRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DeleteOperationRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DeleteOperationRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DeleteOperationResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "Empty",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Starts asynchronous cancellation on a long-running operation.  The server
makes a best effort to cancel the operation, but success is not
guaranteed.  If the server doesn't support this method, it returns
\`google.rpc.Code.UNIMPLEMENTED\`.  Clients can use
Operations.GetOperation or
other methods to check whether the cancellation succeeded or whether the
operation completed despite cancellation. On successful cancellation,
the operation is not deleted; instead, it becomes an operation with
an Operation.error value with a google.rpc.Status.code of 1,
corresponding to \`Code.CANCELLED\`.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "tunedModel",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "tunedModel",
                },
              },
            },
            {
              "name": "operation",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "operation",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "type": "map",
            "value": [],
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "CancelOperationRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "POST",
      "operationId": "CancelOperation",
      "pagination": null,
      "path": "/v1/tunedModels/{tunedModel}/operations/{operation}:cancel",
      "pathParameters": [
        {
          "description": null,
          "name": "tunedModel",
          "schema": {
            "description": null,
            "generatedName": "CancelOperationRequestTunedModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": null,
          "name": "operation",
          "schema": {
            "description": null,
            "generatedName": "CancelOperationRequestOperation",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CancelOperationRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CancelOperationRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CancelOperationRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CancelOperationRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CancelOperationRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CancelOperationRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "CancelOperationRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "CancelOperationRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": {
        "additionalProperties": false,
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "CancelOperationRequestBody",
          "groupName": null,
          "nameOverride": null,
          "schema": "CancelOperationRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "CancelOperationResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "Empty",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Gets information about a specific Model.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "model",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "baseModelId": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "baseModelId",
                },
              },
              "description": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "description",
                },
              },
              "displayName": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "displayName",
                },
              },
              "inputTokenLimit": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "outputTokenLimit": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "supportedGenerationMethods": {
                "type": "array",
                "value": [
                  {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "supportedGenerationMethods",
                    },
                  },
                ],
              },
              "temperature": {
                "type": "primitive",
                "value": {
                  "type": "float",
                  "value": 1.1,
                },
              },
              "topK": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "topP": {
                "type": "primitive",
                "value": {
                  "type": "float",
                  "value": 1.1,
                },
              },
              "version": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "version",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "GetModelRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "GET",
      "operationId": "GetModel",
      "pagination": null,
      "path": "/v1/models/{model}",
      "pathParameters": [
        {
          "description": null,
          "name": "model",
          "schema": {
            "description": null,
            "generatedName": "GetModelRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetModelRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetModelRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetModelRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetModelRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetModelRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetModelRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "GetModelRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "GetModelRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GetModelResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "Model",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": null,
      "description": "Lists models available through the API.",
      "errors": {},
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "models": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "baseModelId": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "baseModelId",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "displayName": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "displayName",
                        },
                      },
                      "inputTokenLimit": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                      "outputTokenLimit": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "supportedGenerationMethods": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "supportedGenerationMethods",
                            },
                          },
                        ],
                      },
                      "temperature": {
                        "type": "primitive",
                        "value": {
                          "type": "float",
                          "value": 1.1,
                        },
                      },
                      "topK": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "topP": {
                        "type": "primitive",
                        "value": {
                          "type": "float",
                          "value": 1.1,
                        },
                      },
                      "version": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "version",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "nextPageToken": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "nextPageToken",
                },
              },
            },
            "type": "object",
          },
          "type": "full",
        },
      ],
      "generatedRequestName": "ListModelsRequest",
      "headers": [],
      "idempotent": null,
      "internal": null,
      "method": "GET",
      "operationId": "ListModels",
      "pagination": null,
      "path": "/v1/models",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Data format for response.",
          "name": "$alt",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListModelsRequestAlt",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListModelsRequestAlt",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "json",
                  "nameOverride": null,
                  "value": "json",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "media",
                  "nameOverride": null,
                  "value": "media",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "proto",
                  "nameOverride": null,
                  "value": "proto",
                },
              ],
            },
          },
        },
        {
          "description": "JSONP",
          "name": "$callback",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListModelsRequestCallback",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListModelsRequestCallback",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Returns response with indentations and line breaks.",
          "name": "$prettyPrint",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListModelsRequestPrettyPrint",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListModelsRequestPrettyPrint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "V1 error format.",
          "name": "$.xgafv",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListModelsRequestXgafv",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListModelsRequestXgafv",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "One",
                  "nameOverride": null,
                  "value": "1",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "Two",
                  "nameOverride": null,
                  "value": "2",
                },
              ],
            },
          },
        },
        {
          "description": "The maximum number of \`Models\` to return (per page).

The service may return fewer models.
If unspecified, at most 50 models will be returned per page.
This method returns at most 1000 models per page, even if you pass a larger
page_size.",
          "name": "pageSize",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListModelsRequestPageSize",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListModelsRequestPageSize",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "A page token, received from a previous \`ListModels\` call.

Provide the \`page_token\` returned by one request as an argument to the next
request to retrieve the next page.

When paginating, all other parameters provided to \`ListModels\` must match
the call that provided the page token.",
          "name": "pageToken",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ListModelsRequestPageToken",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ListModelsRequestPageToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Successful operation",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ListModelsResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ListModelsResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "generativelanguage",
      ],
    },
  ],
  "globalHeaders": [],
  "groups": {},
  "hasEndpointsMarkedInternal": false,
  "idempotencyHeaders": [],
  "nonRequestReferencedSchemas": [
    "GenerateContentResponse",
    "EmbedContentResponse",
    "BatchEmbedContentsResponse",
    "CountTokensResponse",
    "ListOperationsResponse",
    "Operation",
    "Empty",
    "Model",
    "ListModelsResponse",
    "Content",
    "SafetySetting",
    "GenerationConfig",
    "Part",
    "Blob",
    "Candidate",
    "PromptFeedback",
    "UsageMetadata",
    "SafetyRating",
    "CitationMetadata",
    "CitationSource",
    "ContentEmbedding",
    "EmbedContentRequest",
    "GenerateContentRequest",
    "TuningSnapshot",
    "Status",
    "BaseOperation",
  ],
  "schemas": {
    "BaseOperation": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "This resource represents a long-running operation that is the result of a
network API call.",
      "generatedName": "BaseOperation",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "baseOperationName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "baseOperationName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The server-assigned name, which is only unique within the same service that
originally returns it. If you use the default HTTP mapping, the
\`name\` should be a resource name ending with \`operations/{unique_id}\`.",
              "generatedName": "BaseOperationName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "baseOperationDone",
          "key": "done",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "baseOperationDone",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "If the value is \`false\`, it means the operation is still in progress.
If \`true\`, the operation is completed, and either \`error\` or \`response\` is
available.",
              "generatedName": "BaseOperationDone",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "baseOperationError",
          "key": "error",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "baseOperationError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The error result of the operation in case of failure or cancellation.",
              "generatedName": "BaseOperationError",
              "groupName": null,
              "nameOverride": null,
              "schema": "Status",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "BatchEmbedContentsRequest": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Batch request to get embeddings from the model for a list of prompts.",
      "generatedName": "BatchEmbedContentsRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "batchEmbedContentsRequestRequests",
          "key": "requests",
          "nameOverride": null,
          "schema": {
            "description": "Required. Embed requests for the batch. The model in each of these requests must
match the model specified \`BatchEmbedContentsRequest.model\`.",
            "generatedName": "BatchEmbedContentsRequestRequests",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "BatchEmbedContentsRequestRequestsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "EmbedContentRequest",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "BatchEmbedContentsResponse": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to a \`BatchEmbedContentsRequest\`.",
      "generatedName": "BatchEmbedContentsResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "batchEmbedContentsResponseEmbeddings",
          "key": "embeddings",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "batchEmbedContentsResponseEmbeddings",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. The embeddings for each request, in the same order as provided in the batch
request.",
              "generatedName": "BatchEmbedContentsResponseEmbeddings",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "BatchEmbedContentsResponseEmbeddingsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ContentEmbedding",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "Blob": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Raw media bytes.

Text should not be sent as raw bytes, use the 'text' field.",
      "generatedName": "Blob",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "blobMimeType",
          "key": "mimeType",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "blobMimeType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IANA standard MIME type of the source data.
Examples:
  - image/png
  - image/jpeg
If an unsupported MIME type is provided, an error will be returned. For a
complete list of supported types, see [Supported file
formats](https://ai.google.dev/gemini-api/docs/prompting_with_media#supported_file_formats).",
              "generatedName": "BlobMimeType",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "blobData",
          "key": "data",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "blobData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Raw bytes for media formats.",
              "generatedName": "BlobData",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": "byte",
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "generatedName": "CancelOperationRequest",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "CancelOperationRequestKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "default": null,
          "format": null,
          "maxLength": null,
          "minLength": null,
          "pattern": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "CancelOperationRequestValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "Candidate": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A response candidate generated from the model.",
      "generatedName": "Candidate",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "candidateIndex",
          "key": "index",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "candidateIndex",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. Index of the candidate in the list of candidates.",
              "generatedName": "CandidateIndex",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "candidateContent",
          "key": "content",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "candidateContent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. Generated content returned from the model.",
              "generatedName": "CandidateContent",
              "groupName": null,
              "nameOverride": null,
              "schema": "Content",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "candidateFinishReason",
          "key": "finishReason",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "candidateFinishReason",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. Output only. The reason why the model stopped generating tokens.

If empty, the model has not stopped generating the tokens.",
              "generatedName": "CandidateFinishReason",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "FINISH_REASON_UNSPECIFIED",
                  "nameOverride": null,
                  "value": "FINISH_REASON_UNSPECIFIED",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "STOP",
                  "nameOverride": null,
                  "value": "STOP",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "MAX_TOKENS",
                  "nameOverride": null,
                  "value": "MAX_TOKENS",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "SAFETY",
                  "nameOverride": null,
                  "value": "SAFETY",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "RECITATION",
                  "nameOverride": null,
                  "value": "RECITATION",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "OTHER",
                  "nameOverride": null,
                  "value": "OTHER",
                },
              ],
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "candidateSafetyRatings",
          "key": "safetyRatings",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "candidateSafetyRatings",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "List of ratings for the safety of a response candidate.

There is at most one rating per category.",
              "generatedName": "CandidateSafetyRatings",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CandidateSafetyRatingsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "SafetyRating",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "candidateCitationMetadata",
          "key": "citationMetadata",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "candidateCitationMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. Citation information for model-generated candidate.

This field may be populated with recitation information for any text
included in the \`content\`. These are passages that are "recited" from
copyrighted material in the foundational LLM's training data.",
              "generatedName": "CandidateCitationMetadata",
              "groupName": null,
              "nameOverride": null,
              "schema": "CitationMetadata",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "candidateTokenCount",
          "key": "tokenCount",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "candidateTokenCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. Token count for this candidate.",
              "generatedName": "CandidateTokenCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "CitationMetadata": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A collection of source attributions for a piece of content.",
      "generatedName": "CitationMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "citationMetadataCitationSources",
          "key": "citationSources",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "citationMetadataCitationSources",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Citations to sources for a specific response.",
              "generatedName": "CitationMetadataCitationSources",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CitationMetadataCitationSourcesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "CitationSource",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "CitationSource": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A citation to a source for a portion of a specific response.",
      "generatedName": "CitationSource",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "citationSourceStartIndex",
          "key": "startIndex",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "citationSourceStartIndex",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. Start of segment of the response that is attributed to this source.

Index indicates the start of the segment, measured in bytes.",
              "generatedName": "CitationSourceStartIndex",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "citationSourceEndIndex",
          "key": "endIndex",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "citationSourceEndIndex",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. End of the attributed segment, exclusive.",
              "generatedName": "CitationSourceEndIndex",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "citationSourceUri",
          "key": "uri",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "citationSourceUri",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. URI that is attributed as a source for a portion of the text.",
              "generatedName": "CitationSourceUri",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "citationSourceLicense",
          "key": "license",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "citationSourceLicense",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. License for the GitHub project that is attributed as a source for segment.

License info is required for code citations.",
              "generatedName": "CitationSourceLicense",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "Content": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The base structured datatype containing multi-part content of a message.

A \`Content\` includes a \`role\` field designating the producer of the \`Content\`
and a \`parts\` field containing multi-part data that contains the content of
the message turn.",
      "generatedName": "Content",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentParts",
          "key": "parts",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentParts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Ordered \`Parts\` that constitute a single message. Parts may have different
MIME types.",
              "generatedName": "ContentParts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ContentPartsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "Part",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentRole",
          "key": "role",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentRole",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. The producer of the content. Must be either 'user' or 'model'.

Useful to set for multi-turn conversations, otherwise can be left blank
or unset.",
              "generatedName": "ContentRole",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ContentEmbedding": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A list of floats representing an embedding.",
      "generatedName": "ContentEmbedding",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "contentEmbeddingValues",
          "key": "values",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "contentEmbeddingValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The embedding values.",
              "generatedName": "ContentEmbeddingValues",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ContentEmbeddingValuesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "float",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "CountTokensRequest": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Counts the number of tokens in the \`prompt\` sent to a model.

Models may tokenize text differently, so each model may return a different
\`token_count\`.",
      "generatedName": "CountTokensRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "countTokensRequestContents",
          "key": "contents",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "countTokensRequestContents",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. The input given to the model as a prompt. This field is ignored when
\`generate_content_request\` is set.",
              "generatedName": "CountTokensRequestContents",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CountTokensRequestContentsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "Content",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "countTokensRequestGenerateContentRequest",
          "key": "generateContentRequest",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "countTokensRequestGenerateContentRequest",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. The overall input given to the model. CountTokens will count prompt,
function calling, etc.",
              "generatedName": "CountTokensRequestGenerateContentRequest",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateContentRequest",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "CountTokensResponse": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A response from \`CountTokens\`.

It returns the model's \`token_count\` for the \`prompt\`.",
      "generatedName": "CountTokensResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "countTokensResponseTotalTokens",
          "key": "totalTokens",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "countTokensResponseTotalTokens",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of tokens that the \`model\` tokenizes the \`prompt\` into.

Always non-negative.",
              "generatedName": "CountTokensResponseTotalTokens",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "CreateTunedModelMetadata": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Metadata about the state and progress of creating a tuned model returned from
the long-running operation",
      "generatedName": "CreateTunedModelMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createTunedModelMetadataTunedModel",
          "key": "tunedModel",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "createTunedModelMetadataTunedModel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the tuned model associated with the tuning operation.",
              "generatedName": "CreateTunedModelMetadataTunedModel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createTunedModelMetadataTotalSteps",
          "key": "totalSteps",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "createTunedModelMetadataTotalSteps",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The total number of tuning steps.",
              "generatedName": "CreateTunedModelMetadataTotalSteps",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createTunedModelMetadataCompletedSteps",
          "key": "completedSteps",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "createTunedModelMetadataCompletedSteps",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The number of steps completed.",
              "generatedName": "CreateTunedModelMetadataCompletedSteps",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createTunedModelMetadataCompletedPercent",
          "key": "completedPercent",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "createTunedModelMetadataCompletedPercent",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The completed percentage for the tuning operation.",
              "generatedName": "CreateTunedModelMetadataCompletedPercent",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "createTunedModelMetadataSnapshots",
          "key": "snapshots",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "createTunedModelMetadataSnapshots",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Metrics collected during tuning.",
              "generatedName": "CreateTunedModelMetadataSnapshots",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "CreateTunedModelMetadataSnapshotsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "TuningSnapshot",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "EmbedContentRequest": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request containing the \`Content\` for the model to embed.",
      "generatedName": "EmbedContentRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "embedContentRequestModel",
          "key": "model",
          "nameOverride": null,
          "schema": {
            "description": "Required. The model's resource name. This serves as an ID for the Model to use.

This name should match a model name returned by the \`ListModels\` method.

Format: \`models/{model}\`",
            "generatedName": "EmbedContentRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "embedContentRequestContent",
          "key": "content",
          "nameOverride": null,
          "schema": {
            "description": "Required. The content to embed. Only the \`parts.text\` fields will be counted.",
            "generatedName": "EmbedContentRequestContent",
            "groupName": null,
            "nameOverride": null,
            "schema": "Content",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "embedContentRequestTaskType",
          "key": "taskType",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "embedContentRequestTaskType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. Optional task type for which the embeddings will be used. Can only be set
for \`models/embedding-001\`.",
              "generatedName": "EmbedContentRequestTaskType",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "TASK_TYPE_UNSPECIFIED",
                  "nameOverride": null,
                  "value": "TASK_TYPE_UNSPECIFIED",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "RETRIEVAL_QUERY",
                  "nameOverride": null,
                  "value": "RETRIEVAL_QUERY",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "RETRIEVAL_DOCUMENT",
                  "nameOverride": null,
                  "value": "RETRIEVAL_DOCUMENT",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "SEMANTIC_SIMILARITY",
                  "nameOverride": null,
                  "value": "SEMANTIC_SIMILARITY",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "CLASSIFICATION",
                  "nameOverride": null,
                  "value": "CLASSIFICATION",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "CLUSTERING",
                  "nameOverride": null,
                  "value": "CLUSTERING",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "QUESTION_ANSWERING",
                  "nameOverride": null,
                  "value": "QUESTION_ANSWERING",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "FACT_VERIFICATION",
                  "nameOverride": null,
                  "value": "FACT_VERIFICATION",
                },
              ],
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "embedContentRequestTitle",
          "key": "title",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "embedContentRequestTitle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. An optional title for the text. Only applicable when TaskType is
\`RETRIEVAL_DOCUMENT\`.

Note: Specifying a \`title\` for \`RETRIEVAL_DOCUMENT\` provides better quality
embeddings for retrieval.",
              "generatedName": "EmbedContentRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "embedContentRequestOutputDimensionality",
          "key": "outputDimensionality",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "embedContentRequestOutputDimensionality",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. Optional reduced dimension for the output embedding. If set, excessive
values in the output embedding are truncated from the end. Supported by
newer models since 2024, and the earlier model (\`models/embedding-001\`)
cannot specify this value.",
              "generatedName": "EmbedContentRequestOutputDimensionality",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "EmbedContentResponse": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to an \`EmbedContentRequest\`.",
      "generatedName": "EmbedContentResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "embedContentResponseEmbedding",
          "key": "embedding",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "embedContentResponseEmbedding",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. The embedding generated from the input content.",
              "generatedName": "EmbedContentResponseEmbedding",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContentEmbedding",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated
empty messages in your APIs. A typical example is to use it as the request
or the response type of an API method. For instance:

    service Foo {
      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
    }",
      "generatedName": "Empty",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "EmptyKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "default": null,
          "format": null,
          "maxLength": null,
          "minLength": null,
          "pattern": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "EmptyValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "GenerateContentRequest": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to generate a completion from the model.",
      "generatedName": "GenerateContentRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateContentRequestModel",
          "key": "model",
          "nameOverride": null,
          "schema": {
            "description": "Required. The name of the \`Model\` to use for generating the completion.

Format: \`name=models/{model}\`.",
            "generatedName": "GenerateContentRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateContentRequestContents",
          "key": "contents",
          "nameOverride": null,
          "schema": {
            "description": "Required. The content of the current conversation with the model.

For single-turn queries, this is a single instance. For multi-turn queries,
this is a repeated field that contains conversation history + latest
request.",
            "generatedName": "GenerateContentRequestContents",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "GenerateContentRequestContentsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "Content",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateContentRequestSafetySettings",
          "key": "safetySettings",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generateContentRequestSafetySettings",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. A list of unique \`SafetySetting\` instances for blocking unsafe content.

This will be enforced on the \`GenerateContentRequest.contents\` and
\`GenerateContentResponse.candidates\`. There should not be more than one
setting for each \`SafetyCategory\` type. The API will block any contents and
responses that fail to meet the thresholds set by these settings. This list
overrides the default settings for each \`SafetyCategory\` specified in the
safety_settings. If there is no \`SafetySetting\` for a given
\`SafetyCategory\` provided in the list, the API will use the default safety
setting for that category. Harm categories HARM_CATEGORY_HATE_SPEECH,
HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT,
HARM_CATEGORY_HARASSMENT are supported.",
              "generatedName": "GenerateContentRequestSafetySettings",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GenerateContentRequestSafetySettingsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "SafetySetting",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateContentRequestGenerationConfig",
          "key": "generationConfig",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generateContentRequestGenerationConfig",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. Configuration options for model generation and outputs.",
              "generatedName": "GenerateContentRequestGenerationConfig",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerationConfig",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateContentResponse": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response from the model supporting multiple candidates.

Note on safety ratings and content filtering. They are reported for both
prompt in \`GenerateContentResponse.prompt_feedback\` and for each candidate
in \`finish_reason\` and in \`safety_ratings\`. The API contract is that:
 - either all requested candidates are returned or no candidates at all
 - no candidates are returned only if there was something wrong with the
   prompt (see \`prompt_feedback\`)
 - feedback on each candidate is reported on \`finish_reason\` and
   \`safety_ratings\`.",
      "generatedName": "GenerateContentResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateContentResponseCandidates",
          "key": "candidates",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generateContentResponseCandidates",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Candidate responses from the model.",
              "generatedName": "GenerateContentResponseCandidates",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GenerateContentResponseCandidatesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "Candidate",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateContentResponsePromptFeedback",
          "key": "promptFeedback",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generateContentResponsePromptFeedback",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Returns the prompt's feedback related to the content filters.",
              "generatedName": "GenerateContentResponsePromptFeedback",
              "groupName": null,
              "nameOverride": null,
              "schema": "PromptFeedback",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateContentResponseUsageMetadata",
          "key": "usageMetadata",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generateContentResponseUsageMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. Metadata on the generation requests' token usage.",
              "generatedName": "GenerateContentResponseUsageMetadata",
              "groupName": null,
              "nameOverride": null,
              "schema": "UsageMetadata",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerationConfig": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Configuration options for model generation and outputs. Not all parameters
may be configurable for every model.",
      "generatedName": "GenerationConfig",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generationConfigCandidateCount",
          "key": "candidateCount",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generationConfigCandidateCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. Number of generated responses to return.

Currently, this value can only be set to 1. If unset, this will default
to 1.",
              "generatedName": "GenerationConfigCandidateCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generationConfigStopSequences",
          "key": "stopSequences",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generationConfigStopSequences",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. The set of character sequences (up to 5) that will stop output generation.
If specified, the API will stop at the first appearance of a stop
sequence. The stop sequence will not be included as part of the response.",
              "generatedName": "GenerationConfigStopSequences",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GenerationConfigStopSequencesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "default": null,
                  "format": null,
                  "maxLength": null,
                  "minLength": null,
                  "pattern": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generationConfigMaxOutputTokens",
          "key": "maxOutputTokens",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generationConfigMaxOutputTokens",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. The maximum number of tokens to include in a candidate.

Note: The default value varies by model, see the \`Model.output_token_limit\`
attribute of the \`Model\` returned from the \`getModel\` function.",
              "generatedName": "GenerationConfigMaxOutputTokens",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generationConfigTemperature",
          "key": "temperature",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generationConfigTemperature",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. Controls the randomness of the output.

Note: The default value varies by model, see the \`Model.temperature\`
attribute of the \`Model\` returned from the \`getModel\` function.

Values can range from [0.0, 2.0].",
              "generatedName": "GenerationConfigTemperature",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generationConfigTopP",
          "key": "topP",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generationConfigTopP",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. The maximum cumulative probability of tokens to consider when sampling.

The model uses combined Top-k and nucleus sampling.

Tokens are sorted based on their assigned probabilities so that only the
most likely tokens are considered. Top-k sampling directly limits the
maximum number of tokens to consider, while Nucleus sampling limits number
of tokens based on the cumulative probability.

Note: The default value varies by model, see the \`Model.top_p\`
attribute of the \`Model\` returned from the \`getModel\` function.",
              "generatedName": "GenerationConfigTopP",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generationConfigTopK",
          "key": "topK",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "generationConfigTopK",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. The maximum number of tokens to consider when sampling.

Models use nucleus sampling or combined Top-k and nucleus sampling.
Top-k sampling considers the set of \`top_k\` most probable tokens.
Models running with nucleus sampling don't allow top_k setting.

Note: The default value varies by model, see the \`Model.top_k\`
attribute of the \`Model\` returned from the \`getModel\` function. Empty
\`top_k\` field in \`Model\` indicates the model doesn't apply top-k sampling
and doesn't allow setting \`top_k\` on requests.",
              "generatedName": "GenerationConfigTopK",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ListModelsResponse": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response from \`ListModel\` containing a paginated list of Models.",
      "generatedName": "ListModelsResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "listModelsResponseModels",
          "key": "models",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "listModelsResponseModels",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The returned Models.",
              "generatedName": "ListModelsResponseModels",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ListModelsResponseModelsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "Model",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "listModelsResponseNextPageToken",
          "key": "nextPageToken",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "listModelsResponseNextPageToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A token, which can be sent as \`page_token\` to retrieve the next page.

If this field is omitted, there are no more pages.",
              "generatedName": "ListModelsResponseNextPageToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ListOperationsResponse": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response message for Operations.ListOperations.",
      "generatedName": "ListOperationsResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "listOperationsResponseOperations",
          "key": "operations",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "listOperationsResponseOperations",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A list of operations that matches the specified filter in the request.",
              "generatedName": "ListOperationsResponseOperations",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ListOperationsResponseOperationsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "Operation",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "listOperationsResponseNextPageToken",
          "key": "nextPageToken",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "listOperationsResponseNextPageToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The standard List next-page token.",
              "generatedName": "ListOperationsResponseNextPageToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "Model": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Information about a Generative Language Model.",
      "generatedName": "Model",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelName",
          "key": "name",
          "nameOverride": null,
          "schema": {
            "description": "Required. The resource name of the \`Model\`.

Format: \`models/{model}\` with a \`{model}\` naming convention of:

* "{base_model_id}-{version}"

Examples:

* \`models/chat-bison-001\`",
            "generatedName": "ModelName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelBaseModelId",
          "key": "baseModelId",
          "nameOverride": null,
          "schema": {
            "description": "Required. The name of the base model, pass this to the generation request.

Examples:

* \`chat-bison\`",
            "generatedName": "ModelBaseModelId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersion",
          "key": "version",
          "nameOverride": null,
          "schema": {
            "description": "Required. The version number of the model.

This represents the major version",
            "generatedName": "ModelVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "default": null,
              "format": null,
              "maxLength": null,
              "minLength": null,
              "pattern": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelDisplayName",
          "key": "displayName",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The human-readable name of the model. E.g. "Chat Bison".

The name can be up to 128 characters long and can consist of any UTF-8
characters.",
              "generatedName": "ModelDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelDescription",
          "key": "description",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A short description of the model.",
              "generatedName": "ModelDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelInputTokenLimit",
          "key": "inputTokenLimit",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelInputTokenLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Maximum number of input tokens allowed for this model.",
              "generatedName": "ModelInputTokenLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelOutputTokenLimit",
          "key": "outputTokenLimit",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelOutputTokenLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Maximum number of output tokens available for this model.",
              "generatedName": "ModelOutputTokenLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelSupportedGenerationMethods",
          "key": "supportedGenerationMethods",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelSupportedGenerationMethods",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The model's supported generation methods.

The method names are defined as Pascal case
strings, such as \`generateMessage\` which correspond to API methods.",
              "generatedName": "ModelSupportedGenerationMethods",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ModelSupportedGenerationMethodsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "default": null,
                  "format": null,
                  "maxLength": null,
                  "minLength": null,
                  "pattern": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelTemperature",
          "key": "temperature",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelTemperature",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Controls the randomness of the output.

Values can range over \`[0.0,1.0]\`, inclusive. A value closer to \`1.0\` will
produce responses that are more varied, while a value closer to \`0.0\` will
typically result in less surprising responses from the model.
This value specifies default to be used by the backend while making the
call to the model.",
              "generatedName": "ModelTemperature",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelTopP",
          "key": "topP",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelTopP",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "For Nucleus sampling.

Nucleus sampling considers the smallest set of tokens whose probability
sum is at least \`top_p\`.
This value specifies default to be used by the backend while making the
call to the model.",
              "generatedName": "ModelTopP",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelTopK",
          "key": "topK",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "modelTopK",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "For Top-k sampling.

Top-k sampling considers the set of \`top_k\` most probable tokens.
This value specifies default to be used by the backend while making the
call to the model.
If empty, indicates the model doesn't use top-k sampling, and \`top_k\` isn't
allowed as a generation parameter.",
              "generatedName": "ModelTopK",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "Operation": {
      "additionalProperties": false,
      "allOf": [
        {
          "description": null,
          "generatedName": "BaseOperation",
          "groupName": null,
          "nameOverride": null,
          "schema": "BaseOperation",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": "This resource represents a long-running operation that is the result of a
network API call.",
      "generatedName": "Operation",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "operationMetadata",
          "key": "metadata",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "operationMetadata",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Service-specific metadata associated with the operation.  It typically
contains progress information and common metadata such as create time.
Some services might not provide such metadata.  Any method that returns a
long-running operation should document the metadata type, if any.",
              "generatedName": "OperationMetadata",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "OperationMetadataKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "default": null,
                  "format": null,
                  "maxLength": null,
                  "minLength": null,
                  "pattern": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "OperationMetadataValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "operationResponse",
          "key": "response",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "operationResponse",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The normal, successful response of the operation.  If the original
method returns no data on success, such as \`Delete\`, the response is
\`google.protobuf.Empty\`.  If the original method is standard
\`Get\`/\`Create\`/\`Update\`, the response should be the resource.  For other
methods, the response should have the type \`XxxResponse\`, where \`Xxx\`
is the original method name.  For example, if the original method name
is \`TakeSnapshot()\`, the inferred response type is
\`TakeSnapshotResponse\`.",
              "generatedName": "OperationResponse",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "OperationResponseKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "default": null,
                  "format": null,
                  "maxLength": null,
                  "minLength": null,
                  "pattern": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "OperationResponseValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "Part": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A datatype containing media that is part of a multi-part \`Content\` message.

A \`Part\` consists of data which has an associated datatype. A \`Part\` can only
contain one of the accepted types in \`Part.data\`.

A \`Part\` must have a fixed IANA MIME type identifying the type and subtype
of the media if the \`inline_data\` field is filled with raw bytes.",
      "generatedName": "Part",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partText",
          "key": "text",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "partText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Inline text.",
              "generatedName": "PartText",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partInlineData",
          "key": "inlineData",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "partInlineData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Inline media bytes.",
              "generatedName": "PartInlineData",
              "groupName": null,
              "nameOverride": null,
              "schema": "Blob",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "PromptFeedback": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A set of the feedback metadata the prompt specified in
\`GenerateContentRequest.content\`.",
      "generatedName": "PromptFeedback",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptFeedbackBlockReason",
          "key": "blockReason",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "promptFeedbackBlockReason",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optional. If set, the prompt was blocked and no candidates are returned.
Rephrase your prompt.",
              "generatedName": "PromptFeedbackBlockReason",
              "groupName": null,
              "nameOverride": null,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "BLOCK_REASON_UNSPECIFIED",
                  "nameOverride": null,
                  "value": "BLOCK_REASON_UNSPECIFIED",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "SAFETY",
                  "nameOverride": null,
                  "value": "SAFETY",
                },
                {
                  "casing": {
                    "camel": null,
                    "pascal": null,
                    "screamingSnake": null,
                    "snake": null,
                  },
                  "description": null,
                  "generatedName": "OTHER",
                  "nameOverride": null,
                  "value": "OTHER",
                },
              ],
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptFeedbackSafetyRatings",
          "key": "safetyRatings",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "promptFeedbackSafetyRatings",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Ratings for safety of the prompt.
There is at most one rating per category.",
              "generatedName": "PromptFeedbackSafetyRatings",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PromptFeedbackSafetyRatingsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "SafetyRating",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SafetyRating": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Safety rating for a piece of content.

The safety rating contains the category of harm and the
harm probability level in that category for a piece of content.
Content is classified for safety across a number of
harm categories and the probability of the harm classification is included
here.",
      "generatedName": "SafetyRating",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "safetyRatingCategory",
          "key": "category",
          "nameOverride": null,
          "schema": {
            "description": "Required. The category for this rating.",
            "generatedName": "SafetyRatingCategory",
            "groupName": null,
            "nameOverride": null,
            "type": "enum",
            "values": [
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_UNSPECIFIED",
                "nameOverride": null,
                "value": "HARM_CATEGORY_UNSPECIFIED",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_DEROGATORY",
                "nameOverride": null,
                "value": "HARM_CATEGORY_DEROGATORY",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_TOXICITY",
                "nameOverride": null,
                "value": "HARM_CATEGORY_TOXICITY",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_VIOLENCE",
                "nameOverride": null,
                "value": "HARM_CATEGORY_VIOLENCE",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_SEXUAL",
                "nameOverride": null,
                "value": "HARM_CATEGORY_SEXUAL",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_MEDICAL",
                "nameOverride": null,
                "value": "HARM_CATEGORY_MEDICAL",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_DANGEROUS",
                "nameOverride": null,
                "value": "HARM_CATEGORY_DANGEROUS",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_HARASSMENT",
                "nameOverride": null,
                "value": "HARM_CATEGORY_HARASSMENT",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_HATE_SPEECH",
                "nameOverride": null,
                "value": "HARM_CATEGORY_HATE_SPEECH",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
                "nameOverride": null,
                "value": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_DANGEROUS_CONTENT",
                "nameOverride": null,
                "value": "HARM_CATEGORY_DANGEROUS_CONTENT",
              },
            ],
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "safetyRatingProbability",
          "key": "probability",
          "nameOverride": null,
          "schema": {
            "description": "Required. The probability of harm for this content.",
            "generatedName": "SafetyRatingProbability",
            "groupName": null,
            "nameOverride": null,
            "type": "enum",
            "values": [
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_PROBABILITY_UNSPECIFIED",
                "nameOverride": null,
                "value": "HARM_PROBABILITY_UNSPECIFIED",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "NEGLIGIBLE",
                "nameOverride": null,
                "value": "NEGLIGIBLE",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "LOW",
                "nameOverride": null,
                "value": "LOW",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "MEDIUM",
                "nameOverride": null,
                "value": "MEDIUM",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HIGH",
                "nameOverride": null,
                "value": "HIGH",
              },
            ],
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "safetyRatingBlocked",
          "key": "blocked",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "safetyRatingBlocked",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Was this content blocked because of this rating?",
              "generatedName": "SafetyRatingBlocked",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "SafetySetting": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Safety setting, affecting the safety-blocking behavior.

Passing a safety setting for a category changes the allowed probability that
content is blocked.",
      "generatedName": "SafetySetting",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "safetySettingCategory",
          "key": "category",
          "nameOverride": null,
          "schema": {
            "description": "Required. The category for this setting.",
            "generatedName": "SafetySettingCategory",
            "groupName": null,
            "nameOverride": null,
            "type": "enum",
            "values": [
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_UNSPECIFIED",
                "nameOverride": null,
                "value": "HARM_CATEGORY_UNSPECIFIED",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_DEROGATORY",
                "nameOverride": null,
                "value": "HARM_CATEGORY_DEROGATORY",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_TOXICITY",
                "nameOverride": null,
                "value": "HARM_CATEGORY_TOXICITY",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_VIOLENCE",
                "nameOverride": null,
                "value": "HARM_CATEGORY_VIOLENCE",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_SEXUAL",
                "nameOverride": null,
                "value": "HARM_CATEGORY_SEXUAL",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_MEDICAL",
                "nameOverride": null,
                "value": "HARM_CATEGORY_MEDICAL",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_DANGEROUS",
                "nameOverride": null,
                "value": "HARM_CATEGORY_DANGEROUS",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_HARASSMENT",
                "nameOverride": null,
                "value": "HARM_CATEGORY_HARASSMENT",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_HATE_SPEECH",
                "nameOverride": null,
                "value": "HARM_CATEGORY_HATE_SPEECH",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
                "nameOverride": null,
                "value": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_CATEGORY_DANGEROUS_CONTENT",
                "nameOverride": null,
                "value": "HARM_CATEGORY_DANGEROUS_CONTENT",
              },
            ],
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "safetySettingThreshold",
          "key": "threshold",
          "nameOverride": null,
          "schema": {
            "description": "Required. Controls the probability threshold at which harm is blocked.",
            "generatedName": "SafetySettingThreshold",
            "groupName": null,
            "nameOverride": null,
            "type": "enum",
            "values": [
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "HARM_BLOCK_THRESHOLD_UNSPECIFIED",
                "nameOverride": null,
                "value": "HARM_BLOCK_THRESHOLD_UNSPECIFIED",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "BLOCK_LOW_AND_ABOVE",
                "nameOverride": null,
                "value": "BLOCK_LOW_AND_ABOVE",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "BLOCK_MEDIUM_AND_ABOVE",
                "nameOverride": null,
                "value": "BLOCK_MEDIUM_AND_ABOVE",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "BLOCK_ONLY_HIGH",
                "nameOverride": null,
                "value": "BLOCK_ONLY_HIGH",
              },
              {
                "casing": {
                  "camel": null,
                  "pascal": null,
                  "screamingSnake": null,
                  "snake": null,
                },
                "description": null,
                "generatedName": "BLOCK_NONE",
                "nameOverride": null,
                "value": "BLOCK_NONE",
              },
            ],
          },
        },
      ],
      "type": "object",
    },
    "Status": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The \`Status\` type defines a logical error model that is suitable for
different programming environments, including REST APIs and RPC APIs. It is
used by [gRPC](https://github.com/grpc). Each \`Status\` message contains
three pieces of data: error code, error message, and error details.

You can find out more about this error model and how to work with it in the
[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "generatedName": "Status",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "statusCode",
          "key": "code",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "statusCode",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The status code, which should be an enum value of google.rpc.Code.",
              "generatedName": "StatusCode",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "statusMessage",
          "key": "message",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "statusMessage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A developer-facing error message, which should be in English. Any
user-facing error message should be localized and sent in the
google.rpc.Status.details field, or localized by the client.",
              "generatedName": "StatusMessage",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "format": null,
                "maxLength": null,
                "minLength": null,
                "pattern": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "statusDetails",
          "key": "details",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "statusDetails",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A list of messages that carry the error details.  There is a common set of
message types for APIs to use.",
              "generatedName": "StatusDetails",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "StatusDetailsItem",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "StatusDetailsItemKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "default": null,
                    "format": null,
                    "maxLength": null,
                    "minLength": null,
                    "pattern": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "StatusDetailsItemValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "TuningSnapshot": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Record for a single tuning step.",
      "generatedName": "TuningSnapshot",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tuningSnapshotStep",
          "key": "step",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tuningSnapshotStep",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. The tuning step.",
              "generatedName": "TuningSnapshotStep",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tuningSnapshotEpoch",
          "key": "epoch",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tuningSnapshotEpoch",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. The epoch this step was part of.",
              "generatedName": "TuningSnapshotEpoch",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tuningSnapshotMeanLoss",
          "key": "meanLoss",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tuningSnapshotMeanLoss",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. The mean loss of the training examples for this step.",
              "generatedName": "TuningSnapshotMeanLoss",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "float",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tuningSnapshotComputeTime",
          "key": "computeTime",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "tuningSnapshotComputeTime",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Output only. The timestamp when this metric was computed.",
              "generatedName": "TuningSnapshotComputeTime",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "UsageMetadata": {
      "additionalProperties": false,
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Metadata on the generation request's token usage.",
      "generatedName": "UsageMetadata",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "usageMetadataPromptTokenCount",
          "key": "promptTokenCount",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "usageMetadataPromptTokenCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Number of tokens in the prompt.",
              "generatedName": "UsageMetadataPromptTokenCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "usageMetadataCandidatesTokenCount",
          "key": "candidatesTokenCount",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "usageMetadataCandidatesTokenCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Total number of tokens across the generated candidates.",
              "generatedName": "UsageMetadataCandidatesTokenCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "usageMetadataTotalTokenCount",
          "key": "totalTokenCount",
          "nameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "usageMetadataTotalTokenCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Total token count for the generation request (prompt + candidates).",
              "generatedName": "UsageMetadataTotalTokenCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "default": null,
                "exclusiveMaximum": null,
                "exclusiveMinimum": null,
                "maximum": null,
                "minimum": null,
                "multipleOf": null,
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
  },
  "securitySchemes": {},
  "servers": [
    {
      "description": "Global Endpoint",
      "name": null,
      "url": "https://generativelanguage.googleapis.com",
    },
  ],
  "tags": {
    "orderedTagIds": null,
    "tagsById": {},
  },
  "title": "Generative Language API",
  "variables": {},
  "webhooks": [],
}
`;

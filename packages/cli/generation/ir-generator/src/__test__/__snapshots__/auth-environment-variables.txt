// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate IR 1`] = `
{
  "apiDisplayName": null,
  "apiDocs": null,
  "apiName": {
    "camelCase": {
      "safeName": "authEnvironmentVariables",
      "unsafeName": "authEnvironmentVariables",
    },
    "originalName": "auth-environment-variables",
    "pascalCase": {
      "safeName": "AuthEnvironmentVariables",
      "unsafeName": "AuthEnvironmentVariables",
    },
    "screamingSnakeCase": {
      "safeName": "AUTH_ENVIRONMENT_VARIABLES",
      "unsafeName": "AUTH_ENVIRONMENT_VARIABLES",
    },
    "snakeCase": {
      "safeName": "auth_environment_variables",
      "unsafeName": "auth_environment_variables",
    },
  },
  "auth": {
    "docs": null,
    "requirement": "ALL",
    "schemes": [
      {
        "_type": "header",
        "docs": null,
        "headerEnvVar": "FERN_API_KEY",
        "name": {
          "name": {
            "camelCase": {
              "safeName": "apiKey",
              "unsafeName": "apiKey",
            },
            "originalName": "APIKey",
            "pascalCase": {
              "safeName": "ApiKey",
              "unsafeName": "ApiKey",
            },
            "screamingSnakeCase": {
              "safeName": "API_KEY",
              "unsafeName": "API_KEY",
            },
            "snakeCase": {
              "safeName": "api_key",
              "unsafeName": "api_key",
            },
          },
          "wireValue": "X-FERN-API-KEY",
        },
        "prefix": null,
        "valueType": {
          "_type": "primitive",
          "primitive": "STRING",
        },
      },
    ],
  },
  "basePath": null,
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "camelCase": {
          "safeName": "errorInstanceId",
          "unsafeName": "errorInstanceId",
        },
        "originalName": "errorInstanceId",
        "pascalCase": {
          "safeName": "ErrorInstanceId",
          "unsafeName": "ErrorInstanceId",
        },
        "screamingSnakeCase": {
          "safeName": "ERROR_INSTANCE_ID",
          "unsafeName": "ERROR_INSTANCE_ID",
        },
        "snakeCase": {
          "safeName": "error_instance_id",
          "unsafeName": "error_instance_id",
        },
      },
      "wireValue": "errorInstanceId",
    },
  },
  "environments": null,
  "errorDiscriminationStrategy": {
    "type": "statusCode",
  },
  "errors": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "rootPackage": {
    "docs": null,
    "errors": [],
    "fernFilepath": {
      "allParts": [],
      "file": null,
      "packagePath": [],
    },
    "hasEndpointsInTree": true,
    "navigationConfig": null,
    "service": null,
    "subpackages": [
      "subpackage_service",
    ],
    "types": [],
    "webhooks": null,
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "X-Fern-Language",
      "sdkName": "X-Fern-SDK-Name",
      "sdkVersion": "X-Fern-SDK-Version",
    },
  },
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {},
  },
  "services": {
    "service_service": {
      "availability": null,
      "basePath": {
        "head": "",
        "parts": [],
      },
      "displayName": null,
      "endpoints": [
        {
          "allPathParameters": [],
          "auth": true,
          "availability": null,
          "baseUrl": null,
          "displayName": null,
          "docs": "Mocked GET request with custom api key",
          "errors": [],
          "examples": [],
          "fullPath": {
            "head": "apiKey",
            "parts": [],
          },
          "headers": [],
          "id": "endpoint_service.getWithApiKey",
          "idempotent": false,
          "method": "GET",
          "name": {
            "camelCase": {
              "safeName": "getWithApiKey",
              "unsafeName": "getWithApiKey",
            },
            "originalName": "getWithApiKey",
            "pascalCase": {
              "safeName": "GetWithApiKey",
              "unsafeName": "GetWithApiKey",
            },
            "screamingSnakeCase": {
              "safeName": "GET_WITH_API_KEY",
              "unsafeName": "GET_WITH_API_KEY",
            },
            "snakeCase": {
              "safeName": "get_with_api_key",
              "unsafeName": "get_with_api_key",
            },
          },
          "path": {
            "head": "/apiKey",
            "parts": [],
          },
          "pathParameters": [],
          "queryParameters": [],
          "requestBody": null,
          "response": {
            "type": "json",
            "value": {
              "docs": null,
              "responseBodyType": {
                "_type": "primitive",
                "primitive": "STRING",
              },
              "type": "response",
            },
          },
          "sdkRequest": null,
        },
      ],
      "headers": [],
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "camelCase": {
                "safeName": "service",
                "unsafeName": "service",
              },
              "originalName": "service",
              "pascalCase": {
                "safeName": "Service",
                "unsafeName": "Service",
              },
              "screamingSnakeCase": {
                "safeName": "SERVICE",
                "unsafeName": "SERVICE",
              },
              "snakeCase": {
                "safeName": "service",
                "unsafeName": "service",
              },
            },
          ],
          "file": {
            "camelCase": {
              "safeName": "service",
              "unsafeName": "service",
            },
            "originalName": "service",
            "pascalCase": {
              "safeName": "Service",
              "unsafeName": "Service",
            },
            "screamingSnakeCase": {
              "safeName": "SERVICE",
              "unsafeName": "SERVICE",
            },
            "snakeCase": {
              "safeName": "service",
              "unsafeName": "service",
            },
          },
          "packagePath": [],
        },
      },
      "pathParameters": [],
    },
  },
  "subpackages": {
    "subpackage_service": {
      "docs": null,
      "errors": [],
      "fernFilepath": {
        "allParts": [
          {
            "camelCase": {
              "safeName": "service",
              "unsafeName": "service",
            },
            "originalName": "service",
            "pascalCase": {
              "safeName": "Service",
              "unsafeName": "Service",
            },
            "screamingSnakeCase": {
              "safeName": "SERVICE",
              "unsafeName": "SERVICE",
            },
            "snakeCase": {
              "safeName": "service",
              "unsafeName": "service",
            },
          },
        ],
        "file": {
          "camelCase": {
            "safeName": "service",
            "unsafeName": "service",
          },
          "originalName": "service",
          "pascalCase": {
            "safeName": "Service",
            "unsafeName": "Service",
          },
          "screamingSnakeCase": {
            "safeName": "SERVICE",
            "unsafeName": "SERVICE",
          },
          "snakeCase": {
            "safeName": "service",
            "unsafeName": "service",
          },
        },
        "packagePath": [],
      },
      "hasEndpointsInTree": true,
      "name": {
        "camelCase": {
          "safeName": "service",
          "unsafeName": "service",
        },
        "originalName": "service",
        "pascalCase": {
          "safeName": "Service",
          "unsafeName": "Service",
        },
        "screamingSnakeCase": {
          "safeName": "SERVICE",
          "unsafeName": "SERVICE",
        },
        "snakeCase": {
          "safeName": "service",
          "unsafeName": "service",
        },
      },
      "navigationConfig": null,
      "service": "service_service",
      "subpackages": [],
      "types": [],
      "webhooks": null,
    },
  },
  "types": {},
  "variables": [],
  "webhookGroups": {},
}
`;

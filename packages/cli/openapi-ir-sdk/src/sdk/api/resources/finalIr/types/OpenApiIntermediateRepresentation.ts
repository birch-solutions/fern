/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernOpenapiIr from "../../../index";

export interface OpenApiIntermediateRepresentation {
    /**
     * The API version scheme populated via `x-fern-version`.
     * This is intentionally typed as `unknown` so that we can
     * simply echo the Fern configuration as-is.
     */
    apiVersion: unknown | undefined;
    title: string | undefined;
    description: string | undefined;
    basePath: string | undefined;
    servers: FernOpenapiIr.Server[];
    /** Top level group information populated through `x-fern-groups`. */
    groups: Record<string, FernOpenapiIr.SdkGroupInfo>;
    tags: FernOpenapiIr.Tags;
    hasEndpointsMarkedInternal: boolean;
    endpoints: FernOpenapiIr.Endpoint[];
    webhooks: FernOpenapiIr.Webhook[];
    channel: FernOpenapiIr.WebsocketChannel[];
    /**
     * The schemas are organized by namespace and schema name.
     * The schema name is the key in the inner map.
     * Note that this also includes un-namespaced schemas with a static sentinel key of `__no_namespace__`,
     * as even when namespacing we allow for root, unnamespaced APIs, and this allows for the most flexibility.
     */
    schemas: Record<FernOpenapiIr.NamespaceId, Record<FernOpenapiIr.SchemaId, FernOpenapiIr.Schema>>;
    variables: Record<string, FernOpenapiIr.PrimitiveSchema>;
    /** Whether the schema is directly referenced from a response, parameters, or other schemas */
    nonRequestReferencedSchemas: Set<FernOpenapiIr.SchemaId>;
    securitySchemes: Record<FernOpenapiIr.SecuritySchemeId, FernOpenapiIr.SecurityScheme>;
    globalHeaders: FernOpenapiIr.GlobalHeader[] | undefined;
    idempotencyHeaders: FernOpenapiIr.IdempotencyHeader[] | undefined;
}

# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  DocsConfiguration:
    properties:
      instances: list<DocsInstances>
      title:
        type: optional<string>
        docs: used as tab bar title, and in the navbar if no logo is defined

      # navigation
      tabs: optional<map<TabId, TabConfig>>
      versions: optional<list<VersionConfig>>
      navigation:
        type: optional<NavigationConfig>
        docs: The navigation config is skipped when multiple versions are present.
      "navbar-links": optional<list<NavbarLink>>
      "footer-links": optional<FooterLinksConfig>

      # seo
      metadata: optional<MetadataConfig>
      redirects: optional<list<RedirectConfig>>

      # branding
      logo: optional<LogoConfiguration>
      favicon: optional<string>
      background-image: optional<BackgroundImageConfiguration>
      colors: optional<ColorsConfiguration>
      typography: optional<DocsTypographyConfig>
      layout: optional<LayoutConfig>

      # integrations
      integrations: optional<IntegrationsConfig>

      # scripts
      css: optional<CssConfig>
      js: optional<JsConfig>

  TabId: string

  TabConfig:
    properties:
      display-name: string
      icon: optional<string>
      slug: optional<string>
      skip-slug: optional<boolean>
      hidden: optional<boolean>
      href:
        type: optional<string>
        docs: |
          If `href` is set, clicking on the tab will redirect to the given URL.

          Tabs with `href` must not have children in the navigation config.

  DocsInstances:
    properties:
      url: string
      "custom-domain": optional<CustomDomain>
      audiences:
        type: optional<AudiencesConfig>
        availability: in-development
      private:
        type: optional<boolean>
        docs: |
          If `private` is set to true, Fern will protect the docs site with SSO.
        availability: in-development
      "edit-this-page":
        type: optional<EditThisPageConfig>
        docs: |
          If `edit-this-page` is set, Fern will add an "Edit this page" link to the bottom of each page that links to the given GitHub repository.
        availability: in-development

  CustomDomain:
    discriminated: false
    union:
      - string
      - list<string>

  # this is a partial object in case we want to add more options in the future
  EditThisPageConfig:
    properties:
      github: optional<GithubEditThisPageConfig>

  GithubEditThisPageConfig:
    properties:
      host:
        type: optional<string>
        docs: |
          @default: `github.com`
      owner: string
      repo: string
      branch:
        type: optional<string>
        docs: |
          @default: `main`

  AudiencesConfig:
    discriminated: false
    docs: |
      Restricts the API endpoints and webhooks that are included in the docs site.
      If `audiences` is not set, only entities marked as "external" will be included.
    union:
      - string
      - list<string>
      # - AudiencesRuleConfig

  # AudiencesRuleConfig:
  #   properties:
  #     include:
  #       type: optional<list<string>>
  #       docs: |
  #         If `include` is set, only entities that match the given audiences will be included in the site.
  #     exclude:
  #       type: optional<list<string>>
  #       docs: |
  #         If `exclude` is set, entities that match the given audiences will be excluded from the site.
  #     exclude-no-audience:
  #       type: optional<boolean>
  #       docs: |
  #         If `exclude-no-audience` is set to true, entities that do not have an audience will be excluded from the site.

  VersionConfig:
    properties:
      display-name: string
      path:
        type: string
        docs: The relative path to the version's docs.yml file.
      slug:
        type: optional<string>
        docs: The "slug" is this version's basePath. If not set, the slug will be generated from the display-name.
      availability:
        type: optional<VersionAvailability>
        docs: |
          If `availability` is set to `deprecated`, Fern will display a warning banner on the docs site.

  VersionAvailability:
    enum:
      - deprecated # TODO: should we support `legacy`?
      - ga
      - stable
      - beta

  VersionFileConfig:
    properties:
      tabs: optional<map<TabId, TabConfig>>
      navigation: NavigationConfig

  NavigationConfig:
    discriminated: false
    union:
      - UntabbedNavigationConifg
      - TabbedNavigationConfig

  UntabbedNavigationConifg: list<NavigationItem>

  TabbedNavigationConfig:
    type: list<TabbedNavigationItem>

  TabbedNavigationItem:
    properties:
      tab: TabId
      layout:
        type: optional<list<NavigationItem>>
        docs: If `href` is set, `layout` must be null.

  NavigationItem:
    discriminated: false
    union:
      - PageConfiguration
      - SectionConfiguration
      - ApiSectionConfiguration
      - LinkConfiguration

  LogoConfiguration:
    properties:
      dark: optional<string>
      light: optional<string>
      height: optional<double> # todo: this should be a string like `32px` or `2rem`
      href: optional<string>

  BackgroundImageConfiguration:
    docs: This background image is used to customize the appearance of your docs site.
    discriminated: false
    union:
      - string
      - BackgroundImageThemedConfig

  BackgroundImageThemedConfig:
    properties:
      dark: optional<string>
      light: optional<string>

  DocsTypographyConfig:
    properties:
      headingsFont: optional<FontConfig>
      bodyFont: optional<FontConfig>
      codeFont: optional<FontConfig>

  LayoutConfig:
    availability: generally-available
    properties:
      page-width:
        type: optional<string>
        docs: |
          Sets the maximum width of the docs layout, including the sidebar and content.

          @default: 88rem (1408px)

          Valid options are:
          - `{number}rem`
          - `{number}px`
          - `full` (100% of the viewport width)

      content-width:
        type: optional<string>
        docs: |
          Sets the maximum width of the markdown article content.

          @default: 44rem (704px)

          Valid options are:
          - `{number}rem`
          - `{number}px`

      sidebar-width:
        type: optional<string>
        docs: |
          Sets the width of the sidebar in desktop mode

          @default: 18rem (288px)

          Valid options are:
          - `{number}rem`
          - `{number}px`

      header-height:
        type: optional<string>
        docs: |
          Sets the height of the header

          @default: 4rem (64px)

          Valid options are:
          - `{number}rem`
          - `{number}px`

      searchbar-placement:
        type: optional<SidebarOrHeaderPlacement>
        docs: |
          Sets the placement of the searchbar

          @default: `sidebar`

          Note: this setting is ignored when `disable-header` is set to true.

      tabs-placement:
        type: optional<SidebarOrHeaderPlacement>
        docs: |
          Set the placement of the tabs

          @default: `sidebar`

          Note: this setting is ignored when `disable-header` is set to true.

      content-alignment:
        type: optional<ContentAlignment>
        docs: |
          Set the alignment of the mardown content.

          @default: `center`

          Side effects:
          - When the alignment is set to `center`, the "On this page" (ToC) will be aligned to the right of the page.
          - When the alignment is set to `left`, the content will be aligned next to the right of the markdown content.

      header-position:
        type: optional<HeaderPosition>
        availability: generally-available
        docs: |
          If `header-position` is set to `fixed`, the header will be fixed to the top of the viewport.
          If `header-position` is set to `absolute`, the header will be absolute and will scroll with the content.

          @default: `fixed`

      disable-header:
        type: optional<boolean>
        availability: generally-available
        docs: |
          If `disable-header` is set to true, the header will not be rendered. Instead, the logo will be rendered as part of the sidebar,
          and a 1px border will separate the sidebar from the content.

  SidebarOrHeaderPlacement:
    enum:
      - header
      - sidebar

  ContentAlignment:
    enum:
      - center
      - left

  HeaderPosition:
    enum:
      - fixed
      - static

  FontConfig:
    properties:
      name:
        type: optional<string>
        docs: |
          If the `name` is not supplied, Fern will default it to a generated name that will be used to reference your custom font in the eventually injected CSS in the docs.
      path:
        type: optional<string>
        docs: The relative path of the font file. To define multiple weight and style varations of the same font, use `paths` instead.
      weight:
        type: optional<string>
        docs: |
          @default: `100 900`.
        availability: in-development
      style:
        type: optional<FontStyle>
        docs: |
          @default: `normal`.
        availability: in-development
      paths:
        type: optional<list<FontConfigPath>>
        docs: |
          Use this instead of `path` if you want to specify multiple font files for different font weights and styles.
        availability: in-development
      display:
        type: optional<FontDisplay>
        docs: |
          @default: `swap`.
        availability: in-development
      fallback:
        type: optional<list<string>>
        docs: |
          Define fallback fonts in case the custom font fails to load.
        availability: in-development
      "font-variation-settings":
        type: optional<string>
        availability: in-development

  FontStyle:
    enum:
      - normal
      - italic

  FontDisplay:
    enum:
      - auto
      - block
      - swap
      - fallback
      - optional

  FontConfigPath:
    discriminated: false
    union:
      - string
      - FontConfigVariant

  FontConfigVariant:
    properties:
      path: string
      weight:
        type: optional<string>
        docs: |
          @default: `100 900`.
      style:
        type: optional<FontStyle>
        docs: |
          @default: `normal`.

  PageConfiguration:
    properties:
      page: string
      path: string
      slug: optional<string>
      icon: optional<string>
      hidden: optional<boolean>

  SectionConfiguration:
    properties:
      section: string
      contents: list<NavigationItem>
      collapsed: optional<boolean>
      slug: optional<string>
      icon: optional<string>
      hidden: optional<boolean>
      skip-slug: optional<boolean>

  ApiSectionConfiguration:
    properties:
      api: string
      "api-name":
        type: optional<string>
        docs: Name of API that we are referencing
      audiences: optional<list<string>>
      display-errors:
        type: optional<boolean>
        docs: Defaults to false
      snippets: optional<SnippetsConfiguration>
      summary:
        type: optional<string>
        docs: |
          Relative path to the markdown file. This summary is displayed at the top of the API section.
      layout:
        type: optional<ApiNavigationItems>
        docs: |
          Advanced usage: when specified, this object will be used to customize the order that your API endpoints are displayed in the docs site, including subpackages, and additional markdown pages (to be rendered in between API endpoints). If not specified, the order will be inferred from the OpenAPI Spec or Fern Definition.
      icon: optional<string>
      slug: optional<string>
      hidden: optional<boolean>
      skip-slug: optional<boolean>
      flattened:
        type: optional<boolean>
        docs: |
          If `flattened` is set to true, the title specified in `api` will be hidden, and its endpoints and subpackages won't be grouped under it.

          This setting is useful if the API reference is short and you want to display all endpoints at the top level.

  ApiNavigationItem:
    docs: |
      Use the `layout` object to customize the order that your API endpoints
      are displayed in the docs site.
    discriminated: false
    union:
      - type: string
        docs: |
          This should be either an endpoint, websocket, webhook, or subpackage ID
      - type: map<string, ApiNavigationItems>
        docs: |
          Keyed by subpackage ID, this object allows you to group endpoints and pages together.
      - type: PageConfiguration
        docs: |
          This should be a markdown file that will be displayed in the API section.

  ApiNavigationItems:
    type: list<ApiNavigationItem>
    examples:
      - name: Ordering Groups
        value:
          - users # users endpoints will be displayed first
          - roles
          - permissions
      - name: Ordering Endpoints
        value:
          - roles:
              - get
              - create
              - update
          - users:
              - get
              - create
              - update
          - permissions:
              - get
              - create
              - update
      - name: Ordering Groups and Pages
        value:
          - users
          - roles:
              - get
              - create
              - ./pages/inner-page.mdx
              - update
          - permissions

  LinkConfiguration:
    properties:
      link: string
      href: string

  VersionedSnippetLanguageConfiguration:
    properties:
      version: string
      package: string

  SnippetLanguageConfiguration:
    discriminated: false
    docs: |
      This snippets config object is meant to allow users to specify a specific package for the snippets,
      and optionally a version for that package. If you pass in a string, that should be the name of the package.
    union:
      - string
      - VersionedSnippetLanguageConfiguration

  SnippetsConfiguration:
    properties:
      python: optional<SnippetLanguageConfiguration>
      typescript: optional<SnippetLanguageConfiguration>
      go: optional<SnippetLanguageConfiguration>
      java: optional<SnippetLanguageConfiguration>

  ColorsConfiguration:
    properties:
      accent-primary:
        type: optional<ColorConfig>
        docs: |
          The primary accent color is used for buttons, links, and other interactive elements. 

          @default: #818CF8

      accentPrimary:
        type: optional<ColorConfig>
        name: accentPrimaryDeprecated
        availability: deprecated
        docs: |
          Use `accent-primary` instead.

      background:
        type: optional<ColorConfig>
        docs: |
          The background color is used for the main background of the docs site.

          @default:
            dark: #111111
            light: #F9F9F9

          If not set, there will be also be a vertical gradient from the top using the accent primary color with 5% opacity.

      border:
        type: optional<ColorConfig>
        docs: |
          The border color is used for the borders of cards and other elements.

          @default:
            dark: black/12%
            white: white/13%

      # content-background:
      #   type: optional<ColorConfig>
      #   docs: |
      #     This is the background color of the main content area, including the markdown article and the sidebar (if not overridden).

      #     @default: transparent

      sidebar-background:
        type: optional<ColorConfig>
        docs: |
          If `sidebarBackground` is not set, the sidebar will render with a transparent background without a border.
          If `sidebarBackground` is set, the sidebar will also render a 1px border on the right side.

      header-background:
        type: optional<ColorConfig>
        docs: |
          If `headerBackground` is not set, the header will render with a transparent background, with a 1px faded border on the bottom.
          If `headerBackground` is set, the header will render with a solid background, with a 1px solid border on the bottom.

      card-background:
        type: optional<ColorConfig>
        docs: |
          This is the background color of cards and code blocks.

          @default:
            dark: white/3.5%
            light: white/70%

  ColorConfig:
    discriminated: false
    union:
      - string
      - ColorThemedConfig

  ColorThemedConfig:
    properties:
      dark: optional<string>
      light: optional<string>

  NavbarLink:
    union:
      filled: NavbarLinkConfig
      outlined: NavbarLinkConfig
      minimal: NavbarLinkConfig
      github: NavbarGithubConfig

      # deprecated
      primary: NavbarLinkConfig # use `outlined` instead
      secondary: NavbarLinkConfig # use `minimal` instead

  NavbarLinkConfig:
    properties:
      href: optional<string>
      url:
        type: optional<string>
        availability: deprecated
        docs: Use `href` instead.
      text: optional<string>
      icon: optional<string>
      rightIcon: optional<string>
      rounded: optional<boolean>

  NavbarGithubConfig:
    type: string
    availability: in-development

  FooterLinksConfig:
    properties:
      github: optional<string>
      twitter: optional<string>
      x: optional<string>
      linkedin: optional<string>
      youtube: optional<string>
      instagram: optional<string>
      facebook: optional<string>
      discord: optional<string>
      slack: optional<string>
      hackernews: optional<string>
      medium: optional<string>
      website: optional<string>

  CssConfig:
    docs: |-
      The `css` object allows you to customize the appearance of your docs site by injecting custom CSS, i.e.

      ```yaml
      css: "path/to/css/file.css"
      ```

      or, multiple files:

      ```yaml
      css:
        - "path/to/css/file.css"
        - "path/to/another/css/file.css"
      ```
    discriminated: false
    union:
      - string # path to css file
      - list<string>

  JsConfig:
    docs: |-
      The `js` object allows you to customize the behavior of your docs site by injecting custom JavaScript, i.e.

      ```yaml
      js: "path/to/js/file.js"
      ```

      or, multiple files:

      ```yaml
      js:
        - "path/to/js/file.js"
        - "path/to/another/js/file.js"
      ```

      or remote js:

      ```yaml
      js:
        url: "https://example.com/path/to/js/file.js"
        strategy: "afterInteractive"
      ```

      or, mixed:

      ```yaml
      js:
        - "path/to/js/file.js"
        - path: "path/to/another/js/file.js"
          strategy: "beforeInteractive"
        - url: "https://example.com/path/to/js/file.js"
      ```
    discriminated: false
    union:
      - JsConfigOptions
      - list<JsConfigOptions>

  JsConfigOptions:
    discriminated: false
    union:
      - JsRemoteConfig
      - JsFileConfig

  JsRemoteConfig:
    properties:
      url: string
      strategy: optional<JsScriptStrategy>

  JsFileConfig:
    discriminated: false
    union:
      - string # path to js file
      - JsFileConfigSettings

  JsFileConfigSettings:
    properties:
      path: string
      strategy: optional<JsScriptStrategy>

  JsScriptStrategy:
    enum:
      - beforeInteractive
      - afterInteractive # default
      - lazyOnload

  MetadataConfig:
    docs: |
      The `metadata` object allows you to customize the appearance of your docs site in search engines and social media.
      These settings are applied globally, but can be overridden on a per-page basis using frontmatter.
    availability: in-development
    properties:
      "og:site_name": optional<string>
      "og:title": optional<string>
      "og:description": optional<string>
      "og:url": optional<string>
      "og:image": optional<string>
      "og:image:width": optional<double>
      "og:image:height": optional<double>
      "og:locale": optional<string>
      "og:logo": optional<string>
      "twitter:title": optional<string>
      "twitter:description": optional<string>
      "twitter:handle": optional<string>
      "twitter:image": optional<string>
      "twitter:site": optional<string>
      "twitter:url": optional<string>
      "twitter:card": optional<TwitterCardSetting>

  TwitterCardSetting:
    enum:
      - summary
      - summary_large_image
      - app
      - player

  RedirectConfig:
    availability: in-development
    docs: |
      The `redirects` object allows you to redirect traffic from one path to another, i.e.

      ```yaml
      redirects:
        - source: "/old-path"
          destination: "/new-path"
      ```
    properties:
      source:
        type: string
        docs: The path that you want to redirect from, i.e. `/old-path`
      destination:
        type: string
        docs: The path that you want to redirect to, i.e. `/new-path`

  IntegrationsConfig:
    properties:
      intercom: optional<string>

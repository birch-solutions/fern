/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernDocsConfig from "../../../index";

export type NavbarLink =
    | FernDocsConfig.NavbarLink.Filled
    | FernDocsConfig.NavbarLink.Outlined
    | FernDocsConfig.NavbarLink.Minimal
    | FernDocsConfig.NavbarLink.Github
    | FernDocsConfig.NavbarLink.Primary
    | FernDocsConfig.NavbarLink.Secondary;

export declare namespace NavbarLink {
    interface Filled extends FernDocsConfig.NavbarLinkConfig, _Utils {
        type: "filled";
    }

    interface Outlined extends FernDocsConfig.NavbarLinkConfig, _Utils {
        type: "outlined";
    }

    interface Minimal extends FernDocsConfig.NavbarLinkConfig, _Utils {
        type: "minimal";
    }

    interface Github extends _Utils {
        type: "github";
        value: FernDocsConfig.NavbarGithubConfig;
    }

    interface Primary extends FernDocsConfig.NavbarLinkConfig, _Utils {
        type: "primary";
    }

    interface Secondary extends FernDocsConfig.NavbarLinkConfig, _Utils {
        type: "secondary";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernDocsConfig.NavbarLink._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        filled: (value: FernDocsConfig.NavbarLinkConfig) => _Result;
        outlined: (value: FernDocsConfig.NavbarLinkConfig) => _Result;
        minimal: (value: FernDocsConfig.NavbarLinkConfig) => _Result;
        github: (value: FernDocsConfig.NavbarGithubConfig) => _Result;
        primary: (value: FernDocsConfig.NavbarLinkConfig) => _Result;
        secondary: (value: FernDocsConfig.NavbarLinkConfig) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const NavbarLink = {
    filled: (value: FernDocsConfig.NavbarLinkConfig): FernDocsConfig.NavbarLink.Filled => {
        return {
            ...value,
            type: "filled",
            _visit: function <_Result>(
                this: FernDocsConfig.NavbarLink.Filled,
                visitor: FernDocsConfig.NavbarLink._Visitor<_Result>
            ) {
                return FernDocsConfig.NavbarLink._visit(this, visitor);
            },
        };
    },

    outlined: (value: FernDocsConfig.NavbarLinkConfig): FernDocsConfig.NavbarLink.Outlined => {
        return {
            ...value,
            type: "outlined",
            _visit: function <_Result>(
                this: FernDocsConfig.NavbarLink.Outlined,
                visitor: FernDocsConfig.NavbarLink._Visitor<_Result>
            ) {
                return FernDocsConfig.NavbarLink._visit(this, visitor);
            },
        };
    },

    minimal: (value: FernDocsConfig.NavbarLinkConfig): FernDocsConfig.NavbarLink.Minimal => {
        return {
            ...value,
            type: "minimal",
            _visit: function <_Result>(
                this: FernDocsConfig.NavbarLink.Minimal,
                visitor: FernDocsConfig.NavbarLink._Visitor<_Result>
            ) {
                return FernDocsConfig.NavbarLink._visit(this, visitor);
            },
        };
    },

    github: (value: FernDocsConfig.NavbarGithubConfig): FernDocsConfig.NavbarLink.Github => {
        return {
            value: value,
            type: "github",
            _visit: function <_Result>(
                this: FernDocsConfig.NavbarLink.Github,
                visitor: FernDocsConfig.NavbarLink._Visitor<_Result>
            ) {
                return FernDocsConfig.NavbarLink._visit(this, visitor);
            },
        };
    },

    primary: (value: FernDocsConfig.NavbarLinkConfig): FernDocsConfig.NavbarLink.Primary => {
        return {
            ...value,
            type: "primary",
            _visit: function <_Result>(
                this: FernDocsConfig.NavbarLink.Primary,
                visitor: FernDocsConfig.NavbarLink._Visitor<_Result>
            ) {
                return FernDocsConfig.NavbarLink._visit(this, visitor);
            },
        };
    },

    secondary: (value: FernDocsConfig.NavbarLinkConfig): FernDocsConfig.NavbarLink.Secondary => {
        return {
            ...value,
            type: "secondary",
            _visit: function <_Result>(
                this: FernDocsConfig.NavbarLink.Secondary,
                visitor: FernDocsConfig.NavbarLink._Visitor<_Result>
            ) {
                return FernDocsConfig.NavbarLink._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernDocsConfig.NavbarLink,
        visitor: FernDocsConfig.NavbarLink._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "filled":
                return visitor.filled(value);
            case "outlined":
                return visitor.outlined(value);
            case "minimal":
                return visitor.minimal(value);
            case "github":
                return visitor.github(value.value);
            case "primary":
                return visitor.primary(value);
            case "secondary":
                return visitor.secondary(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;

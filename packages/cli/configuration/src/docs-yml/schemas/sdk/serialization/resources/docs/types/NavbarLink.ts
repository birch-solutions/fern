/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernDocsConfig from "../../../../api/index";
import * as core from "../../../../core";
import { NavbarLinkConfig } from "./NavbarLinkConfig";
import { NavbarGithubConfig } from "./NavbarGithubConfig";

export const NavbarLink: core.serialization.Schema<serializers.NavbarLink.Raw, FernDocsConfig.NavbarLink> =
    core.serialization
        .union("type", {
            filled: NavbarLinkConfig,
            outlined: NavbarLinkConfig,
            minimal: NavbarLinkConfig,
            github: core.serialization.object({
                value: NavbarGithubConfig,
            }),
            primary: NavbarLinkConfig,
            secondary: NavbarLinkConfig,
        })
        .transform<FernDocsConfig.NavbarLink>({
            transform: (value) => {
                switch (value.type) {
                    case "filled":
                        return FernDocsConfig.NavbarLink.filled(value);
                    case "outlined":
                        return FernDocsConfig.NavbarLink.outlined(value);
                    case "minimal":
                        return FernDocsConfig.NavbarLink.minimal(value);
                    case "github":
                        return FernDocsConfig.NavbarLink.github(value.value);
                    case "primary":
                        return FernDocsConfig.NavbarLink.primary(value);
                    case "secondary":
                        return FernDocsConfig.NavbarLink.secondary(value);
                    default:
                        return value as FernDocsConfig.NavbarLink;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace NavbarLink {
    type Raw =
        | NavbarLink.Filled
        | NavbarLink.Outlined
        | NavbarLink.Minimal
        | NavbarLink.Github
        | NavbarLink.Primary
        | NavbarLink.Secondary;

    interface Filled extends NavbarLinkConfig.Raw {
        type: "filled";
    }

    interface Outlined extends NavbarLinkConfig.Raw {
        type: "outlined";
    }

    interface Minimal extends NavbarLinkConfig.Raw {
        type: "minimal";
    }

    interface Github {
        type: "github";
        value: NavbarGithubConfig.Raw;
    }

    interface Primary extends NavbarLinkConfig.Raw {
        type: "primary";
    }

    interface Secondary extends NavbarLinkConfig.Raw {
        type: "secondary";
    }
}

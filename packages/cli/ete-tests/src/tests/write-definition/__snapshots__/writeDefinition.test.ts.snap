// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`validate > petstore 1`] = `
[
  {
    "contents": "types:
  Pet:
    properties:
      id: long
      name: string
      tag: optional<string>
    source:
      openapi: openapi/openapi.yml
  Pets: list<Pet>
  Error:
    properties:
      code: integer
      message: string
    source:
      openapi: openapi/openapi.yml
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "name: api
error-discrimination:
  strategy: status-code
display-name: Swagger Petstore
environments:
  Default: http://petstore.swagger.io/v1
default-environment: Default
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listPets:
      path: /pets
      method: GET
      auth: false
      display-name: List all pets
      request:
        name: ListPetsRequest
        query-parameters:
          limit:
            type: optional<integer>
            docs: How many items to return at one time (max 100)
      response:
        docs: A paged array of pets
        type: root.Pets
      examples:
        - response:
            body:
              - id: 1000000
                name: name
                tag: tag
    createPets:
      path: /pets
      method: POST
      auth: false
      display-name: Create a pet
      examples:
        - {}
    showPetById:
      path: /pets/{petId}
      method: GET
      auth: false
      path-parameters:
        petId:
          type: string
          docs: The id of the pet to retrieve
      display-name: Info for a specific pet
      response:
        docs: Expected response to a valid request
        type: root.Pet
      examples:
        - path-parameters:
            petId: petId
          response:
            body:
              id: 1000000
              name: name
              tag: tag
  source:
    openapi: openapi/openapi.yml
",
    "name": "pets.yml",
    "type": "file",
  },
]
`;

exports[`validate header overrides > header-overrides 1`] = `
[
  {
    "contents": "types:
  Pet:
    properties:
      id: long
      name: string
      tag: optional<string>
    source:
      openapi: openapi/openapi.yml
  Pets: list<Pet>
  Error:
    properties:
      code: integer
      message: string
    source:
      openapi: openapi/openapi.yml
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "name: api
error-discrimination:
  strategy: status-code
display-name: Swagger Petstore
environments:
  Default: http://petstore.swagger.io/v1
default-environment: Default
headers:
  X-Dummy-Header: optional<string>
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listPets:
      path: /pets
      method: GET
      auth: false
      display-name: List all pets
      request:
        name: ListPetsRequest
        query-parameters:
          limit:
            type: optional<integer>
            docs: How many items to return at one time (max 100)
      response:
        docs: A paged array of pets
        type: root.Pets
      examples:
        - response:
            body:
              - id: 1000000
                name: name
                tag: tag
    createPets:
      path: /pets
      method: POST
      auth: false
      display-name: Create a pet
      examples:
        - {}
    showPetById:
      path: /pets/{petId}
      method: GET
      auth: false
      path-parameters:
        petId:
          type: string
          docs: The id of the pet to retrieve
      display-name: Info for a specific pet
      response:
        docs: Expected response to a valid request
        type: root.Pet
      examples:
        - path-parameters:
            petId: petId
          response:
            body:
              id: 1000000
              name: name
              tag: tag
  source:
    openapi: openapi/openapi.yml
",
    "name": "pets.yml",
    "type": "file",
  },
]
`;

exports[`validate namespaced API > namespaced 1`] = `
[
  {
    "contents": "types:
  OauthScope:
    enum:
      - value: read
        docs: Read access
      - value: write
        docs: Write access
    source:
      openapi: openapi/trains/openapi.yml
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "name: api
error-discrimination:
  strategy: status-code
display-name: Train Travel API
default-environment: Production
environments:
  Production: https://api.example.com
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": [
      {
        "contents": "types:
  Pet:
    properties:
      id: long
      name: string
      tag: optional<string>
      messages: optional<V2ChatMessages>
    source:
      openapi: openapi/petstore/openapi.yml
  Pets: list<Pet>
  Error:
    properties:
      code: integer
      message: string
    source:
      openapi: openapi/petstore/openapi.yml
  V2ChatMessages:
    docs: >
      A list of chat messages in chronological order, representing a
      conversation between the user and the model.


      Messages can be from \`User\`, \`Assistant\`, \`Tool\` and \`System\` roles. Learn
      more about messages and roles in [the Chat API
      guide](https://docs.cohere.com/docs/chat-api).
    type: list<unknown>
",
        "name": "__package__.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  neopetsRoot: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listPets:
      path: /pets
      method: GET
      auth: false
      display-name: List all pets
      request:
        name: ListPetsRequest
        query-parameters:
          limit:
            type: optional<integer>
            docs: How many items to return at one time (max 100)
      response:
        docs: A paged array of pets
        type: neopetsRoot.Pets
      examples:
        - response:
            body:
              - id: 1000000
                name: name
                tag: tag
                messages:
                  - key: value
    createPets:
      path: /pets
      method: POST
      auth: false
      display-name: Create a pet
      examples:
        - {}
    showPetById:
      path: /pets/{petId}
      method: GET
      auth: false
      path-parameters:
        petId:
          type: string
          docs: The id of the pet to retrieve
      display-name: Info for a specific pet
      response:
        docs: Expected response to a valid request
        type: neopetsRoot.Pet
      examples:
        - path-parameters:
            petId: petId
          response:
            body:
              id: 1000000
              name: name
              tag: tag
              messages:
                - key: value
  source:
    openapi: openapi/petstore/openapi.yml
",
        "name": "pets.yml",
        "type": "file",
      },
    ],
    "name": "neopets",
    "type": "directory",
  },
  {
    "contents": [
      {
        "contents": "channel:
  path: marketDataV1
  auth: false
  path-parameters:
    symbol:
      type: string
      docs: >
        Symbols are formatted as CCY1CCY2 where prices are in CCY2 and
        quantities are in CCY1. To read more click
        [here](https://docs.sandbox.gemini.com/websocket-api/#symbols-and-minimums).
  query-parameters:
    heartbeat:
      type: optional<boolean>
      docs: >-
        Optionally add this parameter and set to true to receive a heartbeat
        every 5 seconds
    top_of_book:
      type: optional<boolean>
      docs: >-
        If absent or false, receive full order book depth; if present and true,
        receive top of book only. Only applies to bids and offers.
    bids:
      type: optional<boolean>
      docs: Include bids in change events
    offers:
      type: optional<boolean>
      docs: Include asks in change events
    trades:
      type: optional<boolean>
      docs: Include trade events
    auctions:
      type: optional<boolean>
      docs: Include auction events
  messages: {}
  examples:
    - messages: []
types:
  Market:
    discriminated: false
    union:
      - Heartbeat
      - Update
    source:
      openapi: asyncapi/sample.yml
  Heartbeat:
    properties:
      type: literal<"heartbeat">
    extends:
      - Default
    source:
      openapi: asyncapi/sample.yml
  Update:
    properties:
      type: literal<"update">
      eventId:
        type: integer
        docs: >-
          A monotonically increasing sequence number indicating when this change
          occurred. These numbers are persistent and consistent between market
          data connections.
      events: Events
      timestamp:
        type: double
        docs: >-
          The timestamp in seconds for this group of events (included for
          compatibility reasons). We recommend using the timestampms field
          instead.
      timestampms:
        type: double
        docs: The timestamp in milliseconds for this group of events.
    extends:
      - Default
    source:
      openapi: asyncapi/sample.yml
  Default:
    docs: >-
      This object is always part of the payload. In case of type=heartbeat,
      these are the only fields.
    properties:
      socket_sequence:
        type: integer
        docs: >-
          zero-indexed monotonic increasing sequence number attached to each
          message sent - if there is a gap in this sequence, you have missed a
          message. If you choose to enable heartbeats, then heartbeat and update
          messages will share a single increasing sequence. See [Sequence
          Numbers](https://docs.sandbox.gemini.com/websocket-api/#sequence-numbers)
          for more information.
    source:
      openapi: asyncapi/sample.yml
  EventsItemType:
    enum:
      - trade
      - change
      - value: auction, block_trade
        name: AuctionBlockTrade
    source:
      openapi: asyncapi/sample.yml
  EventsItemSide:
    enum:
      - bid
      - side
    source:
      openapi: asyncapi/sample.yml
  EventsItemReason:
    enum:
      - place
      - trade
      - cancel
      - initial
    docs: >-
      Indicates why the change has occurred. initial is for the initial response
      message, which will show the entire existing state of the order book.
    source:
      openapi: asyncapi/sample.yml
  EventsItem:
    properties:
      type: optional<EventsItemType>
      price:
        type: optional<double>
        docs: The price of this order book entry.
        validation:
          multipleOf: 0.01
      side: optional<EventsItemSide>
      reason:
        type: optional<EventsItemReason>
        docs: >-
          Indicates why the change has occurred. initial is for the initial
          response message, which will show the entire existing state of the
          order book.
      remaining:
        type: optional<double>
        docs: >-
          The quantity remaining at that price level after this change occurred.
          May be zero if all orders at this price level have been filled or
          canceled.
      delta:
        type: optional<double>
        docs: >-
          The quantity changed. May be negative, if an order is filled or
          canceled. For initial messages, delta will equal remaining.
    source:
      openapi: asyncapi/sample.yml
  Events:
    docs: >-
      Either a change to the order book, or the indication that a trade has
      occurred.
    type: list<EventsItem>
",
        "name": "__package__.yml",
        "type": "file",
      },
    ],
    "name": "stream",
    "type": "directory",
  },
  {
    "contents": [
      {
        "contents": "errors:
  BadRequestError:
    status-code: 400
    type: Problem
    docs: Bad Request
    examples:
      - value:
          type: https://example.com/errors/bad-request
          title: Bad Request
          status: 400
          detail: The request is invalid or missing required parameters.
  UnauthorizedError:
    status-code: 401
    type: Problem
    docs: Unauthorized
    examples:
      - value:
          type: https://example.com/errors/unauthorized
          title: Unauthorized
          status: 401
          detail: You do not have the necessary permissions.
  ForbiddenError:
    status-code: 403
    type: Problem
    docs: Forbidden
    examples:
      - value:
          type: https://example.com/errors/forbidden
          title: Forbidden
          status: 403
          detail: Access is forbidden with the provided credentials.
  TooManyRequestsError:
    status-code: 429
    type: Problem
    docs: Too Many Requests
    examples:
      - value:
          type: https://example.com/errors/too-many-requests
          title: Too Many Requests
          status: 429
          detail: You have exceeded the rate limit.
  InternalServerError:
    status-code: 500
    type: Problem
    docs: Internal Server Error
    examples:
      - value:
          type: https://example.com/errors/internal-server-error
          title: Internal Server Error
          status: 500
          detail: An unexpected error occurred.
  NotFoundError:
    status-code: 404
    type: Problem
    docs: Not Found
    examples:
      - value:
          type: https://example.com/errors/not-found
          title: Not Found
          status: 404
          detail: The requested resource was not found.
  ConflictError:
    status-code: 409
    type: Problem
    docs: Conflict
    examples:
      - value:
          type: https://example.com/errors/conflict
          title: Conflict
          status: 409
          detail: There is a conflict with an existing resource.
types:
  Pet:
    properties:
      id: long
      name: string
    source:
      openapi: openapi/trains/openapi.yml
  Station:
    properties:
      id:
        type: string
        docs: Unique identifier for the station.
        validation:
          format: uuid
      name:
        type: string
        docs: The name of the station
      address:
        type: string
        docs: The address of the station.
      country_code:
        type: string
        docs: The country code of the station.
      timezone:
        type: optional<string>
        docs: >-
          The timezone of the station in the [IANA Time Zone Database
          format](https://www.iana.org/time-zones).
      messages: optional<V2ChatMessages>
      pet: optional<Pet>
    source:
      openapi: openapi/trains/openapi.yml
  LinksSelf:
    properties:
      self:
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: openapi/trains/openapi.yml
  LinksPagination:
    properties:
      next:
        type: optional<string>
        validation:
          format: uri
      prev:
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: openapi/trains/openapi.yml
  Problem:
    properties:
      type:
        type: optional<string>
        docs: A URI reference that identifies the problem type
      title:
        type: optional<string>
        docs: A short, human-readable summary of the problem type
      detail:
        type: optional<string>
        docs: >-
          A human-readable explanation specific to this occurrence of the
          problem
      instance:
        type: optional<string>
        docs: A URI reference that identifies the specific occurrence of the problem
      status:
        type: optional<integer>
        docs: The HTTP status code
    source:
      openapi: openapi/trains/openapi.yml
  Trip:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the trip
        validation:
          format: uuid
      origin:
        type: optional<string>
        docs: The starting station of the trip
      destination:
        type: optional<string>
        docs: The destination station of the trip
      departure_time:
        type: optional<datetime>
        docs: The date and time when the trip departs
      arrival_time:
        type: optional<datetime>
        docs: The date and time when the trip arrives
      operator:
        type: optional<string>
        docs: The name of the operator of the trip
      price:
        type: optional<double>
        docs: The cost of the trip
      bicycles_allowed:
        type: optional<boolean>
        docs: Indicates whether bicycles are allowed on the trip
      dogs_allowed:
        type: optional<boolean>
        docs: Indicates whether dogs are allowed on the trip
    source:
      openapi: openapi/trains/openapi.yml
  Booking:
    properties:
      id:
        type: optional<string>
        docs: Unique identifier for the booking
        validation:
          format: uuid
      trip_id:
        type: optional<string>
        docs: Identifier of the booked trip
        validation:
          format: uuid
      passenger_name:
        type: optional<string>
        docs: Name of the passenger
      has_bicycle:
        type: optional<boolean>
        docs: Indicates whether the passenger has a bicycle.
      has_dog:
        type: optional<boolean>
        docs: Indicates whether the passenger has a dog.
    source:
      openapi: openapi/trains/openapi.yml
  WrapperCollection:
    docs: >-
      This is a generic request/response wrapper which contains both data and
      links which serve as hypermedia controls (HATEOAS).
    properties:
      data:
        type: optional<list<map<string, unknown>>>
        docs: The wrapper for a collection is an array of objects.
      links:
        type: optional<map<string, unknown>>
        docs: A set of hypermedia links which serve as controls for the client.
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentCurrency:
    enum:
      - bam
      - bgn
      - chf
      - eur
      - gbp
      - nok
      - sek
      - try
    docs: >-
      Three-letter [ISO currency
      code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
    source:
      openapi: openapi/trains/openapi.yml
  Card:
    docs: A card (debit or credit) to take payment from.
    properties:
      name:
        type: string
        docs: Cardholder's full name as it appears on the card.
      number:
        type: string
        docs: >-
          The card number, as a string without any separators. On read all but
          the last four digits will be masked for security.
      cvc:
        type: integer
        docs: >-
          Card security code, 3 or 4 digits usually found on the back of the
          card.
      exp_month:
        type: long
        docs: Two-digit number representing the card's expiration month.
      exp_year:
        type: long
        docs: Four-digit number representing the card's expiration year.
      address_line1:
        type: optional<string>
      address_line2:
        type: optional<string>
      address_city:
        type: optional<string>
      address_country: string
      address_post_code:
        type: optional<string>
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentSourceBankAccountAccountType:
    enum:
      - individual
      - company
    docs: >-
      The type of entity that holds the account. This can be either \`individual\`
      or \`company\`.
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentSourceBankAccount:
    docs: >-
      A bank account to take payment from. Must be able to make payments in the
      currency specified in the payment.
    properties:
      name: string
      number:
        type: string
        docs: >-
          The account number for the bank account, in string form. Must be a
          current account.
      sort_code:
        type: optional<string>
        docs: >-
          The sort code for the bank account, in string form. Must be a
          six-digit number.
      account_type:
        type: BookingPaymentSourceBankAccountAccountType
        docs: >-
          The type of entity that holds the account. This can be either
          \`individual\` or \`company\`.
      bank_name:
        type: string
        docs: The name of the bank associated with the routing number.
      country:
        type: string
        docs: Two-letter country code (ISO 3166-1 alpha-2).
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentSource:
    discriminant: object
    base-properties: {}
    docs: >-
      The payment source to take the payment from. This can be a card or a bank
      account. Some of these properties will be hidden on read to protect PII
      leaking.
    union:
      card:
        type: Card
        docs: A card (debit or credit) to take payment from.
      bank_account:
        type: BookingPaymentSourceBankAccount
        docs: >-
          A bank account to take payment from. Must be able to make payments in
          the currency specified in the payment.
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentStatus:
    enum:
      - pending
      - succeeded
      - failed
    docs: The status of the payment, one of \`pending\`, \`succeeded\`, or \`failed\`.
    source:
      openapi: openapi/trains/openapi.yml
  BookingPayment:
    properties:
      id:
        type: optional<string>
        docs: >-
          Unique identifier for the payment. This will be a unique identifier
          for the payment, and is used to reference the payment in other
          objects.
        validation:
          format: uuid
      amount:
        type: optional<double>
        docs: >-
          Amount intended to be collected by this payment. A positive decimal
          figure describing the amount to be collected.
      currency:
        type: optional<BookingPaymentCurrency>
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
      source:
        type: optional<BookingPaymentSource>
        docs: >-
          The payment source to take the payment from. This can be a card or a
          bank account. Some of these properties will be hidden on read to
          protect PII leaking.
      status:
        type: optional<BookingPaymentStatus>
        docs: The status of the payment, one of \`pending\`, \`succeeded\`, or \`failed\`.
    source:
      openapi: openapi/trains/openapi.yml
  LinksBooking:
    properties:
      booking:
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: openapi/trains/openapi.yml
  V2ChatMessages:
    docs: >
      A list of chat messages in chronological order, representing a
      conversation between the user and the model.


      Messages can be from \`User\`, \`Assistant\`, \`Tool\` and \`System\` roles. Learn
      more about messages and roles in [the Chat API
      guide](https://docs.cohere.com/docs/chat-api).
    type: list<unknown>
",
        "name": "__package__.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  GetBookingsResponseLinks:
    properties: {}
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    source:
      openapi: openapi/trains/openapi.yml
  GetBookingsResponse:
    properties:
      data: optional<list<trainsRoot.Booking>>
      links: optional<GetBookingsResponseLinks>
    source:
      openapi: openapi/trains/openapi.yml
  CreateBookingResponse:
    properties:
      links: optional<trainsRoot.LinksSelf>
    extends:
      - trainsRoot.Booking
    source:
      openapi: openapi/trains/openapi.yml
  GetBookingResponse:
    properties:
      links: optional<trainsRoot.LinksSelf>
    extends:
      - trainsRoot.Booking
    source:
      openapi: openapi/trains/openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-bookings:
      path: /bookings
      method: GET
      auth: true
      docs: Returns a list of all trip bookings by the authenticated user.
      display-name: List existing bookings
      response:
        docs: A list of bookings
        type: GetBookingsResponse
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - response:
            body:
              data:
                - id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  passenger_name: John Doe
                  has_bicycle: true
                  has_dog: true
                - id: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  trip_id: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  passenger_name: Jane Smith
                  has_bicycle: false
                  has_dog: false
              links:
                next: https://api.example.com/bookings?page=2
                prev: prev
                self: https://api.example.com/bookings
    create-booking:
      path: /bookings
      method: POST
      auth: true
      docs: >-
        A booking is a temporary hold on a trip. It is not confirmed until the
        payment is processed.
      display-name: Create a booking
      request:
        body: trainsRoot.Booking
        content-type: application/json
      response:
        docs: Booking successful
        type: CreateBookingResponse
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.NotFoundError
        - trainsRoot.ConflictError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - request: {}
          response:
            body:
              id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
              trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
              passenger_name: John Doe
              has_bicycle: true
              has_dog: true
              links:
                self: >-
                  https://api.example.com/bookings/efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
    get-booking:
      path: /bookings/{bookingId}
      method: GET
      auth: true
      docs: Returns the details of a specific booking.
      path-parameters:
        bookingId:
          type: string
          docs: The ID of the booking to retrieve.
      display-name: Get a booking
      response:
        docs: The booking details
        type: GetBookingResponse
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.NotFoundError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          response:
            body:
              id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
              trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
              passenger_name: John Doe
              has_bicycle: true
              has_dog: true
              links:
                self: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
    delete-booking:
      path: /bookings/{bookingId}
      method: DELETE
      auth: true
      docs: Deletes a booking, cancelling the hold on the trip.
      path-parameters:
        bookingId:
          type: string
          docs: The ID of the booking to retrieve.
      display-name: Delete a booking
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.NotFoundError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
  source:
    openapi: openapi/trains/openapi.yml
  display-name: Bookings
docs: |
  Create and manage bookings for train trips, including passenger details
  and optional extras.
",
        "name": "bookings.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  CreateBookingPaymentResponse:
    properties:
      links: optional<trainsRoot.LinksBooking>
    extends:
      - trainsRoot.BookingPayment
    source:
      openapi: openapi/trains/openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create-booking-payment:
      path: /bookings/{bookingId}/payment
      method: POST
      auth: true
      docs: >-
        A payment is an attempt to pay for the booking, which will confirm the
        booking for the user and enable them to get their tickets.
      path-parameters:
        bookingId:
          type: string
          docs: The ID of the booking to pay for.
      display-name: Pay for a Booking
      request:
        body: trainsRoot.BookingPayment
        content-type: application/json
      response:
        docs: Payment successful
        type: CreateBookingPaymentResponse
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - name: Card Payment
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              object: card
              name: J. Doe
              number: '4242424242424242'
              cvc: 123
              exp_month: 12
              exp_year: 2025
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_city: London
              address_country: gb
              address_post_code: N12 9XX
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 49.99
              currency: gbp
              source:
                object: card
                name: J. Doe
                number: '************4242'
                cvc: 123
                exp_month: 12
                exp_year: 2025
                address_line1: source
                address_line2: source
                address_city: source
                address_country: gb
                address_post_code: N12 9XX
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
        - name: Bank Account Payment
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 100.5
            currency: gbp
            source:
              object: bank_account
              name: J. Doe
              number: '00012345'
              sort_code: '000123'
              account_type: individual
              bank_name: Starling Bank
              country: gb
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 49.99
              currency: gbp
              source:
                object: card
                name: J. Doe
                number: '************4242'
                cvc: 123
                exp_month: 12
                exp_year: 2025
                address_line1: source
                address_line2: source
                address_city: source
                address_country: gb
                address_post_code: N12 9XX
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
        - name: Card Payment 2
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              object: card
              name: J. Doe
              number: '4242424242424242'
              cvc: 123
              exp_month: 12
              exp_year: 2025
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_city: London
              address_country: gb
              address_post_code: N12 9XX
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 49.99
              currency: gbp
              source:
                object: card
                name: J. Doe
                number: '************4242'
                cvc: 123
                exp_month: 12
                exp_year: 2025
                address_line1: source
                address_line2: source
                address_city: source
                address_country: gb
                address_post_code: N12 9XX
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
        - name: Bank Account Payment 2
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              object: card
              name: J. Doe
              number: '4242424242424242'
              cvc: 123
              exp_month: 12
              exp_year: 2025
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_city: London
              address_country: gb
              address_post_code: N12 9XX
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 100.5
              currency: gbp
              source:
                object: bank_account
                name: J. Doe
                number: '*********2345'
                sort_code: '000123'
                account_type: individual
                bank_name: Starling Bank
                country: gb
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
  source:
    openapi: openapi/trains/openapi.yml
  display-name: Payments
docs: |
  Pay for bookings using a card or bank account, and view payment
  status and history.

  > warn
  > Bookings usually expire within 1 hour so you'll need to make your payment
  > before the expiry date 
",
        "name": "payments.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  GetStationsResponseLinks:
    properties: {}
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    source:
      openapi: openapi/trains/openapi.yml
  GetStationsResponse:
    properties:
      data: optional<list<trainsRoot.Station>>
      links: optional<GetStationsResponseLinks>
    source:
      openapi: openapi/trains/openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-stations:
      path: /stations
      method: GET
      auth: true
      docs: Returns a list of all train stations in the system.
      display-name: Get a list of train stations
      response:
        docs: A list of train stations
        type: GetStationsResponse
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - response:
            body:
              data:
                - id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  name: Berlin Hauptbahnhof
                  address: Invalidenstraße 10557 Berlin, Germany
                  country_code: DE
                  timezone: Europe/Berlin
                  pet:
                    id: 1000000
                    name: name
                - id: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  name: Paris Gare du Nord
                  address: 18 Rue de Dunkerque 75010 Paris, France
                  country_code: FR
                  timezone: Europe/Paris
                  pet:
                    id: 1000000
                    name: name
              links:
                next: https://api.example.com/stations?page=3
                prev: https://api.example.com/stations?page=1
                self: https://api.example.com/stations&page=2
  source:
    openapi: openapi/trains/openapi.yml
  display-name: Stations
docs: |
  Find and filter train stations across Europe, including their location
  and local timezone.
",
        "name": "stations.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  NewBookingPayloadLinks:
    properties: {}
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    source:
      openapi: openapi/trains/openapi.yml
  NewBookingPayload:
    properties:
      links: optional<NewBookingPayloadLinks>
    extends:
      - trainsRoot.Booking
    source:
      openapi: openapi/trains/openapi.yml
webhooks:
  new-booking:
    method: POST
    display-name: New Booking
    headers: {}
    payload: NewBookingPayload
    examples:
      - payload:
          id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
          trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
          passenger_name: John Doe
          has_bicycle: true
          has_dog: true
          links:
            self: >-
              https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
    docs: >
      Subscribe to new bookings being created, to update integrations for your
      users.  Related data is available via the links provided in the request.
",
        "name": "trains.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  GetTripsResponseLinks:
    properties: {}
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    source:
      openapi: openapi/trains/openapi.yml
  GetTripsResponse:
    properties:
      data: optional<list<trainsRoot.Trip>>
      links: optional<GetTripsResponseLinks>
    source:
      openapi: openapi/trains/openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-trips:
      path: /trips
      method: GET
      auth: true
      docs: >-
        Returns a list of available train trips between the specified origin and
        destination stations on the given date, and allows for filtering by
        bicycle and dog allowances.
      display-name: Get available train trips
      request:
        name: GetTripsRequest
        query-parameters:
          origin:
            type: string
            docs: The ID of the origin station
          destination:
            type: string
            docs: The ID of the destination station
          date:
            type: datetime
            docs: >-
              The date and time of the trip in ISO 8601 format in origin
              station's timezone.
          bicycles:
            type: optional<boolean>
            docs: Only return trips where bicycles are known to be allowed
          dogs:
            type: optional<boolean>
            docs: Only return trips where dogs are known to be allowed
      response:
        docs: A list of available train trips
        type: GetTripsResponse
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - query-parameters:
            origin: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
            destination: b2e783e1-c824-4d63-b37a-d8d698862f1d
            date: '2024-02-01T09:00:00Z'
          response:
            body:
              data:
                - id: ea399ba1-6d95-433f-92d1-83f67b775594
                  origin: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  destination: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  departure_time: '2024-02-01T10:00:00Z'
                  arrival_time: '2024-02-01T16:00:00Z'
                  operator: Deutsche Bahn
                  price: 50
                  bicycles_allowed: true
                  dogs_allowed: true
                - id: 4d67459c-af07-40bb-bb12-178dbb88e09f
                  origin: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  destination: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  departure_time: '2024-02-01T12:00:00Z'
                  arrival_time: '2024-02-01T18:00:00Z'
                  operator: SNCF
                  price: 50
                  bicycles_allowed: true
                  dogs_allowed: true
              links:
                next: >-
                  https://api.example.com/trips?origin=efdbb9d1-02c2-4bc3-afb7-6788d8782b1e&destination=b2e783e1-c824-4d63-b37a-d8d698862f1d&date=2024-02-01&page=2
                prev: prev
                self: >-
                  https://api.example.com/trips?origin=efdbb9d1-02c2-4bc3-afb7-6788d8782b1e&destination=b2e783e1-c824-4d63-b37a-d8d698862f1d&date=2024-02-01
  source:
    openapi: openapi/trains/openapi.yml
  display-name: Trips
docs: |
  Timetables and routes for train trips between stations, including pricing
  and availability.
",
        "name": "trips.yml",
        "type": "file",
      },
    ],
    "name": "trains",
    "type": "directory",
  },
]
`;

exports[`validate namespaced API from Cohere > namespaced-fleshedout 1`] = `
[
  {
    "contents": "{}
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "name: api
error-discrimination:
  strategy: status-code
display-name: API Reference
default-environment: Production
environments:
  Production: https://api.cohere.com
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
    token:
      env: CO_API_KEY
auth: BearerAuthScheme
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": [
      {
        "contents": "types:
  ChatRequestPromptTruncation:
    enum:
      - 'OFF'
      - AUTO
      - AUTO_PRESERVE_ORDER
    docs: >
      Defaults to \`AUTO\` when \`connectors\` are specified and \`OFF\` in all other
      cases.


      Dictates how the prompt will be constructed.


      With \`prompt_truncation\` set to "AUTO", some elements from \`chat_history\`
      and \`documents\` will be dropped in an attempt to construct a prompt that
      fits within the model's context length limit. During this process the
      order of the documents and chat history will be changed and ranked by
      relevance.


      With \`prompt_truncation\` set to "AUTO_PRESERVE_ORDER", some elements from
      \`chat_history\` and \`documents\` will be dropped in an attempt to construct
      a prompt that fits within the model's context length limit. During this
      process the order of the documents and chat history will be preserved as
      they are inputted into the API.


      With \`prompt_truncation\` set to "OFF", no elements will be dropped. If the
      sum of the inputs exceeds the model's context length limit, a
      \`TooManyTokens\` error will be returned.


      Compatible Deployments: 
       - AUTO: Cohere Platform Only
       - AUTO_PRESERVE_ORDER: Azure, AWS Sagemaker/Bedrock, Private Deployments
    source:
      openapi: openapi/cohere.yaml
  ChatRequestSafetyMode:
    enum:
      - CONTEXTUAL
      - STRICT
      - NONE
    docs: >
      Used to select the [safety instruction](/docs/safety-modes) inserted into
      the prompt. Defaults to \`CONTEXTUAL\`.

      When \`NONE\` is specified, the safety instruction will be omitted.


      Safety modes are not yet configurable in combination with \`tools\`,
      \`tool_results\` and \`documents\` parameters.


      **Note**: This parameter is only compatible with models [Command R
      08-2024](/docs/command-r#august-2024-release), [Command R+
      08-2024](/docs/command-r-plus#august-2024-release) and newer.


      Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock,
      Private Deployments
    source:
      openapi: openapi/cohere.yaml
  BadRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  UnauthorizedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  ForbiddenErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  NotFoundErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  UnprocessableEntityErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  TooManyRequestsErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  ClientClosedRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  InternalServerErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  NotImplementedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  ServiceUnavailableErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  GatewayTimeoutErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
errors:
  BadRequestError:
    status-code: 400
    type: BadRequestErrorBody
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
  UnauthorizedError:
    status-code: 401
    type: UnauthorizedErrorBody
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
  ForbiddenError:
    status-code: 403
    type: ForbiddenErrorBody
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
  NotFoundError:
    status-code: 404
    type: NotFoundErrorBody
    docs: >
      This error is returned when a resource is not found. This could be
      because:
        - The endpoint does not exist
        - The resource does not exist eg model id, dataset id
  UnprocessableEntityError:
    status-code: 422
    type: UnprocessableEntityErrorBody
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
  TooManyRequestsError:
    status-code: 429
    type: TooManyRequestsErrorBody
    docs: Too many requests
  ClientClosedRequestError:
    status-code: 499
    type: ClientClosedRequestErrorBody
    docs: |
      This error is returned when a request is cancelled by the user.
  InternalServerError:
    status-code: 500
    type: InternalServerErrorBody
    docs: |
      This error is returned when an uncategorised internal server error occurs.
  NotImplementedError:
    status-code: 501
    type: NotImplementedErrorBody
    docs: |
      This error is returned when the requested feature is not implemented.
  ServiceUnavailableError:
    status-code: 503
    type: ServiceUnavailableErrorBody
    docs: >
      This error is returned when the service is unavailable. This could be due
      to:
        - Too many users trying to access the service at the same time
  GatewayTimeoutError:
    status-code: 504
    type: GatewayTimeoutErrorBody
    docs: >
      This error is returned when a request to the server times out. This could
      be due to:
        - An internal services taking too long to respond
service:
  auth: false
  base-path: ''
  endpoints:
    chat:
      path: /v1/chat
      method: POST
      auth: true
      docs: >
        Generates a text response to a user message.

        To learn how to use the Chat API and RAG follow our [Text Generation
        guides](https://docs.cohere.com/docs/chat-api).
      display-name: Chat
      request:
        name: ChatRequest
        headers:
          Accepts:
            type: optional<literal<"text/event-stream">>
            name: accepts
            docs: >
              Pass text/event-stream to receive the streamed response as
              server-sent events. The default is \`\\n\` delimited events.
        body:
          properties:
            message:
              type: string
              docs: >
                Text input for the model to respond to.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              audiences:
                - public
            model:
              type: optional<string>
              docs: >
                Defaults to \`command-r-plus-08-2024\`.


                The name of a compatible [Cohere
                model](https://docs.cohere.com/docs/models) or the ID of a
                [fine-tuned](https://docs.cohere.com/docs/chat-fine-tuning)
                model.


                Compatible Deployments: Cohere Platform, Private Deployments
              audiences:
                - public
            stream:
              type: optional<boolean>
              docs: >
                Defaults to \`false\`.


                When \`true\`, the response will be a JSON stream of events. The
                final event will contain the complete response, and will have an
                \`event_type\` of \`"stream-end"\`.


                Streaming is beneficial for user interfaces that render the
                contents of the response piece by piece, as it gets generated.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              audiences:
                - public
            preamble:
              type: optional<string>
              docs: >
                When specified, the default Cohere preamble will be replaced
                with the provided one. Preambles are a part of the prompt used
                to adjust the model's overall behavior and conversation style,
                and use the \`SYSTEM\` role.


                The \`SYSTEM\` role is also used for the contents of the optional
                \`chat_history=\` parameter. When used with the \`chat_history=\`
                parameter it adds content throughout a conversation. Conversely,
                when used with the \`preamble=\` parameter it adds content at the
                start of the conversation only.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              audiences:
                - public
            chat_history:
              type: optional<list<unknown>>
              docs: >
                A list of previous messages between the user and the model,
                giving the model conversational context for responding to the
                user's \`message\`.


                Each item represents a single message in the chat history,
                excluding the current user turn. It has two properties: \`role\`
                and \`message\`. The \`role\` identifies the sender (\`CHATBOT\`,
                \`SYSTEM\`, or \`USER\`), while the \`message\` contains the text
                content.


                The chat_history parameter should not be used for \`SYSTEM\`
                messages in most cases. Instead, to add a \`SYSTEM\` role message
                at the beginning of a conversation, the \`preamble\` parameter
                should be used.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              audiences:
                - public
            conversation_id:
              type: optional<string>
              docs: >
                An alternative to \`chat_history\`.


                Providing a \`conversation_id\` creates or resumes a persisted
                conversation with the specified ID. The ID can be any non empty
                string.


                Compatible Deployments: Cohere Platform
              audiences:
                - public
            prompt_truncation:
              type: optional<ChatRequestPromptTruncation>
              docs: >
                Defaults to \`AUTO\` when \`connectors\` are specified and \`OFF\` in
                all other cases.


                Dictates how the prompt will be constructed.


                With \`prompt_truncation\` set to "AUTO", some elements from
                \`chat_history\` and \`documents\` will be dropped in an attempt to
                construct a prompt that fits within the model's context length
                limit. During this process the order of the documents and chat
                history will be changed and ranked by relevance.


                With \`prompt_truncation\` set to "AUTO_PRESERVE_ORDER", some
                elements from \`chat_history\` and \`documents\` will be dropped in
                an attempt to construct a prompt that fits within the model's
                context length limit. During this process the order of the
                documents and chat history will be preserved as they are
                inputted into the API.


                With \`prompt_truncation\` set to "OFF", no elements will be
                dropped. If the sum of the inputs exceeds the model's context
                length limit, a \`TooManyTokens\` error will be returned.


                Compatible Deployments: 
                 - AUTO: Cohere Platform Only
                 - AUTO_PRESERVE_ORDER: Azure, AWS Sagemaker/Bedrock, Private Deployments
              audiences:
                - public
            force_single_step:
              type: optional<boolean>
              docs: Forces the chat to be single step. Defaults to \`false\`.
              audiences:
                - public
            safety_mode:
              type: optional<ChatRequestSafetyMode>
              docs: >
                Used to select the [safety instruction](/docs/safety-modes)
                inserted into the prompt. Defaults to \`CONTEXTUAL\`.

                When \`NONE\` is specified, the safety instruction will be
                omitted.


                Safety modes are not yet configurable in combination with
                \`tools\`, \`tool_results\` and \`documents\` parameters.


                **Note**: This parameter is only compatible with models [Command
                R 08-2024](/docs/command-r#august-2024-release), [Command R+
                08-2024](/docs/command-r-plus#august-2024-release) and newer.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              audiences:
                - public
              availability: pre-release
        content-type: application/json
      response:
        docs: OK
        type: list<string>
      errors:
        - BadRequestError
        - UnauthorizedError
        - ForbiddenError
        - NotFoundError
        - UnprocessableEntityError
        - TooManyRequestsError
        - ClientClosedRequestError
        - InternalServerError
        - NotImplementedError
        - ServiceUnavailableError
        - GatewayTimeoutError
      examples:
        - request:
            message: message
          response:
            body:
              - string
      audiences:
        - public
  source:
    openapi: openapi/cohere.yaml
",
        "name": "__package__.yml",
        "type": "file",
      },
    ],
    "name": "v1",
    "type": "directory",
  },
  {
    "contents": [
      {
        "contents": "types:
  BadRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  UnauthorizedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  ForbiddenErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  NotFoundErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  UnprocessableEntityErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  TooManyRequestsErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  ClientClosedRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  InternalServerErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  NotImplementedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  ServiceUnavailableErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  GatewayTimeoutErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
errors:
  BadRequestError:
    status-code: 400
    type: BadRequestErrorBody
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
  UnauthorizedError:
    status-code: 401
    type: UnauthorizedErrorBody
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
  ForbiddenError:
    status-code: 403
    type: ForbiddenErrorBody
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
  NotFoundError:
    status-code: 404
    type: NotFoundErrorBody
    docs: >
      This error is returned when a resource is not found. This could be
      because:
        - The endpoint does not exist
        - The resource does not exist eg model id, dataset id
  UnprocessableEntityError:
    status-code: 422
    type: UnprocessableEntityErrorBody
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
  TooManyRequestsError:
    status-code: 429
    type: TooManyRequestsErrorBody
    docs: Too many requests
  ClientClosedRequestError:
    status-code: 499
    type: ClientClosedRequestErrorBody
    docs: |
      This error is returned when a request is cancelled by the user.
  InternalServerError:
    status-code: 500
    type: InternalServerErrorBody
    docs: |
      This error is returned when an uncategorised internal server error occurs.
  NotImplementedError:
    status-code: 501
    type: NotImplementedErrorBody
    docs: |
      This error is returned when the requested feature is not implemented.
  ServiceUnavailableError:
    status-code: 503
    type: ServiceUnavailableErrorBody
    docs: >
      This error is returned when the service is unavailable. This could be due
      to:
        - Too many users trying to access the service at the same time
  GatewayTimeoutError:
    status-code: 504
    type: GatewayTimeoutErrorBody
    docs: >
      This error is returned when a request to the server times out. This could
      be due to:
        - An internal services taking too long to respond
",
        "name": "__package__.yml",
        "type": "file",
      },
      {
        "contents": "types:
  V2ChatRequestSafetyMode:
    enum:
      - CONTEXTUAL
      - STRICT
      - NONE
    docs: >
      Used to select the [safety instruction](/docs/safety-modes) inserted into
      the prompt. Defaults to \`CONTEXTUAL\`.

      When \`NONE\` is specified, the safety instruction will be omitted.


      Safety modes are not yet configurable in combination with \`tools\`,
      \`tool_results\` and \`documents\` parameters.


      **Note**: This parameter is only compatible with models [Command R
      08-2024](/docs/command-r#august-2024-release), [Command R+
      08-2024](/docs/command-r-plus#august-2024-release) and newer.


      Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock,
      Private Deployments
    source:
      openapi: openapi/cohere-v2.yaml
imports:
  v2Root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    chat:
      path: /v2/chat
      method: POST
      auth: true
      docs: >
        Generates a message from the model in response to a provided
        conversation. To learn how to use the Chat API with Streaming and RAG
        follow our Text Generation guides.
      display-name: Chat with the model
      request:
        name: V2ChatRequest
        body:
          properties:
            model:
              type: string
              docs: >-
                The name of a compatible [Cohere
                model](https://docs.cohere.com/docs/models) (such as command-r
                or command-r-plus) or the ID of a
                [fine-tuned](https://docs.cohere.com/docs/chat-fine-tuning)
                model.
            documents:
              type: optional<list<string>>
              docs: >
                A list of relevant documents that the model can cite to generate
                a more accurate reply. Each document is either a string or
                document object with content and metadata.
            safety_mode:
              type: optional<V2ChatRequestSafetyMode>
              docs: >
                Used to select the [safety instruction](/docs/safety-modes)
                inserted into the prompt. Defaults to \`CONTEXTUAL\`.

                When \`NONE\` is specified, the safety instruction will be
                omitted.


                Safety modes are not yet configurable in combination with
                \`tools\`, \`tool_results\` and \`documents\` parameters.


                **Note**: This parameter is only compatible with models [Command
                R 08-2024](/docs/command-r#august-2024-release), [Command R+
                08-2024](/docs/command-r-plus#august-2024-release) and newer.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
            max_tokens:
              type: optional<integer>
              docs: >
                The maximum number of tokens the model will generate as part of
                the response. Note: Setting a low value may result in incomplete
                generations.
            stop_sequences:
              type: optional<list<string>>
              docs: >
                A list of up to 5 strings that the model will use to stop
                generation. If the model generates a string that matches any of
                the strings in the list, it will stop generating tokens and
                return the generated text up to that point not including the
                stop sequence.
            temperature:
              type: optional<float>
              docs: >
                Defaults to \`0.3\`.


                A non-negative float that tunes the degree of randomness in
                generation. Lower temperatures mean less random generations, and
                higher temperatures mean more random generations.


                Randomness can be further maximized by increasing the  value of
                the \`p\` parameter.
            return_prompt:
              type: optional<boolean>
              docs: Whether to return the prompt in the response.
        content-type: application/json
      response:
        docs: OK
        type: list<string>
      errors:
        - v2Root.BadRequestError
        - v2Root.UnauthorizedError
        - v2Root.ForbiddenError
        - v2Root.NotFoundError
        - v2Root.UnprocessableEntityError
        - v2Root.TooManyRequestsError
        - v2Root.ClientClosedRequestError
        - v2Root.InternalServerError
        - v2Root.NotImplementedError
        - v2Root.ServiceUnavailableError
        - v2Root.GatewayTimeoutError
      examples:
        - request:
            model: model
          response:
            body:
              - string
      audiences:
        - v2-beta
  source:
    openapi: openapi/cohere-v2.yaml
",
        "name": "v2.yml",
        "type": "file",
      },
    ],
    "name": "v2",
    "type": "directory",
  },
]
`;

imports:
  trainsRoot: __package__.yml
types:
  CreateBookingPaymentResponse:
    properties:
      links: optional<trainsRoot.LinksBooking>
    extends:
      - trainsRoot.BookingPayment
    source:
      openapi: openapi/trains/openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create-booking-payment:
      path: /bookings/{bookingId}/payment
      method: POST
      auth: true
      docs: >-
        A payment is an attempt to pay for the booking, which will confirm the
        booking for the user and enable them to get their tickets.
      path-parameters:
        bookingId:
          type: string
          docs: The ID of the booking to pay for.
      display-name: Pay for a Booking
      request:
        body: trainsRoot.BookingPayment
      response:
        docs: Payment successful
        type: CreateBookingPaymentResponse
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - name: Card Payment
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              object: card
              name: J. Doe
              number: '4242424242424242'
              cvc: 123
              exp_month: 12
              exp_year: 2025
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_city: London
              address_country: gb
              address_post_code: N12 9XX
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 49.99
              currency: gbp
              source:
                object: card
                name: J. Doe
                number: '************4242'
                cvc: 123
                exp_month: 12
                exp_year: 2025
                address_line1: source
                address_line2: source
                address_city: source
                address_country: gb
                address_post_code: N12 9XX
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
        - name: Bank Account Payment
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 100.5
            currency: gbp
            source:
              object: bank_account
              name: J. Doe
              number: '00012345'
              sort_code: '000123'
              account_type: individual
              bank_name: Starling Bank
              country: gb
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 49.99
              currency: gbp
              source:
                object: card
                name: J. Doe
                number: '************4242'
                cvc: 123
                exp_month: 12
                exp_year: 2025
                address_line1: source
                address_line2: source
                address_city: source
                address_country: gb
                address_post_code: N12 9XX
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
        - name: Card Payment 2
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              object: card
              name: J. Doe
              number: '4242424242424242'
              cvc: 123
              exp_month: 12
              exp_year: 2025
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_city: London
              address_country: gb
              address_post_code: N12 9XX
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 49.99
              currency: gbp
              source:
                object: card
                name: J. Doe
                number: '************4242'
                cvc: 123
                exp_month: 12
                exp_year: 2025
                address_line1: source
                address_line2: source
                address_city: source
                address_country: gb
                address_post_code: N12 9XX
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
        - name: Bank Account Payment 2
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              object: card
              name: J. Doe
              number: '4242424242424242'
              cvc: 123
              exp_month: 12
              exp_year: 2025
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_city: London
              address_country: gb
              address_post_code: N12 9XX
          response:
            body:
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              amount: 100.5
              currency: gbp
              source:
                object: bank_account
                name: J. Doe
                number: '*********2345'
                sort_code: '000123'
                account_type: individual
                bank_name: Starling Bank
                country: gb
              status: succeeded
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
  source:
    openapi: openapi/trains/openapi.yml
  display-name: Payments
docs: |
  Pay for bookings using a card or bank account, and view payment
  status and history.

  > warn
  > Bookings usually expire within 1 hour so you'll need to make your payment
  > before the expiry date 

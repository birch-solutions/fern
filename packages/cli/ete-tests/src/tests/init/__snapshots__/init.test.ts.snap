// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fern init covie openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

{}
",
                "name": "__package__.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /accounts/{account_id}/mfa_requirements
  path-parameters:
    account_id:
      docs: Unique identifier of the account.
      type: string
  endpoints:
    enableAccountMfaRequired:
      path: ""
      method: POST
      docs: Require all account users to have an MFA application configured
      display-name: Enable Account MFA Requirement
      response: AccountWithConfig

    disableAccountMfaRequired:
      path: ""
      method: DELETE
      docs: >-
        Remove requirement for all account users to have an MFA application
        configured
      display-name: Disable Account MFA Requirement

types:
  AccountWithConfig: unknown
",
                "name": "account.yml",
                "type": "file",
              },
              {
                "contents": "name: api
display-name: Policy API
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /applications/{application_id}
  path-parameters:
    application_id:
      docs: Unique identifier of the application.
      type: string
  endpoints:
    getApplicationLinks:
      path: /links
      method: GET
      docs: Lists an application's links.
      display-name: List Application Links
      response: commons.Links

    getApplicationPolicies:
      path: /policies
      method: GET
      docs: Lists an application's policies.
      display-name: List Application Policies
      response: commons.Policies
",
                "name": "application.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  Carrier:
    docs: >-
      A basic object describing the individual insurance company which has
      issued a policy.
    properties:
      name:
        docs: The name of the issuing company.
        type: optional<string>

  Policyholder:
    docs: >-
      Describes the company or person which is legally listed on, and entitled
      to benefits from the policy for which they are attached.
    properties:
      type:
        docs: An indication if the insured is a business or individual.
        type: optional<_InlinedType17>
      name: optional<Name>
      address: optional<unknown>
      email_addresses:
        docs: The contact e-mail addresses of the insured, if known.
        type: optional<list<EMail>>
      phone_numbers:
        docs: The contact phone numbers of the insured, if known.
        type: optional<list<Phone>>
      is_primary:
        docs: >-
          A flag indicating if the insured is explicitly referenced as primary,
          or assumed primary as being the first insured listed on the policy.
        type: optional<boolean>

  _InlinedType17:
    docs: An indication if the insured is a business or individual.
    enum:
      - person
      - business

  Name:
    docs: Contains a name for a person or business
    properties:
      full: optional<unknown>

  Address:
    docs: >-
      A universal base object encapsulating the physical address related to
      another object.
    properties:
      line1:
        docs: The first line of the address being provided.
        type: optional<string>
      line2:
        docs: The second line of the address, when provided.
        type: optional<string>
      city:
        docs: The city in which the address provided is located.
        type: optional<string>
      state:
        docs: >-
          The state or provide in which the address is located, represented in
          abbreviated form.
        type: optional<string>
      postal_code:
        docs: The 5 digit postal code in which the address is located.
        type: optional<string>

  EMail:
    docs: >-
      A universal base object encapsulating the e-mail address related to
      another object.
    properties:
      address: optional<unknown>
      is_primary: optional<unknown>

  Phone:
    docs: >-
      A universal base object encapsulating the phone number related to another
      object.
    properties:
      type: optional<unknown>
      number: optional<unknown>
      is_primary: optional<unknown>

  Vehicle:
    docs: >-
      Describes the motor vehicle which is covered under the terms of a policy.
      This object contains details of the specific coverages provided for this
      vehicle and information about the drivers who are covered.
    properties:
      vin:
        docs: >-
          The unique Vehicle Identification Number (VIN) that pertains to this
          vehicle.
        type: optional<string>
      make:
        docs: The manufacturer of the vehicle covered by this policy.
        type: optional<string>
      model:
        docs: The model of the vehicle covered by this policy.
        type: optional<string>
      year:
        docs: The 4-digit model year of the vehicle covered by this policy.
        type: optional<string>
      trim:
        docs: The trim of the vehicle covered by this policy.
        type: optional<string>
      series:
        docs: The series of the vehicle covered by this policy.
        type: optional<string>
      annual_mileage:
        docs: >-
          When provided, the estimated number of miles this vehicle is expected
          to be driven, per year. When a range is specified by the carrier, the
          highest value in the range is provided.
        type: optional<integer>
      usage:
        docs: The intended usage of the vehicle by the insured.
        type: optional<_InlinedType18>
      ownership:
        docs: >-
          Whether or not the vehicle specified is owned, leased, or financed by
          the insured.
        type: optional<_InlinedType19>
      drivers:
        docs: A list of drivers assigned to this vehicle.
        type: optional<list<Driver>>
      garaging_address: optional<unknown>
      interests:
        docs: >-
          The financial institution which presently holds a lien against the
          vehicle.
        type: optional<list<Interest>>
      coverages:
        docs: >-
          A list of all coverages that apply to this vehicle. The omission of
          any coverage indicates that coverage was either declined or does not
          apply to this vehicle.
        type: optional<_InlinedType20>
      discounts:
        docs: A list of discounts being applied to the premium of this vehicle.
        type: optional<list<Discount>>

  _InlinedType18:
    docs: The intended usage of the vehicle by the insured.
    enum:
      - commute
      - pleasure
      - business

  _InlinedType19:
    docs: >-
      Whether or not the vehicle specified is owned, leased, or financed by the
      insured.
    enum:
      - own
      - lease
      - finance

  _InlinedType20:
    docs: >-
      A list of all coverages that apply to this vehicle. The omission of any
      coverage indicates that coverage was either declined or does not apply to
      this vehicle.
    properties:
      bodily_injury: optional<Coverage>
      property_damage: optional<Coverage>
      medical_payments: optional<Coverage>
      personal_injury_protection: optional<Coverage>
      comprehensive: optional<Coverage>
      collision: optional<Coverage>
      uninsured_bodily_injury: optional<Coverage>
      uninsured_property_damage: optional<Coverage>
      underinsured_bodily_injury: optional<Coverage>
      underinsured_property_damage: optional<Coverage>
      roadside: optional<Coverage>
      rental_car: optional<Coverage>
      full_glass: optional<Coverage>
      nonowned_bodily_injury: optional<Coverage>
      nonowned_property_damage: optional<Coverage>
      nonowned_medical_payments: optional<Coverage>
      nonowned_physical_damage: optional<Coverage>
      oem_parts: optional<Coverage>
      ride_share: optional<Coverage>
      all_risk: optional<Coverage>
      new_vehicle_replacement: optional<Coverage>
      collision_deductible_waiver: optional<Coverage>
      loan_lease_payoff: optional<Coverage>
      custom_parts: optional<Coverage>
      automobile_death_benefit: optional<Coverage>
      trip_interruption: optional<Coverage>
      personal_property: optional<Coverage>
      limited_property_damage: optional<Coverage>
      property_protection: optional<Coverage>
      personal_injury_attendant_rider: optional<Coverage>
      rented_vehicle_liability: optional<Coverage>
      motorcycle_enhanced_injury: optional<Coverage>
      limited_personal_injury_protection: optional<Coverage>
      carried_contents: optional<Coverage>

  Driver:
    docs: >-
      Describes the individual driver who is considered the routine operator of
      the vehicle it is attached to and who is explicitly included under the
      coverage terms selected for the vehicle.
    properties:
      name: optional<Name>
      date_of_birth:
        docs: >-
          The date of birth of the driver, when provided by the insurer.
          Represented as an ISO-8601 date.
        type: optional<string>
      marital_status:
        docs: >-
          The current marital status of the driver, if provided. The \`separated\`
          value includes divorced status.
        type: optional<_InlinedType21>
      gender:
        docs: The reported gender of the driver, when provided by the insurer.
        type: optional<_InlinedType22>
      age_licensed:
        docs: >-
          The age in which the driver was first licensed, when provided by the
          insurer.
        type: optional<integer>
      license_number:
        docs: >-
          The drivers license number of the driver when provided by the insurer.
          This value may be masked.
        type: optional<string>
      license_state:
        docs: >-
          The state in which the driver is licensed. Represented in abbreviated
          form.
        type: optional<string>
      is_primary:
        docs: >-
          A flag indicating if the driver is described as the primary driver of
          the vehicle. When no clear indication is made by an insurer, the first
          listed driver is assumed to be the primary.
        type: optional<boolean>

  _InlinedType21:
    docs: >-
      The current marital status of the driver, if provided. The \`separated\`
      value includes divorced status.
    enum:
      - married
      - single
      - separated
      - widowed

  _InlinedType22:
    docs: The reported gender of the driver, when provided by the insurer.
    enum:
      - male
      - female
      - non-binary

  Interest:
    docs: >-
      Describes an entity, person or company, that has a legal interest in a
      piece of covered property. This could represent a bank or other financial
      institution who owns a loan/mortgage/lien over a covered property, a
      landlord who owns the property a tenant is leasing, or some other
      recognized stakeholder who is entitled to certain information rights from
      the insurance company regarding the covered property.
    properties:
      type:
        docs: >-
          The type of interest being described. Such as: lender, landlord,
          guarantor, or other.
        type: optional<_InlinedType23>
      name: optional<Name>
      address: optional<unknown>
      email_addresses:
        docs: E-Mail addresses used to contact the interested party.
        type: optional<list<EMail>>
      phone_numbers:
        docs: >-
          Phone Numbers used to call the interested party. Provided in E164
          format.
        type: optional<list<Phone>>
      fax:
        docs: >-
          The Fax Number by which to contact the interested party. Provided in
          E164 format.
        type: optional<unknown>

  _InlinedType23:
    docs: >-
      The type of interest being described. Such as: lender, landlord,
      guarantor, or other.
    enum:
      - landlord
      - lender
      - guarantor
      - other

  Coverage:
    docs: >-
      Describes the features of a specific coverage element for a person or
      property, encapsulating the limits, deductibles, and premium information
      therein.
    properties:
      name:
        docs: >-
          The name of the coverage element being described. This is a coded
          value offered as a convenience method to avoid the need to introspect
          code to understand which branch of logic is being evaluated.
        type: optional<string>
      limits:
        docs: >-
          A breakout of different limits and sublimits that apply to this
          coverage item. When the limits property is null, then the coverage
          described is selected but limits are not applicable for the coverage
          feature. The ommission of any limit scope indicates that it does not
          apply to the coverage.
        type: optional<_InlinedType24>
      deductible: optional<unknown>
      premium:
        docs: >-
          The amount of premium being charged for this coverage item at the
          specified limits and deductibles.
        type: optional<unknown>

  _InlinedType24:
    docs: >-
      A breakout of different limits and sublimits that apply to this coverage
      item. When the limits property is null, then the coverage described is
      selected but limits are not applicable for the coverage feature. The
      ommission of any limit scope indicates that it does not apply to the
      coverage.
    properties:
      occurrence: optional<unknown>
      person: optional<unknown>
      day: optional<unknown>
      duration: optional<PeriodValue>
      term: optional<CurrencyValue>

  CurrencyValue:
    docs: >-
      Describes a value that is tied to a monetary amount. Most frequently used
      to describe limits, premiums, and deductibles.
    properties:
      unit:
        docs: The ISO-compatible currency code of the value being represented.
        type: optional<_InlinedType25>
      value:
        docs: The amount of currency
        type: optional<double>

  _InlinedType25:
    docs: The ISO-compatible currency code of the value being represented.
    enum:
      - USD
      - USD_cents

  RelativeValue:
    docs: >-
      Describes a value that is relative to another, such as the fair market
      value or replacement value. It is inherently variable and subject to the
      context in which it is invoked.
    properties:
      unit:
        docs: Always "other".
        type: optional<_InlinedType26>
      value:
        docs: >-
          The form of measure used to calculate the relative value, such as
          "actual cash value" or "ACV" which looks at the original price or
          investment and factors in depreciation (effectively "Fair Market
          Value"), or "replacement cost" (sometimes "Actual Loss Sustained" or
          "ALS") which sets a value against real cost to replace something
          today.
          Occasionally, a response of "unknown" may be returned. This value
          indicates that no specific value was provided in high level policy
          documents. The value may be subjective and specific to the individual
          policyholder as specified in their policy contract and should be
          manually reviewed.
        type: optional<_InlinedType27>

  _InlinedType26:
    docs: Always "other".
    enum:
      - other

  _InlinedType27:
    docs: >-
      The form of measure used to calculate the relative value, such as "actual
      cash value" or "ACV" which looks at the original price or investment and
      factors in depreciation (effectively "Fair Market Value"), or "replacement
      cost" (sometimes "Actual Loss Sustained" or "ALS") which sets a value
      against real cost to replace something today.
      Occasionally, a response of "unknown" may be returned. This value
      indicates that no specific value was provided in high level policy
      documents. The value may be subjective and specific to the individual
      policyholder as specified in their policy contract and should be manually
      reviewed.
    enum:
      - actual_cash_value
      - replacement_value
      - unknown

  PercentageValue:
    docs: >-
      Describes a value that is represented as a percentage, fraction, or ratio
      of another value. Most frequently depicted for deductibles which may be a
      percentage of a limit.
    properties:
      unit:
        docs: Always "percentage"
        type: optional<_InlinedType28>
      value:
        docs: The percentage amount determined by this value.
        type: optional<double>

  _InlinedType28:
    docs: Always "percentage"
    enum:
      - percentage

  DistanceValue:
    docs: >-
      Describes a value that is tied to a physical length or distance. Most
      frequently used to describe limits on coverages.
    properties:
      unit:
        docs: The distance unit of the value being represented.
        type: optional<_InlinedType29>
      value:
        docs: The amount of the distance in the units specified
        type: optional<double>

  _InlinedType29:
    docs: The distance unit of the value being represented.
    enum:
      - mile
      - kilometer

  PeriodValue:
    docs: >-
      Describes a value that represents a period of time, such as days, weeks,
      or months.
    properties:
      unit:
        docs: The scale of time period being represented.
        type: optional<_InlinedType30>
      value:
        docs: The amount of time being represented.
        type: optional<integer>

  _InlinedType30:
    docs: The scale of time period being represented.
    enum:
      - day
      - week
      - month

  Discount:
    docs: >-
      Describes a discount which a policyholder is receiving for a particular
      covered property under a policy. When available, this object also
      describes the amount of savings.
    properties:
      code:
        docs: >-
          The programming-friendly value to indicate the discount being applied.
          NOTE: We regularly add values to this enumeration, so your code should
          be able to gracefully handle unexpected enum values (though new values
          are documented here as they go live).
        type: optional<_InlinedType31>
      friendly_name:
        docs: A human-readable, friendly name for the discount.
        type: optional<string>
      amount: optional<unknown>

  _InlinedType31:
    docs: >-
      The programming-friendly value to indicate the discount being applied.
      NOTE: We regularly add values to this enumeration, so your code should be
      able to gracefully handle unexpected enum values (though new values are
      documented here as they go live).
    enum:
      - safe_driver
      - telematics
      - online
      - bundle
      - teen_driver
      - claim_free
      - homeowner
      - new_car
      - multi_car
      - pay_in_full
      - paperless_billing
      - loyalty
      - good_student
      - distant_student
      - accident_free
      - continuous_insurance
      - eft
      - early_quote
      - alarm_system
      - new_home
      - new_roof
      - safe_vehicle
      - smart_vehicle
      - membership
      - payment_plan
      - military
      - garage_parking
      - senior
      - autopay
      - insurance_to_value
      - verified_mileage
      - payment_history
      - motorcycle_endorsement

  Location:
    docs: >-
      Describes a physical location and/or structure which is covered under the
      terms of an insurance policy.
    properties:
      address: optional<Address>
      coverages:
        docs: A list of coverages that apply to the location being insured.
        type: optional<_InlinedType32>
      other_deductibles:
        docs: >-
          A list of deductibles that apply in addition to the coverage-specific
          deductibles.
        type: optional<_InlinedType33>
      discounts:
        docs: A list of discounts being applied to the location.
        type: optional<list<Discount>>
      interests:
        docs: >-
          A list of interested parties, such as mortgagers, lienholders,
          guarantors, landlords, or others.
        type: optional<list<Interest>>

  _InlinedType32:
    docs: A list of coverages that apply to the location being insured.
    properties:
      dwelling: optional<Coverage>
      dwelling_extension: optional<Coverage>
      personal_property: optional<Coverage>
      personal_property_off_premises: optional<Coverage>
      loss_of_use: optional<Coverage>
      service_line: optional<Coverage>
      personal_liability: optional<Coverage>
      medical_payments: optional<Coverage>
      property_damage_others: optional<Coverage>
      fire_service: optional<Coverage>
      loss_assessment: optional<Coverage>
      sewer_backup: optional<Coverage>
      arson_reward: optional<Coverage>
      credit_card_fraud: optional<Coverage>
      debris_removal: optional<Coverage>
      oil_release: optional<Coverage>
      locks: optional<Coverage>
      landscaping: optional<Coverage>
      additional_structures: optional<Coverage>

  _InlinedType33:
    docs: >-
      A list of deductibles that apply in addition to the coverage-specific
      deductibles.
    properties:
      hail: optional<unknown>
      earthquake: optional<unknown>

  DocumentRef:
    docs: >-
      Describes the individual insurance document available for download from a
      given insurance policy, including the content-type (or mimetype) of the
      document.
    properties:
      type:
        docs: The type of document provided at the corresponding URL.
        type: optional<_InlinedType34>
      content_type:
        docs: >-
          The content-type, or mimetype, of the document being conveyed at this
          location.
        type: optional<string>
      href:
        docs: The path to retrieve the document described in this object.
        type: optional<string>

  _InlinedType34:
    docs: The type of document provided at the corresponding URL.
    enum:
      - declaration
      - id_card
      - renewal
      - evidence_of_insurance
      - cancellation

  Events: unknown

  Event:
    docs: >-
      Represents an event delivered via webhook on the occurrence of certain
      policy changes.
    properties:
      id:
        docs: The unique identifier of the received event.
        type: optional<string>
      event_type:
        docs: An enumerated string representing the type of event that occurred.
        type: optional<_InlinedType35>
      occurred_at:
        docs: >-
          The date and time in which the event occurred, represented as an
          ISO-8601 string.
        type: optional<string>
      _embedded:
        docs: A collection of the objects in which this event applies to.
        type: optional<map<string, unknown>>
      _links: optional<unknown>

  _InlinedType35:
    docs: An enumerated string representing the type of event that occurred.
    enum:
      - link.created
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - link.changed
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType36:
    docs: Link to view the full event payload.
    properties:
      href: optional<unknown>

  Integration:
    docs: >-
      Represents a connection between a client application and Covie's systems
      allowing a client users to create and process links.
    properties:
      id:
        docs: Unique identifier for the integration.
        type: optional<string>
      key:
        docs: Integration key used in client application initialization.
        type: optional<string>
      name:
        docs: A descriptive name of the integration.
        type: optional<string>
      status:
        docs: String representation of the current status of the integration.
        type: optional<_InlinedType39>
      created_at:
        docs: >-
          The date and time, in ISO-8601 format, when the integration was first
          created.
        type: optional<string>
      updated_at:
        docs: >-
          The date and time, in ISO-8601 format, when the integration was last
          updated.
        type: optional<string>
      configuration: optional<unknown>
      policy_requirements: optional<unknown>
      is_onboarding:
        docs: >-
          Whether the integration is live, but belongs to a prepaid account that
          hasn't had its first refill
        type: optional<unknown>

  _InlinedType37:
    docs: String representation of the current status of the integration.
    enum: &ref_0
      - active
      - archived

  _InlinedType38:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<unknown>

  _InlinedType39:
    docs: String representation of the current status of the integration.
    enum: *ref_0

  _InlinedType40:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<unknown>

  Policies: unknown

  Policy:
    docs: >-
      This describes, in high level, the insurance policy record that is
      provided by a link. This object encapsulates all the necessary details to
      understand the policy's status, policyholders, and covered persons or
      properties.
    properties:
      id:
        docs: >-
          Unique identifier of a policy record within the application that
          obtained it.
        type: optional<string>
      object:
        docs: >-
          String representing the object’s type. Objects of the same type share
          the same value.
        type: optional<string>
      fingerprint:
        docs: A universally-unique identifier of a policy.
        type: optional<string>
      carrier: optional<Carrier>
      number:
        docs: >-
          The full policy number as provided by the issuing company. This is not
          available to all users and may be null when not active on the account.
        type: optional<string>
      masked_number:
        docs: >-
          This is a masked version of the policy number provided by the issuing
          company. This is always provided and available to all customers.
        type: optional<string>
      line:
        docs: A string indicating the line of business this policy encompasses.
        type: optional<_InlinedType41>
      policyholders:
        docs: A list of insureds, or policyholders assigned to this policy.
        type: optional<list<Policyholder>>
      vehicles: optional<unknown>
      locations: optional<unknown>
      status:
        docs: A string representation of the policy's current status.
        type: optional<_InlinedType42>
      premium:
        docs: >-
          An integer indicating the total premium paid for the policy period.
          This value is null when premium access is not enabled on the customer
          account or is not able to be determined.
        type: optional<unknown>
      term_length: optional<PeriodValue>
      inception_date:
        docs: >-
          The date when the policy becomes in force. This date is provided in
          ISO-8601 format excluding time.
        type: optional<string>
      expiration_date:
        docs: >-
          The date when the described policy period ends. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_date:
        docs: >-
          The date when the policy is set to be cancelled. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_reason:
        docs: >-
          The determined reason for the cancellation, such as
          insured_non_payment or carrier_non_renew or insured_action. This value
          is null when cancellation is not active or not explicitly indicated by
          the carrier systems and is not guaranteed to be provided in any
          circumstance.
        type: optional<_InlinedType43>
      linked_at:
        docs: >-
          The date and time which the policy was initially retrieved. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      last_synced_at:
        docs: >-
          The date and time when the policy record was last updated. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      _links:
        docs: >-
          A polymorphic list of externally linked resources related to this
          policy such as documents or logos for carriers.
        type: optional<_InlinedType45>
      _embedded:
        docs: A container for objects wrapped by the current object.
        type: optional<_InlinedType46>
      link_id:
        docs: Unique identifier of the link associated to the policy.
        type: optional<string>

  _InlinedType41:
    docs: A string indicating the line of business this policy encompasses.
    enum:
      - personal_auto
      - homeowner
      - renter
      - motorcycle

  _InlinedType42:
    docs: A string representation of the policy's current status.
    enum:
      - active
      - expired
      - pending
      - cancelled

  _InlinedType43:
    docs: >-
      The determined reason for the cancellation, such as insured_non_payment or
      carrier_non_renew or insured_action. This value is null when cancellation
      is not active or not explicitly indicated by the carrier systems and is
      not guaranteed to be provided in any circumstance.
    enum:
      - carrier_non_renew
      - insured_non_payment
      - insured_requested
      - other

  _InlinedType44:
    docs: A link to the logo for the carrier on the policy.
    properties:
      href: optional<unknown>

  _InlinedType45:
    docs: >-
      A polymorphic list of externally linked resources related to this policy
      such as documents or logos for carriers.
    properties:
      documents:
        docs: >-
          A list of documents obtained and available for this policy. This list
          may be empty if no documents are available or if document access is
          not enabled for your account.
        type: optional<list<DocumentRef>>
      carrier_logo:
        docs: A link to the logo for the carrier on the policy.
        type: optional<_InlinedType44>

  _InlinedType46:
    docs: A container for objects wrapped by the current object.
    properties:
      missing_fields:
        docs: A list of policy fields that were unable to be processed.
        type: optional<list<unknown>>

  Provider:
    docs: >-
      Represents a connected insurance partner that can be used to authenticate
      and return policy data.
    properties:
      id:
        docs: The unique identifier of the provider.
        type: optional<string>
      name:
        docs: The friendly name of the provider in question.
        type: optional<string>
      _links:
        docs: >-
          A collection of externally referenced material pertaining to the
          provider, such as web addresses and images.
        type: optional<_InlinedType49>
      _embedded:
        docs: >-
          A collection of sub objects that are related to this provider, most
          commonly consisting of co-branded or sub-issuing providers affiliated
          with this provider.
        type: optional<_InlinedType50>

  _InlinedType47:
    docs: The logo image to be used when describing a given provider.
    properties:
      href:
        docs: The full URL to access the provider's logo.
        type: optional<string>

  _InlinedType48:
    docs: A reference to the provider's primary website.
    properties:
      href:
        docs: The full URL of the provider's main website.
        type: optional<string>

  _InlinedType49:
    docs: >-
      A collection of externally referenced material pertaining to the provider,
      such as web addresses and images.
    properties:
      image:
        docs: The logo image to be used when describing a given provider.
        type: optional<_InlinedType47>
      website:
        docs: A reference to the provider's primary website.
        type: optional<_InlinedType48>

  _InlinedType50:
    docs: >-
      A collection of sub objects that are related to this provider, most
      commonly consisting of co-branded or sub-issuing providers affiliated with
      this provider.
    properties:
      alternative_providers:
        docs: >-
          A collection of alternative providers which a policyholder may have
          issued policies through this top-level provider.
        type: optional<list<Provider>>

  Link_2:
    docs: >-
      Represents the individual connections between Covie and a Policyholder's
      account with a carrier and wraps the policies retrieved from it that have
      been made available to the consumer.
    properties:
      id:
        docs: The unique identifier of the link object.
        type: optional<string>
      object:
        docs: >-
          String representing the object’s type. Objects of the same type share
          the same value.
        type: optional<string>
      integration_id:
        docs: The identifier of the integration that was used to establish the link.
        type: optional<string>
      policy_count:
        docs: The number of policies provided by this link.
        type: optional<integer>
      status:
        docs: >-
          A string representation of the link's current status. This is distinct
          from a policy's status which is an indicator to whether a policy is in
          force. A link's status is an indicator of how new and complete the
          data is and whether or not it is possible to retrieve refreshed
          information.
        type: optional<_InlinedType55>
      is_tracked:
        docs: >-
          A flag indicating if the policies provided by this link should be
          tracked by Covie's monitoring service.
        type: optional<boolean>
      tracking_frequency:
        docs: >-
          The frequency of which tracking should be performed. This value is
          \`never\` when tracking is disabled.
        type: optional<_InlinedType56>
      updated_at:
        docs: The date and time, in ISO-8601 format, when the link was last updated.
        type: optional<string>
      created_at:
        docs: >-
          The date and time, in ISO-8601 format, when the link was first
          created.
        type: optional<string>
      metadata:
        docs: >-
          Arbitrary key value pairs set on link creation or PATCH. Keys are
          alphanumeric plus _, -, ., and space, at most 64 characters. Values
          are at most 256 characters. You can have at most 32 metadata keys on a
          link.
        type: optional<map<string, unknown>>
      _links: optional<unknown>

  _InlinedType51:
    docs: >-
      A string representation of the link's current status. This is distinct
      from a policy's status which is an indicator to whether a policy is in
      force. A link's status is an indicator of how new and complete the data is
      and whether or not it is possible to retrieve refreshed information.
    enum: &ref_1
      - new
      - active
      - document_uploaded
      - broken
      - revoked
      - stale

  _InlinedType52:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum: &ref_2
      - daily
      - weekly
      - monthly
      - never
      - on_demand

  _InlinedType53:
    docs: Link to retrieve the link's details.
    properties:
      href: optional<unknown>

  _InlinedType54:
    docs: Link to the carrier's logo.
    properties:
      href: optional<unknown>

  Links: unknown

  _InlinedType55:
    docs: >-
      A string representation of the link's current status. This is distinct
      from a policy's status which is an indicator to whether a policy is in
      force. A link's status is an indicator of how new and complete the data is
      and whether or not it is possible to retrieve refreshed information.
    enum: *ref_1

  _InlinedType56:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum: *ref_2

  _InlinedType57:
    docs: Link to retrieve the link's details.
    properties:
      href: optional<unknown>

  _InlinedType58:
    docs: Link to the carrier's logo.
    properties:
      href: optional<unknown>

  Webhook:
    docs: Represents a webhook in the Covie system.
    properties:
      id:
        docs: Unique identifier for the Webhook object.
        type: optional<string>
      uri:
        docs: URI the webhook should make a request to when the event is triggered.
        type: optional<string>
      headers:
        docs: >-
          List of the headers and their values that should be included in the
          request.
        type: optional<map<string, unknown>>
      is_enabled: optional<unknown>
      event_types: optional<unknown>
      last_response_body:
        docs: The response from the last request.
        type: optional<string>
      last_response_code:
        docs: The response HTTP code from the last request.
        type: optional<string>
      last_called_at:
        docs: The last time a request was made.
        type: optional<string>
      created_at:
        docs: Date the webhook was created.
        type: optional<string>
      updated_at:
        docs: Date of the last time the webhook was updated.
        type: optional<string>
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /events/{event_id}/broadcasts
  path-parameters:
    event_id: string
  endpoints:
    postEventsEventIdBroadcasts:
      path: ""
      method: POST
      docs: Rebroadcast an event.
      display-name: Rebroadcast Event
      response: unknown

types:
  EventBroadcast:
    docs: Record of a broadcast to a webhook endpoint when an event is triggered.
    properties:
      id:
        docs: Unique identifier for the broadcast.
        type: optional<string>
      queued_at:
        docs: Date/Time the broadcast was prepared for delivery.
        type: optional<string>
      broadcast_at:
        docs: Date/Time the broadcast was sent.
        type: optional<string>
      request_uri:
        docs: URI the broadcast was sent to.
        type: optional<string>
      request_headers:
        docs: Custom headers used to send the broadcast.
        type: optional<map<string, unknown>>
      response_code:
        docs: Response code from the URI.
        type: optional<integer>
      response_body:
        docs: Contents of the response.
        type: optional<string>
",
                "name": "event.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /integrations
  endpoints:
    listIntegrations:
      path: ""
      method: GET
      docs: List integrations associated to an application
      display-name: List Integrations
      response: Integrations

    createIntegration:
      path: ""
      method: POST
      docs: Creates a new integration.
      display-name: Create Integration
      request:
        body: _InlinedType7

    getIntegration:
      path: /{integration_id}
      method: GET
      docs: Retrieve the details of an integration.
      display-name: Get Integration
      path-parameters:
        integration_id: string
      response: commons.Integration_2

    deleteIntegration:
      path: /{integration_id}
      method: DELETE
      docs: Deletes an integration.
      display-name: Delete Integration
      path-parameters:
        integration_id: string

    updateIntegration:
      path: /{integration_id}
      method: PATCH
      docs: Edit the name and archived status of an integration.
      display-name: Update Integration
      path-parameters:
        integration_id: string
      request:
        body: _InlinedType10
      response: commons.Integration_2

    getIntegrationPolicies:
      path: /{integration_id}/policies
      method: GET
      docs: List all policies that have been linked to an integration.
      display-name: List Integration Policies
      path-parameters:
        integration_id: string
      response: commons.Policies

    getIntegrationProviders:
      path: /{integration_id}/providers
      method: GET
      docs: >-
        Retrieve a list of supported carriers for a given integration, along
        with their identifiers.
      display-name: Supported Providers List
      path-parameters:
        integration_id: string
      response: Providers

    regenerateIntegrationKey:
      path: /{integration_id}/regenerate_key
      method: POST
      docs: Replaces the existing integration key with a new randomly generated key.
      display-name: Regenerate Integration Key
      path-parameters:
        integration_id: string
      response: commons.Integration_2

    getIntegrationsIntegrationIdAgencyLogo:
      path: /{integration_id}/agency_logo
      method: GET
      docs: View the agency logo for the hosted integration.
      display-name: View Agency Logo
      path-parameters:
        integration_id: string

    putIntegrationsIntegrationIdAgencyLogo:
      path: /{integration_id}/agency_logo
      method: PUT
      docs: Upload the agency logo for the hosted integration.
      display-name: Update Agency Logo
      path-parameters:
        integration_id: string
      response: unknown

    deleteIntegrationsIntegrationIdAgencyLogo:
      path: /{integration_id}/agency_logo
      method: DELETE
      docs: Delete the agency logo and/or config if present.
      display-name: Delete Agency Logo
      path-parameters:
        integration_id: string

    getIntegrationsIntegrationIdAgentPhoto:
      path: /{integration_id}/agent_photo
      method: GET
      docs: View the agent photo for the hosted integration.
      display-name: View Agent Photo
      path-parameters:
        integration_id: string

    putIntegrationsIntegrationIdAgentPhoto:
      path: /{integration_id}/agent_photo
      method: PUT
      docs: Upload an agent photo for the hosted integration.
      display-name: Update Agent Photo
      path-parameters:
        integration_id: string
      response: unknown

    deleteIntegrationsIntegrationIdAgentPhoto:
      path: /{integration_id}/agent_photo
      method: DELETE
      docs: Delete the agent photo and/or config if present.
      display-name: Delete Agent Photo
      path-parameters:
        integration_id: string

    getIntegrationsIntegrationIdBrandLogo:
      path: /{integration_id}/brand_logo
      method: GET
      docs: View the brand logo for the integration.
      display-name: View Brand Logo
      path-parameters:
        integration_id: string

    putIntegrationsIntegrationIdBrandLogo:
      path: /{integration_id}/brand_logo
      method: PUT
      docs: Upload the brand logo for the hosted integration.
      display-name: Update Brand Logo
      path-parameters:
        integration_id: string
      response: unknown

    deleteIntegrationsIntegrationIdBrandLogo:
      path: /{integration_id}/brand_logo
      method: DELETE
      docs: Delete the brand logo and/or config if present.
      display-name: Delete Brand Logo
      path-parameters:
        integration_id: string

types:
  Integrations: unknown

  Providers: unknown

  _InlinedType6:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<unknown>

  _InlinedType7: unknown

  _InlinedType8:
    docs: String representation of the current status of the integration.
    enum:
      - active
      - archived

  _InlinedType9:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<unknown>

  _InlinedType10: unknown
",
                "name": "integration.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: ""
  endpoints:
    getLink:
      path: /links/{id}
      method: GET
      docs: Retrieves a Link
      display-name: Retrieve link
      path-parameters:
        id: string
      response: commons.Link

    deleteLink:
      path: /links/{id}
      method: DELETE
      docs: Deletes a link.
      display-name: Delete Link
      path-parameters:
        id: string

    updateLinkSettings:
      path: /links/{id}
      method: PATCH
      display-name: Update Link Settings
      path-parameters:
        id: string
      request:
        body: _InlinedType13
      response: commons.Link

    getLinkPolicies:
      path: /links/{id}/policies
      method: GET
      docs: Retrieves a list of policies associated with the requested link
      display-name: List Link Policies
      path-parameters:
        id: string
      response: commons.Policies

    getLinkEvents:
      path: /links/{id}/events
      method: GET
      docs: Retrieves a list of events triggered for the requested link
      display-name: List Link Events
      path-parameters:
        id: string
      response: commons.Events

    attachLinkDocument:
      path: /links/{id}/documents
      method: POST
      docs: >-
        Attach a policy document to a Link. If the document can be parsed,
        select the parsed policy for sharing.
      display-name: Upload Document To Link
      path-parameters:
        id: string

    syncLinkManually:
      path: /links/{id}/syncs
      method: POST
      docs: Sync a tracked link with the provider using the stored user credentials
      display-name: Manually Sync Link
      path-parameters:
        id: string

    getIntegrationLinks:
      path: /integrations/{integration_id}/links
      method: GET
      docs: Retrieves a list of links associated to the requested integration
      display-name: List Integration Links
      path-parameters:
        integration_id: string
      response: commons.Links

    initializeLinkViaIntegration:
      path: /integrations/{integration_id}/links
      method: POST
      docs: >-
        Creates a link and optionally sets metadata and selects a carrier,
        allowing for seeding initial data before an insured continues the
        linking process via the embed
      display-name: Initialize link
      path-parameters:
        integration_id: string
      request:
        body: _InlinedType14
      response: commons.Link

    getIntegrationLinksWithPolicies:
      path: /integrations/{integration_id}/links_with_policies
      method: GET
      docs: >-
        Retrieves a list of links and selected policies associated to the
        requested integration
      display-name: List Integration Links With Policies
      path-parameters:
        integration_id: string
      response: LinksWithPolicies

types:
  LinksWithPolicies: unknown

  LinkWithPolicies:
    docs: >-
      Represents the individual connections between Covie and a Policyholder's
      account with a carrier and wraps the policies retrieved from it that have
      been made available to the consumer.
    extends:
      - commons.Link_2
      - _InlinedType11

  _InlinedType11: unknown

  _InlinedType12:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum:
      - never
      - daily
      - weekly
      - monthly
      - on_demand

  _InlinedType13: unknown

  _InlinedType14: unknown
",
                "name": "link.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /policies/{policy_id}
  path-parameters:
    policy_id:
      docs: The unique identifier of the policy object being sought.
      type: string
  endpoints:
    getPoliciesPolicyId:
      path: ""
      method: GET
      docs: Retrieve a Policy object that was previously connected via a Link
      display-name: Retrieve Policy
      response: Policy_2

    getPolicyDocument:
      path: /documents/{document_type}
      method: GET
      docs: Retrieve the contents of a Policy document
      display-name: Retrieve Policy Document
      path-parameters:
        document_type: string
      response: FileContents

    listPolicyEvents:
      path: /events
      method: GET
      docs: List all events that have been triggered for the selected policy
      display-name: List Policy Events
      response: commons.Events

types:
  Policy:
    docs: >-
      This describes, in high level, the insurance policy record that is
      provided by a link. This object encapsulates all the necessary details to
      understand the policy's status, policyholders, and covered persons or
      properties.
    properties:
      id:
        docs: >-
          Unique identifier of a policy record within the application that
          obtained it.
        type: optional<string>
      object:
        docs: >-
          String representing the object’s type. Objects of the same type share
          the same value.
        type: optional<string>
      fingerprint:
        docs: A universally-unique identifier of a policy.
        type: optional<string>
      carrier: optional<commons.Carrier>
      number:
        docs: >-
          The full policy number as provided by the issuing company. This is not
          available to all users and may be null when not active on the account.
        type: optional<string>
      masked_number:
        docs: >-
          This is a masked version of the policy number provided by the issuing
          company. This is always provided and available to all customers.
        type: optional<string>
      line:
        docs: A string indicating the line of business this policy encompasses.
        type: optional<_InlinedType0>
      policyholders:
        docs: A list of insureds, or policyholders assigned to this policy.
        type: optional<list<commons.Policyholder>>
      vehicles: optional<unknown>
      locations: optional<unknown>
      status:
        docs: A string representation of the policy's current status.
        type: optional<_InlinedType1>
      premium:
        docs: >-
          An integer indicating the total premium paid for the policy period.
          This value is null when premium access is not enabled on the customer
          account or is not able to be determined.
        type: optional<unknown>
      term_length: optional<commons.PeriodValue>
      inception_date:
        docs: >-
          The date when the policy becomes in force. This date is provided in
          ISO-8601 format excluding time.
        type: optional<string>
      expiration_date:
        docs: >-
          The date when the described policy period ends. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_date:
        docs: >-
          The date when the policy is set to be cancelled. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_reason:
        docs: >-
          The determined reason for the cancellation, such as
          insured_non_payment or carrier_non_renew or insured_action. This value
          is null when cancellation is not active or not explicitly indicated by
          the carrier systems and is not guaranteed to be provided in any
          circumstance.
        type: optional<_InlinedType2>
      linked_at:
        docs: >-
          The date and time which the policy was initially retrieved. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      last_synced_at:
        docs: >-
          The date and time when the policy record was last updated. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      _links:
        docs: >-
          A polymorphic list of externally linked resources related to this
          policy such as documents or logos for carriers.
        type: optional<_InlinedType4>
      _embedded:
        docs: A container for objects wrapped by the current object.
        type: optional<_InlinedType5>
      link_id:
        docs: Unique identifier of the link associated to the policy.
        type: optional<string>

  _InlinedType0:
    docs: A string indicating the line of business this policy encompasses.
    enum:
      - personal_auto
      - homeowner
      - renter
      - motorcycle

  _InlinedType1:
    docs: A string representation of the policy's current status.
    enum:
      - active
      - expired
      - pending
      - cancelled

  _InlinedType2:
    docs: >-
      The determined reason for the cancellation, such as insured_non_payment or
      carrier_non_renew or insured_action. This value is null when cancellation
      is not active or not explicitly indicated by the carrier systems and is
      not guaranteed to be provided in any circumstance.
    enum:
      - carrier_non_renew
      - insured_non_payment
      - insured_requested
      - other

  _InlinedType3:
    docs: A link to the logo for the carrier on the policy.
    properties:
      href: optional<unknown>

  _InlinedType4:
    docs: >-
      A polymorphic list of externally linked resources related to this policy
      such as documents or logos for carriers.
    properties:
      documents:
        docs: >-
          A list of documents obtained and available for this policy. This list
          may be empty if no documents are available or if document access is
          not enabled for your account.
        type: optional<list<commons.DocumentRef>>
      carrier_logo:
        docs: A link to the logo for the carrier on the policy.
        type: optional<_InlinedType3>

  _InlinedType5:
    docs: A container for objects wrapped by the current object.
    properties:
      missing_fields:
        docs: A list of policy fields that were unable to be processed.
        type: optional<list<unknown>>
",
                "name": "policy.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /webhooks
  endpoints:
    listWebhooks:
      path: ""
      method: GET
      docs: List an application's configured webhooks.
      display-name: List Webhooks
      response: Webhooks

    createWebhook:
      path: ""
      method: POST
      docs: Create a new webhook
      display-name: Create Webhook
      request:
        body: _InlinedType15

    getWebhook:
      path: /{webhook_id}
      method: GET
      docs: Get the details of a webhook.
      display-name: Get Webhook
      path-parameters:
        webhook_id: string
      response: commons.Webhook_2

    updateWebhook:
      path: /{webhook_id}
      method: PATCH
      docs: Update a webhook.
      display-name: Update Webhook
      path-parameters:
        webhook_id: string
      request:
        body: _InlinedType16
      response: commons.Webhook_2

    listWebhookEvents:
      path: /{webhook_id}/events
      method: GET
      docs: List the events that have been triggered for a webhook.
      display-name: List Webhook Events
      path-parameters:
        webhook_id: string
      response: commons.Events

types:
  Webhooks: unknown

  _InlinedType15: unknown

  _InlinedType16: unknown
",
                "name": "webhook.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-sdk
        version: 0.0.282
        output:
          location: local-file-system
          path: ../../generated/typescript
      - name: fernapi/fern-openapi
        version: 0.0.22
        output:
          location: local-file-system
          path: ../../generated/openapi
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init gigs openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

{}
",
                "name": "__package__.yml",
                "type": "file",
              },
              {
                "contents": "name: api
display-name: Gigs Core API
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  deviceModel: unknown

  _InlinedType13:
    docs: The type of the device model.
    enum:
      - car
      - iot
      - laptop
      - router
      - smartphone
      - feature-phone
      - smartwatch
      - tablet
      - wearable
      - other

  device: unknown

  _InlinedType14:
    docs: The type of the device model.
    enum:
      - car
      - iot
      - laptop
      - router
      - smartphone
      - feature-phone
      - smartwatch
      - tablet
      - wearable
      - other

  sim: unknown

  _InlinedType15:
    docs: The status of the SIM. Can be \`active\` or \`inactive\`.
    enum:
      - inactive
      - active
      - retired

  _InlinedType16:
    docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
    enum:
      - eSIM
      - pSIM

  plan: unknown

  _InlinedType17:
    docs: >-
      The address requirements that must be fulfilled before a user may purchase
      a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType18:
    docs: >-
      The device requirements that must be fulfilled before a user may purchase
      a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType19:
    docs: >-
      The user birthday requirements that must be fulfilled before a user may
      purchase a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType20:
    docs: >-
      The user full name requirements that must be fulfilled before a user may
      purchase a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType21:
    docs: The validity type of this plan, either \`oneTime\` or \`recurring\`.
    enum:
      - oneTime
      - recurring

  _InlinedType22:
    docs: The time unit of the subscription period, either \`day\` or \`month\`.
    enum:
      - day
      - month

  coverage: unknown

  planDocument: unknown

  porting: unknown

  _InlinedType23:
    docs: The service provider from whom the number is ported.
    properties:
      object:
        docs: Type of object is always \`serviceProvider\`.
        type: string
      id:
        docs: Unique identifier for the service provider.
        type: string
      name:
        docs: The name of the service provider, usually a brand name.
        type: string
      recipientProviders:
        docs: >-
          List of network providers IDs that can receive portings from the
          service provider.
        type: list<unknown>

  _InlinedType24:
    docs: The service provider to whom the number is ported.
    properties:
      object:
        docs: Type of object is always \`serviceProvider\`.
        type: string
      id:
        docs: Unique identifier for the service provider.
        type: string
      name:
        docs: The name of the service provider, usually a brand name.
        type: string
      recipientProviders:
        docs: >-
          List of network providers IDs that can receive portings from the
          service provider.
        type: list<unknown>

  _InlinedType25:
    docs: The current status of the porting.
    enum:
      - draft
      - pending
      - requested
      - declined
      - completed
      - canceled

  serviceProvider: unknown

  project: unknown

  _InlinedType26:
    docs: >-
      Deprecated object of project images. Please use the image property
      instead.
    properties:
      favicon:
        docs: Small-resolution project favicon with an aspect ratio of \`1:1\`.
        type: optional<string>
      icon:
        docs: Small-resolution project icon with an aspect ratio of \`1:1\`.
        type: optional<string>
      logoHorizontal:
        docs: High-resolution project logo with an aspect ratio of \`7:1\`.
        type: optional<string>

  _InlinedType27:
    docs: The legal address for the company that manages the project.
    properties:
      name:
        docs: The company's legal name.
        type: string
      city:
        docs: The city/municipality of the company's legal address.
        type: string
      country:
        docs: The ISO 3166-1 alpha-2 country code for the company's legal address.
        type: string
      line1:
        docs: >-
          The first line of the company's legal address, e.g. street and house
          number.
        type: string
      line2:
        docs: The second line of the given street address, e.g. Apartment number.
        type: optional<string>
      postalCode:
        docs: The postal code of the given street address.
        type: string
      state:
        docs: The state/province/region of the given street address.
        type: optional<string>

  _InlinedType28:
    docs: The mode in which the payments operate.
    enum:
      - live
      - test

  _InlinedType29:
    docs: Configuration parameters for the project use of payments.
    properties:
      currency:
        docs: >-
          Three-letter ISO 4217 currency code representing the currency of the
          project. Must be a supported currency.
        type: string
      mode:
        docs: The mode in which the payments operate.
        type: _InlinedType28

  _InlinedType30:
    docs: >-
      Indicates which entity will be registered as the owner of the subscription
      with the providers. When \`company\` is selected the legal address
      associated with the project will be used for the registration.
    enum:
      - user
      - company

  _InlinedType31:
    docs: Contact details for consumer support requests regarding the project.
    properties:
      email:
        docs: >-
          A publicly available email address for consumer support requests
          regarding the project.
        type: optional<string>
      phoneNumber:
        docs: >-
          A publicly available phone number in E.164 format for consumer support
          requests regarding the project.
        type: optional<string>

  organization: unknown

  subscription: unknown

  _InlinedType32:
    docs: The status of the SIM. Can be \`active\` or \`inactive\`.
    enum:
      - inactive
      - active
      - retired

  _InlinedType33:
    docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
    enum:
      - eSIM
      - pSIM

  _InlinedType34:
    docs: The current status of the subscription.
    enum:
      - pending
      - active
      - ended

  user: unknown

  userAddress: unknown
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: ""
  endpoints:
    deviceModelsRetrieve:
      path: /deviceModels/{id}
      method: GET
      docs: Retrieves the details of an existing device model.
      display-name: Retrieve a device model
      path-parameters:
        id: string
      response: commons.deviceModel

    deviceModelsSearch:
      path: /deviceModels/search
      method: POST
      docs: Searches for existing devices models matching the given parameters.
      display-name: Search for device models
      request:
        body: _InlinedType0
      response: unknown

    deviceModelsList:
      path: /deviceModels
      method: GET
      docs: >-
        Returns a list of device models. The models returned are sorted by
        creation date, with the most recently created models appearing first.
      display-name: List all device models
      response: unknown

    devicesRetrieve:
      path: /projects/{project}/devices/{id}
      method: GET
      docs: >-
        Retrieves the details of an existing device owned by the authenticated
        user.
      display-name: Retrieve a device
      path-parameters:
        project: string
        id: string
      response: commons.device

    devicesDelete:
      path: /projects/{project}/devices/{id}
      method: DELETE
      docs: Retrieves the details of an existing device and deletes it.
      display-name: Delete a device
      path-parameters:
        project: string
        id: string
      response: commons.device

    devicesUpdate:
      path: /projects/{project}/devices/{id}
      method: PATCH
      docs: |
        Updates the given properties of an existing device.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Update a device
      path-parameters:
        project: string
        id: string
      request:
        body: _InlinedType1
      response: commons.device

    devicesSearch:
      path: /projects/{project}/devices/search
      method: POST
      docs: >-
        Searches for existing devices matching the given parameters. The search
        will only return factory devices not yet assigned to any user, or
        devices already owned by the current user.
      display-name: Search for devices
      path-parameters:
        project: string
      request:
        body: _InlinedType2
      response: unknown

    devicesList:
      path: /projects/{project}/devices
      method: GET
      docs: >-
        Returns a list of devices. The devices returned are sorted by creation
        date, with the most recently created devices appearing first.
      display-name: List all devices
      path-parameters:
        project: string
      response: unknown

    devicesCreate:
      path: /projects/{project}/devices
      method: POST
      docs: Creates a new device with the given parameters.
      display-name: Create a device
      path-parameters:
        project: string
      request:
        body: _InlinedType3

types:
  _InlinedType0: unknown

  _InlinedType1: unknown

  _InlinedType2: unknown

  _InlinedType3: unknown
",
                "name": "devices.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /projects/{project}/plans
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    plansArchive:
      path: /{id}/archive
      method: POST
      docs: >
        Set the status of a plan to archived. An archived plan can not be used
        to create new subscriptions.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Archive a plan
      path-parameters:
        id: string
      response: commons.plan

    planDocumentRetrieve:
      path: /{plan}/documents/{id}
      method: GET
      docs: Retrieves the details of an existing document for a given plan.
      display-name: Retrieve a plan document
      path-parameters:
        plan: string
        id: string
      response: commons.planDocument

    planDocumentsList:
      path: /{plan}/documents
      method: GET
      docs: >-
        Returns a list of documents related to the given plan. The documents
        returned are sorted by creation date, with the most recently created
        documents appearing first.
      display-name: List all plan documents
      path-parameters:
        plan: string
      response: unknown

    plansRetrieve:
      path: /{id}
      method: GET
      docs: Retrieve the details of an existing plan.
      display-name: Retrieve a plan
      path-parameters:
        id: string
      response: commons.plan

    plansUpdate:
      path: /{id}
      method: PATCH
      docs: >-
        Updates the specified plan by setting the values of the parameters
        passed.
      display-name: Update a plan
      path-parameters:
        id: string
      request:
        body: _InlinedType4
      response: commons.plan

    plansPublish:
      path: /{id}/publish
      method: POST
      docs: >
        Set the status of a plan to available. Available plans can be used to
        create new subscriptions.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Publish a plan
      path-parameters:
        id: string
      response: commons.plan

    plansList:
      path: ""
      method: GET
      docs: Returns a list of plans.
      display-name: List all plans
      response: unknown

types:
  _InlinedType4: unknown
",
                "name": "plans.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: ""
  endpoints:
    portingCancel:
      path: /projects/{project}/portings/{id}/cancel
      method: POST
      docs: >
        Retrieves the details of an existing porting and cancels it. Only
        portings that have not yet being completed can be canceled.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Cancel a porting
      path-parameters:
        project: string
        id: string
      response: commons.porting

    portingRetrieve:
      path: /projects/{project}/portings/{id}
      method: GET
      docs: |
        Retrieves the details of an existing porting.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Retrieve a Porting
      path-parameters:
        project: string
        id: string
      response: commons.porting

    portingUpdate:
      path: /projects/{project}/portings/{id}
      method: PATCH
      docs: >
        Updates the specified porting by setting the values of the parameters
        passed.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Update a porting
      path-parameters:
        project: string
        id: string
      request:
        body: _InlinedType5
      response: commons.porting

    portingsList:
      path: /projects/{project}/portings
      method: GET
      docs: >
        Returns a list of portings. The portings returned are sorted by creation
        date, with the most recently created portings appearing first.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: List all portings
      path-parameters:
        project: string
      response: unknown

    portingsCreate:
      path: /projects/{project}/portings
      method: POST
      docs: >
        Creates a new porting with the parameters passed. The porting will be
        created in \`draft\` status and can be later used to create an order or
        subscription for the given network provider.
        Only some of the fields are required during creation creation, but all
        of the ones required by the network provider must be set before
        submitting the porting.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Create a porting
      path-parameters:
        project: string
      request:
        body: _InlinedType6

    serviceProviderRetrieve:
      path: /serviceProviders/{id}
      method: GET
      docs: |
        Retrieves the details of a service provider.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Retrieve a service provider
      path-parameters:
        id: string
      response: commons.serviceProvider

    serviceProvidersList:
      path: /serviceProviders
      method: GET
      docs: |
        Returns a list of service providers.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: List all service providers
      response: unknown

types:
  _InlinedType5: unknown

  _InlinedType6: unknown
",
                "name": "portings.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /projects
  endpoints:
    projectsRetrieve:
      path: /{project}
      method: GET
      docs: >-
        Retrieves the details of an existing project accessible by the API
        client.
      display-name: Retrieve a project
      path-parameters:
        project: string
      response: commons.project

    projectsCredentialsRetrieve:
      path: /{project}/credentials
      method: GET
      docs: |
        Retrieve the credentials of an existing project.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Retrieve the project credentials
      path-parameters:
        project: string
      response: unknown

    projectsList:
      path: ""
      method: GET
      docs: >-
        Returns a list of projects. The projects returned are sorted by creation
        date, with the most recently created projects appearing first.
      display-name: List all projects
      response: unknown
",
                "name": "projects.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /projects/{project}/sims
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    siMsCredentialsRetrieve:
      path: /{id}/credentials
      method: GET
      docs: Retrieve the credentials of an existing SIM.
      display-name: Retrieve the SIM credentials
      path-parameters:
        id: string
      response: simCredentials

    siMsRetrieve:
      path: /{id}
      method: GET
      docs: >-
        Retrieve the details of an existing SIM which the authenticated user is
        authorized to view.
      display-name: Retrieve a SIM
      path-parameters:
        id: string
      response: commons.sim

    siMsSearch:
      path: /search
      method: POST
      docs: Searches for existing SIMs matching the given parameters.
      display-name: Search for SIMs
      request:
        body: _InlinedType7
      response: unknown

    siMsList:
      path: ""
      method: GET
      docs: >-
        Returns a list of SIMs. The SIMs returned are sorted by creation date,
        with the most recently created SIMs appearing first.
      display-name: List all SIMs
      response: unknown

types:
  simCredentials: unknown

  _InlinedType7: unknown
",
                "name": "siMs.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /projects/{project}/subscriptions
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    subscriptionsCancel:
      path: /{id}/cancel
      method: POST
      docs: >-
        Retrieves the details of an existing subscription and schedules
        termination of the plan at the end of the next renewal date. You need
        only supply the unique subscription identifier that was returned upon
        purchasing a plan.
      display-name: Cancel an active subscription
      path-parameters:
        id: string
      response: commons.subscription

    subscriptionsRetrieve:
      path: /{id}
      method: GET
      docs: >-
        Retrieves the details of an existing subscription. You need only supply
        the unique subscription identifier that was returned upon purchasing a
        plan.
      display-name: Retrieve a subscription
      path-parameters:
        id: string
      response: commons.subscription

    subscriptionsEnd:
      path: /{id}
      method: DELETE
      docs: >-
        Ends an active plan subscription immediately. You only need to supply
        the unique subscription identifier that was returned upon purchasing a
        plan.
      display-name: End an active subscription
      path-parameters:
        id: string
      response: commons.subscription

    subscriptionsResume:
      path: /{id}/resume
      method: POST
      docs: >-
        Removes the cancellation and end times of the subscription. The
        subscription will continue to auto-renew until canceled again.
      display-name: Resume a canceled subscription
      path-parameters:
        id: string
      response: commons.subscription

    subscriptionsList:
      path: ""
      method: GET
      docs: >-
        Returns a list of subscriptions. The subscriptions returned are sorted
        by creation date, with the most recently created subscriptions appearing
        first.
      display-name: List all subscriptions
      response: unknown

    subscriptionsCreate:
      path: ""
      method: POST
      docs: >-
        Creates a new subscription for an existing user in the specified
        project.
      display-name: Create a subscription
      request:
        body: _InlinedType8

types:
  _InlinedType8: unknown
",
                "name": "subscriptions.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /projects/{project}/subscriptions/{id}/usage
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string

    id:
      docs: The unique identifier for the subscription.
      type: string
  endpoints:
    subscriptionUsageRecordList:
      path: ""
      method: GET
      docs: >-
        Lists usage records in ascending order for a subscription, defaulting to
        \`daily\` aggregation for the latest subscription period.
      display-name: List subscription usage records
      response: unknown

types:
  usageRecord: unknown
",
                "name": "usage.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /projects/{project}/users/{user}/addresses
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string

    user:
      docs: The unique identifier for the user.
      type: string
  endpoints:
    userAddressesList:
      path: ""
      method: GET
      docs: >-
        Returns a list of addresses owned by the given user. The addresses
        returned are sorted by creation date, with the most recently created
        addresses appearing first.
      display-name: List all user addresses
      response: unknown

    userAddressesCreate:
      path: ""
      method: POST
      docs: Create a new address for the given user with the given parameters.
      display-name: Create a user address
      request:
        body: _InlinedType9

    userAddressesRetrieve:
      path: /{id}
      method: GET
      docs: Retrieves the details of an existing address for a given user.
      display-name: Retrieve a user address
      path-parameters:
        id: string
      response: commons.userAddress

    userAddressesDelete:
      path: /{id}
      method: DELETE
      docs: Retrieves the details of an existing user address and deletes it.
      display-name: Delete a user address
      path-parameters:
        id: string
      response: commons.userAddress

types:
  _InlinedType9: unknown
",
                "name": "userAddresses.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: false
  base-path: /projects/{project}/users
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    usersRetrieve:
      path: /{id}
      method: GET
      docs: >-
        Retrieves the details of an existing user. You need only supply the
        unique user identifier that was returned upon user creation.
      display-name: Retrieve a user
      path-parameters:
        id: string
      response: commons.user

    usersDelete:
      path: /{id}
      method: DELETE
      docs: Retrieves the details of an existing user and deletes it.
      display-name: Delete a user
      path-parameters:
        id: string
      response: commons.user

    usersUpdate:
      path: /{id}
      method: PATCH
      docs: >-
        Updates the specified user by setting the values of the parameters
        passed.
      display-name: Update a user
      path-parameters:
        id: string
      request:
        body: _InlinedType10
      response: commons.user

    usersSearch:
      path: /search
      method: POST
      docs: Searches for existing users matching the given parameters.
      display-name: Search for users
      request:
        body: _InlinedType11
      response: unknown

    usersList:
      path: ""
      method: GET
      docs: >-
        Returns a list of users. The users returned are sorted by creation date,
        with the most recently created users appearing first.
      display-name: List all users
      response: unknown

    usersCreate:
      path: ""
      method: POST
      docs: Creates a new user with the given parameters.
      display-name: Create a user
      request:
        body: _InlinedType12

types:
  _InlinedType10: unknown

  _InlinedType11: unknown

  _InlinedType12: unknown
",
                "name": "users.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-sdk
        version: 0.0.282
        output:
          location: local-file-system
          path: ../../generated/typescript
      - name: fernapi/fern-openapi
        version: 0.0.22
        output:
          location: local-file-system
          path: ../../generated/openapi
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init no existing fern directory 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": "name: api
error-discrimination:
  strategy: status-code
",
            "name": "api.yml",
            "type": "file",
          },
          {
            "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: false
  base-path: /movies
  endpoints:
    createMovie:
      docs: Add a movie to the database
      method: POST
      path: /create-movie
      request: CreateMovieRequest
      response: MovieId

    getMovie:
      docs: Retrieve a movie from the database based on the ID
      method: GET
      path: /{id}
      path-parameters:
        id: MovieId
      response: Movie
      errors:
        - MovieDoesNotExistError
      examples:
        # Success response
        - path-parameters:
            id: tt0111161
          response:
            body:
              id: tt0111161
              title: The Shawshank Redemption
              rating: 9.3
        # Error response
        - path-parameters:
            id: tt1234
          response:
            error: MovieDoesNotExistError
            body: tt1234

types:
  MovieId:
    type: string
    docs: The unique identifier for a Movie in the database

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale out of ten stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
            "name": "imdb.yml",
            "type": "file",
          },
        ],
        "name": "definition",
        "type": "directory",
      },
      {
        "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-sdk
        version: 0.0.282
        output:
          location: local-file-system
          path: ../../generated/typescript
      - name: fernapi/fern-openapi
        version: 0.0.22
        output:
          location: local-file-system
          path: ../../generated/openapi
",
        "name": "generators.yml",
        "type": "file",
      },
    ],
    "name": "api",
    "type": "directory",
  },
  {
    "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
    "name": "fern.config.json",
    "type": "file",
  },
]
`;

exports[`fern init telematica openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

{}
",
                "name": "__package__.yml",
                "type": "file",
              },
              {
                "contents": "name: api
display-name: Telematica EV APIs
headers: {}
auth: bearerAuth
auth-schemes:
  bearerAuth:
    header: Authorization
    name: apiKey
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  SOC_ResponseDTO: unknown

  Range_ResponseDTO: unknown

  RangeSoc_ResponseDTO: unknown

  Location_ResponseDTO: unknown

  ILocation: unknown

  ChargingStatus_ResponseDTO: unknown

  Odo_ResponseDTO: unknown

  StaticAttributes_ResponseDTO: unknown
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: true
  base-path: /callback
  endpoints:
    appControllerCallback:
      path: ""
      method: POST
      docs: >-
        This is a dummy callback endpoint.
        Please share the POST callback endpoint created in your app's backend
        with Telematica to get callback requests of this format.
      display-name: Dummy callback endpoint
      request:
        body: _InlinedType0

types:
  Callback_DTO: unknown

  _InlinedType0: unknown
",
                "name": "sampleCallback.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /vehicle-data
  endpoints:
    getSocTest:
      path: /soc/test
      method: GET
      display-name: Test SOC (battery level)
      response: commons.SOC_ResponseDTO

    getRangeTest:
      path: /range/test
      method: GET
      display-name: Test range
      response: commons.Range_ResponseDTO

    getRangeSocTest:
      path: /range-soc/test
      method: GET
      display-name: Test range-soc
      response: commons.RangeSoc_ResponseDTO

    getLocationTest:
      path: /location/test
      method: GET
      display-name: Test location
      response: commons.Location_ResponseDTO

    getChargingStatusTest:
      path: /charging-status/test
      method: GET
      display-name: Test charging status
      response: commons.ChargingStatus_ResponseDTO

    getOdoTest:
      path: /odo/test
      method: GET
      display-name: Test odo
      response: commons.Odo_ResponseDTO

    getStaticAttributesTest:
      path: /static-attributes/test
      method: GET
      display-name: Test static attributes
      response: commons.StaticAttributes_ResponseDTO
",
                "name": "testingEndpoints.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /vehicle-data
  endpoints:
    getSoc:
      path: /soc
      method: GET
      display-name: SOC (battery level)
      response: commons.SOC_ResponseDTO

    getRange:
      path: /range
      method: GET
      display-name: Range
      response: commons.Range_ResponseDTO

    getRangeSoc:
      path: /range-soc
      method: GET
      docs: This endpoint returns the SOC and range for the vehicle in a single call
      display-name: Range-SOC
      response: commons.RangeSoc_ResponseDTO

    getLocation:
      path: /location
      method: GET
      display-name: Location
      response: commons.Location_ResponseDTO

    getChargingStatus:
      path: /charging-status
      method: GET
      display-name: Charging Status
      response: commons.ChargingStatus_ResponseDTO

    getOdo:
      path: /odo
      method: GET
      display-name: Odometer
      response: commons.Odo_ResponseDTO

    getStaticAttributes:
      path: /static-attributes
      method: GET
      docs: >-
        Static vehicle attributes like VIN, registration number, model, year and
        make
      display-name: Static attributes
      response: commons.StaticAttributes_ResponseDTO
",
                "name": "vehicleData.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: local
groups:
  local:
    generators:
      - name: fernapi/fern-typescript-sdk
        version: 0.0.282
        output:
          location: local-file-system
          path: ../../generated/typescript
      - name: fernapi/fern-openapi
        version: 0.0.22
        output:
          location: local-file-system
          path: ../../generated/openapi
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

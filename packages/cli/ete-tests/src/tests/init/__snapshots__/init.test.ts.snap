// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fern init covie openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

services:
  http:
    AccountService:
      auth: true
      base-path: /accounts/{account_id}/mfa_requirements
      path-parameters:
        account_id:
          docs: Unique identifier of the account.
          type: string
      endpoints:
        enableAccountMfaRequired:
          path: ""
          method: POST
          docs: Require all account users to have an MFA application configured
          display-name: Enable Account MFA Requirement
          response: AccountWithConfig

        disableAccountMfaRequired:
          path: ""
          method: DELETE
          docs: >-
            Remove requirement for all account users to have an MFA application
            configured
          display-name: Disable Account MFA Requirement

types:
  AccountWithConfig:
    properties: {}
",
                "name": "account.yml",
                "type": "file",
              },
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    ApplicationService:
      auth: true
      base-path: /applications/{application_id}
      path-parameters:
        application_id:
          docs: Unique identifier of the application.
          type: string
      endpoints:
        getApplicationLinks:
          path: /links
          method: GET
          docs: Lists an application's links.
          display-name: List Application Links
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              provider:
                docs: Partial name of a provider to search against
                type: optional<string>
              created_since:
                docs: Limit results to links created on or after this date.
                type: optional<string>
              created_until:
                docs: Limit results to links created on or before this date.
                type: optional<string>
              updated_since:
                docs: Limit results to links last updated on or since this date.
                type: optional<string>
              updated_until:
                docs: Limit results to links last updated on or before this date.
                type: optional<string>
              synced_since:
                docs: Limit results to links last synced on or after this date.
                type: optional<string>
              synced_until:
                docs: Limit results to links last synced on or before this date.
                type: optional<string>
              q:
                docs: Search for link via ID
                type: optional<string>
              status:
                docs: >-
                  Filter link status; separate multiple statuses (OR'd) with
                  commas
                type: optional<string>
              has_metadata:
                docs: Filter whether a link has metadata attached
                type: optional<boolean>
              policy_type:
                docs: The type of policy linked.
                type: optional<string>
              integration_ids:
                docs: >-
                  If provided, only show items with any of the specified
                  integration IDs, comma-separated.
                type: optional<string>
          response: commons.Links

        getApplicationPolicies:
          path: /policies
          method: GET
          docs: Lists an application's policies.
          display-name: List Application Policies
          request:
            query-parameters:
              integration_ids:
                docs: >-
                  If provided, only show items with any of the specified
                  integration IDs, comma-separated.
                type: optional<string>
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
          response: commons.Policies
",
                "name": "application.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  Carrier:
    docs: >-
      A basic object describing the individual insurance company which has
      issued a policy.
    properties:
      name: optional<string>

  Policyholder:
    docs: >-
      Describes the company or person which is legally listed on, and entitled
      to benefits from the policy for which they are attached.
    properties:
      type: optional<_InlinedType32>
      name: optional<Name>
      email_addresses: optional<list<EMail>>
      phone_numbers: optional<list<Phone>>
      is_primary: optional<boolean>

  _InlinedType32:
    docs: An indication if the insured is a business or individual.
    enum:
      - person
      - business

  Name:
    docs: Contains a name for a person or business
    properties:
      full: optional<string>

  EMail:
    docs: >-
      A universal base object encapsulating the e-mail address related to
      another object.
    properties:
      address: optional<string>
      is_primary: optional<boolean>

  Phone:
    docs: >-
      A universal base object encapsulating the phone number related to another
      object.
    properties:
      type: optional<_InlinedType33>
      number: optional<string>
      is_primary: optional<boolean>

  _InlinedType33:
    enum:
      - mobile
      - home
      - office
      - fax

  Vehicle:
    docs: >-
      Describes the motor vehicle which is covered under the terms of a policy.
      This object contains details of the specific coverages provided for this
      vehicle and information about the drivers who are covered.
    properties:
      vin: optional<string>
      make: optional<string>
      model: optional<string>
      year: optional<string>
      trim: optional<string>
      series: optional<string>
      annual_mileage: optional<integer>
      usage: optional<_InlinedType34>
      ownership: optional<_InlinedType35>
      drivers: optional<list<Driver>>
      interests: optional<list<Interest>>
      coverages: optional<_InlinedType36>
      discounts: optional<list<Discount>>

  _InlinedType34:
    docs: The intended usage of the vehicle by the insured.
    enum:
      - commute
      - pleasure
      - business

  _InlinedType35:
    docs: >-
      Whether or not the vehicle specified is owned, leased, or financed by the
      insured.
    enum:
      - own
      - lease
      - finance

  _InlinedType36:
    docs: >-
      A list of all coverages that apply to this vehicle. The omission of any
      coverage indicates that coverage was either declined or does not apply to
      this vehicle.
    properties:
      bodily_injury: optional<Coverage>
      property_damage: optional<Coverage>
      medical_payments: optional<Coverage>
      personal_injury_protection: optional<Coverage>
      comprehensive: optional<Coverage>
      collision: optional<Coverage>
      uninsured_bodily_injury: optional<Coverage>
      uninsured_property_damage: optional<Coverage>
      underinsured_bodily_injury: optional<Coverage>
      underinsured_property_damage: optional<Coverage>
      roadside: optional<Coverage>
      rental_car: optional<Coverage>
      full_glass: optional<Coverage>
      nonowned_bodily_injury: optional<Coverage>
      nonowned_property_damage: optional<Coverage>
      nonowned_medical_payments: optional<Coverage>
      nonowned_physical_damage: optional<Coverage>
      oem_parts: optional<Coverage>
      ride_share: optional<Coverage>
      all_risk: optional<Coverage>
      new_vehicle_replacement: optional<Coverage>
      collision_deductible_waiver: optional<Coverage>
      loan_lease_payoff: optional<Coverage>
      custom_parts: optional<Coverage>
      automobile_death_benefit: optional<Coverage>
      trip_interruption: optional<Coverage>
      personal_property: optional<Coverage>
      limited_property_damage: optional<Coverage>
      property_protection: optional<Coverage>
      personal_injury_attendant_rider: optional<Coverage>
      rented_vehicle_liability: optional<Coverage>
      motorcycle_enhanced_injury: optional<Coverage>
      limited_personal_injury_protection: optional<Coverage>
      carried_contents: optional<Coverage>

  Driver:
    docs: >-
      Describes the individual driver who is considered the routine operator of
      the vehicle it is attached to and who is explicitly included under the
      coverage terms selected for the vehicle.
    properties:
      name: optional<Name>
      date_of_birth: optional<string>
      marital_status: optional<_InlinedType37>
      gender: optional<_InlinedType38>
      age_licensed: optional<integer>
      license_number: optional<string>
      license_state: optional<string>
      is_primary: optional<boolean>

  _InlinedType37:
    docs: >-
      The current marital status of the driver, if provided. The \`separated\`
      value includes divorced status.
    enum:
      - married
      - single
      - separated
      - widowed

  _InlinedType38:
    docs: The reported gender of the driver, when provided by the insurer.
    enum:
      - male
      - female
      - non-binary

  Interest:
    docs: >-
      Describes an entity, person or company, that has a legal interest in a
      piece of covered property. This could represent a bank or other financial
      institution who owns a loan/mortgage/lien over a covered property, a
      landlord who owns the property a tenant is leasing, or some other
      recognized stakeholder who is entitled to certain information rights from
      the insurance company regarding the covered property.
    properties:
      type: optional<_InlinedType39>
      name: optional<Name>
      email_addresses: optional<list<EMail>>
      phone_numbers: optional<list<Phone>>

  _InlinedType39:
    docs: >-
      The type of interest being described. Such as: lender, landlord,
      guarantor, or other.
    enum:
      - landlord
      - lender
      - guarantor
      - other

  Coverage:
    docs: >-
      Describes the features of a specific coverage element for a person or
      property, encapsulating the limits, deductibles, and premium information
      therein.
    properties:
      name: optional<string>
      limits: optional<_InlinedType40>

  _InlinedType40:
    docs: >-
      A breakout of different limits and sublimits that apply to this coverage
      item. When the limits property is null, then the coverage described is
      selected but limits are not applicable for the coverage feature. The
      ommission of any limit scope indicates that it does not apply to the
      coverage.
    properties:
      duration: optional<PeriodValue>
      term: optional<CurrencyValue>

  PeriodValue:
    docs: >-
      Describes a value that represents a period of time, such as days, weeks,
      or months.
    properties:
      unit: optional<_InlinedType41>
      value: optional<integer>

  _InlinedType41:
    docs: The scale of time period being represented.
    enum:
      - day
      - week
      - month

  CurrencyValue:
    docs: >-
      Describes a value that is tied to a monetary amount. Most frequently used
      to describe limits, premiums, and deductibles.
    properties:
      unit: optional<_InlinedType42>
      value: optional<double>

  _InlinedType42:
    docs: The ISO-compatible currency code of the value being represented.
    enum:
      - USD
      - USD_cents

  Discount:
    docs: >-
      Describes a discount which a policyholder is receiving for a particular
      covered property under a policy. When available, this object also
      describes the amount of savings.
    properties:
      code: optional<_InlinedType43>
      friendly_name: optional<string>

  _InlinedType43:
    docs: >-
      The programming-friendly value to indicate the discount being applied.
      NOTE: We regularly add values to this enumeration, so your code should be
      able to gracefully handle unexpected enum values (though new values are
      documented here as they go live).
    enum:
      - safe_driver
      - telematics
      - online
      - bundle
      - teen_driver
      - claim_free
      - homeowner
      - new_car
      - multi_car
      - pay_in_full
      - paperless_billing
      - loyalty
      - good_student
      - distant_student
      - accident_free
      - continuous_insurance
      - eft
      - early_quote
      - alarm_system
      - new_home
      - new_roof
      - safe_vehicle
      - smart_vehicle
      - membership
      - payment_plan
      - military
      - garage_parking
      - senior
      - autopay
      - insurance_to_value
      - verified_mileage
      - payment_history
      - motorcycle_endorsement

  Location:
    docs: >-
      Describes a physical location and/or structure which is covered under the
      terms of an insurance policy.
    properties:
      address: optional<Address>
      coverages: optional<_InlinedType44>
      other_deductibles: optional<_InlinedType45>
      discounts: optional<list<Discount>>
      interests: optional<list<Interest>>

  _InlinedType44:
    docs: A list of coverages that apply to the location being insured.
    properties:
      dwelling: optional<Coverage>
      dwelling_extension: optional<Coverage>
      personal_property: optional<Coverage>
      personal_property_off_premises: optional<Coverage>
      loss_of_use: optional<Coverage>
      service_line: optional<Coverage>
      personal_liability: optional<Coverage>
      medical_payments: optional<Coverage>
      property_damage_others: optional<Coverage>
      fire_service: optional<Coverage>
      loss_assessment: optional<Coverage>
      sewer_backup: optional<Coverage>
      arson_reward: optional<Coverage>
      credit_card_fraud: optional<Coverage>
      debris_removal: optional<Coverage>
      oil_release: optional<Coverage>
      locks: optional<Coverage>
      landscaping: optional<Coverage>
      additional_structures: optional<Coverage>

  _InlinedType45:
    docs: >-
      A list of deductibles that apply in addition to the coverage-specific
      deductibles.
    properties: {}

  Address:
    docs: >-
      A universal base object encapsulating the physical address related to
      another object.
    properties:
      line1: optional<string>
      line2: optional<string>
      city: optional<string>
      state: optional<string>
      postal_code: optional<string>

  DocumentRef:
    docs: >-
      Describes the individual insurance document available for download from a
      given insurance policy, including the content-type (or mimetype) of the
      document.
    properties:
      type: optional<_InlinedType46>
      content_type: optional<string>
      href: optional<string>

  _InlinedType46:
    docs: The type of document provided at the corresponding URL.
    enum:
      - declaration
      - id_card
      - renewal
      - evidence_of_insurance
      - cancellation

  Events:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType47>

  _InlinedType47:
    properties:
      events: optional<list<Event>>

  Event:
    docs: >-
      Represents an event delivered via webhook on the occurrence of certain
      policy changes.
    properties:
      id: optional<string>
      event_type: optional<_InlinedType48>
      occurred_at: optional<string>
      _links: optional<_InlinedType50>

  _InlinedType48:
    docs: An enumerated string representing the type of event that occurred.
    enum:
      - link.created
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - link.changed
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType49:
    docs: Link to view the full event payload.
    properties:
      href: optional<string>

  _InlinedType50:
    properties:
      payload: optional<_InlinedType49>

  Integration:
    docs: >-
      Represents a connection between a client application and Covie's systems
      allowing a client users to create and process links.
    properties:
      id: optional<string>
      key: optional<string>
      name: optional<string>
      status: optional<_InlinedType57>
      created_at: optional<string>
      updated_at: optional<string>
      configuration: optional<_InlinedType62>

  _InlinedType51:
    docs: String representation of the current status of the integration.
    enum: &ref_0
      - active
      - archived

  _InlinedType52:
    properties:
      primary: optional<string>

  _InlinedType53:
    docs: Branding configuration for the embed.
    properties:
      logo: optional<string>
      hide_logo: optional<boolean>
      colors: optional<_InlinedType52>

  _InlinedType54:
    properties:
      agency_logo: optional<string>
      agency_photo: optional<string>

  _InlinedType55:
    properties:
      agency_name: optional<string>
      agent_name: optional<string>
      agent_email: optional<string>
      image_urls: optional<_InlinedType54>

  _InlinedType56:
    properties:
      brand: optional<_InlinedType53>
      display_name: optional<string>
      use_name_as_display_name: optional<boolean>
      hosted: optional<_InlinedType55>

  _InlinedType57:
    docs: String representation of the current status of the integration.
    enum: *ref_0

  _InlinedType58:
    properties:
      primary: optional<string>

  _InlinedType59:
    docs: Branding configuration for the embed.
    properties:
      logo: optional<string>
      hide_logo: optional<boolean>
      colors: optional<_InlinedType58>

  _InlinedType60:
    properties:
      agency_logo: optional<string>
      agency_photo: optional<string>

  _InlinedType61:
    properties:
      agency_name: optional<string>
      agent_name: optional<string>
      agent_email: optional<string>
      image_urls: optional<_InlinedType60>

  _InlinedType62:
    properties:
      brand: optional<_InlinedType59>
      display_name: optional<string>
      use_name_as_display_name: optional<boolean>
      hosted: optional<_InlinedType61>

  Policies:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType63>

  _InlinedType63:
    properties:
      policies: optional<list<Policy>>

  Policy:
    docs: >-
      This describes, in high level, the insurance policy record that is
      provided by a link. This object encapsulates all the necessary details to
      understand the policy's status, policyholders, and covered persons or
      properties.
    properties:
      id: optional<string>
      object: optional<string>
      fingerprint: optional<string>
      carrier: optional<Carrier>
      number: optional<string>
      masked_number: optional<string>
      line: optional<_InlinedType64>
      policyholders: optional<list<Policyholder>>
      vehicles: optional<list<Vehicle>>
      locations: optional<list<Location>>
      status: optional<_InlinedType65>
      term_length: optional<PeriodValue>
      inception_date: optional<string>
      expiration_date: optional<string>
      cancellation_date: optional<string>
      cancellation_reason: optional<_InlinedType66>
      linked_at: optional<string>
      last_synced_at: optional<string>
      _links: optional<_InlinedType68>
      _embedded: optional<_InlinedType69>
      link_id: optional<string>

  _InlinedType64:
    docs: A string indicating the line of business this policy encompasses.
    enum:
      - personal_auto
      - homeowner
      - renter
      - motorcycle

  _InlinedType65:
    docs: A string representation of the policy's current status.
    enum:
      - active
      - expired
      - pending
      - cancelled

  _InlinedType66:
    docs: >-
      The determined reason for the cancellation, such as insured_non_payment or
      carrier_non_renew or insured_action. This value is null when cancellation
      is not active or not explicitly indicated by the carrier systems and is
      not guaranteed to be provided in any circumstance.
    enum:
      - carrier_non_renew
      - insured_non_payment
      - insured_requested
      - other

  _InlinedType67:
    docs: A link to the logo for the carrier on the policy.
    properties:
      href: optional<string>

  _InlinedType68:
    docs: >-
      A polymorphic list of externally linked resources related to this policy
      such as documents or logos for carriers.
    properties:
      documents: optional<list<DocumentRef>>
      carrier_logo: optional<_InlinedType67>

  _InlinedType69:
    docs: A container for objects wrapped by the current object.
    properties:
      missing_fields: optional<list<string>>

  Provider:
    docs: >-
      Represents a connected insurance partner that can be used to authenticate
      and return policy data.
    properties:
      id: optional<string>
      name: optional<string>
      _links: optional<_InlinedType72>
      _embedded: optional<_InlinedType73>

  _InlinedType70:
    docs: The logo image to be used when describing a given provider.
    properties:
      href: optional<string>

  _InlinedType71:
    docs: A reference to the provider's primary website.
    properties:
      href: optional<string>

  _InlinedType72:
    docs: >-
      A collection of externally referenced material pertaining to the provider,
      such as web addresses and images.
    properties:
      image: optional<_InlinedType70>
      website: optional<_InlinedType71>

  _InlinedType73:
    docs: >-
      A collection of sub objects that are related to this provider, most
      commonly consisting of co-branded or sub-issuing providers affiliated with
      this provider.
    properties:
      alternative_providers: optional<list<Provider>>

  Link_2:
    docs: >-
      Represents the individual connections between Covie and a Policyholder's
      account with a carrier and wraps the policies retrieved from it that have
      been made available to the consumer.
    properties:
      id: optional<string>
      object: optional<string>
      integration_id: optional<string>
      policy_count: optional<integer>
      status: optional<_InlinedType81>
      is_tracked: optional<boolean>
      tracking_frequency: optional<_InlinedType82>
      updated_at: optional<string>
      created_at: optional<string>
      _links: optional<_InlinedType86>

  _InlinedType74:
    docs: >-
      A string representation of the link's current status. This is distinct
      from a policy's status which is an indicator to whether a policy is in
      force. A link's status is an indicator of how new and complete the data is
      and whether or not it is possible to retrieve refreshed information.
    enum: &ref_1
      - new
      - active
      - document_uploaded
      - broken
      - revoked
      - stale

  _InlinedType75:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum: &ref_2
      - daily
      - weekly
      - monthly
      - never
      - on_demand

  _InlinedType76:
    docs: Link to retrieve the link's details.
    properties:
      href: optional<string>

  _InlinedType77:
    docs: Link to the carrier's logo.
    properties:
      href: optional<string>

  _InlinedType78:
    properties:
      href: optional<string>
      content_type: optional<string>

  _InlinedType79:
    properties:
      self: optional<_InlinedType76>
      carrier_logo: optional<_InlinedType77>
      uploaded_documents: optional<list<_InlinedType78>>

  Links:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType80>

  _InlinedType80:
    properties:
      links: optional<list<Link_2>>

  _InlinedType81:
    docs: >-
      A string representation of the link's current status. This is distinct
      from a policy's status which is an indicator to whether a policy is in
      force. A link's status is an indicator of how new and complete the data is
      and whether or not it is possible to retrieve refreshed information.
    enum: *ref_1

  _InlinedType82:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum: *ref_2

  _InlinedType83:
    docs: Link to retrieve the link's details.
    properties:
      href: optional<string>

  _InlinedType84:
    docs: Link to the carrier's logo.
    properties:
      href: optional<string>

  _InlinedType85:
    properties:
      href: optional<string>
      content_type: optional<string>

  _InlinedType86:
    properties:
      self: optional<_InlinedType83>
      carrier_logo: optional<_InlinedType84>
      uploaded_documents: optional<list<_InlinedType85>>

  Webhook:
    docs: Represents a webhook in the Covie system.
    properties:
      id: optional<string>
      uri: optional<string>
      is_enabled: optional<boolean>
      event_types: optional<list<_InlinedType88>>
      last_response_body: optional<string>
      last_response_code: optional<string>
      last_called_at: optional<string>
      created_at: optional<string>
      updated_at: optional<string>

  _InlinedType87:
    enum: &ref_3
      - link.created
      - link.changed
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType88:
    enum: *ref_3
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

services:
  http:
    EventService:
      auth: true
      base-path: /events/{event_id}/broadcasts
      path-parameters:
        event_id: string
      endpoints:
        postEventsEventIdBroadcasts:
          path: ""
          method: POST
          docs: Rebroadcast an event.
          display-name: Rebroadcast Event
          response: _InlinedType31

types:
  EventBroadcast:
    docs: Record of a broadcast to a webhook endpoint when an event is triggered.
    properties:
      id: optional<string>
      queued_at: optional<string>
      broadcast_at: optional<string>
      request_uri: optional<string>
      response_code: optional<integer>
      response_body: optional<string>

  _InlinedType30:
    properties:
      broadcasts: optional<list<EventBroadcast>>

  _InlinedType31:
    properties:
      count: optional<integer>
      _embedded: optional<_InlinedType30>
",
                "name": "event.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    IntegrationService:
      auth: true
      base-path: /integrations
      endpoints:
        listIntegrations:
          path: ""
          method: GET
          docs: List integrations associated to an application
          display-name: List Integrations
          request:
            query-parameters:
              q:
                docs: >-
                  Partial integration name, ID, or integration key to search
                  against, with or without leading in_/ik_
                type: optional<string>
              status:
                docs: Filter active or archived integrations
                type: optional<string>
          response: Integrations

        createIntegration:
          path: ""
          method: POST
          docs: Creates a new integration.
          display-name: Create Integration
          request:
            body:
              properties:
                name: string
                policyRequirements: optional<_InlinedType12>
                configuration: optional<_InlinedType15>

        getIntegration:
          path: /{integration_id}
          method: GET
          docs: Retrieve the details of an integration.
          display-name: Get Integration
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          response: commons.Integration_2

        deleteIntegration:
          path: /{integration_id}
          method: DELETE
          docs: Deletes an integration.
          display-name: Delete Integration
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string

        updateIntegration:
          path: /{integration_id}
          method: PATCH
          docs: Edit the name and archived status of an integration.
          display-name: Update Integration
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          request:
            body:
              properties:
                name: optional<string>
                status: optional<_InlinedType16>
                configuration: optional<_InlinedType19>
                policy_requirements: optional<_InlinedType20>
          response: commons.Integration_2

        getIntegrationPolicies:
          path: /{integration_id}/policies
          method: GET
          docs: List all policies that have been linked to an integration.
          display-name: List Integration Policies
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
          response: commons.Policies

        getIntegrationProviders:
          path: /{integration_id}/providers
          method: GET
          docs: >-
            Retrieve a list of supported carriers for a given integration, along
            with their identifiers.
          display-name: Supported Providers List
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          request:
            query-parameters:
              required_policy_types:
                docs: >-
                  A pipe delineated list of policy types desired. Providers who
                  do not support at least one required policy type will be
                  excluded.
                type: optional<string>
          response: Providers

        regenerateIntegrationKey:
          path: /{integration_id}/regenerate_key
          method: POST
          docs: >-
            Replaces the existing integration key with a new randomly generated
            key.
          display-name: Regenerate Integration Key
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          response: commons.Integration_2

        getIntegrationsIntegrationIdAgencyLogo:
          path: /{integration_id}/agency_logo
          method: GET
          docs: View the agency logo for the hosted integration.
          display-name: View Agency Logo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string

        putIntegrationsIntegrationIdAgencyLogo:
          path: /{integration_id}/agency_logo
          method: PUT
          docs: Upload the agency logo for the hosted integration.
          display-name: Update Agency Logo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          response: _InlinedType21

        deleteIntegrationsIntegrationIdAgencyLogo:
          path: /{integration_id}/agency_logo
          method: DELETE
          docs: Delete the agency logo and/or config if present.
          display-name: Delete Agency Logo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string

        getIntegrationsIntegrationIdAgentPhoto:
          path: /{integration_id}/agent_photo
          method: GET
          docs: View the agent photo for the hosted integration.
          display-name: View Agent Photo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string

        putIntegrationsIntegrationIdAgentPhoto:
          path: /{integration_id}/agent_photo
          method: PUT
          docs: Upload an agent photo for the hosted integration.
          display-name: Update Agent Photo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          response: _InlinedType22

        deleteIntegrationsIntegrationIdAgentPhoto:
          path: /{integration_id}/agent_photo
          method: DELETE
          docs: Delete the agent photo and/or config if present.
          display-name: Delete Agent Photo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string

        getIntegrationsIntegrationIdBrandLogo:
          path: /{integration_id}/brand_logo
          method: GET
          docs: View the brand logo for the integration.
          display-name: View Brand Logo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string

        putIntegrationsIntegrationIdBrandLogo:
          path: /{integration_id}/brand_logo
          method: PUT
          docs: Upload the brand logo for the hosted integration.
          display-name: Update Brand Logo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          response: _InlinedType23

        deleteIntegrationsIntegrationIdBrandLogo:
          path: /{integration_id}/brand_logo
          method: DELETE
          docs: Delete the brand logo and/or config if present.
          display-name: Delete Brand Logo
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string

types:
  Integrations:
    properties:
      count: optional<integer>
      _links: optional<_InlinedType7>
      _embedded: optional<_InlinedType8>

  _InlinedType6:
    properties:
      href: optional<string>

  _InlinedType7:
    properties:
      self: optional<_InlinedType6>

  _InlinedType8:
    properties:
      integrations: optional<list<commons.Integration>>

  Providers:
    properties:
      count: optional<integer>
      _links: optional<_InlinedType10>
      _embedded: optional<_InlinedType11>

  _InlinedType9:
    properties:
      href: optional<string>

  _InlinedType10:
    properties:
      self: optional<_InlinedType9>

  _InlinedType11:
    properties:
      providers: optional<list<commons.Provider>>

  _InlinedType12:
    properties:
      effective_date: optional<string>
      allow_inactive: optional<boolean>

  _InlinedType13:
    properties:
      primary: optional<string>

  _InlinedType14:
    docs: Branding configuration for the embed.
    properties:
      logo: optional<string>
      hide_logo: optional<boolean>
      colors: optional<_InlinedType13>

  _InlinedType15:
    properties:
      brand: optional<_InlinedType14>
      display_name: optional<string>
      use_name_as_display_name: optional<boolean>

  _InlinedType16:
    docs: String representation of the current status of the integration.
    enum:
      - active
      - archived

  _InlinedType17:
    properties:
      primary: optional<string>

  _InlinedType18:
    docs: Branding configuration for the embed.
    properties:
      logo: optional<string>
      hide_logo: optional<boolean>
      colors: optional<_InlinedType17>

  _InlinedType19:
    properties:
      brand: optional<_InlinedType18>
      display_name: optional<string>
      use_name_as_display_name: optional<boolean>

  _InlinedType20:
    properties:
      allow_inactive: optional<boolean>
      effective_date: optional<string>

  _InlinedType21:
    properties:
      href: optional<string>

  _InlinedType22:
    properties:
      href: optional<string>

  _InlinedType23:
    properties:
      href: optional<string>
",
                "name": "integration.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    LinkService:
      auth: true
      base-path: ""
      endpoints:
        getLink:
          path: /links/{id}
          method: GET
          docs: Retrieves a Link
          display-name: Retrieve link
          path-parameters:
            id:
              docs: The unique identifier of the link being inspected.
              type: string
          response: commons.Link

        deleteLink:
          path: /links/{id}
          method: DELETE
          docs: Deletes a link.
          display-name: Delete Link
          path-parameters:
            id:
              docs: The unique identifier of the link being inspected.
              type: string

        updateLinkSettings:
          path: /links/{id}
          method: PATCH
          display-name: Update Link Settings
          path-parameters:
            id:
              docs: The unique identifier of the link being inspected.
              type: string
          request:
            body:
              properties:
                tracking_frequency: optional<_InlinedType26>
          response: commons.Link

        getLinkPolicies:
          path: /links/{id}/policies
          method: GET
          docs: Retrieves a list of policies associated with the requested link
          display-name: List Link Policies
          path-parameters:
            id:
              docs: The unique identifier of the link being inspected.
              type: string
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
          response: commons.Policies

        getLinkEvents:
          path: /links/{id}/events
          method: GET
          docs: Retrieves a list of events triggered for the requested link
          display-name: List Link Events
          path-parameters:
            id:
              docs: The unique identifier of the link being inspected.
              type: string
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: commons.Events

        attachLinkDocument:
          path: /links/{id}/documents
          method: POST
          docs: >-
            Attach a policy document to a Link. If the document can be parsed,
            select the parsed policy for sharing.
          display-name: Upload Document To Link
          path-parameters:
            id:
              docs: The unique identifier of the link being inspected.
              type: string

        syncLinkManually:
          path: /links/{id}/syncs
          method: POST
          docs: >-
            Sync a tracked link with the provider using the stored user
            credentials
          display-name: Manually Sync Link
          path-parameters:
            id:
              docs: The unique identifier of the link being inspected.
              type: string

        getIntegrationLinks:
          path: /integrations/{integration_id}/links
          method: GET
          docs: Retrieves a list of links associated to the requested integration
          display-name: List Integration Links
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              provider:
                docs: Partial name of a provider to search against
                type: optional<string>
              created_since:
                docs: Limit results to links created on or after this date.
                type: optional<string>
              created_until:
                docs: Limit results to links created on or before this date.
                type: optional<string>
              updated_since:
                docs: Limit results to links last updated on or since this date.
                type: optional<string>
              updated_until:
                docs: Limit results to links last updated on or before this date.
                type: optional<string>
              synced_since:
                docs: Limit results to links last synced on or after this date.
                type: optional<string>
              synced_until:
                docs: Limit results to links last synced on or before this date.
                type: optional<string>
              q:
                docs: Search for link via ID
                type: optional<string>
              status:
                docs: >-
                  Filter link status; separate multiple statuses (OR'd) with
                  commas
                type: optional<string>
              has_metadata:
                docs: Filter whether a link has metadata attached
                type: optional<boolean>
              policy_type:
                docs: The type of policy linked.
                type: optional<string>
          response: commons.Links

        initializeLinkViaIntegration:
          path: /integrations/{integration_id}/links
          method: POST
          docs: >-
            Creates a link and optionally sets metadata and selects a carrier,
            allowing for seeding initial data before an insured continues the
            linking process via the embed
          display-name: Initialize link
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          request:
            body:
              properties:
                provider_id: optional<string>
          response: commons.Link

        getIntegrationLinksWithPolicies:
          path: /integrations/{integration_id}/links_with_policies
          method: GET
          docs: >-
            Retrieves a list of links and selected policies associated to the
            requested integration
          display-name: List Integration Links With Policies
          path-parameters:
            integration_id:
              docs: >-
                The unique identifier of the integration being inspected. Must
                be a valid integration under the application associated with the
                authenticated Client ID and Secret.
              type: string
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              provider:
                docs: Partial name of a provider to search against
                type: optional<string>
              created_since:
                docs: Limit results to links created on or after this date.
                type: optional<string>
              created_until:
                docs: Limit results to links created on or before this date.
                type: optional<string>
              updated_since:
                docs: Limit results to links last updated on or since this date.
                type: optional<string>
              updated_until:
                docs: Limit results to links last updated on or before this date.
                type: optional<string>
              synced_since:
                docs: Limit results to links last synced on or after this date.
                type: optional<string>
              synced_until:
                docs: Limit results to links last synced on or before this date.
                type: optional<string>
              policy_type:
                docs: The type of policy linked.
                type: optional<string>
              policy_filter_type:
                docs: >-
                  Show only these types of policies within each link. Does not
                  affect which links are shown. Comma-separate to allow multiple
                  policy types.
                type: optional<string>
          response: LinksWithPolicies

types:
  LinksWithPolicies:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType24>

  _InlinedType24:
    properties:
      links: optional<list<LinkWithPolicies>>

  LinkWithPolicies:
    docs: >-
      Represents the individual connections between Covie and a Policyholder's
      account with a carrier and wraps the policies retrieved from it that have
      been made available to the consumer.
    extends:
      - commons.Link_2
      - _InlinedType25

  _InlinedType25:
    properties:
      policies: optional<list<commons.Policy>>

  _InlinedType26:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum:
      - never
      - daily
      - weekly
      - monthly
      - on_demand
",
                "name": "link.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    PolicyService:
      auth: true
      base-path: /policies/{policy_id}
      path-parameters:
        policy_id:
          docs: The unique identifier of the policy object being sought.
          type: string
      endpoints:
        getPoliciesPolicyId:
          path: ""
          method: GET
          docs: Retrieve a Policy object that was previously connected via a Link
          display-name: Retrieve Policy
          response: Policy_2

        getPolicyDocument:
          path: /documents/{document_type}
          method: GET
          docs: Retrieve the contents of a Policy document
          display-name: Retrieve Policy Document
          path-parameters:
            document_type:
              docs: The document type being requested.
              type: string
          response: FileContents

        listPolicyEvents:
          path: /events
          method: GET
          docs: List all events that have been triggered for the selected policy
          display-name: List Policy Events
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: commons.Events

types:
  Policy:
    docs: >-
      This describes, in high level, the insurance policy record that is
      provided by a link. This object encapsulates all the necessary details to
      understand the policy's status, policyholders, and covered persons or
      properties.
    properties:
      id: optional<string>
      object: optional<string>
      fingerprint: optional<string>
      carrier: optional<commons.Carrier>
      number: optional<string>
      masked_number: optional<string>
      line: optional<_InlinedType0>
      policyholders: optional<list<commons.Policyholder>>
      vehicles: optional<list<commons.Vehicle>>
      locations: optional<list<commons.Location>>
      status: optional<_InlinedType1>
      term_length: optional<commons.PeriodValue>
      inception_date: optional<string>
      expiration_date: optional<string>
      cancellation_date: optional<string>
      cancellation_reason: optional<_InlinedType2>
      linked_at: optional<string>
      last_synced_at: optional<string>
      _links: optional<_InlinedType4>
      _embedded: optional<_InlinedType5>
      link_id: optional<string>

  _InlinedType0:
    docs: A string indicating the line of business this policy encompasses.
    enum:
      - personal_auto
      - homeowner
      - renter
      - motorcycle

  _InlinedType1:
    docs: A string representation of the policy's current status.
    enum:
      - active
      - expired
      - pending
      - cancelled

  _InlinedType2:
    docs: >-
      The determined reason for the cancellation, such as insured_non_payment or
      carrier_non_renew or insured_action. This value is null when cancellation
      is not active or not explicitly indicated by the carrier systems and is
      not guaranteed to be provided in any circumstance.
    enum:
      - carrier_non_renew
      - insured_non_payment
      - insured_requested
      - other

  _InlinedType3:
    docs: A link to the logo for the carrier on the policy.
    properties:
      href: optional<string>

  _InlinedType4:
    docs: >-
      A polymorphic list of externally linked resources related to this policy
      such as documents or logos for carriers.
    properties:
      documents: optional<list<commons.DocumentRef>>
      carrier_logo: optional<_InlinedType3>

  _InlinedType5:
    docs: A container for objects wrapped by the current object.
    properties:
      missing_fields: optional<list<string>>
",
                "name": "policy.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    WebhookService:
      auth: true
      base-path: /webhooks
      endpoints:
        listWebhooks:
          path: ""
          method: GET
          docs: List an application's configured webhooks.
          display-name: List Webhooks
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: Webhooks

        createWebhook:
          path: ""
          method: POST
          docs: Create a new webhook
          display-name: Create Webhook
          request:
            body:
              properties:
                uri: optional<string>
                event_types: optional<list<_InlinedType28>>

        getWebhook:
          path: /{webhook_id}
          method: GET
          docs: Get the details of a webhook.
          display-name: Get Webhook
          path-parameters:
            webhook_id:
              docs: Unique identifier of the webhook.
              type: string
          response: commons.Webhook_2

        updateWebhook:
          path: /{webhook_id}
          method: PATCH
          docs: Update a webhook.
          display-name: Update Webhook
          path-parameters:
            webhook_id:
              docs: Unique identifier of the webhook.
              type: string
          request:
            body:
              properties:
                uri: optional<string>
                is_enabled: optional<boolean>
                event_types: optional<list<_InlinedType29>>
          response: commons.Webhook_2

        listWebhookEvents:
          path: /{webhook_id}/events
          method: GET
          docs: List the events that have been triggered for a webhook.
          display-name: List Webhook Events
          path-parameters:
            webhook_id:
              docs: Unique identifier of the webhook.
              type: string
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: commons.Events

types:
  Webhooks:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType27>

  _InlinedType27:
    properties:
      webhooks: optional<list<commons.Webhook>>

  _InlinedType28:
    enum:
      - link.created
      - link.changed
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType29:
    enum:
      - link.created
      - link.changed
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium
",
                "name": "webhook.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init gigs openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  deviceModel:
    properties:
      object: string
      id: string
      brand: string
      name: string
      simTypes: list<_InlinedType18>
      type: _InlinedType19

  _InlinedType18:
    enum:
      - eSIM
      - pSIM

  _InlinedType19:
    docs: The type of the device model.
    enum:
      - car
      - iot
      - laptop
      - router
      - smartphone
      - feature-phone
      - smartwatch
      - tablet
      - wearable
      - other

  device:
    properties:
      object: string
      id: string
      imei: optional<string>
      model: _InlinedType22
      name: optional<string>
      sims: list<sim>
      user: _InlinedType23
      createdAt: string

  _InlinedType20:
    enum:
      - eSIM
      - pSIM

  _InlinedType21:
    docs: The type of the device model.
    enum:
      - car
      - iot
      - laptop
      - router
      - smartphone
      - feature-phone
      - smartwatch
      - tablet
      - wearable
      - other

  _InlinedType22:
    properties:
      object: string
      id: string
      brand: string
      name: string
      simTypes: list<_InlinedType20>
      type: _InlinedType21

  _InlinedType23:
    properties:
      object: string
      id: string
      birthday: optional<string>
      email: string
      emailVerified: boolean
      fullName: optional<string>
      preferredLocale: string
      createdAt: string

  sim:
    properties:
      object: string
      id: string
      iccid: string
      provider: string
      status: _InlinedType24
      type: _InlinedType25
      createdAt: string

  _InlinedType24:
    docs: The status of the SIM. Can be \`active\` or \`inactive\`.
    enum:
      - inactive
      - active
      - retired

  _InlinedType25:
    docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
    enum:
      - eSIM
      - pSIM

  plan:
    properties:
      object: string
      id: string
      coverage: coverage
      data: integer
      dataUnit: string
      description: optional<string>
      image: optional<string>
      name: string
      price: _InlinedType26
      provider: string
      requirements: _InlinedType31
      simTypes: list<_InlinedType32>
      sms: integer
      smsUnit: string
      status: _InlinedType33
      tags: list<string>
      validity: _InlinedType36
      voice: integer
      voiceUnit: string
      createdAt: string

  _InlinedType26:
    properties:
      amount: integer
      currency: string

  _InlinedType27:
    docs: >-
      The address requirements that must be fulfilled before a user may purchase
      a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType28:
    docs: >-
      The device requirements that must be fulfilled before a user may purchase
      a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType29:
    docs: >-
      The user birthday requirements that must be fulfilled before a user may
      purchase a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType30:
    docs: >-
      The user full name requirements that must be fulfilled before a user may
      purchase a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType31:
    properties:
      address: _InlinedType27
      device: _InlinedType28
      user.birthday: _InlinedType29
      user.fullName: _InlinedType30

  _InlinedType32:
    enum:
      - eSIM
      - pSIM

  _InlinedType33:
    enum:
      - available
      - archived
      - pending
      - draft

  _InlinedType34:
    docs: The validity type of this plan, either \`oneTime\` or \`recurring\`.
    enum:
      - oneTime
      - recurring

  _InlinedType35:
    docs: The time unit of the subscription period, either \`day\` or \`month\`.
    enum:
      - day
      - month

  _InlinedType36:
    properties:
      minimumPeriods: integer
      type: _InlinedType34
      unit: _InlinedType35
      value: integer

  coverage:
    properties:
      object: string
      id: string
      countries: list<string>
      name: string

  planDocument:
    properties:
      object: string
      id: string
      name: string
      plan: string
      type: string
      url: string
      createdAt: string

  porting:
    properties:
      object: string
      id: string
      accountNumber: optional<string>
      birthday: optional<string>
      declinedAttempts: integer
      donorProvider: _InlinedType37
      firstName: optional<string>
      lastName: optional<string>
      phoneNumber: string
      provider: string
      recipientProvider: _InlinedType38
      required: list<string>
      status: _InlinedType39
      subscription: optional<string>
      user: string
      canceledAt: optional<string>
      completedAt: optional<string>
      createdAt: string
      lastDeclinedAt: optional<string>
      lastRequestedAt: optional<string>

  _InlinedType37:
    docs: The service provider from whom the number is ported.
    properties:
      object: string
      id: string
      name: string
      recipientProviders: list<string>

  _InlinedType38:
    docs: The service provider to whom the number is ported.
    properties:
      object: string
      id: string
      name: string
      recipientProviders: list<string>

  _InlinedType39:
    docs: The current status of the porting.
    enum:
      - draft
      - pending
      - requested
      - declined
      - completed
      - canceled

  serviceProvider:
    properties:
      object: string
      id: string
      name: string
      recipientProviders: list<string>

  project:
    properties:
      object: string
      id: string
      domain: optional<string>
      image: optional<string>
      images: _InlinedType40
      legal: _InlinedType41
      locales: list<string>
      name: string
      organization: organization
      payments: _InlinedType43
      settings: map<string, unknown>
      subscriptionOwner: _InlinedType44
      support: _InlinedType45
      createdAt: string

  _InlinedType40:
    docs: >-
      Deprecated object of project images. Please use the image property
      instead.
    properties:
      favicon: optional<string>
      icon: optional<string>
      logoHorizontal: optional<string>

  _InlinedType41:
    docs: The legal address for the company that manages the project.
    properties:
      name: string
      city: string
      country: string
      line1: string
      line2: optional<string>
      postalCode: string
      state: optional<string>

  _InlinedType42:
    docs: The mode in which the payments operate.
    enum:
      - live
      - test

  _InlinedType43:
    docs: Configuration parameters for the project use of payments.
    properties:
      currency: string
      mode: _InlinedType42

  _InlinedType44:
    docs: >-
      Indicates which entity will be registered as the owner of the subscription
      with the providers. When \`company\` is selected the legal address
      associated with the project will be used for the registration.
    enum:
      - user
      - company

  _InlinedType45:
    docs: Contact details for consumer support requests regarding the project.
    properties:
      email: optional<string>
      phoneNumber: optional<string>

  organization:
    properties:
      object: string
      id: string
      name: string
      createdAt: string

  subscription:
    properties:
      object: string
      id: string
      currentPeriod: _InlinedType46
      phoneNumber: optional<string>
      plan: plan
      porting: optional<string>
      sim: _InlinedType49
      status: _InlinedType50
      user: user
      activatedAt: optional<string>
      canceledAt: optional<string>
      createdAt: string
      endedAt: optional<string>
      firstUsageAt: optional<string>

  _InlinedType46:
    properties:
      number: integer
      start: string
      end: string

  _InlinedType47:
    docs: The status of the SIM. Can be \`active\` or \`inactive\`.
    enum:
      - inactive
      - active
      - retired

  _InlinedType48:
    docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
    enum:
      - eSIM
      - pSIM

  _InlinedType49:
    properties:
      object: string
      id: string
      iccid: string
      provider: string
      status: _InlinedType47
      type: _InlinedType48
      createdAt: string

  _InlinedType50:
    docs: The current status of the subscription.
    enum:
      - pending
      - active
      - ended

  user:
    properties:
      object: string
      id: string
      birthday: optional<string>
      email: string
      emailVerified: boolean
      fullName: optional<string>
      preferredLocale: string
      createdAt: string

  userAddress:
    properties:
      object: string
      id: string
      city: string
      country: string
      line1: string
      line2: optional<string>
      postalCode: optional<string>
      state: optional<string>
      user: string
      createdAt: string
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    DevicesService:
      auth: true
      base-path: ""
      endpoints:
        deviceModelsRetrieve:
          path: /deviceModels/{id}
          method: GET
          docs: Retrieves the details of an existing device model.
          display-name: Retrieve a device model
          path-parameters:
            id:
              docs: The unique identifier for the device model.
              type: string
          response: commons.deviceModel

        deviceModelsSearch:
          path: /deviceModels/search
          method: POST
          docs: Searches for existing devices models matching the given parameters.
          display-name: Search for device models
          request:
            body:
              properties:
                imei: string
          response: _InlinedType0

        deviceModelsList:
          path: /deviceModels
          method: GET
          docs: >-
            Returns a list of device models. The models returned are sorted by
            creation date, with the most recently created models appearing
            first.
          display-name: List all device models
          request:
            query-parameters:
              type:
                docs: A comma-separated list of types to be filtered by.
                type: optional<undefined>
              brand:
                docs: A comma-separated list of brands to be filtered by.
                type: optional<undefined>
              simType:
                docs: A comma-separated list of SIM types to be filtered by.
                type: optional<undefined>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType1

        devicesRetrieve:
          path: /projects/{project}/devices/{id}
          method: GET
          docs: >-
            Retrieves the details of an existing device owned by the
            authenticated user.
          display-name: Retrieve a device
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
            id:
              docs: The unique identifier for the device.
              type: string
          response: commons.device

        devicesDelete:
          path: /projects/{project}/devices/{id}
          method: DELETE
          docs: Retrieves the details of an existing device and deletes it.
          display-name: Delete a device
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
            id:
              docs: The unique identifier for the device.
              type: string
          response: commons.device

        devicesUpdate:
          path: /projects/{project}/devices/{id}
          method: PATCH
          docs: >
            Updates the given properties of an existing device.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Update a device
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
            id:
              docs: The unique identifier for the device.
              type: string
          request:
            body:
              properties:
                name: optional<string>
                sims: optional<list<string>>
                user: optional<string>
          response: commons.device

        devicesSearch:
          path: /projects/{project}/devices/search
          method: POST
          docs: >-
            Searches for existing devices matching the given parameters. The
            search will only return factory devices not yet assigned to any
            user, or devices already owned by the current user.
          display-name: Search for devices
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
          request:
            body:
              properties:
                imei: string
          response: _InlinedType2

        devicesList:
          path: /projects/{project}/devices
          method: GET
          docs: >-
            Returns a list of devices. The devices returned are sorted by
            creation date, with the most recently created devices appearing
            first.
          display-name: List all devices
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
          request:
            query-parameters:
              sim:
                docs: The unique identifier for the sim to be filtered by.
                type: optional<string>
              user:
                docs: The unique identifier for the user to be filtered by.
                type: optional<string>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType3

        devicesCreate:
          path: /projects/{project}/devices
          method: POST
          docs: Creates a new device with the given parameters.
          display-name: Create a device
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
          request:
            body:
              properties:
                imei: string
                user: string
                sims: optional<list<string>>
                name: optional<string>

types:
  _InlinedType0:
    properties:
      object: string
      items: list<commons.deviceModel>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>

  _InlinedType1:
    properties:
      object: string
      items: list<commons.deviceModel>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>

  _InlinedType2:
    properties:
      object: string
      items: list<commons.device>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>

  _InlinedType3:
    properties:
      object: string
      items: list<commons.device>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "devices.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    PlansService:
      auth: true
      base-path: /projects/{project}/plans
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      endpoints:
        plansArchive:
          path: /{id}/archive
          method: POST
          docs: >
            Set the status of a plan to archived. An archived plan can not be
            used to create new subscriptions.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Archive a plan
          path-parameters:
            id:
              docs: The unique identifier for the plan.
              type: string
          response: commons.plan

        planDocumentRetrieve:
          path: /{plan}/documents/{id}
          method: GET
          docs: Retrieves the details of an existing document for a given plan.
          display-name: Retrieve a plan document
          path-parameters:
            plan:
              docs: The unique identifier for the plan.
              type: string
            id:
              docs: The unique identifier for the document.
              type: string
          response: commons.planDocument

        planDocumentsList:
          path: /{plan}/documents
          method: GET
          docs: >-
            Returns a list of documents related to the given plan. The documents
            returned are sorted by creation date, with the most recently created
            documents appearing first.
          display-name: List all plan documents
          path-parameters:
            plan:
              docs: The unique identifier for the plan.
              type: string
          response: _InlinedType4

        plansRetrieve:
          path: /{id}
          method: GET
          docs: Retrieve the details of an existing plan.
          display-name: Retrieve a plan
          path-parameters:
            id:
              docs: The unique identifier for the plan.
              type: string
          response: commons.plan

        plansUpdate:
          path: /{id}
          method: PATCH
          docs: >-
            Updates the specified plan by setting the values of the parameters
            passed.
          display-name: Update a plan
          path-parameters:
            id:
              docs: The unique identifier for the plan.
              type: string
          request:
            body:
              properties:
                name: optional<string>
                description: optional<string>
                image: optional<string>
          response: commons.plan

        plansPublish:
          path: /{id}/publish
          method: POST
          docs: >
            Set the status of a plan to available. Available plans can be used
            to create new subscriptions.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Publish a plan
          path-parameters:
            id:
              docs: The unique identifier for the plan.
              type: string
          response: commons.plan

        plansList:
          path: ""
          method: GET
          docs: Returns a list of plans.
          display-name: List all plans
          request:
            query-parameters:
              provider:
                docs: The network provider ID to filter the plans by.
                type: optional<undefined>
              simType:
                docs: The type of SIM card to filter the plans by.
                type: optional<undefined>
              status:
                docs: >-
                  The status to filter the plans by. Only available plans are
                  returned by default.
                type: optional<undefined>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType5

types:
  _InlinedType4:
    properties:
      object: string
      items: list<commons.planDocument>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>

  _InlinedType5:
    properties:
      object: string
      items: list<commons.plan>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "plans.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    PortingsService:
      auth: true
      base-path: ""
      endpoints:
        portingCancel:
          path: /projects/{project}/portings/{id}/cancel
          method: POST
          docs: >
            Retrieves the details of an existing porting and cancels it. Only
            portings that have not yet being completed can be canceled.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Cancel a porting
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
            id:
              docs: The unique identifier for the porting.
              type: string
          response: commons.porting

        portingRetrieve:
          path: /projects/{project}/portings/{id}
          method: GET
          docs: >
            Retrieves the details of an existing porting.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Retrieve a Porting
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
            id:
              docs: The unique identifier for the porting.
              type: string
          response: commons.porting

        portingUpdate:
          path: /projects/{project}/portings/{id}
          method: PATCH
          docs: >
            Updates the specified porting by setting the values of the
            parameters passed.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Update a porting
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
            id:
              docs: The unique identifier for the porting.
              type: string
          request:
            body:
              properties:
                accountNumber: optional<string>
                accountPin: optional<string>
                birthday: optional<string>
                donorProvider: optional<string>
                firstName: optional<string>
                lastName: optional<string>
                phoneNumber: optional<string>
                provider: optional<string>
          response: commons.porting

        portingsList:
          path: /projects/{project}/portings
          method: GET
          docs: >
            Returns a list of portings. The portings returned are sorted by
            creation date, with the most recently created portings appearing
            first.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: List all portings
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
          request:
            query-parameters:
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType6

        portingsCreate:
          path: /projects/{project}/portings
          method: POST
          docs: >
            Creates a new porting with the parameters passed. The porting will
            be created in \`draft\` status and can be later used to create an
            order or subscription for the given network provider.
            Only some of the fields are required during creation creation, but
            all of the ones required by the network provider must be set before
            submitting the porting.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Create a porting
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
          request:
            body:
              properties:
                accountNumber: optional<string>
                accountPin: optional<string>
                birthday: optional<string>
                donorProvider: optional<string>
                firstName: optional<string>
                lastName: optional<string>
                phoneNumber: string
                provider: string
                user: string

        serviceProviderRetrieve:
          path: /serviceProviders/{id}
          method: GET
          docs: >
            Retrieves the details of a service provider.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Retrieve a service provider
          path-parameters:
            id:
              docs: The unique identifier for the service provider.
              type: string
          response: commons.serviceProvider

        serviceProvidersList:
          path: /serviceProviders
          method: GET
          docs: >
            Returns a list of service providers.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: List all service providers
          request:
            query-parameters:
              recipientProvider:
                docs: >-
                  Only return service providers that have the given network
                  provider as supported porting recipient.
                type: optional<string>
          response: _InlinedType7

types:
  _InlinedType6:
    properties:
      object: string
      items: list<commons.porting>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>

  _InlinedType7:
    properties:
      object: string
      items: list<commons.serviceProvider>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "portings.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    ProjectsService:
      auth: true
      base-path: /projects
      endpoints:
        projectsRetrieve:
          path: /{project}
          method: GET
          docs: >-
            Retrieves the details of an existing project accessible by the API
            client.
          display-name: Retrieve a project
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
          response: commons.project

        projectsCredentialsRetrieve:
          path: /{project}/credentials
          method: GET
          docs: >
            Retrieve the credentials of an existing project.
            <!-- theme: info -->
            > #### Preview
            >
            > This endpoint is currently in preview and might change in the
            future.
            > We’re excited to hear your feedback and ideas. Please send an
            email
            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Retrieve the project credentials
          path-parameters:
            project:
              docs: >-
                The unique identifier for the
                [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
              type: string
          response: _InlinedType8

        projectsList:
          path: ""
          method: GET
          docs: >-
            Returns a list of projects. The projects returned are sorted by
            creation date, with the most recently created projects appearing
            first.
          display-name: List all projects
          request:
            query-parameters:
              organization:
                docs: The unique identifier for the organization to be filtered by.
                type: optional<string>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType9

types:
  _InlinedType8:
    properties:
      object: string
      paymentsKey: optional<string>

  _InlinedType9:
    properties:
      object: string
      items: list<commons.project>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "projects.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    SiMsService:
      auth: true
      base-path: /projects/{project}/sims
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      endpoints:
        siMsCredentialsRetrieve:
          path: /{id}/credentials
          method: GET
          docs: Retrieve the credentials of an existing SIM.
          display-name: Retrieve the SIM credentials
          path-parameters:
            id:
              docs: The unique identifier for the SIM.
              type: string
          response: simCredentials

        siMsRetrieve:
          path: /{id}
          method: GET
          docs: >-
            Retrieve the details of an existing SIM which the authenticated user
            is authorized to view.
          display-name: Retrieve a SIM
          path-parameters:
            id:
              docs: The unique identifier for the SIM.
              type: string
          response: commons.sim

        siMsSearch:
          path: /search
          method: POST
          docs: Searches for existing SIMs matching the given parameters.
          display-name: Search for SIMs
          request:
            body:
              properties:
                iccid: string
                type: optional<list<_InlinedType10>>
          response: _InlinedType11

        siMsList:
          path: ""
          method: GET
          docs: >-
            Returns a list of SIMs. The SIMs returned are sorted by creation
            date, with the most recently created SIMs appearing first.
          display-name: List all SIMs
          request:
            query-parameters:
              provider:
                docs: The network provider ID for the sim to be filtered by.
                type: optional<undefined>
              status:
                docs: A comma-separated list of statuses to filter the sims by.
                type: optional<undefined>
              type:
                docs: The type for the sim to be filtered by.
                type: optional<string>
              user:
                docs: The unique identifier for the user to be filtered by.
                type: optional<string>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType12

types:
  simCredentials:
    properties:
      object: string
      activationCode: optional<string>
      qrCodeUrl: optional<string>
      sim: string

  _InlinedType10:
    enum:
      - eSIM
      - pSIM

  _InlinedType11:
    properties:
      object: string
      items: list<commons.sim>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>

  _InlinedType12:
    properties:
      object: string
      items: list<commons.sim>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "siMs.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    SubscriptionsService:
      auth: true
      base-path: /projects/{project}/subscriptions
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      endpoints:
        subscriptionsCancel:
          path: /{id}/cancel
          method: POST
          docs: >-
            Retrieves the details of an existing subscription and schedules
            termination of the plan at the end of the next renewal date. You
            need only supply the unique subscription identifier that was
            returned upon purchasing a plan.
          display-name: Cancel an active subscription
          path-parameters:
            id:
              docs: The unique identifier for the subscription.
              type: string
          response: commons.subscription

        subscriptionsRetrieve:
          path: /{id}
          method: GET
          docs: >-
            Retrieves the details of an existing subscription. You need only
            supply the unique subscription identifier that was returned upon
            purchasing a plan.
          display-name: Retrieve a subscription
          path-parameters:
            id:
              docs: The unique identifier for the subscription.
              type: string
          response: commons.subscription

        subscriptionsEnd:
          path: /{id}
          method: DELETE
          docs: >-
            Ends an active plan subscription immediately. You only need to
            supply the unique subscription identifier that was returned upon
            purchasing a plan.
          display-name: End an active subscription
          path-parameters:
            id:
              docs: The unique identifier for the subscription.
              type: string
          response: commons.subscription

        subscriptionsResume:
          path: /{id}/resume
          method: POST
          docs: >-
            Removes the cancellation and end times of the subscription. The
            subscription will continue to auto-renew until canceled again.
          display-name: Resume a canceled subscription
          path-parameters:
            id:
              docs: The unique identifier for the subscription.
              type: string
          response: commons.subscription

        subscriptionsList:
          path: ""
          method: GET
          docs: >-
            Returns a list of subscriptions. The subscriptions returned are
            sorted by creation date, with the most recently created
            subscriptions appearing first.
          display-name: List all subscriptions
          request:
            query-parameters:
              user:
                docs: The unique identifier for the user to be filtered by.
                type: optional<string>
              plan:
                docs: The unique identifier for the plan to be filtered by.
                type: optional<string>
              sim:
                docs: The unique identifier for the sim to be filtered by.
                type: optional<string>
              status:
                docs: >-
                  A comma-separated list of statuses to filter the subscriptions
                  by. Only pending and active subscriptions are returned by
                  default.
                type: optional<undefined>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType13

        subscriptionsCreate:
          path: ""
          method: POST
          docs: >-
            Creates a new subscription for an existing user in the specified
            project.
          display-name: Create a subscription
          request:
            body:
              properties:
                plan: string
                sim: optional<string>
                userAddress: optional<string>
                user: string
                porting: optional<string>

types:
  _InlinedType13:
    properties:
      object: string
      items: list<commons.subscription>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "subscriptions.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

services:
  http:
    UsageService:
      auth: true
      base-path: /projects/{project}/subscriptions/{id}/usage
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string

        id:
          docs: The unique identifier for the subscription.
          type: string
      endpoints:
        subscriptionUsageRecordList:
          path: ""
          method: GET
          docs: >-
            Lists usage records in ascending order for a subscription,
            defaulting to \`daily\` aggregation for the latest subscription
            period.
          display-name: List subscription usage records
          request:
            query-parameters:
              period:
                docs: >-
                  Limits the usage data returned to the subscription period
                  provided. This option is incompatible with the \`start\` and
                  \`end\` parameters.
                type: optional<integer>
              start:
                docs: >-
                  Limits the usage data to dates greater than or equal to the
                  provided date. Can only be used in combination with \`end\`.
                type: optional<string>
              end:
                docs: >-
                  Limits the usage data to dates up to and including the
                  provided date. Can only be used in combination with \`start\`.
                type: optional<string>
              aggregation:
                docs: >-
                  Determines the aggregation method used, defaulting to \`daily\`.
                  \`period\` provides a single aggregated value for the time range
                  or period requested.
                type: optional<string>
          response: _InlinedType14

types:
  usageRecord:
    properties:
      object: string
      start: string
      end: string
      data: integer
      voice: integer
      sms: integer

  _InlinedType14:
    properties:
      object: string
      items: list<usageRecord>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "usage.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    UserAddressesService:
      auth: true
      base-path: /projects/{project}/users/{user}/addresses
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string

        user:
          docs: The unique identifier for the user.
          type: string
      endpoints:
        userAddressesList:
          path: ""
          method: GET
          docs: >-
            Returns a list of addresses owned by the given user. The addresses
            returned are sorted by creation date, with the most recently created
            addresses appearing first.
          display-name: List all user addresses
          response: _InlinedType15

        userAddressesCreate:
          path: ""
          method: POST
          docs: Create a new address for the given user with the given parameters.
          display-name: Create a user address
          request:
            body:
              properties:
                object: optional<string>
                line1: string
                line2: optional<string>
                city: string
                state: optional<string>
                postalCode: optional<string>
                country: string

        userAddressesRetrieve:
          path: /{id}
          method: GET
          docs: Retrieves the details of an existing address for a given user.
          display-name: Retrieve a user address
          path-parameters:
            id:
              docs: The unique identifier for the address.
              type: string
          response: commons.userAddress

        userAddressesDelete:
          path: /{id}
          method: DELETE
          docs: Retrieves the details of an existing user address and deletes it.
          display-name: Delete a user address
          path-parameters:
            id:
              docs: The unique identifier for the address.
              type: string
          response: commons.userAddress

types:
  _InlinedType15:
    properties:
      object: string
      items: list<commons.userAddress>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "userAddresses.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    UsersService:
      auth: true
      base-path: /projects/{project}/users
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      endpoints:
        usersRetrieve:
          path: /{id}
          method: GET
          docs: >-
            Retrieves the details of an existing user. You need only supply the
            unique user identifier that was returned upon user creation.
          display-name: Retrieve a user
          path-parameters:
            id:
              docs: The unique identifier for the user.
              type: string
          response: commons.user

        usersDelete:
          path: /{id}
          method: DELETE
          docs: Retrieves the details of an existing user and deletes it.
          display-name: Delete a user
          path-parameters:
            id:
              docs: The unique identifier for the user.
              type: string
          response: commons.user

        usersUpdate:
          path: /{id}
          method: PATCH
          docs: >-
            Updates the specified user by setting the values of the parameters
            passed.
          display-name: Update a user
          path-parameters:
            id:
              docs: The unique identifier for the user.
              type: string
          request:
            body:
              properties:
                object: optional<string>
                birthday: optional<string>
                email: optional<string>
                fullName: optional<string>
                preferredLocale: optional<string>
          response: commons.user

        usersSearch:
          path: /search
          method: POST
          docs: Searches for existing users matching the given parameters.
          display-name: Search for users
          request:
            body:
              properties:
                email: string
          response: _InlinedType16

        usersList:
          path: ""
          method: GET
          docs: >-
            Returns a list of users. The users returned are sorted by creation
            date, with the most recently created users appearing first.
          display-name: List all users
          request:
            query-parameters:
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType17

        usersCreate:
          path: ""
          method: POST
          docs: Creates a new user with the given parameters.
          display-name: Create a user
          request:
            body:
              properties:
                object: optional<string>
                birthday: optional<string>
                email: string
                fullName: optional<string>
                preferredLocale: optional<string>

types:
  _InlinedType16:
    properties:
      object: string
      items: list<commons.user>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>

  _InlinedType17:
    properties:
      object: string
      items: list<commons.user>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "users.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init no existing fern directory 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": "name: api
error-discrimination:
  strategy: status-code
",
            "name": "api.yml",
            "type": "file",
          },
          {
            "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  MovieId: string

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale is one to five stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

services:
  http:
    MoviesService:
      auth: false
      base-path: /movies
      endpoints:
        # Here's an HTTP endpoint

        createMovie:
          docs: Add a movie to the database
          method: POST
          path: /create-movie
          request: CreateMovieRequest
          response: MovieId

        getMovie:
          method: GET
          path: /{movieId}
          path-parameters:
            movieId: MovieId
          response: Movie
          errors:
            - MovieDoesNotExistError

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
            "name": "imdb.yml",
            "type": "file",
          },
        ],
        "name": "definition",
        "type": "directory",
      },
      {
        "contents": "default-group: external
groups: {}
",
        "name": "generators.yml",
        "type": "file",
      },
    ],
    "name": "api",
    "type": "directory",
  },
  {
    "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
    "name": "fern.config.json",
    "type": "file",
  },
]
`;

exports[`fern init telematica openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  SOC_ResponseDTO:
    properties:
      soc: double

  Range_ResponseDTO:
    properties:
      range: double

  RangeSoc_ResponseDTO:
    properties:
      range: double
      soc: double

  Location_ResponseDTO:
    properties:
      location: _InlinedType0

  _InlinedType0:
    extends:
      - ILocation

  ILocation:
    properties: {}

  ChargingStatus_ResponseDTO:
    properties:
      isCharging: boolean

  Odo_ResponseDTO:
    properties:
      odo: double

  StaticAttributes_ResponseDTO:
    properties:
      vin: string
      model: string
      year: double
      make: string
      registration: string
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

services:
  http:
    SampleCallbackService:
      auth: true
      base-path: /callback
      endpoints:
        appControllerCallback:
          path: ""
          method: POST
          docs: >-
            This is a dummy callback endpoint.
            Please share the POST callback endpoint created in your app's
            backend with Telematica to get callback requests of this format.
          display-name: Dummy callback endpoint
          request:
            body:
              properties:
                user: optional<string>
                vehicles: optional<list<Callback_DTO>>

types:
  Callback_DTO:
    properties:
      registration: string
      id: string
",
                "name": "sampleCallback.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    TestingEndpointsService:
      auth: true
      base-path: /vehicle-data
      endpoints:
        getSocTest:
          path: /soc/test
          method: GET
          display-name: Test SOC (battery level)
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.SOC_ResponseDTO

        getRangeTest:
          path: /range/test
          method: GET
          display-name: Test range
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Range_ResponseDTO

        getRangeSocTest:
          path: /range-soc/test
          method: GET
          display-name: Test range-soc
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.RangeSoc_ResponseDTO

        getLocationTest:
          path: /location/test
          method: GET
          display-name: Test location
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Location_ResponseDTO

        getChargingStatusTest:
          path: /charging-status/test
          method: GET
          display-name: Test charging status
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.ChargingStatus_ResponseDTO

        getOdoTest:
          path: /odo/test
          method: GET
          display-name: Test odo
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Odo_ResponseDTO

        getStaticAttributesTest:
          path: /static-attributes/test
          method: GET
          display-name: Test static attributes
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.StaticAttributes_ResponseDTO
",
                "name": "testingEndpoints.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

services:
  http:
    VehicleDataService:
      auth: true
      base-path: /vehicle-data
      endpoints:
        getSoc:
          path: /soc
          method: GET
          display-name: SOC (battery level)
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.SOC_ResponseDTO

        getRange:
          path: /range
          method: GET
          display-name: Range
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Range_ResponseDTO

        getRangeSoc:
          path: /range-soc
          method: GET
          docs: >-
            This endpoint returns the SOC and range for the vehicle in a single
            call
          display-name: Range-SOC
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.RangeSoc_ResponseDTO

        getLocation:
          path: /location
          method: GET
          display-name: Location
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Location_ResponseDTO

        getChargingStatus:
          path: /charging-status
          method: GET
          display-name: Charging Status
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.ChargingStatus_ResponseDTO

        getOdo:
          path: /odo
          method: GET
          display-name: Odometer
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Odo_ResponseDTO

        getStaticAttributes:
          path: /static-attributes
          method: GET
          docs: >-
            Static vehicle attributes like VIN, registration number, model, year
            and make
          display-name: Static attributes
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.StaticAttributes_ResponseDTO
",
                "name": "vehicleData.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fern init covie openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: true
  base-path: /accounts/{account_id}/mfa_requirements
  path-parameters:
    account_id:
      docs: Unique identifier of the account.
      type: string
  endpoints:
    enableAccountMfaRequired:
      path: ""
      method: POST
      docs: Require all account users to have an MFA application configured
      display-name: Enable Account MFA Requirement
      response: AccountWithConfig

    disableAccountMfaRequired:
      path: ""
      method: DELETE
      docs: >-
        Remove requirement for all account users to have an MFA application
        configured
      display-name: Disable Account MFA Requirement

types:
  AccountWithConfig:
    properties:
      account: optional<map<string, unknown>>
",
                "name": "account.yml",
                "type": "file",
              },
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /applications/{application_id}
  path-parameters:
    application_id:
      docs: Unique identifier of the application.
      type: string
  endpoints:
    getApplicationLinks:
      path: /links
      method: GET
      docs: Lists an application's links.
      display-name: List Application Links
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
          provider:
            docs: Partial name of a provider to search against
            type: optional<string>
          created_since:
            docs: Limit results to links created on or after this date.
            type: optional<string>
          created_until:
            docs: Limit results to links created on or before this date.
            type: optional<string>
          updated_since:
            docs: Limit results to links last updated on or since this date.
            type: optional<string>
          updated_until:
            docs: Limit results to links last updated on or before this date.
            type: optional<string>
          synced_since:
            docs: Limit results to links last synced on or after this date.
            type: optional<string>
          synced_until:
            docs: Limit results to links last synced on or before this date.
            type: optional<string>
          q:
            docs: Search for link via ID
            type: optional<string>
          status:
            docs: Filter link status; separate multiple statuses (OR'd) with commas
            type: optional<_InlinedType43>
          has_metadata:
            docs: Filter whether a link has metadata attached
            type: optional<boolean>
          policy_type:
            docs: The type of policy linked.
            type: optional<_InlinedType45>
          integration_ids:
            docs: >-
              If provided, only show items with any of the specified integration
              IDs, comma-separated.
            type: optional<string>
      response: commons.Links

    getApplicationPolicies:
      path: /policies
      method: GET
      docs: Lists an application's policies.
      display-name: List Application Policies
      request:
        query-parameters:
          integration_ids:
            docs: >-
              If provided, only show items with any of the specified integration
              IDs, comma-separated.
            type: optional<string>
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
      response: commons.Policies

types:
  _InlinedType44:
    enum:
      - new
      - new_with_metadata
      - document_uploaded
      - active
      - stale
      - broken
      - revoked

  _InlinedType46:
    enum:
      - homeowner
      - personal_auto
      - renter
      - motorcycle
",
                "name": "application.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  Carrier:
    docs: >-
      A basic object describing the individual insurance company which has
      issued a policy.
    properties:
      name:
        docs: The name of the issuing company.
        type: optional<string>

  Policyholder:
    docs: >-
      Describes the company or person which is legally listed on, and entitled
      to benefits from the policy for which they are attached.
    properties:
      type:
        docs: An indication if the insured is a business or individual.
        type: optional<_InlinedType56>
      name: optional<Name>
      email_addresses:
        docs: The contact e-mail addresses of the insured, if known.
        type: optional<list<EMail>>
      phone_numbers:
        docs: The contact phone numbers of the insured, if known.
        type: optional<list<Phone>>
      is_primary:
        docs: >-
          A flag indicating if the insured is explicitly referenced as primary,
          or assumed primary as being the first insured listed on the policy.
        type: optional<boolean>

  _InlinedType56:
    docs: An indication if the insured is a business or individual.
    enum:
      - person
      - business

  Name:
    docs: Contains a name for a person or business
    properties:
      full: optional<string>

  Address:
    docs: >-
      A universal base object encapsulating the physical address related to
      another object.
    properties:
      line1:
        docs: The first line of the address being provided.
        type: optional<string>
      line2:
        docs: The second line of the address, when provided.
        type: optional<string>
      city:
        docs: The city in which the address provided is located.
        type: optional<string>
      state:
        docs: >-
          The state or provide in which the address is located, represented in
          abbreviated form.
        type: optional<string>
      postal_code:
        docs: The 5 digit postal code in which the address is located.
        type: optional<string>

  EMail:
    docs: >-
      A universal base object encapsulating the e-mail address related to
      another object.
    properties:
      address: optional<string>
      is_primary: optional<boolean>

  Phone:
    docs: >-
      A universal base object encapsulating the phone number related to another
      object.
    properties:
      type: optional<_InlinedType57>
      number: optional<string>
      is_primary: optional<boolean>

  _InlinedType57:
    enum:
      - mobile
      - home
      - office
      - fax

  Vehicle:
    docs: >-
      Describes the motor vehicle which is covered under the terms of a policy.
      This object contains details of the specific coverages provided for this
      vehicle and information about the drivers who are covered.
    properties:
      vin:
        docs: >-
          The unique Vehicle Identification Number (VIN) that pertains to this
          vehicle.
        type: optional<string>
      make:
        docs: The manufacturer of the vehicle covered by this policy.
        type: optional<string>
      model:
        docs: The model of the vehicle covered by this policy.
        type: optional<string>
      year:
        docs: The 4-digit model year of the vehicle covered by this policy.
        type: optional<string>
      trim:
        docs: The trim of the vehicle covered by this policy.
        type: optional<string>
      series:
        docs: The series of the vehicle covered by this policy.
        type: optional<string>
      annual_mileage:
        docs: >-
          When provided, the estimated number of miles this vehicle is expected
          to be driven, per year. When a range is specified by the carrier, the
          highest value in the range is provided.
        type: optional<integer>
      usage:
        docs: The intended usage of the vehicle by the insured.
        type: optional<_InlinedType58>
      ownership:
        docs: >-
          Whether or not the vehicle specified is owned, leased, or financed by
          the insured.
        type: optional<_InlinedType59>
      drivers:
        docs: A list of drivers assigned to this vehicle.
        type: optional<list<Driver>>
      interests:
        docs: >-
          The financial institution which presently holds a lien against the
          vehicle.
        type: optional<list<Interest>>
      coverages:
        docs: >-
          A list of all coverages that apply to this vehicle. The omission of
          any coverage indicates that coverage was either declined or does not
          apply to this vehicle.
        type: optional<_InlinedType60>
      discounts:
        docs: A list of discounts being applied to the premium of this vehicle.
        type: optional<list<Discount>>

  _InlinedType58:
    docs: The intended usage of the vehicle by the insured.
    enum:
      - commute
      - pleasure
      - business

  _InlinedType59:
    docs: >-
      Whether or not the vehicle specified is owned, leased, or financed by the
      insured.
    enum:
      - own
      - lease
      - finance

  _InlinedType60:
    docs: >-
      A list of all coverages that apply to this vehicle. The omission of any
      coverage indicates that coverage was either declined or does not apply to
      this vehicle.
    properties:
      bodily_injury: optional<Coverage>
      property_damage: optional<Coverage>
      medical_payments: optional<Coverage>
      personal_injury_protection: optional<Coverage>
      comprehensive: optional<Coverage>
      collision: optional<Coverage>
      uninsured_bodily_injury: optional<Coverage>
      uninsured_property_damage: optional<Coverage>
      underinsured_bodily_injury: optional<Coverage>
      underinsured_property_damage: optional<Coverage>
      roadside: optional<Coverage>
      rental_car: optional<Coverage>
      full_glass: optional<Coverage>
      nonowned_bodily_injury: optional<Coverage>
      nonowned_property_damage: optional<Coverage>
      nonowned_medical_payments: optional<Coverage>
      nonowned_physical_damage: optional<Coverage>
      oem_parts: optional<Coverage>
      ride_share: optional<Coverage>
      all_risk: optional<Coverage>
      new_vehicle_replacement: optional<Coverage>
      collision_deductible_waiver: optional<Coverage>
      loan_lease_payoff: optional<Coverage>
      custom_parts: optional<Coverage>
      automobile_death_benefit: optional<Coverage>
      trip_interruption: optional<Coverage>
      personal_property: optional<Coverage>
      limited_property_damage: optional<Coverage>
      property_protection: optional<Coverage>
      personal_injury_attendant_rider: optional<Coverage>
      rented_vehicle_liability: optional<Coverage>
      motorcycle_enhanced_injury: optional<Coverage>
      limited_personal_injury_protection: optional<Coverage>
      carried_contents: optional<Coverage>

  Driver:
    docs: >-
      Describes the individual driver who is considered the routine operator of
      the vehicle it is attached to and who is explicitly included under the
      coverage terms selected for the vehicle.
    properties:
      name: optional<Name>
      date_of_birth:
        docs: >-
          The date of birth of the driver, when provided by the insurer.
          Represented as an ISO-8601 date.
        type: optional<string>
      marital_status:
        docs: >-
          The current marital status of the driver, if provided. The \`separated\`
          value includes divorced status.
        type: optional<_InlinedType61>
      gender:
        docs: The reported gender of the driver, when provided by the insurer.
        type: optional<_InlinedType62>
      age_licensed:
        docs: >-
          The age in which the driver was first licensed, when provided by the
          insurer.
        type: optional<integer>
      license_number:
        docs: >-
          The drivers license number of the driver when provided by the insurer.
          This value may be masked.
        type: optional<string>
      license_state:
        docs: >-
          The state in which the driver is licensed. Represented in abbreviated
          form.
        type: optional<string>
      is_primary:
        docs: >-
          A flag indicating if the driver is described as the primary driver of
          the vehicle. When no clear indication is made by an insurer, the first
          listed driver is assumed to be the primary.
        type: optional<boolean>

  _InlinedType61:
    docs: >-
      The current marital status of the driver, if provided. The \`separated\`
      value includes divorced status.
    enum:
      - married
      - single
      - separated
      - widowed

  _InlinedType62:
    docs: The reported gender of the driver, when provided by the insurer.
    enum:
      - male
      - female
      - non-binary

  Interest:
    docs: >-
      Describes an entity, person or company, that has a legal interest in a
      piece of covered property. This could represent a bank or other financial
      institution who owns a loan/mortgage/lien over a covered property, a
      landlord who owns the property a tenant is leasing, or some other
      recognized stakeholder who is entitled to certain information rights from
      the insurance company regarding the covered property.
    properties:
      type:
        docs: >-
          The type of interest being described. Such as: lender, landlord,
          guarantor, or other.
        type: optional<_InlinedType63>
      name: optional<Name>
      email_addresses:
        docs: E-Mail addresses used to contact the interested party.
        type: optional<list<EMail>>
      phone_numbers:
        docs: >-
          Phone Numbers used to call the interested party. Provided in E164
          format.
        type: optional<list<Phone>>

  _InlinedType63:
    docs: >-
      The type of interest being described. Such as: lender, landlord,
      guarantor, or other.
    enum:
      - landlord
      - lender
      - guarantor
      - other

  Coverage:
    docs: >-
      Describes the features of a specific coverage element for a person or
      property, encapsulating the limits, deductibles, and premium information
      therein.
    properties:
      name:
        docs: >-
          The name of the coverage element being described. This is a coded
          value offered as a convenience method to avoid the need to introspect
          code to understand which branch of logic is being evaluated.
        type: optional<string>
      limits:
        docs: >-
          A breakout of different limits and sublimits that apply to this
          coverage item. When the limits property is null, then the coverage
          described is selected but limits are not applicable for the coverage
          feature. The ommission of any limit scope indicates that it does not
          apply to the coverage.
        type: optional<_InlinedType64>

  _InlinedType64:
    docs: >-
      A breakout of different limits and sublimits that apply to this coverage
      item. When the limits property is null, then the coverage described is
      selected but limits are not applicable for the coverage feature. The
      ommission of any limit scope indicates that it does not apply to the
      coverage.
    properties:
      duration: optional<PeriodValue>
      term: optional<CurrencyValue>

  CurrencyValue:
    docs: >-
      Describes a value that is tied to a monetary amount. Most frequently used
      to describe limits, premiums, and deductibles.
    properties:
      unit:
        docs: The ISO-compatible currency code of the value being represented.
        type: optional<_InlinedType65>
      value:
        docs: The amount of currency
        type: optional<double>

  _InlinedType65:
    docs: The ISO-compatible currency code of the value being represented.
    enum:
      - USD
      - USD_cents

  RelativeValue:
    docs: >-
      Describes a value that is relative to another, such as the fair market
      value or replacement value. It is inherently variable and subject to the
      context in which it is invoked.
    properties:
      unit:
        docs: Always "other".
        type: optional<_InlinedType66>
      value:
        docs: >-
          The form of measure used to calculate the relative value, such as
          "actual cash value" or "ACV" which looks at the original price or
          investment and factors in depreciation (effectively "Fair Market
          Value"), or "replacement cost" (sometimes "Actual Loss Sustained" or
          "ALS") which sets a value against real cost to replace something
          today.
          Occasionally, a response of "unknown" may be returned. This value
          indicates that no specific value was provided in high level policy
          documents. The value may be subjective and specific to the individual
          policyholder as specified in their policy contract and should be
          manually reviewed.
        type: optional<_InlinedType67>

  _InlinedType66:
    docs: Always "other".
    enum:
      - other

  _InlinedType67:
    docs: >-
      The form of measure used to calculate the relative value, such as "actual
      cash value" or "ACV" which looks at the original price or investment and
      factors in depreciation (effectively "Fair Market Value"), or "replacement
      cost" (sometimes "Actual Loss Sustained" or "ALS") which sets a value
      against real cost to replace something today.
      Occasionally, a response of "unknown" may be returned. This value
      indicates that no specific value was provided in high level policy
      documents. The value may be subjective and specific to the individual
      policyholder as specified in their policy contract and should be manually
      reviewed.
    enum:
      - actual_cash_value
      - replacement_value
      - unknown

  PercentageValue:
    docs: >-
      Describes a value that is represented as a percentage, fraction, or ratio
      of another value. Most frequently depicted for deductibles which may be a
      percentage of a limit.
    properties:
      unit:
        docs: Always "percentage"
        type: optional<_InlinedType68>
      value:
        docs: The percentage amount determined by this value.
        type: optional<double>

  _InlinedType68:
    docs: Always "percentage"
    enum:
      - percentage

  DistanceValue:
    docs: >-
      Describes a value that is tied to a physical length or distance. Most
      frequently used to describe limits on coverages.
    properties:
      unit:
        docs: The distance unit of the value being represented.
        type: optional<_InlinedType69>
      value:
        docs: The amount of the distance in the units specified
        type: optional<double>

  _InlinedType69:
    docs: The distance unit of the value being represented.
    enum:
      - mile
      - kilometer

  PeriodValue:
    docs: >-
      Describes a value that represents a period of time, such as days, weeks,
      or months.
    properties:
      unit:
        docs: The scale of time period being represented.
        type: optional<_InlinedType70>
      value:
        docs: The amount of time being represented.
        type: optional<integer>

  _InlinedType70:
    docs: The scale of time period being represented.
    enum:
      - day
      - week
      - month

  Discount:
    docs: >-
      Describes a discount which a policyholder is receiving for a particular
      covered property under a policy. When available, this object also
      describes the amount of savings.
    properties:
      code:
        docs: >-
          The programming-friendly value to indicate the discount being applied.
          NOTE: We regularly add values to this enumeration, so your code should
          be able to gracefully handle unexpected enum values (though new values
          are documented here as they go live).
        type: optional<_InlinedType71>
      friendly_name:
        docs: A human-readable, friendly name for the discount.
        type: optional<string>

  _InlinedType71:
    docs: >-
      The programming-friendly value to indicate the discount being applied.
      NOTE: We regularly add values to this enumeration, so your code should be
      able to gracefully handle unexpected enum values (though new values are
      documented here as they go live).
    enum:
      - safe_driver
      - telematics
      - online
      - bundle
      - teen_driver
      - claim_free
      - homeowner
      - new_car
      - multi_car
      - pay_in_full
      - paperless_billing
      - loyalty
      - good_student
      - distant_student
      - accident_free
      - continuous_insurance
      - eft
      - early_quote
      - alarm_system
      - new_home
      - new_roof
      - safe_vehicle
      - smart_vehicle
      - membership
      - payment_plan
      - military
      - garage_parking
      - senior
      - autopay
      - insurance_to_value
      - verified_mileage
      - payment_history
      - motorcycle_endorsement

  Location:
    docs: >-
      Describes a physical location and/or structure which is covered under the
      terms of an insurance policy.
    properties:
      address: optional<Address>
      coverages:
        docs: A list of coverages that apply to the location being insured.
        type: optional<_InlinedType72>
      other_deductibles:
        docs: >-
          A list of deductibles that apply in addition to the coverage-specific
          deductibles.
        type: optional<_InlinedType73>
      discounts:
        docs: A list of discounts being applied to the location.
        type: optional<list<Discount>>
      interests:
        docs: >-
          A list of interested parties, such as mortgagers, lienholders,
          guarantors, landlords, or others.
        type: optional<list<Interest>>

  _InlinedType72:
    docs: A list of coverages that apply to the location being insured.
    properties:
      dwelling: optional<Coverage>
      dwelling_extension: optional<Coverage>
      personal_property: optional<Coverage>
      personal_property_off_premises: optional<Coverage>
      loss_of_use: optional<Coverage>
      service_line: optional<Coverage>
      personal_liability: optional<Coverage>
      medical_payments: optional<Coverage>
      property_damage_others: optional<Coverage>
      fire_service: optional<Coverage>
      loss_assessment: optional<Coverage>
      sewer_backup: optional<Coverage>
      arson_reward: optional<Coverage>
      credit_card_fraud: optional<Coverage>
      debris_removal: optional<Coverage>
      oil_release: optional<Coverage>
      locks: optional<Coverage>
      landscaping: optional<Coverage>
      additional_structures: optional<Coverage>

  _InlinedType73:
    docs: >-
      A list of deductibles that apply in addition to the coverage-specific
      deductibles.
    properties: {}

  DocumentRef:
    docs: >-
      Describes the individual insurance document available for download from a
      given insurance policy, including the content-type (or mimetype) of the
      document.
    properties:
      type:
        docs: The type of document provided at the corresponding URL.
        type: optional<_InlinedType74>
      content_type:
        docs: >-
          The content-type, or mimetype, of the document being conveyed at this
          location.
        type: optional<string>
      href:
        docs: The path to retrieve the document described in this object.
        type: optional<string>

  _InlinedType74:
    docs: The type of document provided at the corresponding URL.
    enum:
      - declaration
      - id_card
      - renewal
      - evidence_of_insurance
      - cancellation

  Events:
    properties:
      count:
        docs: The total, unfiltered number of events without pagination
        type: optional<integer>
      filtered_count:
        docs: The unpaginated number of events matching the filter
        type: optional<integer>
      _embedded: optional<_InlinedType75>

  _InlinedType75:
    properties:
      events: optional<list<Event>>

  Event:
    docs: >-
      Represents an event delivered via webhook on the occurrence of certain
      policy changes.
    properties:
      id:
        docs: The unique identifier of the received event.
        type: optional<string>
      event_type:
        docs: An enumerated string representing the type of event that occurred.
        type: optional<_InlinedType76>
      occurred_at:
        docs: >-
          The date and time in which the event occurred, represented as an
          ISO-8601 string.
        type: optional<string>
      _embedded:
        docs: A collection of the objects in which this event applies to.
        type: optional<map<string, unknown>>
      _links: optional<_InlinedType78>

  _InlinedType76:
    docs: An enumerated string representing the type of event that occurred.
    enum:
      - link.created
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - link.changed
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType77:
    docs: Link to view the full event payload.
    properties:
      href: optional<string>

  _InlinedType78:
    properties:
      payload:
        docs: Link to view the full event payload.
        type: optional<_InlinedType77>

  Integration:
    docs: >-
      Represents a connection between a client application and Covie's systems
      allowing a client users to create and process links.
    properties:
      id:
        docs: Unique identifier for the integration.
        type: optional<string>
      key:
        docs: Integration key used in client application initialization.
        type: optional<string>
      name:
        docs: A descriptive name of the integration.
        type: optional<string>
      status:
        docs: String representation of the current status of the integration.
        type: optional<_InlinedType85>
      created_at:
        docs: >-
          The date and time, in ISO-8601 format, when the integration was first
          created.
        type: optional<string>
      updated_at:
        docs: >-
          The date and time, in ISO-8601 format, when the integration was last
          updated.
        type: optional<string>
      configuration: optional<_InlinedType90>
      policy_requirements: optional<map<string, unknown>>

  _InlinedType79:
    docs: String representation of the current status of the integration.
    enum: &ref_0
      - active
      - archived

  _InlinedType80:
    properties:
      primary:
        docs: The primary color, text style color, and background color to use.
        type: optional<string>

  _InlinedType81:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<_InlinedType80>

  _InlinedType82:
    properties:
      agency_logo:
        docs: URL of agency logo
        type: optional<string>
      agency_photo:
        docs: URL of agent photo
        type: optional<string>

  _InlinedType83:
    properties:
      agency_name: optional<string>
      agent_name: optional<string>
      agent_email: optional<string>
      image_urls: optional<_InlinedType82>

  _InlinedType84:
    properties:
      brand:
        docs: Branding configuration for the embed.
        type: optional<_InlinedType81>
      display_name:
        docs: >-
          Name to display as application name in the embed, on policy selection
          and data disclosure screens.
        type: optional<string>
      use_name_as_display_name:
        docs: >-
          Display the integration's name as the application name in the embed.
          Cannot be set at the same time as display_name.
        type: optional<boolean>
      hosted: optional<_InlinedType83>

  _InlinedType85:
    docs: String representation of the current status of the integration.
    enum: *ref_0

  _InlinedType86:
    properties:
      primary:
        docs: The primary color, text style color, and background color to use.
        type: optional<string>

  _InlinedType87:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<_InlinedType86>

  _InlinedType88:
    properties:
      agency_logo:
        docs: URL of agency logo
        type: optional<string>
      agency_photo:
        docs: URL of agent photo
        type: optional<string>

  _InlinedType89:
    properties:
      agency_name: optional<string>
      agent_name: optional<string>
      agent_email: optional<string>
      image_urls: optional<_InlinedType88>

  _InlinedType90:
    properties:
      brand:
        docs: Branding configuration for the embed.
        type: optional<_InlinedType87>
      display_name:
        docs: >-
          Name to display as application name in the embed, on policy selection
          and data disclosure screens.
        type: optional<string>
      use_name_as_display_name:
        docs: >-
          Display the integration's name as the application name in the embed.
          Cannot be set at the same time as display_name.
        type: optional<boolean>
      hosted: optional<_InlinedType89>

  Policies:
    properties:
      count:
        docs: Total number of results that can be returned.
        type: optional<integer>
      filtered_count:
        docs: The total number of policies that match the filter.
        type: optional<integer>
      _embedded: optional<_InlinedType91>

  _InlinedType91:
    properties:
      policies: optional<list<Policy>>

  Policy:
    docs: >-
      This describes, in high level, the insurance policy record that is
      provided by a link. This object encapsulates all the necessary details to
      understand the policy's status, policyholders, and covered persons or
      properties.
    properties:
      id:
        docs: >-
          Unique identifier of a policy record within the application that
          obtained it.
        type: optional<string>
      object:
        docs: >-
          String representing the object’s type. Objects of the same type share
          the same value.
        type: optional<string>
      fingerprint:
        docs: A universally-unique identifier of a policy.
        type: optional<string>
      carrier: optional<Carrier>
      number:
        docs: >-
          The full policy number as provided by the issuing company. This is not
          available to all users and may be null when not active on the account.
        type: optional<string>
      masked_number:
        docs: >-
          This is a masked version of the policy number provided by the issuing
          company. This is always provided and available to all customers.
        type: optional<string>
      line:
        docs: A string indicating the line of business this policy encompasses.
        type: optional<_InlinedType92>
      policyholders:
        docs: A list of insureds, or policyholders assigned to this policy.
        type: optional<list<Policyholder>>
      vehicles: optional<list<Vehicle>>
      locations: optional<list<Location>>
      status:
        docs: A string representation of the policy's current status.
        type: optional<_InlinedType93>
      term_length: optional<PeriodValue>
      inception_date:
        docs: >-
          The date when the policy becomes in force. This date is provided in
          ISO-8601 format excluding time.
        type: optional<string>
      expiration_date:
        docs: >-
          The date when the described policy period ends. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_date:
        docs: >-
          The date when the policy is set to be cancelled. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_reason:
        docs: >-
          The determined reason for the cancellation, such as
          insured_non_payment or carrier_non_renew or insured_action. This value
          is null when cancellation is not active or not explicitly indicated by
          the carrier systems and is not guaranteed to be provided in any
          circumstance.
        type: optional<_InlinedType94>
      linked_at:
        docs: >-
          The date and time which the policy was initially retrieved. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      last_synced_at:
        docs: >-
          The date and time when the policy record was last updated. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      _links:
        docs: >-
          A polymorphic list of externally linked resources related to this
          policy such as documents or logos for carriers.
        type: optional<_InlinedType96>
      _embedded:
        docs: A container for objects wrapped by the current object.
        type: optional<_InlinedType97>
      link_id:
        docs: Unique identifier of the link associated to the policy.
        type: optional<string>

  _InlinedType92:
    docs: A string indicating the line of business this policy encompasses.
    enum:
      - personal_auto
      - homeowner
      - renter
      - motorcycle

  _InlinedType93:
    docs: A string representation of the policy's current status.
    enum:
      - active
      - expired
      - pending
      - cancelled

  _InlinedType94:
    docs: >-
      The determined reason for the cancellation, such as insured_non_payment or
      carrier_non_renew or insured_action. This value is null when cancellation
      is not active or not explicitly indicated by the carrier systems and is
      not guaranteed to be provided in any circumstance.
    enum:
      - carrier_non_renew
      - insured_non_payment
      - insured_requested
      - other

  _InlinedType95:
    docs: A link to the logo for the carrier on the policy.
    properties:
      href: optional<string>

  _InlinedType96:
    docs: >-
      A polymorphic list of externally linked resources related to this policy
      such as documents or logos for carriers.
    properties:
      documents:
        docs: >-
          A list of documents obtained and available for this policy. This list
          may be empty if no documents are available or if document access is
          not enabled for your account.
        type: optional<list<DocumentRef>>
      carrier_logo:
        docs: A link to the logo for the carrier on the policy.
        type: optional<_InlinedType95>

  _InlinedType97:
    docs: A container for objects wrapped by the current object.
    properties:
      missing_fields:
        docs: A list of policy fields that were unable to be processed.
        type: optional<list<string>>

  Provider:
    docs: >-
      Represents a connected insurance partner that can be used to authenticate
      and return policy data.
    properties:
      id:
        docs: The unique identifier of the provider.
        type: optional<string>
      name:
        docs: The friendly name of the provider in question.
        type: optional<string>
      _links:
        docs: >-
          A collection of externally referenced material pertaining to the
          provider, such as web addresses and images.
        type: optional<_InlinedType100>
      _embedded:
        docs: >-
          A collection of sub objects that are related to this provider, most
          commonly consisting of co-branded or sub-issuing providers affiliated
          with this provider.
        type: optional<_InlinedType101>

  _InlinedType98:
    docs: The logo image to be used when describing a given provider.
    properties:
      href:
        docs: The full URL to access the provider's logo.
        type: optional<string>

  _InlinedType99:
    docs: A reference to the provider's primary website.
    properties:
      href:
        docs: The full URL of the provider's main website.
        type: optional<string>

  _InlinedType100:
    docs: >-
      A collection of externally referenced material pertaining to the provider,
      such as web addresses and images.
    properties:
      image:
        docs: The logo image to be used when describing a given provider.
        type: optional<_InlinedType98>
      website:
        docs: A reference to the provider's primary website.
        type: optional<_InlinedType99>

  _InlinedType101:
    docs: >-
      A collection of sub objects that are related to this provider, most
      commonly consisting of co-branded or sub-issuing providers affiliated with
      this provider.
    properties:
      alternative_providers:
        docs: >-
          A collection of alternative providers which a policyholder may have
          issued policies through this top-level provider.
        type: optional<list<Provider>>

  Link_2:
    docs: >-
      Represents the individual connections between Covie and a Policyholder's
      account with a carrier and wraps the policies retrieved from it that have
      been made available to the consumer.
    properties:
      id:
        docs: The unique identifier of the link object.
        type: optional<string>
      object:
        docs: >-
          String representing the object’s type. Objects of the same type share
          the same value.
        type: optional<string>
      integration_id:
        docs: The identifier of the integration that was used to establish the link.
        type: optional<string>
      policy_count:
        docs: The number of policies provided by this link.
        type: optional<integer>
      status:
        docs: >-
          A string representation of the link's current status. This is distinct
          from a policy's status which is an indicator to whether a policy is in
          force. A link's status is an indicator of how new and complete the
          data is and whether or not it is possible to retrieve refreshed
          information.
        type: optional<_InlinedType109>
      is_tracked:
        docs: >-
          A flag indicating if the policies provided by this link should be
          tracked by Covie's monitoring service.
        type: optional<boolean>
      tracking_frequency:
        docs: >-
          The frequency of which tracking should be performed. This value is
          \`never\` when tracking is disabled.
        type: optional<_InlinedType110>
      updated_at:
        docs: The date and time, in ISO-8601 format, when the link was last updated.
        type: optional<string>
      created_at:
        docs: >-
          The date and time, in ISO-8601 format, when the link was first
          created.
        type: optional<string>
      metadata:
        docs: >-
          Arbitrary key value pairs set on link creation or PATCH. Keys are
          alphanumeric plus _, -, ., and space, at most 64 characters. Values
          are at most 256 characters. You can have at most 32 metadata keys on a
          link.
        type: optional<map<string, unknown>>
      _links: optional<_InlinedType114>

  _InlinedType102:
    docs: >-
      A string representation of the link's current status. This is distinct
      from a policy's status which is an indicator to whether a policy is in
      force. A link's status is an indicator of how new and complete the data is
      and whether or not it is possible to retrieve refreshed information.
    enum: &ref_1
      - new
      - active
      - document_uploaded
      - broken
      - revoked
      - stale

  _InlinedType103:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum: &ref_2
      - daily
      - weekly
      - monthly
      - never
      - on_demand

  _InlinedType104:
    docs: Link to retrieve the link's details.
    properties:
      href: optional<string>

  _InlinedType105:
    docs: Link to the carrier's logo.
    properties:
      href: optional<string>

  _InlinedType106:
    properties:
      href: optional<string>
      content_type: optional<string>

  _InlinedType107:
    properties:
      self:
        docs: Link to retrieve the link's details.
        type: optional<_InlinedType104>
      carrier_logo:
        docs: Link to the carrier's logo.
        type: optional<_InlinedType105>
      uploaded_documents:
        docs: List of documents uploaded for the link.
        type: optional<list<_InlinedType106>>

  Links:
    properties:
      count:
        docs: Total number of results that can be returned.
        type: optional<integer>
      filtered_count:
        docs: >-
          If a search filter is applied, this will return the total number of
          results that match the filter.
        type: optional<integer>
      _embedded: optional<_InlinedType108>

  _InlinedType108:
    properties:
      links: optional<list<Link_2>>

  _InlinedType109:
    docs: >-
      A string representation of the link's current status. This is distinct
      from a policy's status which is an indicator to whether a policy is in
      force. A link's status is an indicator of how new and complete the data is
      and whether or not it is possible to retrieve refreshed information.
    enum: *ref_1

  _InlinedType110:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum: *ref_2

  _InlinedType111:
    docs: Link to retrieve the link's details.
    properties:
      href: optional<string>

  _InlinedType112:
    docs: Link to the carrier's logo.
    properties:
      href: optional<string>

  _InlinedType113:
    properties:
      href: optional<string>
      content_type: optional<string>

  _InlinedType114:
    properties:
      self:
        docs: Link to retrieve the link's details.
        type: optional<_InlinedType111>
      carrier_logo:
        docs: Link to the carrier's logo.
        type: optional<_InlinedType112>
      uploaded_documents:
        docs: List of documents uploaded for the link.
        type: optional<list<_InlinedType113>>

  Webhook:
    docs: Represents a webhook in the Covie system.
    properties:
      id:
        docs: Unique identifier for the Webhook object.
        type: optional<string>
      uri:
        docs: URI the webhook should make a request to when the event is triggered.
        type: optional<string>
      headers:
        docs: >-
          List of the headers and their values that should be included in the
          request.
        type: optional<map<string, unknown>>
      is_enabled: optional<boolean>
      event_types: optional<list<_InlinedType116>>
      last_response_body:
        docs: The response from the last request.
        type: optional<string>
      last_response_code:
        docs: The response HTTP code from the last request.
        type: optional<string>
      last_called_at:
        docs: The last time a request was made.
        type: optional<string>
      created_at:
        docs: Date the webhook was created.
        type: optional<string>
      updated_at:
        docs: Date of the last time the webhook was updated.
        type: optional<string>

  _InlinedType115:
    enum: &ref_3
      - link.created
      - link.changed
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType116:
    enum: *ref_3
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: true
  base-path: /events/{event_id}/broadcasts
  path-parameters:
    event_id: string
  endpoints:
    postEventsEventIdBroadcasts:
      path: ""
      method: POST
      docs: Rebroadcast an event.
      display-name: Rebroadcast Event
      response: _InlinedType55

types:
  EventBroadcast:
    docs: Record of a broadcast to a webhook endpoint when an event is triggered.
    properties:
      id:
        docs: Unique identifier for the broadcast.
        type: optional<string>
      queued_at:
        docs: Date/Time the broadcast was prepared for delivery.
        type: optional<string>
      broadcast_at:
        docs: Date/Time the broadcast was sent.
        type: optional<string>
      request_uri:
        docs: URI the broadcast was sent to.
        type: optional<string>
      request_headers:
        docs: Custom headers used to send the broadcast.
        type: optional<map<string, unknown>>
      response_code:
        docs: Response code from the URI.
        type: optional<integer>
      response_body:
        docs: Contents of the response.
        type: optional<string>

  _InlinedType54:
    properties:
      broadcasts:
        docs: List of broadcasts, one per endpoint called
        type: optional<list<EventBroadcast>>

  _InlinedType55:
    properties:
      count:
        docs: Number of endpoints called by this re-broadcast
        type: optional<integer>
      _embedded: optional<_InlinedType54>
",
                "name": "event.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /integrations
  endpoints:
    listIntegrations:
      path: ""
      method: GET
      docs: List integrations associated to an application
      display-name: List Integrations
      request:
        query-parameters:
          q:
            docs: >-
              Partial integration name, ID, or integration key to search
              against, with or without leading in_/ik_
            type: optional<string>
          status:
            docs: Filter active or archived integrations
            type: optional<_InlinedType16>
      response: Integrations

    createIntegration:
      path: ""
      method: POST
      docs: Creates a new integration.
      display-name: Create Integration
      request:
        body:
          properties:
            name:
              docs: Descriptive name of the integration
              type: string
            policyRequirements: optional<_InlinedType18>
            configuration: optional<_InlinedType21>

    getIntegration:
      path: /{integration_id}
      method: GET
      docs: Retrieve the details of an integration.
      display-name: Get Integration
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      response: commons.Integration_2

    deleteIntegration:
      path: /{integration_id}
      method: DELETE
      docs: Deletes an integration.
      display-name: Delete Integration
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string

    updateIntegration:
      path: /{integration_id}
      method: PATCH
      docs: Edit the name and archived status of an integration.
      display-name: Update Integration
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      request:
        body:
          properties:
            name:
              docs: A descriptive name of the integration
              type: optional<string>
            status:
              docs: String representation of the current status of the integration.
              type: optional<_InlinedType22>
            configuration: optional<_InlinedType25>
            policy_requirements: optional<_InlinedType26>
      response: commons.Integration_2

    getIntegrationPolicies:
      path: /{integration_id}/policies
      method: GET
      docs: List all policies that have been linked to an integration.
      display-name: List Integration Policies
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
      response: commons.Policies

    getIntegrationProviders:
      path: /{integration_id}/providers
      method: GET
      docs: >-
        Retrieve a list of supported carriers for a given integration, along
        with their identifiers.
      display-name: Supported Providers List
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      request:
        query-parameters:
          required_policy_types:
            docs: >-
              A pipe delineated list of policy types desired. Providers who do
              not support at least one required policy type will be excluded.
            type: optional<string>
      response: Providers

    regenerateIntegrationKey:
      path: /{integration_id}/regenerate_key
      method: POST
      docs: Replaces the existing integration key with a new randomly generated key.
      display-name: Regenerate Integration Key
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      response: commons.Integration_2

    getIntegrationsIntegrationIdAgencyLogo:
      path: /{integration_id}/agency_logo
      method: GET
      docs: View the agency logo for the hosted integration.
      display-name: View Agency Logo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string

    putIntegrationsIntegrationIdAgencyLogo:
      path: /{integration_id}/agency_logo
      method: PUT
      docs: Upload the agency logo for the hosted integration.
      display-name: Update Agency Logo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      response: _InlinedType27

    deleteIntegrationsIntegrationIdAgencyLogo:
      path: /{integration_id}/agency_logo
      method: DELETE
      docs: Delete the agency logo and/or config if present.
      display-name: Delete Agency Logo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string

    getIntegrationsIntegrationIdAgentPhoto:
      path: /{integration_id}/agent_photo
      method: GET
      docs: View the agent photo for the hosted integration.
      display-name: View Agent Photo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string

    putIntegrationsIntegrationIdAgentPhoto:
      path: /{integration_id}/agent_photo
      method: PUT
      docs: Upload an agent photo for the hosted integration.
      display-name: Update Agent Photo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      response: _InlinedType28

    deleteIntegrationsIntegrationIdAgentPhoto:
      path: /{integration_id}/agent_photo
      method: DELETE
      docs: Delete the agent photo and/or config if present.
      display-name: Delete Agent Photo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string

    getIntegrationsIntegrationIdBrandLogo:
      path: /{integration_id}/brand_logo
      method: GET
      docs: View the brand logo for the integration.
      display-name: View Brand Logo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string

    putIntegrationsIntegrationIdBrandLogo:
      path: /{integration_id}/brand_logo
      method: PUT
      docs: Upload the brand logo for the hosted integration.
      display-name: Update Brand Logo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      response: _InlinedType29

    deleteIntegrationsIntegrationIdBrandLogo:
      path: /{integration_id}/brand_logo
      method: DELETE
      docs: Delete the brand logo and/or config if present.
      display-name: Delete Brand Logo
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string

types:
  Integrations:
    properties:
      count:
        docs: The number of integrations in the application that match the filters.
        type: optional<integer>
      _links: optional<_InlinedType11>
      _embedded: optional<_InlinedType12>

  _InlinedType10:
    properties:
      href: optional<string>

  _InlinedType11:
    properties:
      self: optional<_InlinedType10>

  _InlinedType12:
    properties:
      integrations: optional<list<commons.Integration>>

  Providers:
    properties:
      count: optional<integer>
      _links: optional<_InlinedType14>
      _embedded: optional<_InlinedType15>

  _InlinedType13:
    properties:
      href: optional<string>

  _InlinedType14:
    properties:
      self: optional<_InlinedType13>

  _InlinedType15:
    properties:
      providers: optional<list<commons.Provider>>

  _InlinedType17:
    enum:
      - active
      - archived

  _InlinedType18:
    properties:
      effective_date:
        docs: Allow selection of policies that are not effective until a future date
        type: optional<string>
      allow_inactive:
        docs: Allow selection of inactive policies
        type: optional<boolean>

  _InlinedType19:
    properties:
      primary:
        docs: >-
          Sets the primary color, the primary text style color, and the primary
          background color to the configured color.
        type: optional<string>

  _InlinedType20:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<_InlinedType19>

  _InlinedType21:
    properties:
      brand:
        docs: Branding configuration for the embed.
        type: optional<_InlinedType20>
      display_name:
        docs: >-
          Name to display as application name in the embed, on policy selection
          and data disclosure screens.
        type: optional<string>
      use_name_as_display_name:
        docs: >-
          Display the integration's name as the application name in the embed.
          Cannot be set at the same time as display_name.
        type: optional<boolean>

  _InlinedType22:
    docs: String representation of the current status of the integration.
    enum:
      - active
      - archived

  _InlinedType23:
    properties:
      primary:
        docs: >-
          Sets the primary color, the primary text style color, and the primary
          background color to the configured color.
        type: optional<string>

  _InlinedType24:
    docs: Branding configuration for the embed.
    properties:
      logo:
        docs: Brand logo to be used in the embed.
        type: optional<string>
      hide_logo:
        docs: Hides the logo.
        type: optional<boolean>
      colors: optional<_InlinedType23>

  _InlinedType25:
    properties:
      brand:
        docs: Branding configuration for the embed.
        type: optional<_InlinedType24>
      display_name:
        docs: >-
          Name to display as application name in the embed, on policy selection
          and data disclosure screens.
        type: optional<string>
      use_name_as_display_name:
        docs: >-
          Display the integration's name as the application name in the embed.
          Cannot be set at the same time as display_name.
        type: optional<boolean>

  _InlinedType26:
    properties:
      allow_inactive:
        docs: >-
          Allows users to link policies that are currently inactive.
          Incompatible with effective_date.
        type: optional<boolean>
      effective_date:
        docs: >-
          Allows users to link a policy if it will be active as of a given date.
          The date can be absolute (YYYY-MM-DD) or relative, with relative dates
          evaluated when the policy is being linked. Primarily used to allow
          pending policies to be linked. Incompatible with allow_inactive.
        type: optional<string>

  _InlinedType27:
    properties:
      href:
        docs: Relative URL to access agency logo
        type: optional<string>

  _InlinedType28:
    properties:
      href:
        docs: Relative URL to access agent photo
        type: optional<string>

  _InlinedType29:
    properties:
      href:
        docs: Relative URL to access brand logo
        type: optional<string>
",
                "name": "integration.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: ""
  endpoints:
    getLink:
      path: /links/{id}
      method: GET
      docs: Retrieves a Link
      display-name: Retrieve link
      path-parameters:
        id:
          docs: The unique identifier of the link being inspected.
          type: string
      response: commons.Link

    deleteLink:
      path: /links/{id}
      method: DELETE
      docs: Deletes a link.
      display-name: Delete Link
      path-parameters:
        id:
          docs: The unique identifier of the link being inspected.
          type: string

    updateLinkSettings:
      path: /links/{id}
      method: PATCH
      display-name: Update Link Settings
      path-parameters:
        id:
          docs: The unique identifier of the link being inspected.
          type: string
      request:
        body:
          properties:
            metadata:
              docs: >-
                Arbitrary key value pairs. The entire object is replaced
                on-update (missing keys in the request body will be removed).
                Keys are alphanumeric plus _, -, ., and space, at most 64
                characters. Values are at most 256 characters. You can have at
                most 32 metadata keys on a link.
              type: optional<map<string, unknown>>
            tracking_frequency:
              docs: >-
                The frequency of which tracking should be performed. This value
                is \`never\` when tracking is disabled.
              type: optional<_InlinedType32>
      response: commons.Link

    getLinkPolicies:
      path: /links/{id}/policies
      method: GET
      docs: Retrieves a list of policies associated with the requested link
      display-name: List Link Policies
      path-parameters:
        id:
          docs: The unique identifier of the link being inspected.
          type: string
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
      response: commons.Policies

    getLinkEvents:
      path: /links/{id}/events
      method: GET
      docs: Retrieves a list of events triggered for the requested link
      display-name: List Link Events
      path-parameters:
        id:
          docs: The unique identifier of the link being inspected.
          type: string
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
          event_type:
            docs: Filter events by type.
            type: optional<_InlinedType33>
      response: commons.Events

    attachLinkDocument:
      path: /links/{id}/documents
      method: POST
      docs: >-
        Attach a policy document to a Link. If the document can be parsed,
        select the parsed policy for sharing.
      display-name: Upload Document To Link
      path-parameters:
        id:
          docs: The unique identifier of the link being inspected.
          type: string

    syncLinkManually:
      path: /links/{id}/syncs
      method: POST
      docs: Sync a tracked link with the provider using the stored user credentials
      display-name: Manually Sync Link
      path-parameters:
        id:
          docs: The unique identifier of the link being inspected.
          type: string

    getIntegrationLinks:
      path: /integrations/{integration_id}/links
      method: GET
      docs: Retrieves a list of links associated to the requested integration
      display-name: List Integration Links
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
          provider:
            docs: Partial name of a provider to search against
            type: optional<string>
          created_since:
            docs: Limit results to links created on or after this date.
            type: optional<string>
          created_until:
            docs: Limit results to links created on or before this date.
            type: optional<string>
          updated_since:
            docs: Limit results to links last updated on or since this date.
            type: optional<string>
          updated_until:
            docs: Limit results to links last updated on or before this date.
            type: optional<string>
          synced_since:
            docs: Limit results to links last synced on or after this date.
            type: optional<string>
          synced_until:
            docs: Limit results to links last synced on or before this date.
            type: optional<string>
          q:
            docs: Search for link via ID
            type: optional<string>
          status:
            docs: Filter link status; separate multiple statuses (OR'd) with commas
            type: optional<_InlinedType35>
          has_metadata:
            docs: Filter whether a link has metadata attached
            type: optional<boolean>
          policy_type:
            docs: The type of policy linked.
            type: optional<_InlinedType37>
      response: commons.Links

    initializeLinkViaIntegration:
      path: /integrations/{integration_id}/links
      method: POST
      docs: >-
        Creates a link and optionally sets metadata and selects a carrier,
        allowing for seeding initial data before an insured continues the
        linking process via the embed
      display-name: Initialize link
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      request:
        body:
          properties:
            metadata:
              docs: >-
                Arbitrary key value pairs. The entire object is replaced
                on-update (missing keys in the request body will be removed).
                Keys are alphanumeric plus _, -, ., and space, at most 64
                characters. Values are at most 256 characters. You can have at
                most 32 metadata keys on a link.
              type: optional<map<string, unknown>>
            provider_id:
              docs: >-
                If supplied, selects the insurance carrier associated with the
                link. If the link is resumed from the embed, the insured will
                land on that carrier's login page. If policy documents are
                uploaded, parsing will be attempted based on the selected
                carrier.
              type: optional<string>
      response: commons.Link

    getIntegrationLinksWithPolicies:
      path: /integrations/{integration_id}/links_with_policies
      method: GET
      docs: >-
        Retrieves a list of links and selected policies associated to the
        requested integration
      display-name: List Integration Links With Policies
      path-parameters:
        integration_id:
          docs: >-
            The unique identifier of the integration being inspected. Must be a
            valid integration under the application associated with the
            authenticated Client ID and Secret.
          type: string
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
          provider:
            docs: Partial name of a provider to search against
            type: optional<string>
          created_since:
            docs: Limit results to links created on or after this date.
            type: optional<string>
          created_until:
            docs: Limit results to links created on or before this date.
            type: optional<string>
          updated_since:
            docs: Limit results to links last updated on or since this date.
            type: optional<string>
          updated_until:
            docs: Limit results to links last updated on or before this date.
            type: optional<string>
          synced_since:
            docs: Limit results to links last synced on or after this date.
            type: optional<string>
          synced_until:
            docs: Limit results to links last synced on or before this date.
            type: optional<string>
          policy_type:
            docs: The type of policy linked.
            type: optional<_InlinedType39>
          policy_filter_type:
            docs: >-
              Show only these types of policies within each link. Does not
              affect which links are shown. Comma-separate to allow multiple
              policy types.
            type: optional<_InlinedType41>
      response: LinksWithPolicies

types:
  LinksWithPolicies:
    properties:
      count:
        docs: Total number of results that can be returned.
        type: optional<integer>
      filtered_count:
        docs: >-
          If a search filter is applied, this will return the total number of
          results that match the filter.
        type: optional<integer>
      _embedded: optional<_InlinedType30>

  _InlinedType30:
    properties:
      links: optional<list<LinkWithPolicies>>

  LinkWithPolicies:
    docs: >-
      Represents the individual connections between Covie and a Policyholder's
      account with a carrier and wraps the policies retrieved from it that have
      been made available to the consumer.
    extends:
      - commons.Link_2
      - _InlinedType31

  _InlinedType31:
    properties:
      policies:
        docs: List of selected policies connected to this link.
        type: optional<list<commons.Policy>>

  _InlinedType32:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum:
      - never
      - daily
      - weekly
      - monthly
      - on_demand

  _InlinedType34:
    enum:
      - link.created
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - link.changed
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType36:
    enum:
      - new
      - new_with_metadata
      - document_uploaded
      - active
      - stale
      - broken
      - revoked

  _InlinedType38:
    enum: &ref_0
      - homeowner
      - personal_auto
      - renter
      - motorcycle

  _InlinedType40:
    enum: *ref_0

  _InlinedType42:
    enum:
      - homeowner
      - personal_auto
      - renter
      - motorcycle
",
                "name": "link.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /policies/{policy_id}
  path-parameters:
    policy_id:
      docs: The unique identifier of the policy object being sought.
      type: string
  endpoints:
    getPoliciesPolicyId:
      path: ""
      method: GET
      docs: Retrieve a Policy object that was previously connected via a Link
      display-name: Retrieve Policy
      response: Policy_2

    getPolicyDocument:
      path: /documents/{document_type}
      method: GET
      docs: Retrieve the contents of a Policy document
      display-name: Retrieve Policy Document
      path-parameters:
        document_type:
          docs: The document type being requested.
          type: _InlinedType6
      response: FileContents

    listPolicyEvents:
      path: /events
      method: GET
      docs: List all events that have been triggered for the selected policy
      display-name: List Policy Events
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
          event_type:
            docs: Filter events by type.
            type: optional<_InlinedType8>
      response: commons.Events

types:
  Policy:
    docs: >-
      This describes, in high level, the insurance policy record that is
      provided by a link. This object encapsulates all the necessary details to
      understand the policy's status, policyholders, and covered persons or
      properties.
    properties:
      id:
        docs: >-
          Unique identifier of a policy record within the application that
          obtained it.
        type: optional<string>
      object:
        docs: >-
          String representing the object’s type. Objects of the same type share
          the same value.
        type: optional<string>
      fingerprint:
        docs: A universally-unique identifier of a policy.
        type: optional<string>
      carrier: optional<commons.Carrier>
      number:
        docs: >-
          The full policy number as provided by the issuing company. This is not
          available to all users and may be null when not active on the account.
        type: optional<string>
      masked_number:
        docs: >-
          This is a masked version of the policy number provided by the issuing
          company. This is always provided and available to all customers.
        type: optional<string>
      line:
        docs: A string indicating the line of business this policy encompasses.
        type: optional<_InlinedType0>
      policyholders:
        docs: A list of insureds, or policyholders assigned to this policy.
        type: optional<list<commons.Policyholder>>
      vehicles: optional<list<commons.Vehicle>>
      locations: optional<list<commons.Location>>
      status:
        docs: A string representation of the policy's current status.
        type: optional<_InlinedType1>
      term_length: optional<commons.PeriodValue>
      inception_date:
        docs: >-
          The date when the policy becomes in force. This date is provided in
          ISO-8601 format excluding time.
        type: optional<string>
      expiration_date:
        docs: >-
          The date when the described policy period ends. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_date:
        docs: >-
          The date when the policy is set to be cancelled. This date is provided
          in ISO-8601 format excluding time.
        type: optional<string>
      cancellation_reason:
        docs: >-
          The determined reason for the cancellation, such as
          insured_non_payment or carrier_non_renew or insured_action. This value
          is null when cancellation is not active or not explicitly indicated by
          the carrier systems and is not guaranteed to be provided in any
          circumstance.
        type: optional<_InlinedType2>
      linked_at:
        docs: >-
          The date and time which the policy was initially retrieved. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      last_synced_at:
        docs: >-
          The date and time when the policy record was last updated. This date
          and time is provided in ISO-8601 format.
        type: optional<string>
      _links:
        docs: >-
          A polymorphic list of externally linked resources related to this
          policy such as documents or logos for carriers.
        type: optional<_InlinedType4>
      _embedded:
        docs: A container for objects wrapped by the current object.
        type: optional<_InlinedType5>
      link_id:
        docs: Unique identifier of the link associated to the policy.
        type: optional<string>

  _InlinedType0:
    docs: A string indicating the line of business this policy encompasses.
    enum:
      - personal_auto
      - homeowner
      - renter
      - motorcycle

  _InlinedType1:
    docs: A string representation of the policy's current status.
    enum:
      - active
      - expired
      - pending
      - cancelled

  _InlinedType2:
    docs: >-
      The determined reason for the cancellation, such as insured_non_payment or
      carrier_non_renew or insured_action. This value is null when cancellation
      is not active or not explicitly indicated by the carrier systems and is
      not guaranteed to be provided in any circumstance.
    enum:
      - carrier_non_renew
      - insured_non_payment
      - insured_requested
      - other

  _InlinedType3:
    docs: A link to the logo for the carrier on the policy.
    properties:
      href: optional<string>

  _InlinedType4:
    docs: >-
      A polymorphic list of externally linked resources related to this policy
      such as documents or logos for carriers.
    properties:
      documents:
        docs: >-
          A list of documents obtained and available for this policy. This list
          may be empty if no documents are available or if document access is
          not enabled for your account.
        type: optional<list<commons.DocumentRef>>
      carrier_logo:
        docs: A link to the logo for the carrier on the policy.
        type: optional<_InlinedType3>

  _InlinedType5:
    docs: A container for objects wrapped by the current object.
    properties:
      missing_fields:
        docs: A list of policy fields that were unable to be processed.
        type: optional<list<string>>

  _InlinedType7:
    enum:
      - declaration
      - id_card
      - renewal
      - evidence_of_insurance
      - cancellation

  _InlinedType9:
    enum:
      - link.created
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - link.changed
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium
",
                "name": "policy.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /webhooks
  endpoints:
    listWebhooks:
      path: ""
      method: GET
      docs: List an application's configured webhooks.
      display-name: List Webhooks
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
          event_type:
            docs: Filter events by type.
            type: optional<_InlinedType48>
      response: Webhooks

    createWebhook:
      path: ""
      method: POST
      docs: Create a new webhook
      display-name: Create Webhook
      request:
        body:
          properties:
            uri:
              docs: >-
                URI the webhook should make a request to when the event is
                triggered.
              type: optional<string>
            headers:
              docs: >-
                List of the headers and their values that should be included in
                the request.
              type: optional<map<string, unknown>>
            event_types: optional<list<_InlinedType50>>

    getWebhook:
      path: /{webhook_id}
      method: GET
      docs: Get the details of a webhook.
      display-name: Get Webhook
      path-parameters:
        webhook_id:
          docs: Unique identifier of the webhook.
          type: string
      response: commons.Webhook_2

    updateWebhook:
      path: /{webhook_id}
      method: PATCH
      docs: Update a webhook.
      display-name: Update Webhook
      path-parameters:
        webhook_id:
          docs: Unique identifier of the webhook.
          type: string
      request:
        body:
          properties:
            uri:
              docs: >-
                URI the webhook should make a request to when the event is
                triggered.
              type: optional<string>
            headers:
              docs: >-
                List of the headers and their values that should be included in
                the request.
              type: optional<map<string, unknown>>
            is_enabled: optional<boolean>
            event_types: optional<list<_InlinedType51>>
      response: commons.Webhook_2

    listWebhookEvents:
      path: /{webhook_id}/events
      method: GET
      docs: List the events that have been triggered for a webhook.
      display-name: List Webhook Events
      path-parameters:
        webhook_id:
          docs: Unique identifier of the webhook.
          type: string
      request:
        query-parameters:
          limit:
            docs: Number of results to return.
            type: optional<integer>
          offset:
            docs: Specifies the offset of the first result to return.
            type: optional<integer>
          event_type:
            docs: Filter events by type.
            type: optional<_InlinedType52>
      response: commons.Events

types:
  Webhooks:
    properties:
      count:
        docs: Total webhooks in the application.
        type: optional<integer>
      filtered_count:
        docs: Total webhooks that match the applied filter.
        type: optional<integer>
      _embedded: optional<_InlinedType47>

  _InlinedType47:
    properties:
      webhooks: optional<list<commons.Webhook>>

  _InlinedType49:
    enum: &ref_0
      - link.created
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - link.changed
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType50:
    enum:
      - link.created
      - link.changed
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType51:
    enum:
      - link.created
      - link.changed
      - link.successful
      - link.documents.available
      - link.broken
      - link.stale
      - policies.unlinked
      - policy.activated
      - policy.cancelling
      - policy.expired
      - policy.reinstated
      - policy.renewed
      - policy.changed
      - policy.changed.coverage
      - policy.changed.insureds
      - policy.changed.status
      - policy.changed.premium

  _InlinedType53:
    enum: *ref_0
",
                "name": "webhook.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init gigs openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  deviceModel:
    properties:
      object:
        docs: Type of object is always \`deviceModel\`.
        type: string
      id:
        docs: Unique identifier for the deviceModel.
        type: string
      brand:
        docs: The brand of the device model.
        type: string
      name:
        docs: The device model's name.
        type: string
      simTypes:
        docs: List of SIM types supported by this device model.
        type: list<_InlinedType28>
      type:
        docs: The type of the device model.
        type: _InlinedType29

  _InlinedType28:
    enum:
      - eSIM
      - pSIM

  _InlinedType29:
    docs: The type of the device model.
    enum:
      - car
      - iot
      - laptop
      - router
      - smartphone
      - feature-phone
      - smartwatch
      - tablet
      - wearable
      - other

  device:
    properties:
      object:
        docs: Type of object is always \`device\`.
        type: string
      id:
        docs: Unique identifier for the device.
        type: string
      imei:
        docs: >-
          The IMEI (international mobile equipment identity) of the device if
          provided.
        type: optional<string>
      model: _InlinedType32
      name:
        docs: An optional custom name for the device.
        type: optional<string>
      sims:
        docs: List of SIMs added to this device.
        type: list<sim>
      user: _InlinedType33
      createdAt:
        docs: Time when the device was created.
        type: string

  _InlinedType30:
    enum:
      - eSIM
      - pSIM

  _InlinedType31:
    docs: The type of the device model.
    enum:
      - car
      - iot
      - laptop
      - router
      - smartphone
      - feature-phone
      - smartwatch
      - tablet
      - wearable
      - other

  _InlinedType32:
    properties:
      object:
        docs: Type of object is always \`deviceModel\`.
        type: string
      id:
        docs: Unique identifier for the deviceModel.
        type: string
      brand:
        docs: The brand of the device model.
        type: string
      name:
        docs: The device model's name.
        type: string
      simTypes:
        docs: List of SIM types supported by this device model.
        type: list<_InlinedType30>
      type:
        docs: The type of the device model.
        type: _InlinedType31

  _InlinedType33:
    properties:
      object:
        docs: Type of object is always \`user\`.
        type: string
      id:
        docs: Unique identifier for the user.
        type: string
      birthday:
        docs: The birthday of the user.
        type: optional<string>
      email:
        docs: The primary email address of the user.
        type: string
      emailVerified:
        docs: Whether the user's primary email address is verified or not.
        type: boolean
      fullName:
        docs: The user's full name. Required for some Plans.
        type: optional<string>
      preferredLocale:
        docs: >-
          The user's locale preference represented as an [IETF language
          tag](https://en.wikipedia.org/wiki/IETF_language_tag).
        type: string
      createdAt:
        docs: Time when the user was created.
        type: string

  sim:
    properties:
      object:
        docs: Type of object is always \`sim\`.
        type: string
      id:
        docs: Unique identifier for the SIM.
        type: string
      iccid:
        docs: >-
          The ICCID (integrated circuit card identifier) associated with the
          SIM.
        type: string
      provider:
        docs: The ID of the network provider of the SIM.
        type: string
      status:
        docs: The status of the SIM. Can be \`active\` or \`inactive\`.
        type: _InlinedType34
      type:
        docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
        type: _InlinedType35
      createdAt:
        docs: Time when the SIM was created.
        type: string

  _InlinedType34:
    docs: The status of the SIM. Can be \`active\` or \`inactive\`.
    enum:
      - inactive
      - active
      - retired

  _InlinedType35:
    docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
    enum:
      - eSIM
      - pSIM

  plan:
    properties:
      object:
        docs: Type of object is always \`plan\`.
        type: string
      id:
        docs: Unique identifier for the plan.
        type: string
      coverage: coverage
      data:
        docs: >-
          The data allowance included in this plan. A value of \`-1\` indicates
          unlimited data.
        type: integer
      dataUnit:
        docs: The unit of the data value is always \`byte\`.
        type: string
      description:
        docs: The plan's description, meant to be displayable to the users.
        type: optional<string>
      image:
        docs: The plan's image, meant to be displayable to the users.
        type: optional<string>
      name:
        docs: The plan's name, meant to be displayable to the users.
        type: string
      price: _InlinedType36
      provider:
        docs: The ID of the network provider supported by this plan.
        type: string
      requirements: _InlinedType41
      simTypes:
        docs: >-
          List of SIM types supported by this plan. Can be \`eSIM\`, \`pSIM\`, or
          both.
        type: list<_InlinedType42>
      sms:
        docs: >-
          The SMS allowance included in this plan. A value of \`-1\` indicates
          unlimited SMS.
        type: integer
      smsUnit:
        docs: The unit of the sms value is always \`message\`.
        type: string
      status: _InlinedType43
      tags:
        docs: List of tags describing this plan.
        type: list<string>
      validity: _InlinedType46
      voice:
        docs: >-
          The voice call allowance in seconds included in this plan. A value of
          \`-1\` indicates unlimited voice calls.
        type: integer
      voiceUnit:
        docs: The unit of the voice value is always \`second\`.
        type: string
      createdAt:
        docs: Time when the plan was created.
        type: string

  _InlinedType36:
    properties:
      amount:
        docs: >-
          The price amount in the currency's minor unit, e.g. "cents" for many
          currencies.
        type: integer
      currency:
        docs: Three-letter ISO 4217 currency code. Must be a supported currency.
        type: string

  _InlinedType37:
    docs: >-
      The address requirements that must be fulfilled before a user may purchase
      a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType38:
    docs: >-
      The device requirements that must be fulfilled before a user may purchase
      a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType39:
    docs: >-
      The user birthday requirements that must be fulfilled before a user may
      purchase a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType40:
    docs: >-
      The user full name requirements that must be fulfilled before a user may
      purchase a subscription.
    enum:
      - none
      - present
      - verified

  _InlinedType41:
    properties:
      address:
        docs: >-
          The address requirements that must be fulfilled before a user may
          purchase a subscription.
        type: _InlinedType37
      device:
        docs: >-
          The device requirements that must be fulfilled before a user may
          purchase a subscription.
        type: _InlinedType38
      user.birthday:
        docs: >-
          The user birthday requirements that must be fulfilled before a user
          may purchase a subscription.
        type: _InlinedType39
      user.fullName:
        docs: >-
          The user full name requirements that must be fulfilled before a user
          may purchase a subscription.
        type: _InlinedType40

  _InlinedType42:
    enum:
      - eSIM
      - pSIM

  _InlinedType43:
    enum:
      - available
      - archived
      - pending
      - draft

  _InlinedType44:
    docs: The validity type of this plan, either \`oneTime\` or \`recurring\`.
    enum:
      - oneTime
      - recurring

  _InlinedType45:
    docs: The time unit of the subscription period, either \`day\` or \`month\`.
    enum:
      - day
      - month

  _InlinedType46:
    properties:
      minimumPeriods:
        docs: >-
          The minimum number of subscription periods that the plan must be
          renewed.
        type: integer
      type:
        docs: The validity type of this plan, either \`oneTime\` or \`recurring\`.
        type: _InlinedType44
      unit:
        docs: The time unit of the subscription period, either \`day\` or \`month\`.
        type: _InlinedType45
      value:
        docs: >-
          The amount of units (specified in the \`unit\` property) in each
          subscription period.
        type: integer

  coverage:
    properties:
      object:
        docs: Type of object is always \`coverage\`.
        type: string
      id:
        docs: Unique identifier for the coverage configuration.
        type: string
      countries:
        docs: >-
          List of countries in ISO 3166-1 alpha-2 format covered by this
          coverage configuration.
        type: list<string>
      name:
        docs: >-
          A human-readable identifier of the coverage configuration, might not
          be unique.
        type: string

  planDocument:
    properties:
      object:
        docs: Type of object is always \`planDocument\`.
        type: string
      id:
        docs: Unique identifier for the given document.
        type: string
      name:
        docs: The name of the document.
        type: string
      plan:
        docs: Unique identifier for the plan associated to this document.
        type: string
      type:
        docs: The MIME type for the given document.
        type: string
      url:
        docs: The URL at which the document can be retrieved.
        type: string
      createdAt:
        docs: The time the document was created.
        type: string

  porting:
    properties:
      object:
        docs: Type of object is always \`porting\`.
        type: string
      id:
        docs: Unique identifier for the porting.
        type: string
      accountNumber:
        docs: The account number on the donor service provider.
        type: optional<string>
      birthday:
        docs: The birthday of the account holder on the donor service provider.
        type: optional<string>
      declinedAttempts:
        docs: The number of declined porting attempts so far.
        type: integer
      donorProvider:
        docs: The service provider from whom the number is ported.
        type: _InlinedType47
      firstName:
        docs: The first name of the account holder on the donor service provider.
        type: optional<string>
      lastName:
        docs: The last name of the account holder on the donor service provider.
        type: optional<string>
      phoneNumber:
        docs: The phone number to port in E.164 format.
        type: string
      provider:
        docs: The ID of the recipient network provider.
        type: string
      recipientProvider:
        docs: The service provider to whom the number is ported.
        type: _InlinedType48
      required:
        docs: >-
          List of fields required for the porting to be processable. The fields
          depend on the donor and recipient providers.
        type: list<string>
      status:
        docs: The current status of the porting.
        type: _InlinedType49
      subscription:
        docs: Unique identifier for the porting subscription.
        type: optional<string>
      user:
        docs: Unique identifier for the user this porting is for.
        type: string
      canceledAt:
        docs: Time when the porting was canceled.
        type: optional<string>
      completedAt:
        docs: Time when the porting was completed.
        type: optional<string>
      createdAt:
        docs: Time when the porting was created.
        type: string
      lastDeclinedAt:
        docs: Time when the porting was last declined.
        type: optional<string>
      lastRequestedAt:
        docs: Time when the porting was last requested.
        type: optional<string>

  _InlinedType47:
    docs: The service provider from whom the number is ported.
    properties:
      object:
        docs: Type of object is always \`serviceProvider\`.
        type: string
      id:
        docs: Unique identifier for the service provider.
        type: string
      name:
        docs: The name of the service provider, usually a brand name.
        type: string
      recipientProviders:
        docs: >-
          List of network providers IDs that can receive portings from the
          service provider.
        type: list<string>

  _InlinedType48:
    docs: The service provider to whom the number is ported.
    properties:
      object:
        docs: Type of object is always \`serviceProvider\`.
        type: string
      id:
        docs: Unique identifier for the service provider.
        type: string
      name:
        docs: The name of the service provider, usually a brand name.
        type: string
      recipientProviders:
        docs: >-
          List of network providers IDs that can receive portings from the
          service provider.
        type: list<string>

  _InlinedType49:
    docs: The current status of the porting.
    enum:
      - draft
      - pending
      - requested
      - declined
      - completed
      - canceled

  serviceProvider:
    properties:
      object:
        docs: Type of object is always \`serviceProvider\`.
        type: string
      id:
        docs: Unique identifier for the service provider.
        type: string
      name:
        docs: The name of the service provider, usually a brand name.
        type: string
      recipientProviders:
        docs: >-
          List of network providers IDs that can receive portings from the
          service provider.
        type: list<string>

  project:
    properties:
      object:
        docs: Type of object is always \`project\`.
        type: string
      id:
        docs: Globally unique identifier for the project.
        type: string
      domain:
        docs: The canonical domain to access the project if available.
        type: optional<string>
      image:
        docs: >
          Small-resolution project icon with an aspect ratio of \`1:1\`.
          <!-- theme: info -->
          > #### Preview
          >
          > This property is currently in preview and might change in the
          future.
          > We’re excited to hear your feedback and ideas. Please send an email
          > to [support@gigs.com](mailto:support@gigs.com) to share your
          thoughts.
        type: optional<string>
      images:
        docs: >-
          Deprecated object of project images. Please use the image property
          instead.
        type: _InlinedType50
      legal:
        docs: The legal address for the company that manages the project.
        type: _InlinedType51
      locales:
        docs: >-
          List of supported locales represented as [IETF language
          tags](https://en.wikipedia.org/wiki/IETF_language_tag), ordered by
          preference.
        type: list<string>
      name:
        docs: A human-readable name for the project.
        type: string
      organization: organization
      payments:
        docs: Configuration parameters for the project use of payments.
        type: _InlinedType53
      settings:
        docs: >-
          Deprecated object of application and integration settings. Please use
          the new installations endpoints instead.
        type: map<string, unknown>
      subscriptionOwner:
        docs: >-
          Indicates which entity will be registered as the owner of the
          subscription with the providers. When \`company\` is selected the legal
          address associated with the project will be used for the registration.
        type: _InlinedType54
      support:
        docs: Contact details for consumer support requests regarding the project.
        type: _InlinedType55
      createdAt:
        docs: Time when the project was created.
        type: string

  _InlinedType50:
    docs: >-
      Deprecated object of project images. Please use the image property
      instead.
    properties:
      favicon:
        docs: Small-resolution project favicon with an aspect ratio of \`1:1\`.
        type: optional<string>
      icon:
        docs: Small-resolution project icon with an aspect ratio of \`1:1\`.
        type: optional<string>
      logoHorizontal:
        docs: High-resolution project logo with an aspect ratio of \`7:1\`.
        type: optional<string>

  _InlinedType51:
    docs: The legal address for the company that manages the project.
    properties:
      name:
        docs: The company's legal name.
        type: string
      city:
        docs: The city/municipality of the company's legal address.
        type: string
      country:
        docs: The ISO 3166-1 alpha-2 country code for the company's legal address.
        type: string
      line1:
        docs: >-
          The first line of the company's legal address, e.g. street and house
          number.
        type: string
      line2:
        docs: The second line of the given street address, e.g. Apartment number.
        type: optional<string>
      postalCode:
        docs: The postal code of the given street address.
        type: string
      state:
        docs: The state/province/region of the given street address.
        type: optional<string>

  _InlinedType52:
    docs: The mode in which the payments operate.
    enum:
      - live
      - test

  _InlinedType53:
    docs: Configuration parameters for the project use of payments.
    properties:
      currency:
        docs: >-
          Three-letter ISO 4217 currency code representing the currency of the
          project. Must be a supported currency.
        type: string
      mode:
        docs: The mode in which the payments operate.
        type: _InlinedType52

  _InlinedType54:
    docs: >-
      Indicates which entity will be registered as the owner of the subscription
      with the providers. When \`company\` is selected the legal address
      associated with the project will be used for the registration.
    enum:
      - user
      - company

  _InlinedType55:
    docs: Contact details for consumer support requests regarding the project.
    properties:
      email:
        docs: >-
          A publicly available email address for consumer support requests
          regarding the project.
        type: optional<string>
      phoneNumber:
        docs: >-
          A publicly available phone number in E.164 format for consumer support
          requests regarding the project.
        type: optional<string>

  organization:
    properties:
      object:
        docs: Type of object is always \`organization\`.
        type: string
      id:
        docs: Unique identifier for the organization.
        type: string
      name:
        docs: Name for the organization.
        type: string
      createdAt:
        docs: Time when the organization was created.
        type: string

  subscription:
    properties:
      object:
        docs: Type of object is always \`subscription\`.
        type: string
      id:
        docs: Unique identifier for the subscription.
        type: string
      currentPeriod: _InlinedType56
      phoneNumber:
        docs: >-
          The phone number attached to the SIM in E.164 format. Only available
          for voice plans.
        type: optional<string>
      plan: plan
      porting:
        docs: >
          Unique identifier for the porting.
          <!-- theme: info -->
          > #### Preview
          >
          > This property is currently in preview and might change in the
          future.
          > We’re excited to hear your feedback and ideas. Please send an email
          > to [support@gigs.com](mailto:support@gigs.com) to share your
          thoughts.
        type: optional<string>
      sim: _InlinedType59
      status:
        docs: The current status of the subscription.
        type: _InlinedType60
      user: user
      activatedAt:
        docs: Time when the subscription was activated.
        type: optional<string>
      canceledAt:
        docs: Time when the subscription was canceled.
        type: optional<string>
      createdAt:
        docs: Time when the subscription was created.
        type: string
      endedAt:
        docs: Time when the subscription was ended.
        type: optional<string>
      firstUsageAt:
        docs: Time when the subscription was first used.
        type: optional<string>

  _InlinedType56:
    properties:
      number:
        docs: Sequence number of the subscription period.
        type: integer
      start:
        docs: Beginning of the current subscription period.
        type: string
      end:
        docs: End of the current subscription period.
        type: string

  _InlinedType57:
    docs: The status of the SIM. Can be \`active\` or \`inactive\`.
    enum:
      - inactive
      - active
      - retired

  _InlinedType58:
    docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
    enum:
      - eSIM
      - pSIM

  _InlinedType59:
    properties:
      object:
        docs: Type of object is always \`sim\`.
        type: string
      id:
        docs: Unique identifier for the SIM.
        type: string
      iccid:
        docs: >-
          The ICCID (integrated circuit card identifier) associated with the
          SIM.
        type: string
      provider:
        docs: The ID of the network provider of the SIM.
        type: string
      status:
        docs: The status of the SIM. Can be \`active\` or \`inactive\`.
        type: _InlinedType57
      type:
        docs: The type of the SIM. Can be \`eSIM\` or \`pSIM\`.
        type: _InlinedType58
      createdAt:
        docs: Time when the SIM was created.
        type: string

  _InlinedType60:
    docs: The current status of the subscription.
    enum:
      - pending
      - active
      - ended

  user:
    properties:
      object:
        docs: Type of object is always \`user\`.
        type: string
      id:
        docs: Unique identifier for the user.
        type: string
      birthday:
        docs: The birthday of the user.
        type: optional<string>
      email:
        docs: The primary email address of the user.
        type: string
      emailVerified:
        docs: Whether the user's primary email address is verified or not.
        type: boolean
      fullName:
        docs: The user's full name. Required for some Plans.
        type: optional<string>
      preferredLocale:
        docs: >-
          The user's locale preference represented as an [IETF language
          tag](https://en.wikipedia.org/wiki/IETF_language_tag).
        type: string
      createdAt:
        docs: Time when the user was created.
        type: string

  userAddress:
    properties:
      object:
        docs: Type of object is always \`userAddress\`.
        type: string
      id:
        docs: Unique identifier for the given address.
        type: string
      city:
        docs: The city/municipality of the given street address.
        type: string
      country:
        docs: The ISO 3166-1 alpha-2 country code for the given address.
        type: string
      line1:
        docs: >-
          The first line of the given street address, e.g. street and house
          number.
        type: string
      line2:
        docs: The second line of the given street address, e.g. Apartment number.
        type: optional<string>
      postalCode:
        docs: The postal code of the given street address.
        type: optional<string>
      state:
        docs: The state/province/region of the given street address.
        type: optional<string>
      user:
        docs: Unique identifier for the given address user.
        type: string
      createdAt:
        docs: The time the address was created.
        type: string
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: ""
  endpoints:
    deviceModelsRetrieve:
      path: /deviceModels/{id}
      method: GET
      docs: Retrieves the details of an existing device model.
      display-name: Retrieve a device model
      path-parameters:
        id:
          docs: The unique identifier for the device model.
          type: string
      response: commons.deviceModel

    deviceModelsSearch:
      path: /deviceModels/search
      method: POST
      docs: Searches for existing devices models matching the given parameters.
      display-name: Search for device models
      request:
        body:
          properties:
            imei:
              docs: >-
                The IMEI (international mobile equipment identity) of the
                corresponding device.
              type: string
      response: _InlinedType0

    deviceModelsList:
      path: /deviceModels
      method: GET
      docs: >-
        Returns a list of device models. The models returned are sorted by
        creation date, with the most recently created models appearing first.
      display-name: List all device models
      request:
        query-parameters:
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType3

    devicesRetrieve:
      path: /projects/{project}/devices/{id}
      method: GET
      docs: >-
        Retrieves the details of an existing device owned by the authenticated
        user.
      display-name: Retrieve a device
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
        id:
          docs: The unique identifier for the device.
          type: string
      response: commons.device

    devicesDelete:
      path: /projects/{project}/devices/{id}
      method: DELETE
      docs: Retrieves the details of an existing device and deletes it.
      display-name: Delete a device
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
        id:
          docs: The unique identifier for the device.
          type: string
      response: commons.device

    devicesUpdate:
      path: /projects/{project}/devices/{id}
      method: PATCH
      docs: |
        Updates the given properties of an existing device.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Update a device
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
        id:
          docs: The unique identifier for the device.
          type: string
      request:
        body:
          properties:
            name:
              docs: An optional custom name for the device.
              type: optional<string>
            sims:
              docs: >-
                List of identifiers for all SIMs currently attached to the
                device.
              type: optional<list<string>>
            user:
              docs: Unique user identifier for the device owner.
              type: optional<string>
      response: commons.device

    devicesSearch:
      path: /projects/{project}/devices/search
      method: POST
      docs: >-
        Searches for existing devices matching the given parameters. The search
        will only return factory devices not yet assigned to any user, or
        devices already owned by the current user.
      display-name: Search for devices
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      request:
        body:
          properties:
            imei:
              docs: >-
                The IMEI (international mobile equipment identity) of the
                device.
              type: string
      response: _InlinedType4

    devicesList:
      path: /projects/{project}/devices
      method: GET
      docs: >-
        Returns a list of devices. The devices returned are sorted by creation
        date, with the most recently created devices appearing first.
      display-name: List all devices
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      request:
        query-parameters:
          sim:
            docs: The unique identifier for the sim to be filtered by.
            type: optional<string>
          user:
            docs: The unique identifier for the user to be filtered by.
            type: optional<string>
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType5

    devicesCreate:
      path: /projects/{project}/devices
      method: POST
      docs: Creates a new device with the given parameters.
      display-name: Create a device
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      request:
        body:
          properties:
            imei:
              docs: >-
                The IMEI (international mobile equipment identity) of the
                device.
              type: string
            user:
              docs: Unique user identifier for the device owner.
              type: string
            sims:
              docs: List of identifiers for all SIMs to attach to the device.
              type: optional<list<string>>
            name:
              docs: An optional custom name for the device.
              type: optional<string>

types:
  _InlinedType0:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`deviceModel\`.
        type: list<commons.deviceModel>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>

  _InlinedType3:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`deviceModel\`.
        type: list<commons.deviceModel>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>

  _InlinedType4:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`device\`.
        type: list<commons.device>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>

  _InlinedType5:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`device\`.
        type: list<commons.device>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "devices.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /projects/{project}/plans
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    plansArchive:
      path: /{id}/archive
      method: POST
      docs: >
        Set the status of a plan to archived. An archived plan can not be used
        to create new subscriptions.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Archive a plan
      path-parameters:
        id:
          docs: The unique identifier for the plan.
          type: string
      response: commons.plan

    planDocumentRetrieve:
      path: /{plan}/documents/{id}
      method: GET
      docs: Retrieves the details of an existing document for a given plan.
      display-name: Retrieve a plan document
      path-parameters:
        plan:
          docs: The unique identifier for the plan.
          type: string
        id:
          docs: The unique identifier for the document.
          type: string
      response: commons.planDocument

    planDocumentsList:
      path: /{plan}/documents
      method: GET
      docs: >-
        Returns a list of documents related to the given plan. The documents
        returned are sorted by creation date, with the most recently created
        documents appearing first.
      display-name: List all plan documents
      path-parameters:
        plan:
          docs: The unique identifier for the plan.
          type: string
      response: _InlinedType6

    plansRetrieve:
      path: /{id}
      method: GET
      docs: Retrieve the details of an existing plan.
      display-name: Retrieve a plan
      path-parameters:
        id:
          docs: The unique identifier for the plan.
          type: string
      response: commons.plan

    plansUpdate:
      path: /{id}
      method: PATCH
      docs: >-
        Updates the specified plan by setting the values of the parameters
        passed.
      display-name: Update a plan
      path-parameters:
        id:
          docs: The unique identifier for the plan.
          type: string
      request:
        body:
          properties:
            name:
              docs: The plan's name, meant to be displayable to the users.
              type: optional<string>
            description:
              docs: The plan's description, meant to be displayable to the users.
              type: optional<string>
            image:
              docs: The plan's image, meant to be displayable to the users.
              type: optional<string>
      response: commons.plan

    plansPublish:
      path: /{id}/publish
      method: POST
      docs: >
        Set the status of a plan to available. Available plans can be used to
        create new subscriptions.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Publish a plan
      path-parameters:
        id:
          docs: The unique identifier for the plan.
          type: string
      response: commons.plan

    plansList:
      path: ""
      method: GET
      docs: Returns a list of plans.
      display-name: List all plans
      request:
        query-parameters:
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType9

types:
  _InlinedType6:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`planDocument\`.
        type: list<commons.planDocument>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>

  _InlinedType9:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`plan\`.
        type: list<commons.plan>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "plans.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: ""
  endpoints:
    portingCancel:
      path: /projects/{project}/portings/{id}/cancel
      method: POST
      docs: >
        Retrieves the details of an existing porting and cancels it. Only
        portings that have not yet being completed can be canceled.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Cancel a porting
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
        id:
          docs: The unique identifier for the porting.
          type: string
      response: commons.porting

    portingRetrieve:
      path: /projects/{project}/portings/{id}
      method: GET
      docs: |
        Retrieves the details of an existing porting.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Retrieve a Porting
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
        id:
          docs: The unique identifier for the porting.
          type: string
      response: commons.porting

    portingUpdate:
      path: /projects/{project}/portings/{id}
      method: PATCH
      docs: >
        Updates the specified porting by setting the values of the parameters
        passed.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Update a porting
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
        id:
          docs: The unique identifier for the porting.
          type: string
      request:
        body:
          properties:
            accountNumber:
              docs: The account number on the donor service provider.
              type: optional<string>
            accountPin:
              docs: >-
                The pin for the account on the donor service provider. This will
                be used only for the porting.
              type: optional<string>
            birthday:
              docs: >-
                The birthday of the account holder on the donor service
                provider.
              type: optional<string>
            donorProvider:
              docs: The unique identifier of the donor service provider.
              type: optional<string>
            firstName:
              docs: The first name of the account holder.
              type: optional<string>
            lastName:
              docs: The last name of the account holder.
              type: optional<string>
            phoneNumber:
              docs: >-
                The phone number to port in E.164 format. This is only updatable
                when the porting is in a status of: draft
              type: optional<string>
            provider:
              docs: >-
                The ID of the recipient network provider. This is only updatable
                when the porting is in a status of: draft
              type: optional<string>
      response: commons.porting

    portingsList:
      path: /projects/{project}/portings
      method: GET
      docs: >
        Returns a list of portings. The portings returned are sorted by creation
        date, with the most recently created portings appearing first.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: List all portings
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      request:
        query-parameters:
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType10

    portingsCreate:
      path: /projects/{project}/portings
      method: POST
      docs: >
        Creates a new porting with the parameters passed. The porting will be
        created in \`draft\` status and can be later used to create an order or
        subscription for the given network provider.
        Only some of the fields are required during creation creation, but all
        of the ones required by the network provider must be set before
        submitting the porting.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Create a porting
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      request:
        body:
          properties:
            accountNumber:
              docs: The account number on the donor service provider.
              type: optional<string>
            accountPin:
              docs: >-
                The pin for the account on the donor service provider. This will
                be used only for the porting.
              type: optional<string>
            birthday:
              docs: >-
                The birthday of the account holder on the donor service
                provider.
              type: optional<string>
            donorProvider:
              docs: The unique identifier of the donor service provider.
              type: optional<string>
            firstName:
              docs: The first name of the account holder.
              type: optional<string>
            lastName:
              docs: The last name of the account holder.
              type: optional<string>
            phoneNumber:
              docs: The phone number to port in E.164 format.
              type: string
            provider:
              docs: The name of the receiving network provider.
              type: string
            user:
              docs: >-
                The unique identifier for an existing
                [user](https://developers.gigs.com/docs/api/b3A6MzMwODcxNDM-retrieve-a-user)
                the porting should be created for.
              type: string

    serviceProviderRetrieve:
      path: /serviceProviders/{id}
      method: GET
      docs: |
        Retrieves the details of a service provider.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Retrieve a service provider
      path-parameters:
        id:
          docs: The unique identifier for the service provider.
          type: string
      response: commons.serviceProvider

    serviceProvidersList:
      path: /serviceProviders
      method: GET
      docs: |
        Returns a list of service providers.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: List all service providers
      request:
        query-parameters:
          recipientProvider:
            docs: >-
              Only return service providers that have the given network provider
              as supported porting recipient.
            type: optional<string>
      response: _InlinedType11

types:
  _InlinedType10:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`porting\`.
        type: list<commons.porting>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>

  _InlinedType11:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`serviceProvider\`.
        type: list<commons.serviceProvider>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "portings.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /projects
  endpoints:
    projectsRetrieve:
      path: /{project}
      method: GET
      docs: >-
        Retrieves the details of an existing project accessible by the API
        client.
      display-name: Retrieve a project
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      response: commons.project

    projectsCredentialsRetrieve:
      path: /{project}/credentials
      method: GET
      docs: |
        Retrieve the credentials of an existing project.
        <!-- theme: info -->
        > #### Preview
        >
        > This endpoint is currently in preview and might change in the future.
        > We’re excited to hear your feedback and ideas. Please send an email
        > to [support@gigs.com](mailto:support@gigs.com) to share your thoughts.
      display-name: Retrieve the project credentials
      path-parameters:
        project:
          docs: >-
            The unique identifier for the
            [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
          type: string
      response: _InlinedType12

    projectsList:
      path: ""
      method: GET
      docs: >-
        Returns a list of projects. The projects returned are sorted by creation
        date, with the most recently created projects appearing first.
      display-name: List all projects
      request:
        query-parameters:
          organization:
            docs: The unique identifier for the organization to be filtered by.
            type: optional<string>
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType13

types:
  _InlinedType12:
    properties:
      object:
        docs: Type of object is always \`projectCredentials\`.
        type: string
      paymentsKey:
        docs: Publishable API key for payment integration.
        type: optional<string>

  _InlinedType13:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`project\`.
        type: list<commons.project>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "projects.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /projects/{project}/sims
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    siMsCredentialsRetrieve:
      path: /{id}/credentials
      method: GET
      docs: Retrieve the credentials of an existing SIM.
      display-name: Retrieve the SIM credentials
      path-parameters:
        id:
          docs: The unique identifier for the SIM.
          type: string
      response: simCredentials

    siMsRetrieve:
      path: /{id}
      method: GET
      docs: >-
        Retrieve the details of an existing SIM which the authenticated user is
        authorized to view.
      display-name: Retrieve a SIM
      path-parameters:
        id:
          docs: The unique identifier for the SIM.
          type: string
      response: commons.sim

    siMsSearch:
      path: /search
      method: POST
      docs: Searches for existing SIMs matching the given parameters.
      display-name: Search for SIMs
      request:
        body:
          properties:
            iccid:
              docs: >-
                The ICCID (integrated circuit card identifier) associated with
                the SIM.
              type: string
            type:
              docs: Optional type of the SIM card, either \`eSIM\`, \`pSIM\` or both.
              type: optional<list<_InlinedType14>>
      response: _InlinedType15

    siMsList:
      path: ""
      method: GET
      docs: >-
        Returns a list of SIMs. The SIMs returned are sorted by creation date,
        with the most recently created SIMs appearing first.
      display-name: List all SIMs
      request:
        query-parameters:
          type:
            docs: The type for the sim to be filtered by.
            type: optional<_InlinedType17>
          user:
            docs: The unique identifier for the user to be filtered by.
            type: optional<string>
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType19

types:
  simCredentials:
    properties:
      object:
        docs: Type of object is always \`simCredentials\`.
        type: string
      activationCode:
        docs: >-
          eSIM activation code to download and install the profile in a device.
          Only available for type \`eSIM\`.
        type: optional<string>
      qrCodeUrl:
        docs: >-
          URL of the activation code in QR-Code format. Only available for type
          \`eSIM\`.
          <!-- theme: warning -->
          > Be careful how you share this URL, it can be accessed publicly
          without authentication.
        type: optional<string>
      sim:
        docs: Unique identifier for the SIM this credentials are for.
        type: string

  _InlinedType14:
    enum:
      - eSIM
      - pSIM

  _InlinedType15:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`sim\`.
        type: list<commons.sim>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>

  _InlinedType18:
    enum:
      - eSIM
      - pSIM

  _InlinedType19:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`sim\`.
        type: list<commons.sim>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "siMs.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /projects/{project}/subscriptions
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    subscriptionsCancel:
      path: /{id}/cancel
      method: POST
      docs: >-
        Retrieves the details of an existing subscription and schedules
        termination of the plan at the end of the next renewal date. You need
        only supply the unique subscription identifier that was returned upon
        purchasing a plan.
      display-name: Cancel an active subscription
      path-parameters:
        id:
          docs: The unique identifier for the subscription.
          type: string
      response: commons.subscription

    subscriptionsRetrieve:
      path: /{id}
      method: GET
      docs: >-
        Retrieves the details of an existing subscription. You need only supply
        the unique subscription identifier that was returned upon purchasing a
        plan.
      display-name: Retrieve a subscription
      path-parameters:
        id:
          docs: The unique identifier for the subscription.
          type: string
      response: commons.subscription

    subscriptionsEnd:
      path: /{id}
      method: DELETE
      docs: >-
        Ends an active plan subscription immediately. You only need to supply
        the unique subscription identifier that was returned upon purchasing a
        plan.
      display-name: End an active subscription
      path-parameters:
        id:
          docs: The unique identifier for the subscription.
          type: string
      response: commons.subscription

    subscriptionsResume:
      path: /{id}/resume
      method: POST
      docs: >-
        Removes the cancellation and end times of the subscription. The
        subscription will continue to auto-renew until canceled again.
      display-name: Resume a canceled subscription
      path-parameters:
        id:
          docs: The unique identifier for the subscription.
          type: string
      response: commons.subscription

    subscriptionsList:
      path: ""
      method: GET
      docs: >-
        Returns a list of subscriptions. The subscriptions returned are sorted
        by creation date, with the most recently created subscriptions appearing
        first.
      display-name: List all subscriptions
      request:
        query-parameters:
          user:
            docs: The unique identifier for the user to be filtered by.
            type: optional<string>
          plan:
            docs: The unique identifier for the plan to be filtered by.
            type: optional<string>
          sim:
            docs: The unique identifier for the sim to be filtered by.
            type: optional<string>
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType21

    subscriptionsCreate:
      path: ""
      method: POST
      docs: >-
        Creates a new subscription for an existing user in the specified
        project.
      display-name: Create a subscription
      request:
        body:
          properties:
            plan:
              docs: >-
                The unique identifier for the existing
                [plan](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzA-retrieve-a-plan)
                to be used for the subscription.
              type: string
            sim:
              docs: >-
                The unique identifier for the existing
                [SIM](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzQ-retrieve-a-sim)
                to be used for the subscription. In combination with an eSIM
                plan, it can be omitted to request a new eSIM.
              type: optional<string>
            userAddress:
              docs: >-
                The unique identifier for the existing [user
                address](https://developers.gigs.com/docs/api/b3A6MzMwODcxNDk-retrieve-a-user-address)
                to be used for the subscription. Only needed if the plan
                requires an address.
              type: optional<string>
            user:
              docs: >-
                The unique identifier for the existing
                [user](https://developers.gigs.com/docs/api/b3A6MzMwODcxNDM-retrieve-a-user)
                to which the subscription will be assigned.
              type: string
            porting:
              docs: >
                The unique identifier for the existing draft
                [porting](https://developers.gigs.com/docs/api/bea041f643438-retrieve-a-porting)
                to be used for the subscription.
                <!-- theme: info -->
                > #### Preview
                >
                > This property is currently in preview and might change in the
                future.
                > We’re excited to hear your feedback and ideas. Please send an
                email
                > to [support@gigs.com](mailto:support@gigs.com) to share your
                thoughts.
              type: optional<string>

types:
  _InlinedType21:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`subscription\`.
        type: list<commons.subscription>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "subscriptions.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: true
  base-path: /projects/{project}/subscriptions/{id}/usage
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string

    id:
      docs: The unique identifier for the subscription.
      type: string
  endpoints:
    subscriptionUsageRecordList:
      path: ""
      method: GET
      docs: >-
        Lists usage records in ascending order for a subscription, defaulting to
        \`daily\` aggregation for the latest subscription period.
      display-name: List subscription usage records
      request:
        query-parameters:
          period:
            docs: >-
              Limits the usage data returned to the subscription period
              provided. This option is incompatible with the \`start\` and \`end\`
              parameters.
            type: optional<integer>
          start:
            docs: >-
              Limits the usage data to dates greater than or equal to the
              provided date. Can only be used in combination with \`end\`.
            type: optional<string>
          end:
            docs: >-
              Limits the usage data to dates up to and including the provided
              date. Can only be used in combination with \`start\`.
            type: optional<string>
          aggregation:
            docs: >-
              Determines the aggregation method used, defaulting to \`daily\`.
              \`period\` provides a single aggregated value for the time range or
              period requested.
            type: optional<_InlinedType22>
      response: _InlinedType24

types:
  usageRecord:
    properties:
      object:
        docs: Type of object is always \`usageRecord\`.
        type: string
      start:
        docs: >-
          Timestamp representing the inclusive lower bound of the aggregation
          period (e.g. the start of a 24 hour period, subscription period or
          user-defined set of dates)
        type: string
      end:
        docs: >-
          Timestamp representing the exclusive upper bound of the aggregation
          period (e.g. the end of a 24 hour period, subscription period or
          user-defined set of dates).
        type: string
      data:
        docs: Amount of data used in bytes.
        type: integer
      voice:
        docs: Amount of voice usage in seconds.
        type: integer
      sms:
        docs: Amount of SMS sent and received.
        type: integer

  _InlinedType23:
    enum:
      - daily
      - period

  _InlinedType24:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`usageRecord\`.
        type: list<usageRecord>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "usage.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /projects/{project}/users/{user}/addresses
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string

    user:
      docs: The unique identifier for the user.
      type: string
  endpoints:
    userAddressesList:
      path: ""
      method: GET
      docs: >-
        Returns a list of addresses owned by the given user. The addresses
        returned are sorted by creation date, with the most recently created
        addresses appearing first.
      display-name: List all user addresses
      response: _InlinedType25

    userAddressesCreate:
      path: ""
      method: POST
      docs: Create a new address for the given user with the given parameters.
      display-name: Create a user address
      request:
        body:
          properties:
            object:
              docs: Type of object is always \`userAddress\`.
              type: optional<string>
            line1:
              docs: >-
                The first line of the given street address, e.g. street and
                house number.
              type: string
            line2:
              docs: >-
                The second line of the given street address, e.g. Apartment
                number.
              type: optional<string>
            city:
              docs: The city/municipality of the given street address.
              type: string
            state:
              docs: >-
                The state/province/region of the given street address. Required
                for US/CA addresses to be a valid ISO 3166-2 2 letter code.
              type: optional<string>
            postalCode:
              docs: >-
                The postal code of the given street address. Required for
                countries with postal codes.
              type: optional<string>
            country:
              docs: The ISO 3166-1 alpha-2 country code for the given address.
              type: string

    userAddressesRetrieve:
      path: /{id}
      method: GET
      docs: Retrieves the details of an existing address for a given user.
      display-name: Retrieve a user address
      path-parameters:
        id:
          docs: The unique identifier for the address.
          type: string
      response: commons.userAddress

    userAddressesDelete:
      path: /{id}
      method: DELETE
      docs: Retrieves the details of an existing user address and deletes it.
      display-name: Delete a user address
      path-parameters:
        id:
          docs: The unique identifier for the address.
          type: string
      response: commons.userAddress

types:
  _InlinedType25:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`userAddress\`.
        type: list<commons.userAddress>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "userAddresses.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /projects/{project}/users
  path-parameters:
    project:
      docs: >-
        The unique identifier for the
        [project](https://developers.gigs.com/docs/api/b3A6MzMwODcxMzI-retrieve-a-project).
      type: string
  endpoints:
    usersRetrieve:
      path: /{id}
      method: GET
      docs: >-
        Retrieves the details of an existing user. You need only supply the
        unique user identifier that was returned upon user creation.
      display-name: Retrieve a user
      path-parameters:
        id:
          docs: The unique identifier for the user.
          type: string
      response: commons.user

    usersDelete:
      path: /{id}
      method: DELETE
      docs: Retrieves the details of an existing user and deletes it.
      display-name: Delete a user
      path-parameters:
        id:
          docs: The unique identifier for the user.
          type: string
      response: commons.user

    usersUpdate:
      path: /{id}
      method: PATCH
      docs: >-
        Updates the specified user by setting the values of the parameters
        passed.
      display-name: Update a user
      path-parameters:
        id:
          docs: The unique identifier for the user.
          type: string
      request:
        body:
          properties:
            object:
              docs: Type of object is always \`user\`.
              type: optional<string>
            birthday:
              docs: The birthday of the user.
              type: optional<string>
            email:
              docs: The primary verified email address of the user.
              type: optional<string>
            fullName:
              docs: The user's full name. Required for some Plans.
              type: optional<string>
            preferredLocale:
              docs: >-
                The user's locale preference represented as an [IETF language
                tag](https://en.wikipedia.org/wiki/IETF_language_tag).
              type: optional<string>
      response: commons.user

    usersSearch:
      path: /search
      method: POST
      docs: Searches for existing users matching the given parameters.
      display-name: Search for users
      request:
        body:
          properties:
            email:
              docs: The primary email address of the user.
              type: string
      response: _InlinedType26

    usersList:
      path: ""
      method: GET
      docs: >-
        Returns a list of users. The users returned are sorted by creation date,
        with the most recently created users appearing first.
      display-name: List all users
      request:
        query-parameters:
          after:
            docs: >-
              A cursor for use in pagination. The \`after\` parameter takes an
              object ID that defines the position in the list, only items
              immediately following the item with that ID will be returned.
            type: optional<string>
          before:
            docs: >-
              A cursor for use in pagination. The \`before\` parameter takes an
              object ID that defines the position in the list, only items
              immediately preceding the item with that ID will be returned.
            type: optional<string>
          limit:
            docs: The limit of items to be returned in the list, between 0 and 200.
            type: optional<integer>
      response: _InlinedType27

    usersCreate:
      path: ""
      method: POST
      docs: Creates a new user with the given parameters.
      display-name: Create a user
      request:
        body:
          properties:
            object:
              docs: Type of object is always \`user\`.
              type: optional<string>
            birthday:
              docs: The birthday of the user.
              type: optional<string>
            email:
              docs: The primary verified email address of the user.
              type: string
            fullName:
              docs: >-
                The user's full name. Some plans require the user name to be
                present when creating a subscription. Check the plan
                requirements for that.
              type: optional<string>
            preferredLocale:
              docs: >-
                The user's locale preference represented as an [IETF language
                tag](https://en.wikipedia.org/wiki/IETF_language_tag). It
                defaults to the project's preferred locale.
              type: optional<string>

types:
  _InlinedType26:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`user\`.
        type: list<commons.user>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>

  _InlinedType27:
    properties:
      object:
        docs: Type of object is always \`list\`.
        type: string
      items:
        docs: List of objects of type \`user\`.
        type: list<commons.user>
      moreItemsAfter:
        docs: >-
          A unique identifier to be used as \`after\` pagination parameter if more
          items are available sorted after the current batch of items.
        type: optional<string>
      moreItemsBefore:
        docs: >-
          A unique identifier to be used as \`before\` pagination parameter if
          more items are available sorted before the current batch of items.
        type: optional<string>
",
                "name": "users.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init no existing fern directory 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": "name: api
error-discrimination:
  strategy: status-code
",
            "name": "api.yml",
            "type": "file",
          },
          {
            "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  MovieId: string

  Movie:
    properties:
      id: MovieId
      title: string
      rating:
        type: double
        docs: The rating scale is one to five stars

  CreateMovieRequest:
    properties:
      title: string
      rating: double

service:
  auth: false
  base-path: /movies
  endpoints:
    # Here's an HTTP endpoint

    createMovie:
      docs: Add a movie to the database
      method: POST
      path: /create-movie
      request: CreateMovieRequest
      response: MovieId

    getMovie:
      method: GET
      path: /{movieId}
      path-parameters:
        movieId: MovieId
      response: Movie
      errors:
        - MovieDoesNotExistError

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
            "name": "imdb.yml",
            "type": "file",
          },
        ],
        "name": "definition",
        "type": "directory",
      },
      {
        "contents": "default-group: external
groups: {}
",
        "name": "generators.yml",
        "type": "file",
      },
    ],
    "name": "api",
    "type": "directory",
  },
  {
    "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
    "name": "fern.config.json",
    "type": "file",
  },
]
`;

exports[`fern init telematica openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  SOC_ResponseDTO:
    properties:
      soc: double

  Range_ResponseDTO:
    properties:
      range: double

  RangeSoc_ResponseDTO:
    properties:
      range: double
      soc: double

  Location_ResponseDTO:
    properties:
      location: _InlinedType0

  _InlinedType0:
    extends:
      - ILocation

  ILocation:
    properties: {}

  ChargingStatus_ResponseDTO:
    properties:
      isCharging: boolean

  Odo_ResponseDTO:
    properties:
      odo:
        docs: The current odometer reading in kilometers
        type: double

  StaticAttributes_ResponseDTO:
    properties:
      vin: string
      model: string
      year: double
      make: string
      registration: string
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

service:
  auth: true
  base-path: /callback
  endpoints:
    appControllerCallback:
      path: ""
      method: POST
      docs: >-
        This is a dummy callback endpoint.
        Please share the POST callback endpoint created in your app's backend
        with Telematica to get callback requests of this format.
      display-name: Dummy callback endpoint
      request:
        body:
          properties:
            user: optional<string>
            vehicles: optional<list<Callback_DTO>>

types:
  Callback_DTO:
    properties:
      registration: string
      id: string
",
                "name": "sampleCallback.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /vehicle-data
  endpoints:
    getSocTest:
      path: /soc/test
      method: GET
      display-name: Test SOC (battery level)
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.SOC_ResponseDTO

    getRangeTest:
      path: /range/test
      method: GET
      display-name: Test range
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.Range_ResponseDTO

    getRangeSocTest:
      path: /range-soc/test
      method: GET
      display-name: Test range-soc
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.RangeSoc_ResponseDTO

    getLocationTest:
      path: /location/test
      method: GET
      display-name: Test location
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.Location_ResponseDTO

    getChargingStatusTest:
      path: /charging-status/test
      method: GET
      display-name: Test charging status
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.ChargingStatus_ResponseDTO

    getOdoTest:
      path: /odo/test
      method: GET
      display-name: Test odo
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.Odo_ResponseDTO

    getStaticAttributesTest:
      path: /static-attributes/test
      method: GET
      display-name: Test static attributes
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.StaticAttributes_ResponseDTO
",
                "name": "testingEndpoints.yml",
                "type": "file",
              },
              {
                "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: /vehicle-data
  endpoints:
    getSoc:
      path: /soc
      method: GET
      display-name: SOC (battery level)
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.SOC_ResponseDTO

    getRange:
      path: /range
      method: GET
      display-name: Range
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.Range_ResponseDTO

    getRangeSoc:
      path: /range-soc
      method: GET
      docs: This endpoint returns the SOC and range for the vehicle in a single call
      display-name: Range-SOC
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.RangeSoc_ResponseDTO

    getLocation:
      path: /location
      method: GET
      display-name: Location
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.Location_ResponseDTO

    getChargingStatus:
      path: /charging-status
      method: GET
      display-name: Charging Status
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.ChargingStatus_ResponseDTO

    getOdo:
      path: /odo
      method: GET
      display-name: Odometer
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.Odo_ResponseDTO

    getStaticAttributes:
      path: /static-attributes
      method: GET
      docs: >-
        Static vehicle attributes like VIN, registration number, model, year and
        make
      display-name: Static attributes
      request:
        query-parameters:
          vehicleId:
            docs: >-
              24-char hex identifier for the vehicle. The owner must have
              provided consent through Telematica consent flow
            type: string
      response: commons.StaticAttributes_ResponseDTO
",
                "name": "vehicleData.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

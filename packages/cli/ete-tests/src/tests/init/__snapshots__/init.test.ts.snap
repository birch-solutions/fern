// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fern init covie openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "services:
  http:
    AccountService:
      auth: true
      base-path: ''
      endpoints:
        enableAccountMfaRequired:
          path: /accounts/{account_id}/mfa_requirements
          method: POST
          docs: Require all account users to have an MFA application configured
          display-name: Enable Account MFA Requirement
          response: AccountWithConfig
        disableAccountMfaRequired:
          path: /accounts/{account_id}/mfa_requirements
          method: DELETE
          docs: >-
            Remove requirement for all account users to have an MFA application
            configured
          display-name: Disable Account MFA Requirement
types:
  AccountWithConfig:
    properties: {}
",
                "name": "account.yml",
                "type": "file",
              },
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    ApplicationService:
      auth: true
      base-path: ''
      endpoints:
        getApplicationLinks:
          path: /applications/{application_id}/links
          method: GET
          docs: Lists an application's links.
          display-name: List Application Links
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              provider:
                docs: Partial name of a provider to search against
                type: optional<string>
              created_since:
                docs: Limit results to links created on or after this date.
                type: optional<string>
              created_until:
                docs: Limit results to links created on or before this date.
                type: optional<string>
              updated_since:
                docs: Limit results to links last updated on or since this date.
                type: optional<string>
              updated_until:
                docs: Limit results to links last updated on or before this date.
                type: optional<string>
              synced_since:
                docs: Limit results to links last synced on or after this date.
                type: optional<string>
              synced_until:
                docs: Limit results to links last synced on or before this date.
                type: optional<string>
              q:
                docs: Search for link via ID
                type: optional<string>
              status:
                docs: >-
                  Filter link status; separate multiple statuses (OR'd) with
                  commas
                type: optional<string>
              has_metadata:
                docs: Filter whether a link has metadata attached
                type: optional<boolean>
              policy_type:
                docs: The type of policy linked.
                type: optional<string>
              integration_ids:
                docs: >-
                  If provided, only show items with any of the specified
                  integration IDs, comma-separated.
                type: optional<string>
          response: commons.Links
        getApplicationPolicies:
          path: /applications/{application_id}/policies
          method: GET
          docs: Lists an application's policies.
          display-name: List Application Policies
          request:
            query-parameters:
              integration_ids:
                docs: >-
                  If provided, only show items with any of the specified
                  integration IDs, comma-separated.
                type: optional<string>
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
          response: commons.Policies
",
                "name": "application.yml",
                "type": "file",
              },
              {
                "contents": "types:
  Carrier:
    docs: >-
      A basic object describing the individual insurance company which has
      issued a policy.
    properties:
      name: optional<string>
  PeriodValue:
    docs: >-
      Describes a value that represents a period of time, such as days, weeks,
      or months.
    properties:
      unit: optional<string>
      value: optional<integer>
  Events:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType25>
  _InlinedType25:
    properties:
      events: optional<list<Event>>
  Integration:
    docs: >-
      Represents a connection between a client application and Covie's systems
      allowing a client users to create and process links.
    properties:
      id: optional<string>
      key: optional<string>
      name: optional<string>
      status: optional<string>
      created_at: optional<string>
      updated_at: optional<string>
      configuration: optional<_InlinedType30>
  _InlinedType26:
    properties:
      primary: optional<string>
  _InlinedType27:
    docs: Branding configuration for the embed.
    properties:
      logo: optional<string>
      hide_logo: optional<boolean>
      colors: optional<_InlinedType26>
  _InlinedType28:
    properties:
      agency_logo: optional<string>
      agency_photo: optional<string>
  _InlinedType29:
    properties:
      agency_name: optional<string>
      agent_name: optional<string>
      agent_email: optional<string>
      image_urls: optional<_InlinedType28>
  _InlinedType30:
    properties:
      brand: optional<_InlinedType27>
      display_name: optional<string>
      use_name_as_display_name: optional<boolean>
      hosted: optional<_InlinedType29>
  Policies:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType31>
  _InlinedType31:
    properties:
      policies: optional<list<Policy>>
  Link_2:
    docs: >-
      Represents the individual connections between Covie and a Policyholder's
      account with a carrier and wraps the policies retrieved from it that have
      been made available to the consumer.
    properties:
      id: optional<string>
      object: optional<string>
      integration_id: optional<string>
      policy_count: optional<integer>
      status: optional<string>
      is_tracked: optional<boolean>
      tracking_frequency: optional<_InlinedType32>
      updated_at: optional<string>
      created_at: optional<string>
      _links: optional<_InlinedType36>
  _InlinedType32:
    docs: >-
      The frequency of which tracking should be performed. This value is \`never\`
      when tracking is disabled.
    enum:
      - daily
      - weekly
      - monthly
      - never
      - on_demand
  _InlinedType33:
    docs: Link to retrieve the link's details.
    properties:
      href: optional<string>
  _InlinedType34:
    docs: Link to the carrier's logo.
    properties:
      href: optional<string>
  _InlinedType35:
    properties:
      href: optional<string>
      content_type: optional<string>
  _InlinedType36:
    properties:
      self: optional<_InlinedType33>
      carrier_logo: optional<_InlinedType34>
      uploaded_documents: optional<list<_InlinedType35>>
  Links:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType37>
  _InlinedType37:
    properties:
      links: optional<list<Link_2>>
  Webhook:
    docs: Represents a webhook in the Covie system.
    properties:
      id: optional<string>
      uri: optional<string>
      is_enabled: optional<boolean>
      event_types: optional<list<string>>
      last_response_body: optional<string>
      last_response_code: optional<string>
      last_called_at: optional<string>
      created_at: optional<string>
      updated_at: optional<string>
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "services:
  http:
    EventService:
      auth: true
      base-path: ''
      endpoints:
        postEventsEventIdBroadcasts:
          path: /events/{event_id}/broadcasts
          method: POST
          docs: Rebroadcast an event.
          display-name: Rebroadcast Event
          response: _InlinedType24
types:
  _InlinedType23:
    properties:
      broadcasts: optional<list<commons.EventBroadcast>>
  _InlinedType24:
    properties:
      count: optional<integer>
      _embedded: optional<_InlinedType23>
",
                "name": "event.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    IntegrationService:
      auth: true
      base-path: ''
      endpoints:
        listIntegrations:
          path: /integrations
          method: GET
          docs: List integrations associated to an application
          display-name: List Integrations
          request:
            query-parameters:
              q:
                docs: >-
                  Partial integration name, ID, or integration key to search
                  against, with or without leading in_/ik_
                type: optional<string>
              status:
                docs: Filter active or archived integrations
                type: optional<string>
          response: Integrations
        createIntegration:
          path: /integrations
          method: POST
          docs: Creates a new integration.
          display-name: Create Integration
          request:
            body:
              properties:
                name: string
                policyRequirements: optional<_InlinedType10>
                configuration: optional<_InlinedType13>
        getIntegration:
          path: /integrations/{integration_id}
          method: GET
          docs: Retrieve the details of an integration.
          display-name: Get Integration
          response: commons.Integration_2
        deleteIntegration:
          path: /integrations/{integration_id}
          method: DELETE
          docs: Deletes an integration.
          display-name: Delete Integration
        updateIntegration:
          path: /integrations/{integration_id}
          method: PATCH
          docs: Edit the name and archived status of an integration.
          display-name: Update Integration
          request:
            body:
              properties:
                name: optional<string>
                status: optional<string>
                configuration: optional<_InlinedType16>
                policy_requirements: optional<_InlinedType17>
          response: commons.Integration_2
        getIntegrationPolicies:
          path: /integrations/{integration_id}/policies
          method: GET
          docs: List all policies that have been linked to an integration.
          display-name: List Integration Policies
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
          response: commons.Policies
        getIntegrationProviders:
          path: /integrations/{integration_id}/providers
          method: GET
          docs: >-
            Retrieve a list of supported carriers for a given integration, along
            with their identifiers.
          display-name: Supported Providers List
          request:
            query-parameters:
              required_policy_types:
                docs: >-
                  A pipe delineated list of policy types desired. Providers who
                  do not support at least one required policy type will be
                  excluded. 
                type: optional<string>
          response: Providers
        regenerateIntegrationKey:
          path: /integrations/{integration_id}/regenerate_key
          method: POST
          docs: >-
            Replaces the existing integration key with a new randomly generated
            key.
          display-name: Regenerate Integration Key
          response: commons.Integration_2
        getIntegrationsIntegrationIdAgencyLogo:
          path: /integrations/{integration_id}/agency_logo
          method: GET
          docs: View the agency logo for the hosted integration.
          display-name: View Agency Logo
        putIntegrationsIntegrationIdAgencyLogo:
          path: /integrations/{integration_id}/agency_logo
          method: PUT
          docs: Upload the agency logo for the hosted integration.
          display-name: Update Agency Logo
          response: _InlinedType18
        deleteIntegrationsIntegrationIdAgencyLogo:
          path: /integrations/{integration_id}/agency_logo
          method: DELETE
          docs: Delete the agency logo and/or config if present.
          display-name: Delete Agency Logo
        getIntegrationsIntegrationIdAgentPhoto:
          path: /integrations/{integration_id}/agent_photo
          method: GET
          docs: View the agent photo for the hosted integration.
          display-name: View Agent Photo
        putIntegrationsIntegrationIdAgentPhoto:
          path: /integrations/{integration_id}/agent_photo
          method: PUT
          docs: Upload an agent photo for the hosted integration.
          display-name: Update Agent Photo
          response: _InlinedType19
        deleteIntegrationsIntegrationIdAgentPhoto:
          path: /integrations/{integration_id}/agent_photo
          method: DELETE
          docs: Delete the agent photo and/or config if present.
          display-name: Delete Agent Photo
        getIntegrationsIntegrationIdBrandLogo:
          path: /integrations/{integration_id}/brand_logo
          method: GET
          docs: View the brand logo for the integration.
          display-name: View Brand Logo
        putIntegrationsIntegrationIdBrandLogo:
          path: /integrations/{integration_id}/brand_logo
          method: PUT
          docs: Upload the brand logo for the hosted integration.
          display-name: Update Brand Logo
          response: _InlinedType20
        deleteIntegrationsIntegrationIdBrandLogo:
          path: /integrations/{integration_id}/brand_logo
          method: DELETE
          docs: Delete the brand logo and/or config if present.
          display-name: Delete Brand Logo
types:
  Integrations:
    properties:
      count: optional<integer>
      _links: optional<_InlinedType5>
      _embedded: optional<_InlinedType6>
  _InlinedType4:
    properties:
      href: optional<string>
  _InlinedType5:
    properties:
      self: optional<_InlinedType4>
  _InlinedType6:
    properties:
      integrations: optional<list<commons.Integration>>
  Providers:
    properties:
      count: optional<integer>
      _links: optional<_InlinedType8>
      _embedded: optional<_InlinedType9>
  _InlinedType7:
    properties:
      href: optional<string>
  _InlinedType8:
    properties:
      self: optional<_InlinedType7>
  _InlinedType9:
    properties:
      providers: optional<list<commons.Provider>>
  _InlinedType10:
    properties:
      effective_date: optional<string>
      allow_inactive: optional<boolean>
  _InlinedType11:
    properties:
      primary: optional<string>
  _InlinedType12:
    docs: Branding configuration for the embed.
    properties:
      logo: optional<string>
      hide_logo: optional<boolean>
      colors: optional<_InlinedType11>
  _InlinedType13:
    properties:
      brand: optional<_InlinedType12>
      display_name: optional<string>
      use_name_as_display_name: optional<boolean>
  _InlinedType14:
    properties:
      primary: optional<string>
  _InlinedType15:
    docs: Branding configuration for the embed.
    properties:
      logo: optional<string>
      hide_logo: optional<boolean>
      colors: optional<_InlinedType14>
  _InlinedType16:
    properties:
      brand: optional<_InlinedType15>
      display_name: optional<string>
      use_name_as_display_name: optional<boolean>
  _InlinedType17:
    properties:
      allow_inactive: optional<boolean>
      effective_date: optional<string>
  _InlinedType18:
    properties:
      href: optional<string>
  _InlinedType19:
    properties:
      href: optional<string>
  _InlinedType20:
    properties:
      href: optional<string>
",
                "name": "integration.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    LinkService:
      auth: true
      base-path: ''
      endpoints:
        getLink:
          path: /links/{id}
          method: GET
          docs: Retrieves a Link
          display-name: Retrieve link
          response: commons.Link
        deleteLink:
          path: /links/{id}
          method: DELETE
          docs: Deletes a link.
          display-name: Delete Link
        updateLinkSettings:
          path: /links/{id}
          method: PATCH
          display-name: Update Link Settings
          request:
            body:
              properties:
                tracking_frequency: optional<string>
          response: commons.Link
        getLinkPolicies:
          path: /links/{id}/policies
          method: GET
          docs: Retrieves a list of policies associated with the requested link
          display-name: List Link Policies
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
          response: commons.Policies
        getLinkEvents:
          path: /links/{id}/events
          method: GET
          docs: Retrieves a list of events triggered for the requested link
          display-name: List Link Events
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: commons.Events
        attachLinkDocument:
          path: /links/{id}/documents
          method: POST
          docs: >-
            Attach a policy document to a Link. If the document can be parsed,
            select the parsed policy for sharing.
          display-name: Upload Document To Link
        syncLinkManually:
          path: /links/{id}/syncs
          method: POST
          docs: >-
            Sync a tracked link with the provider using the stored user
            credentials
          display-name: Manually Sync Link
        getIntegrationLinks:
          path: /integrations/{integration_id}/links
          method: GET
          docs: Retrieves a list of links associated to the requested integration
          display-name: List Integration Links
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              provider:
                docs: Partial name of a provider to search against
                type: optional<string>
              created_since:
                docs: Limit results to links created on or after this date.
                type: optional<string>
              created_until:
                docs: Limit results to links created on or before this date.
                type: optional<string>
              updated_since:
                docs: Limit results to links last updated on or since this date.
                type: optional<string>
              updated_until:
                docs: Limit results to links last updated on or before this date.
                type: optional<string>
              synced_since:
                docs: Limit results to links last synced on or after this date.
                type: optional<string>
              synced_until:
                docs: Limit results to links last synced on or before this date.
                type: optional<string>
              q:
                docs: Search for link via ID
                type: optional<string>
              status:
                docs: >-
                  Filter link status; separate multiple statuses (OR'd) with
                  commas
                type: optional<string>
              has_metadata:
                docs: Filter whether a link has metadata attached
                type: optional<boolean>
              policy_type:
                docs: The type of policy linked.
                type: optional<string>
          response: commons.Links
        initializeLinkViaIntegration:
          path: /integrations/{integration_id}/links
          method: POST
          docs: >-
            Creates a link and optionally sets metadata and selects a carrier,
            allowing for seeding initial data before an insured continues the
            linking process via the embed
          display-name: Initialize link
          request:
            body:
              properties:
                provider_id: optional<string>
          response: commons.Link
        getIntegrationLinksWithPolicies:
          path: /integrations/{integration_id}/links_with_policies
          method: GET
          docs: >-
            Retrieves a list of links and selected policies associated to the
            requested integration
          display-name: List Integration Links With Policies
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              provider:
                docs: Partial name of a provider to search against
                type: optional<string>
              created_since:
                docs: Limit results to links created on or after this date.
                type: optional<string>
              created_until:
                docs: Limit results to links created on or before this date.
                type: optional<string>
              updated_since:
                docs: Limit results to links last updated on or since this date.
                type: optional<string>
              updated_until:
                docs: Limit results to links last updated on or before this date.
                type: optional<string>
              synced_since:
                docs: Limit results to links last synced on or after this date.
                type: optional<string>
              synced_until:
                docs: Limit results to links last synced on or before this date.
                type: optional<string>
              policy_type:
                docs: The type of policy linked.
                type: optional<string>
              policy_filter_type:
                docs: >-
                  Show only these types of policies within each link. Does not
                  affect which links are shown. Comma-separate to allow multiple
                  policy types.
                type: optional<string>
          response: LinksWithPolicies
types:
  LinksWithPolicies:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType21>
  _InlinedType21:
    properties:
      links: optional<list<commons.LinkWithPolicies>>
",
                "name": "link.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    PolicyService:
      auth: true
      base-path: ''
      endpoints:
        getPoliciesPolicyId:
          path: /policies/{policy_id}
          method: GET
          docs: Retrieve a Policy object that was previously connected via a Link
          display-name: Retrieve Policy
          response: Policy_2
        getPolicyDocument:
          path: /policies/{policy_id}/documents/{document_type}
          method: GET
          docs: Retrieve the contents of a Policy document
          display-name: Retrieve Policy Document
          response: FileContents
        listPolicyEvents:
          path: /policies/{policy_id}/events
          method: GET
          docs: List all events that have been triggered for the selected policy
          display-name: List Policy Events
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: commons.Events
types:
  Policy:
    docs: >-
      This describes, in high level, the insurance policy record that is
      provided by a link. This object encapsulates all the necessary details to
      understand the policy's status, policyholders, and covered persons or
      properties. 
    properties:
      id: optional<string>
      object: optional<string>
      fingerprint: optional<string>
      carrier: optional<commons.Carrier>
      number: optional<string>
      masked_number: optional<string>
      line: optional<string>
      policyholders: optional<list<commons.Policyholder>>
      vehicles: optional<list<commons.Vehicle>>
      locations: optional<list<commons.Location>>
      status: optional<string>
      term_length: optional<commons.PeriodValue>
      inception_date: optional<string>
      expiration_date: optional<string>
      cancellation_date: optional<string>
      cancellation_reason: optional<_InlinedType0>
      linked_at: optional<string>
      last_synced_at: optional<string>
      _links: optional<_InlinedType2>
      _embedded: optional<_InlinedType3>
      link_id: optional<string>
  _InlinedType0:
    docs: >-
      The determined reason for the cancellation, such as insured_non_payment or
      carrier_non_renew or insured_action. This value is null when cancellation
      is not active or not explicitly indicated by the carrier systems and is
      not guaranteed to be provided in any circumstance.
    enum:
      - carrier_non_renew
      - insured_non_payment
      - insured_requested
      - other
  _InlinedType1:
    docs: A link to the logo for the carrier on the policy.
    properties:
      href: optional<string>
  _InlinedType2:
    docs: >-
      A polymorphic list of externally linked resources related to this policy
      such as documents or logos for carriers.
    properties:
      documents: optional<list<commons.DocumentRef>>
      carrier_logo: optional<_InlinedType1>
  _InlinedType3:
    docs: A container for objects wrapped by the current object.
    properties:
      missing_fields: optional<list<string>>
",
                "name": "policy.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    WebhookService:
      auth: true
      base-path: ''
      endpoints:
        listWebhooks:
          path: /webhooks
          method: GET
          docs: List an application's configured webhooks.
          display-name: List Webhooks
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: Webhooks
        createWebhook:
          path: /webhooks
          method: POST
          docs: Create a new webhook
          display-name: Create Webhook
          request:
            body:
              properties:
                uri: optional<string>
                event_types: optional<list<string>>
        getWebhook:
          path: /webhooks/{webhook_id}
          method: GET
          docs: Get the details of a webhook.
          display-name: Get Webhook
          response: commons.Webhook_2
        updateWebhook:
          path: /webhooks/{webhook_id}
          method: PATCH
          docs: Update a webhook.
          display-name: Update Webhook
          request:
            body:
              properties:
                uri: optional<string>
                is_enabled: optional<boolean>
                event_types: optional<list<string>>
          response: commons.Webhook_2
        listWebhookEvents:
          path: /webhooks/{webhook_id}/events
          method: GET
          docs: List the events that have been triggered for a webhook.
          display-name: List Webhook Events
          request:
            query-parameters:
              limit:
                docs: Number of results to return.
                type: optional<integer>
              offset:
                docs: Specifies the offset of the first result to return.
                type: optional<integer>
              event_type:
                docs: Filter events by type.
                type: optional<string>
          response: commons.Events
types:
  Webhooks:
    properties:
      count: optional<integer>
      filtered_count: optional<integer>
      _embedded: optional<_InlinedType22>
  _InlinedType22:
    properties:
      webhooks: optional<list<commons.Webhook>>
",
                "name": "webhook.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init gigs openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  SIMs: SIMs.yml
types:
  device:
    properties:
      object: string
      id: string
      imei: optional<string>
      model: _InlinedType21
      name: optional<string>
      sims: list<SIMs.sim>
      user: _InlinedType22
      createdAt: string
  _InlinedType21:
    properties:
      object: string
      id: string
      brand: string
      name: string
      simTypes: list<string>
      type: string
  _InlinedType22:
    properties:
      object: string
      id: string
      birthday: optional<string>
      email: string
      emailVerified: boolean
      fullName: optional<string>
      preferredLocale: string
      createdAt: string
  plan:
    properties:
      object: string
      id: string
      coverage: coverage
      data: integer
      dataUnit: string
      description: optional<string>
      image: optional<string>
      name: string
      price: _InlinedType23
      provider: string
      requirements: _InlinedType24
      simTypes: list<string>
      sms: integer
      smsUnit: string
      status: string
      tags: list<string>
      validity: _InlinedType25
      voice: integer
      voiceUnit: string
      createdAt: string
  _InlinedType23:
    properties:
      amount: integer
      currency: string
  _InlinedType24:
    properties:
      address: string
      device: string
      user.birthday: string
      user.fullName: string
  _InlinedType25:
    properties:
      minimumPeriods: integer
      type: string
      unit: string
      value: integer
  coverage:
    properties:
      object: string
      id: string
      countries: list<string>
      name: string
  porting:
    properties:
      object: string
      id: string
      accountNumber: optional<string>
      birthday: optional<string>
      declinedAttempts: integer
      donorProvider: _InlinedType26
      firstName: optional<string>
      lastName: optional<string>
      phoneNumber: string
      provider: string
      recipientProvider: _InlinedType27
      required: list<string>
      status: string
      subscription: optional<string>
      user: string
      canceledAt: optional<string>
      completedAt: optional<string>
      createdAt: string
      lastDeclinedAt: optional<string>
      lastRequestedAt: optional<string>
  _InlinedType26:
    docs: The service provider from whom the number is ported.
    properties:
      object: string
      id: string
      name: string
      recipientProviders: list<string>
  _InlinedType27:
    docs: The service provider to whom the number is ported.
    properties:
      object: string
      id: string
      name: string
      recipientProviders: list<string>
  organization:
    properties:
      object: string
      id: string
      name: string
      createdAt: string
  subscription:
    properties:
      object: string
      id: string
      currentPeriod: _InlinedType28
      phoneNumber: optional<string>
      plan: plan
      porting: optional<string>
      sim: _InlinedType29
      status: string
      user: user
      activatedAt: optional<string>
      canceledAt: optional<string>
      createdAt: string
      endedAt: optional<string>
      firstUsageAt: optional<string>
  _InlinedType28:
    properties:
      number: integer
      start: string
      end: string
  _InlinedType29:
    properties:
      object: string
      id: string
      iccid: string
      provider: string
      status: string
      type: string
      createdAt: string
  user:
    properties:
      object: string
      id: string
      birthday: optional<string>
      email: string
      emailVerified: boolean
      fullName: optional<string>
      preferredLocale: string
      createdAt: string
  userAddress:
    properties:
      object: string
      id: string
      city: string
      country: string
      line1: string
      line2: optional<string>
      postalCode: optional<string>
      state: optional<string>
      user: string
      createdAt: string
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    DevicesService:
      auth: true
      base-path: ''
      endpoints:
        deviceModelsRetrieve:
          path: /deviceModels/{id}
          method: GET
          docs: Retrieves the details of an existing device model.
          display-name: Retrieve a device model
          response: deviceModel
        deviceModelsSearch:
          path: /deviceModels/search
          method: POST
          docs: Searches for existing devices models matching the given parameters.
          display-name: Search for device models
          request:
            body:
              properties:
                imei: string
          response: _InlinedType0
        deviceModelsList:
          path: /deviceModels
          method: GET
          docs: >-
            Returns a list of device models. The models returned are sorted by
            creation date, with the most recently created models appearing
            first.
          display-name: List all device models
          request:
            query-parameters:
              type:
                docs: A comma-separated list of types to be filtered by.
                type: optional<undefined>
              brand:
                docs: A comma-separated list of brands to be filtered by.
                type: optional<undefined>
              simType:
                docs: A comma-separated list of SIM types to be filtered by.
                type: optional<undefined>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType1
        devicesRetrieve:
          path: /projects/{project}/devices/{id}
          method: GET
          docs: >-
            Retrieves the details of an existing device owned by the
            authenticated user.
          display-name: Retrieve a device
          response: commons.device
        devicesDelete:
          path: /projects/{project}/devices/{id}
          method: DELETE
          docs: Retrieves the details of an existing device and deletes it.
          display-name: Delete a device
          response: commons.device
        devicesUpdate:
          path: /projects/{project}/devices/{id}
          method: PATCH
          docs: >
            Updates the given properties of an existing device.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Update a device
          request:
            body:
              properties:
                name: optional<string>
                sims: optional<list<string>>
                user: optional<string>
          response: commons.device
        devicesSearch:
          path: /projects/{project}/devices/search
          method: POST
          docs: >-
            Searches for existing devices matching the given parameters. The
            search will only return factory devices not yet assigned to any
            user, or devices already owned by the current user.
          display-name: Search for devices
          request:
            body:
              properties:
                imei: string
          response: _InlinedType2
        devicesList:
          path: /projects/{project}/devices
          method: GET
          docs: >-
            Returns a list of devices. The devices returned are sorted by
            creation date, with the most recently created devices appearing
            first.
          display-name: List all devices
          request:
            query-parameters:
              sim:
                docs: The unique identifier for the sim to be filtered by.
                type: optional<string>
              user:
                docs: The unique identifier for the user to be filtered by.
                type: optional<string>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType3
        devicesCreate:
          path: /projects/{project}/devices
          method: POST
          docs: Creates a new device with the given parameters.
          display-name: Create a device
          request:
            body:
              properties:
                imei: string
                user: string
                sims: optional<list<string>>
                name: optional<string>
types:
  deviceModel:
    properties:
      object: string
      id: string
      brand: string
      name: string
      simTypes: list<string>
      type: string
  _InlinedType0:
    properties:
      object: string
      items: list<deviceModel>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
  _InlinedType1:
    properties:
      object: string
      items: list<deviceModel>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
  _InlinedType2:
    properties:
      object: string
      items: list<commons.device>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
  _InlinedType3:
    properties:
      object: string
      items: list<commons.device>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "devices.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    PlansService:
      auth: true
      base-path: ''
      endpoints:
        plansArchive:
          path: /projects/{project}/plans/{id}/archive
          method: POST
          docs: >
            Set the status of a plan to archived. An archived plan can not be
            used to create new subscriptions.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Archive a plan
          response: commons.plan
        planDocumentRetrieve:
          path: /projects/{project}/plans/{plan}/documents/{id}
          method: GET
          docs: Retrieves the details of an existing document for a given plan.
          display-name: Retrieve a plan document
          response: planDocument
        planDocumentsList:
          path: /projects/{project}/plans/{plan}/documents
          method: GET
          docs: >-
            Returns a list of documents related to the given plan. The documents
            returned are sorted by creation date, with the most recently created
            documents appearing first.
          display-name: List all plan documents
          response: _InlinedType4
        plansRetrieve:
          path: /projects/{project}/plans/{id}
          method: GET
          docs: Retrieve the details of an existing plan.
          display-name: Retrieve a plan
          response: commons.plan
        plansUpdate:
          path: /projects/{project}/plans/{id}
          method: PATCH
          docs: >-
            Updates the specified plan by setting the values of the parameters
            passed.
          display-name: Update a plan
          request:
            body:
              properties:
                name: optional<string>
                description: optional<string>
                image: optional<string>
          response: commons.plan
        plansPublish:
          path: /projects/{project}/plans/{id}/publish
          method: POST
          docs: >
            Set the status of a plan to available. Available plans can be used
            to create new subscriptions.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Publish a plan
          response: commons.plan
        plansList:
          path: /projects/{project}/plans
          method: GET
          docs: Returns a list of plans.
          display-name: List all plans
          request:
            query-parameters:
              provider:
                docs: The network provider ID to filter the plans by.
                type: optional<undefined>
              simType:
                docs: The type of SIM card to filter the plans by.
                type: optional<undefined>
              status:
                docs: >-
                  The status to filter the plans by. Only available plans are
                  returned by default.
                type: optional<undefined>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType5
types:
  planDocument:
    properties:
      object: string
      id: string
      name: string
      plan: string
      type: string
      url: string
      createdAt: string
  _InlinedType4:
    properties:
      object: string
      items: list<planDocument>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
  _InlinedType5:
    properties:
      object: string
      items: list<commons.plan>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "plans.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    PortingsService:
      auth: true
      base-path: ''
      endpoints:
        portingCancel:
          path: /projects/{project}/portings/{id}/cancel
          method: POST
          docs: >
            Retrieves the details of an existing porting and cancels it. Only
            portings that have not yet being completed can be canceled.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Cancel a porting
          response: commons.porting
        portingRetrieve:
          path: /projects/{project}/portings/{id}
          method: GET
          docs: >
            Retrieves the details of an existing porting.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Retrieve a Porting
          response: commons.porting
        portingUpdate:
          path: /projects/{project}/portings/{id}
          method: PATCH
          docs: >
            Updates the specified porting by setting the values of the
            parameters passed.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Update a porting
          request:
            body:
              properties:
                accountNumber: optional<string>
                accountPin: optional<string>
                birthday: optional<string>
                donorProvider: optional<string>
                firstName: optional<string>
                lastName: optional<string>
                phoneNumber: optional<string>
                provider: optional<string>
          response: commons.porting
        portingsList:
          path: /projects/{project}/portings
          method: GET
          docs: >
            Returns a list of portings. The portings returned are sorted by
            creation date, with the most recently created portings appearing
            first.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: List all portings
          request:
            query-parameters:
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType6
        portingsCreate:
          path: /projects/{project}/portings
          method: POST
          docs: >
            Creates a new porting with the parameters passed. The porting will
            be created in \`draft\` status and can be later used to create an
            order or subscription for the given network provider.


            Only some of the fields are required during creation creation, but
            all of the ones required by the network provider must be set before
            submitting the porting.



            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Create a porting
          request:
            body:
              properties:
                accountNumber: optional<string>
                accountPin: optional<string>
                birthday: optional<string>
                donorProvider: optional<string>
                firstName: optional<string>
                lastName: optional<string>
                phoneNumber: string
                provider: string
                user: string
        serviceProviderRetrieve:
          path: /serviceProviders/{id}
          method: GET
          docs: >
            Retrieves the details of a service provider.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Retrieve a service provider
          response: serviceProvider
        serviceProvidersList:
          path: /serviceProviders
          method: GET
          docs: >
            Returns a list of service providers.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: List all service providers
          request:
            query-parameters:
              recipientProvider:
                docs: >-
                  Only return service providers that have the given network
                  provider as supported porting recipient.
                type: optional<string>
          response: _InlinedType7
types:
  serviceProvider:
    properties:
      object: string
      id: string
      name: string
      recipientProviders: list<string>
  _InlinedType6:
    properties:
      object: string
      items: list<commons.porting>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
  _InlinedType7:
    properties:
      object: string
      items: list<serviceProvider>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "portings.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    ProjectsService:
      auth: true
      base-path: ''
      endpoints:
        projectsRetrieve:
          path: /projects/{project}
          method: GET
          docs: >-
            Retrieves the details of an existing project accessible by the API
            client.
          display-name: Retrieve a project
          response: project
        projectsCredentialsRetrieve:
          path: /projects/{project}/credentials
          method: GET
          docs: >
            Retrieve the credentials of an existing project.


            <!-- theme: info -->

            > #### Preview

            >

            > This endpoint is currently in preview and might change in the
            future.

            > We’re excited to hear your feedback and ideas. Please send an
            email

            > to [support@gigs.com](mailto:support@gigs.com) to share your
            thoughts.
          display-name: Retrieve the project credentials
          response: _InlinedType12
        projectsList:
          path: /projects
          method: GET
          docs: >-
            Returns a list of projects. The projects returned are sorted by
            creation date, with the most recently created projects appearing
            first.
          display-name: List all projects
          request:
            query-parameters:
              organization:
                docs: The unique identifier for the organization to be filtered by.
                type: optional<string>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType13
types:
  project:
    properties:
      object: string
      id: string
      domain: optional<string>
      image: optional<string>
      images: _InlinedType8
      legal: _InlinedType9
      locales: list<string>
      name: string
      organization: commons.organization
      payments: _InlinedType10
      subscriptionOwner: string
      support: _InlinedType11
      createdAt: string
  _InlinedType8:
    docs: >-
      Deprecated object of project images. Please use the image property
      instead.
    properties:
      favicon: optional<string>
      icon: optional<string>
      logoHorizontal: optional<string>
  _InlinedType9:
    docs: The legal address for the company that manages the project.
    properties:
      name: string
      city: string
      country: string
      line1: string
      line2: optional<string>
      postalCode: string
      state: optional<string>
  _InlinedType10:
    docs: Configuration parameters for the project use of payments.
    properties:
      currency: string
      mode: string
  _InlinedType11:
    docs: Contact details for consumer support requests regarding the project.
    properties:
      email: optional<string>
      phoneNumber: optional<string>
  _InlinedType12:
    properties:
      object: string
      paymentsKey: optional<string>
  _InlinedType13:
    properties:
      object: string
      items: list<project>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "projects.yml",
                "type": "file",
              },
              {
                "contents": "services:
  http:
    SiMsService:
      auth: true
      base-path: ''
      endpoints:
        siMsCredentialsRetrieve:
          path: /projects/{project}/sims/{id}/credentials
          method: GET
          docs: Retrieve the credentials of an existing SIM.
          display-name: Retrieve the SIM credentials
          response: simCredentials
        siMsRetrieve:
          path: /projects/{project}/sims/{id}
          method: GET
          docs: >-
            Retrieve the details of an existing SIM which the authenticated user
            is authorized to view.
          display-name: Retrieve a SIM
          response: sim
        siMsSearch:
          path: /projects/{project}/sims/search
          method: POST
          docs: Searches for existing SIMs matching the given parameters.
          display-name: Search for SIMs
          request:
            body:
              properties:
                iccid: string
                type: optional<list<string>>
          response: _InlinedType14
        siMsList:
          path: /projects/{project}/sims
          method: GET
          docs: >-
            Returns a list of SIMs. The SIMs returned are sorted by creation
            date, with the most recently created SIMs appearing first.
          display-name: List all SIMs
          request:
            query-parameters:
              provider:
                docs: The network provider ID for the sim to be filtered by.
                type: optional<undefined>
              status:
                docs: A comma-separated list of statuses to filter the sims by.
                type: optional<undefined>
              type:
                docs: The type for the sim to be filtered by.
                type: optional<string>
              user:
                docs: The unique identifier for the user to be filtered by.
                type: optional<string>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType15
types:
  simCredentials:
    properties:
      object: string
      activationCode: optional<string>
      qrCodeUrl: optional<string>
      sim: string
  sim:
    properties:
      object: string
      id: string
      iccid: string
      provider: string
      status: string
      type: string
      createdAt: string
  _InlinedType14:
    properties:
      object: string
      items: list<sim>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
  _InlinedType15:
    properties:
      object: string
      items: list<sim>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "siMs.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    SubscriptionsService:
      auth: true
      base-path: ''
      endpoints:
        subscriptionsCancel:
          path: /projects/{project}/subscriptions/{id}/cancel
          method: POST
          docs: >-
            Retrieves the details of an existing subscription and schedules
            termination of the plan at the end of the next renewal date. You
            need only supply the unique subscription identifier that was
            returned upon purchasing a plan.
          display-name: Cancel an active subscription
          response: commons.subscription
        subscriptionsRetrieve:
          path: /projects/{project}/subscriptions/{id}
          method: GET
          docs: >-
            Retrieves the details of an existing subscription. You need only
            supply the unique subscription identifier that was returned upon
            purchasing a plan.
          display-name: Retrieve a subscription
          response: commons.subscription
        subscriptionsEnd:
          path: /projects/{project}/subscriptions/{id}
          method: DELETE
          docs: >-
            Ends an active plan subscription immediately. You only need to
            supply the unique subscription identifier that was returned upon
            purchasing a plan.
          display-name: End an active subscription
          response: commons.subscription
        subscriptionsResume:
          path: /projects/{project}/subscriptions/{id}/resume
          method: POST
          docs: >-
            Removes the cancellation and end times of the subscription. The
            subscription will continue to auto-renew until canceled again.
          display-name: Resume a canceled subscription
          response: commons.subscription
        subscriptionsList:
          path: /projects/{project}/subscriptions
          method: GET
          docs: >-
            Returns a list of subscriptions. The subscriptions returned are
            sorted by creation date, with the most recently created
            subscriptions appearing first.
          display-name: List all subscriptions
          request:
            query-parameters:
              user:
                docs: The unique identifier for the user to be filtered by.
                type: optional<string>
              plan:
                docs: The unique identifier for the plan to be filtered by.
                type: optional<string>
              sim:
                docs: The unique identifier for the sim to be filtered by.
                type: optional<string>
              status:
                docs: >-
                  A comma-separated list of statuses to filter the subscriptions
                  by. Only pending and active subscriptions are returned by
                  default.
                type: optional<undefined>
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType16
        subscriptionsCreate:
          path: /projects/{project}/subscriptions
          method: POST
          docs: >-
            Creates a new subscription for an existing user in the specified
            project.
          display-name: Create a subscription
          request:
            body:
              properties:
                plan: string
                sim: optional<string>
                userAddress: optional<string>
                user: string
                porting: optional<string>
types:
  _InlinedType16:
    properties:
      object: string
      items: list<commons.subscription>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "subscriptions.yml",
                "type": "file",
              },
              {
                "contents": "services:
  http:
    UsageService:
      auth: true
      base-path: ''
      endpoints:
        subscriptionUsageRecordList:
          path: /projects/{project}/subscriptions/{id}/usage
          method: GET
          docs: >-
            Lists usage records in ascending order for a subscription,
            defaulting to \`daily\` aggregation for the latest subscription
            period.
          display-name: List subscription usage records
          request:
            query-parameters:
              period:
                docs: >-
                  Limits the usage data returned to the subscription period
                  provided. This option is incompatible with the \`start\` and
                  \`end\` parameters.
                type: optional<integer>
              start:
                docs: >-
                  Limits the usage data to dates greater than or equal to the
                  provided date. Can only be used in combination with \`end\`.
                type: optional<string>
              end:
                docs: >-
                  Limits the usage data to dates up to and including the
                  provided date. Can only be used in combination with \`start\`.
                type: optional<string>
              aggregation:
                docs: >-
                  Determines the aggregation method used, defaulting to \`daily\`.
                  \`period\` provides a single aggregated value for the time range
                  or period requested.
                type: optional<string>
          response: _InlinedType17
types:
  _InlinedType17:
    properties:
      object: string
      items: list<commons.usageRecord>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "usage.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    UserAddressesService:
      auth: true
      base-path: ''
      endpoints:
        userAddressesList:
          path: /projects/{project}/users/{user}/addresses
          method: GET
          docs: >-
            Returns a list of addresses owned by the given user. The addresses
            returned are sorted by creation date, with the most recently created
            addresses appearing first.
          display-name: List all user addresses
          response: _InlinedType18
        userAddressesCreate:
          path: /projects/{project}/users/{user}/addresses
          method: POST
          docs: Create a new address for the given user with the given parameters.
          display-name: Create a user address
          request:
            body:
              properties:
                object: optional<string>
                line1: string
                line2: optional<string>
                city: string
                state: optional<string>
                postalCode: optional<string>
                country: string
        userAddressesRetrieve:
          path: /projects/{project}/users/{user}/addresses/{id}
          method: GET
          docs: Retrieves the details of an existing address for a given user.
          display-name: Retrieve a user address
          response: commons.userAddress
        userAddressesDelete:
          path: /projects/{project}/users/{user}/addresses/{id}
          method: DELETE
          docs: Retrieves the details of an existing user address and deletes it.
          display-name: Delete a user address
          response: commons.userAddress
types:
  _InlinedType18:
    properties:
      object: string
      items: list<commons.userAddress>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "userAddresses.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    UsersService:
      auth: true
      base-path: ''
      endpoints:
        usersRetrieve:
          path: /projects/{project}/users/{id}
          method: GET
          docs: >-
            Retrieves the details of an existing user. You need only supply the
            unique user identifier that was returned upon user creation.
          display-name: Retrieve a user
          response: commons.user
        usersDelete:
          path: /projects/{project}/users/{id}
          method: DELETE
          docs: Retrieves the details of an existing user and deletes it.
          display-name: Delete a user
          response: commons.user
        usersUpdate:
          path: /projects/{project}/users/{id}
          method: PATCH
          docs: >-
            Updates the specified user by setting the values of the parameters
            passed.
          display-name: Update a user
          request:
            body:
              properties:
                object: optional<string>
                birthday: optional<string>
                email: optional<string>
                fullName: optional<string>
                preferredLocale: optional<string>
          response: commons.user
        usersSearch:
          path: /projects/{project}/users/search
          method: POST
          docs: Searches for existing users matching the given parameters.
          display-name: Search for users
          request:
            body:
              properties:
                email: string
          response: _InlinedType19
        usersList:
          path: /projects/{project}/users
          method: GET
          docs: >-
            Returns a list of users. The users returned are sorted by creation
            date, with the most recently created users appearing first.
          display-name: List all users
          request:
            query-parameters:
              after:
                docs: >-
                  A cursor for use in pagination. The \`after\` parameter takes an
                  object ID that defines the position in the list, only items
                  immediately following the item with that ID will be returned.
                type: optional<string>
              before:
                docs: >-
                  A cursor for use in pagination. The \`before\` parameter takes
                  an object ID that defines the position in the list, only items
                  immediately preceding the item with that ID will be returned.
                type: optional<string>
              limit:
                docs: >-
                  The limit of items to be returned in the list, between 0 and
                  200.
                type: optional<integer>
          response: _InlinedType20
        usersCreate:
          path: /projects/{project}/users
          method: POST
          docs: Creates a new user with the given parameters.
          display-name: Create a user
          request:
            body:
              properties:
                object: optional<string>
                birthday: optional<string>
                email: string
                fullName: optional<string>
                preferredLocale: optional<string>
types:
  _InlinedType19:
    properties:
      object: string
      items: list<commons.user>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
  _InlinedType20:
    properties:
      object: string
      items: list<commons.user>
      moreItemsAfter: optional<string>
      moreItemsBefore: optional<string>
",
                "name": "users.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init no existing fern directory 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": "name: api
error-discrimination:
  strategy: status-code
",
            "name": "api.yml",
            "type": "file",
          },
          {
            "contents": "# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  MovieId: string

  Movie:
    properties:
      id: MovieId
      title: string
      rating: 
        type: double
        docs: The rating scale is one to five stars

  CreateMovieRequest: 
    properties:
      title: string
      rating: double 

services:
  http:
  
    MoviesService:
      auth: false
      base-path: /movies
      endpoints:

        # Here's an HTTP endpoint
        createMovie:
          docs: Add a movie to the database
          method: POST
          path: /create-movie
          request: CreateMovieRequest
          response: MovieId

        getMovie:
          method: GET
          path: /{movieId}
          path-parameters:
            movieId: MovieId
          response: Movie
          errors:
            - MovieDoesNotExistError

errors:
  MovieDoesNotExistError:
    status-code: 404
    type: MovieId
",
            "name": "imdb.yml",
            "type": "file",
          },
        ],
        "name": "definition",
        "type": "directory",
      },
      {
        "contents": "default-group: external
groups: {}
",
        "name": "generators.yml",
        "type": "file",
      },
    ],
    "name": "api",
    "type": "directory",
  },
  {
    "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
    "name": "fern.config.json",
    "type": "file",
  },
]
`;

exports[`fern init rivet openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "types:
  MatchmakerLobbyJoinInfo:
    docs: A matchmaker lobby.
    properties:
      lobby_id: string
      region: MatchmakerLobbyJoinInfoRegion
      ports: MatchmakerLobbyJoinInfoPorts
      player: MatchmakerLobbyJoinInfoPlayer
  MatchmakerLobbyJoinInfoRegion:
    docs: A matchmaker lobby region.
    properties:
      region_id: string
      display_name: string
  MatchmakerLobbyJoinInfoPlayer:
    docs: A matchmaker lobby player.
    properties:
      token: string
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "services:
  http:
    LobbyService:
      auth: true
      base-path: ''
      endpoints:
        lobbyReady:
          path: /lobbies/ready
          method: POST
          docs: >-
            Marks the current lobby as ready to accept connections. Players will
            not be

            able to connect to this lobby until the lobby is flagged as ready.
        playerConnected:
          path: /players/connected
          method: POST
          docs: >-
            Validates the player token is valid and has not already been
            consumed then

            marks the player as connected.


            # Player Tokens and Reserved Slots


            Player tokens reserve a spot in the lobby until they expire. This
            allows for

            precise matchmaking up to exactly the lobby's player limit, which is

            important for games with small lobbies and a high influx of players.


            By calling this endpoint with the player token, the player's spot is
            marked

            as connected and will not expire. If this endpoint is never called,
            the

            player's token will expire and this spot will be filled by another
            player.


            # Anti-Botting


            Player tokens are only issued by caling
            \`rivet.api.matchmaker#JoinLobby\`, calling
            \`rivet.api.matchmaker#FindLobby\`, or

            from the \`rivet.api.identity.common#GlobalEventMatchmakerLobbyJoin\`
            event.

            These endpoints have anti-botting measures (i.e. enforcing max
            player

            limits, captchas, and detecting bots), so valid player tokens
            provide some

            confidence that the player is not a bot.


            Therefore, it's important to make sure the token is valid by waiting
            for

            this endpoint to return OK before allowing the connected socket to
            do

            anything else. If this endpoint returns an error, the socket should
            be

            disconnected immediately.


            # How to Transmit the Player Token


            The client is responsible for acquiring the player token by caling

            \`rivet.api.matchmaker#JoinLobby\`, calling
            \`rivet.api.matchmaker#FindLobby\`,

            or from the
            \`rivet.api.identity.common#GlobalEventMatchmakerLobbyJoin\`

            event.  Beyond that, it's up to the developer how the player token
            is

            transmitted to the lobby.


            If using WebSockets, the player token can be transmitted as a query

            paramter.


            Otherwise, the player token will likely be automatically sent by the
            client

            once the socket opens. As mentioned above, nothing else should
            happen until

            the player token is validated.
          request:
            body: PlayerConnectedRequestContent
        playerDisconnected:
          path: /players/disconnected
          method: POST
          docs: >-
            Marks a player as disconnected.


            # Ghost Players


            If players are not marked as disconnected, lobbies will result with
            "ghost

            players" that the matchmaker thinks exist but are no longer
            connected to the

            lobby.
          request:
            body: PlayerDisconnectedRequestContent
types:
  PlayerConnectedRequestContent:
    properties:
      player_token: string
  PlayerDisconnectedRequestContent:
    properties:
      player_token: string
",
                "name": "lobby.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    PublicService:
      auth: true
      base-path: ''
      endpoints:
        setLobbyClosed:
          path: /lobbies/closed
          method: PUT
          docs: >-
            If \`is_closed\` is \`true\`, players will be prevented from joining the
            lobby.


            Does not shutdown the lobby.
          request:
            body: SetLobbyClosedRequestContent
        findLobby:
          path: /lobbies/find
          method: POST
          docs: >-
            Finds a lobby based on the given criteria.


            If a lobby is not found and \`prevent_auto_create_lobby\` is \`true\`, a
            new lobby will be created.
          request:
            headers:
              origin: optional<string>
            body: FindLobbyRequestContent
          response: FindLobbyResponseContent
        joinLobby:
          path: /lobbies/join
          method: POST
          docs: >-
            Joins a specific lobby.


            This request will use the direct player count configured for the
            lobby

            group.
          request:
            body: JoinLobbyRequestContent
          response: JoinLobbyResponseContent
        listLobbies:
          path: /lobbies/list
          method: GET
          docs: Lists all open lobbies.
          response: ListLobbiesResponseContent
        listRegions:
          path: /regions
          method: GET
          docs: >-
            Returns a list of regions available to this namespace.


            Regions are sorted by most optimal to least optimal. The player's IP
            address

            is used to calculate the regions' optimality.
          response: ListRegionsResponseContent
types:
  SetLobbyClosedRequestContent:
    properties:
      is_closed: boolean
  FindLobbyRequestContent:
    properties:
      game_modes: list<string>
      regions: optional<list<string>>
      prevent_auto_create_lobby: optional<boolean>
      captcha: optional<commons.CaptchaConfig>
  FindLobbyResponseContent:
    properties:
      lobby: commons.MatchmakerLobbyJoinInfo
  JoinLobbyRequestContent:
    properties:
      lobby_id: string
      captcha: optional<commons.CaptchaConfig>
  JoinLobbyResponseContent:
    properties:
      lobby: commons.MatchmakerLobbyJoinInfo
  ListLobbiesResponseContent:
    properties:
      game_modes: list<commons.GameModeInfo>
      regions: list<commons.RegionInfo>
      lobbies: list<commons.LobbyInfo>
  ListRegionsResponseContent:
    properties:
      regions: list<commons.RegionInfo>
",
                "name": "public.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

exports[`fern init telematica openapi 1`] = `
[
  {
    "contents": [
      {
        "contents": [
          {
            "contents": [
              {
                "contents": "name: api
headers: {}
",
                "name": "api.yml",
                "type": "file",
              },
              {
                "contents": "types:
  SOC_ResponseDTO:
    properties:
      soc: double
  Range_ResponseDTO:
    properties:
      range: double
  RangeSoc_ResponseDTO:
    properties:
      range: double
      soc: double
  Location_ResponseDTO:
    properties:
      location: _InlinedType0
  _InlinedType0:
    extends:
      - ILocation
  ChargingStatus_ResponseDTO:
    properties:
      isCharging: boolean
  Odo_ResponseDTO:
    properties:
      odo: double
  StaticAttributes_ResponseDTO:
    properties:
      vin: string
      model: string
      year: double
      make: string
      registration: string
",
                "name": "commons.yml",
                "type": "file",
              },
              {
                "contents": "services:
  http:
    SampleCallbackService:
      auth: true
      base-path: ''
      endpoints:
        appControllerCallback:
          path: /callback
          method: POST
          docs: >-
            This is a dummy callback endpoint.

            Please share the POST callback endpoint created in your app's
            backend with Telematica to get callback requests of this format.
          display-name: Dummy callback endpoint
          request:
            body:
              properties:
                user: optional<string>
                vehicles: optional<list<commons.Callback_DTO>>
",
                "name": "sampleCallback.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    TestingEndpointsService:
      auth: true
      base-path: ''
      endpoints:
        getSocTest:
          path: /vehicle-data/soc/test
          method: GET
          display-name: Test SOC (battery level)
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.SOC_ResponseDTO
        getRangeTest:
          path: /vehicle-data/range/test
          method: GET
          display-name: Test range
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Range_ResponseDTO
        getRangeSocTest:
          path: /vehicle-data/range-soc/test
          method: GET
          display-name: Test range-soc
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.RangeSoc_ResponseDTO
        getLocationTest:
          path: /vehicle-data/location/test
          method: GET
          display-name: Test location
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Location_ResponseDTO
        getChargingStatusTest:
          path: /vehicle-data/charging-status/test
          method: GET
          display-name: Test charging status
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.ChargingStatus_ResponseDTO
        getOdoTest:
          path: /vehicle-data/odo/test
          method: GET
          display-name: Test odo
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Odo_ResponseDTO
        getStaticAttributesTest:
          path: /vehicle-data/static-attributes/test
          method: GET
          display-name: Test static attributes
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.StaticAttributes_ResponseDTO
",
                "name": "testingEndpoints.yml",
                "type": "file",
              },
              {
                "contents": "imports:
  commons: commons.yml
services:
  http:
    VehicleDataService:
      auth: true
      base-path: ''
      endpoints:
        getSoc:
          path: /vehicle-data/soc
          method: GET
          display-name: SOC (battery level)
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.SOC_ResponseDTO
        getRange:
          path: /vehicle-data/range
          method: GET
          display-name: Range
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Range_ResponseDTO
        getRangeSoc:
          path: /vehicle-data/range-soc
          method: GET
          docs: >-
            This endpoint returns the SOC and range for the vehicle in a single
            call
          display-name: Range-SOC
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.RangeSoc_ResponseDTO
        getLocation:
          path: /vehicle-data/location
          method: GET
          display-name: Location
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Location_ResponseDTO
        getChargingStatus:
          path: /vehicle-data/charging-status
          method: GET
          display-name: Charging Status
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.ChargingStatus_ResponseDTO
        getOdo:
          path: /vehicle-data/odo
          method: GET
          display-name: Odometer
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.Odo_ResponseDTO
        getStaticAttributes:
          path: /vehicle-data/static-attributes
          method: GET
          docs: >-
            Static vehicle attributes like VIN, registration number, model, year
            and make
          display-name: Static attributes
          request:
            query-parameters:
              vehicleId:
                docs: >-
                  24-char hex identifier for the vehicle. The owner must have
                  provided consent through Telematica consent flow
                type: string
          response: commons.StaticAttributes_ResponseDTO
",
                "name": "vehicleData.yml",
                "type": "file",
              },
            ],
            "name": "definition",
            "type": "directory",
          },
          {
            "contents": "default-group: external
groups: {}
",
            "name": "generators.yml",
            "type": "file",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      {
        "contents": "{
    "organization": "fern",
    "version": "0.0.0"
}",
        "name": "fern.config.json",
        "type": "file",
      },
    ],
    "name": "fern",
    "type": "directory",
  },
]
`;

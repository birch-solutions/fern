imports:
  commons: commons.yml
  finalIr: finalIr.yml

types:
  SchemaWithExample:
    union:
      primitive: PrimitiveSchemaWithExample
      object: ObjectSchemaWithExample
      array: ArraySchemaWithExample
      map: MapSchemaWithExample
      optional: OptionalSchemaWithExample
      enum: EnumSchemaWithExample
      reference: finalIr.ReferencedSchema
      literal: finalIr.LiteralSchema
      oneOf: OneOfSchemaWithExample
      nullable: NullableSchemaWithExample
      unknown: UnknownSchemaWithExample

  ArraySchemaWithExample:
    extends: commons.WithDescription
    properties:
      value: SchemaWithExample

  MapSchemaWithExample:
    extends: commons.WithDescription
    properties:
      key: SchemaWithExample
      value: SchemaWithExample

  OptionalSchemaWithExample:
    extends: commons.WithDescription
    properties:
      value: SchemaWithExample

  NullableSchemaWithExample:
    extends: commons.WithDescription
    properties:
      value: SchemaWithExample

  EnumSchemaWithExample:
    extends:
      - commons.WithDescription
      - commons.WithName
    properties:
      values: list<finalIr.EnumValue>
      example: optional<string>

  UnknownSchemaWithExample:
    extends: commons.WithDescription
    properties:
      example: unknown

  ObjectSchemaWithExample:
    extends:
      - commons.WithDescription
      - commons.WithName
    properties:
      allOf: list<finalIr.ReferencedSchema>
      properties: list<ObjectPropertyWithExample>
      allOfPropertyConflicts: list<finalIr.AllOfPropertyConflict>

  ObjectPropertyWithExample:
    properties:
      key: string
      schema: SchemaWithExample
      conflict:
        type: map<commons.SchemaId, finalIr.ObjectPropertyConflictInfo>
        docs: The schemas that conflict with this property
      generatedName:
        type: string
        docs: |
          A unique name for the property.

  OneOfSchemaWithExample:
    union:
      discriminated: DiscriminatedOneOfSchemaWithExample
      undisciminated: UnDiscriminatedOneOfSchemaWithExample

  DiscriminatedOneOfSchemaWithExample:
    extends:
      - commons.WithDescription
      - commons.WithName
    properties:
      discriminantProperty: string
      commonProperties: list<CommonPropertyWithExample>
      schemas: map<string, SchemaWithExample>

  CommonPropertyWithExample:
    properties:
      key: string
      schema: SchemaWithExample

  UnDiscriminatedOneOfSchemaWithExample:
    extends:
      - commons.WithDescription
      - commons.WithName
    properties:
      schemas: list<SchemaWithExample>

  PrimitiveSchemaWithExample:
    extends: commons.WithDescription
    properties:
      schema: PrimitiveSchemaValueWithExample

  PrimitiveSchemaValueWithExample:
    union:
      int: IntWithExample
      int64: Int64WithExample
      float: FloatWithExample
      double: DoubleWithExample
      string: StringSchemaWithExample
      datetime: DatetimeWithExample
      date: DateWithExample
      base64: Base64WithExample
      boolean: BooleanWithExample

  IntWithExample:
    properties:
      example: optional<integer>

  Int64WithExample:
    properties:
      example: optional<integer>

  FloatWithExample:
    properties:
      example: optional<double>

  DoubleWithExample:
    properties:
      example: optional<double>

  StringSchemaWithExample:
    properties:
      minLength: optional<integer>
      maxLength: optional<integer>
      example: optional<string>

  DatetimeWithExample:
    properties:
      example: optional<string>

  DateWithExample:
    properties:
      example: optional<string>

  Base64WithExample:
    properties:
      example: optional<string>

  BooleanWithExample:
    properties:
      example: optional<boolean>

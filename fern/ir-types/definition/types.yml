# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

# Animal:
#   union:
#     dog: Dog
#     cat: string

# Dog:
#   properties:
#     likesToBark: boolean

# type Animal = Animal.Dog | Animal.Cat

# namespace Animal {
#   interface Dog extends Dog {
#     "type": "dog"
#   }
# }

# class Animal {
#   private internalValue;

#   public isDog(): boolean {
#     return internalValue instanceof InternalDogValue
#   }

#   private class InternalDogValue {
#     private @JsonUnwrapped Dog dog;
#   }

#   private class InternalCat {
#     private @JsonField("value") String cat;
#   }

# }

imports:
  commons: commons.yml
types:
  TypeDeclaration:
    docs: "A type, which is a name and a shape"
    extends: commons.WithDocs
    properties:
      name: DeclaredTypeName
      shape: Type
  DeclaredTypeName:
    properties:
      fernFilepath: commons.FernFilepath
      name: string
  Type:
    union:
      alias: AliasTypeDeclaration
      enum: EnumTypeDeclaration
      object: ObjectTypeDeclaration
      union: UnionTypeDeclaration

  AliasTypeDeclaration:
    properties:
      aliasOf: TypeReference

  EnumTypeDeclaration:
    properties:
      values: list<EnumValue>
  EnumValue:
    extends: commons.WithDocs
    properties:
      name: commons.WireStringWithAllCasings
      value: string

  ObjectTypeDeclaration:
    properties:
      extends:
        docs: "A list of other types to inherit from"
        type: list<DeclaredTypeName>
      properties: list<ObjectProperty>
  ObjectProperty:
    extends: commons.WithDocs
    properties:
      name: commons.WireStringWithAllCasings
      valueType: TypeReference

  UnionTypeDeclaration:
    properties:
      discriminant: string
      types: list<SingleUnionType>
  SingleUnionType:
    extends: commons.WithDocs
    properties:
      discriminantValue: commons.WireStringWithAllCasings
      additionalProperties: optional<SingleUnionTypeProperties>
  SingleUnionTypeProperties:
    union:
      objectExtension: DeclaredTypeName
      property: SingleUnionTypeProperty
  SingleUnionTypeProperty:
    properties:
      name: commons.WireStringWithAllCasings
      valueType: TypeReference

  TypeReference:
    union:
      container: ContainerType
      named: DeclaredTypeName
      primitive: PrimitiveType
      unknown: {}
      void: {}
  ContainerType:
    union:
      list: TypeReference
      map: MapType
      optional: TypeReference
      set: TypeReference
  MapType:
    properties:
      keyType: TypeReference
      valueType: TypeReference
  PrimitiveType:
    enum:
      - INTEGER
      - DOUBLE
      - STRING
      - BOOLEAN
      - value: LONG
        docs: "Within the range -2^53 to 2^53"
      - DATE_TIME
      - UUID

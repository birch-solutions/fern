name: Publish CLI

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'

jobs:
  live-test:
    environment: Fern Prod
    if: github.ref_type == 'tag' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install

      - name: Check API definition is valid
        env:
          FORCE_COLOR: "2"
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_PROJECT_API_KEY }}
        run: |
          pnpm --filter @fern-api/cli dist:cli:prod
          cli_path="$(pwd)/packages/cli/cli/dist/prod/bundle.cjs" 
          ./scripts/live-test.sh "$cli_path" "$FERN_TOKEN"

  publish-rc:
    if: startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-rc')
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.FERN_NPM_TOKEN }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_PROJECT_API_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install
        uses: ./.github/actions/install

      - name: Print version
        run: |
          git_version=${{ github.ref_name }}
          echo Publishing version: "${git_version}"

      - name: Add version to dev package.json's
        run: |
          git_version=${{ github.ref_name }}
          
          cd packages/cli/cli
          mv package.json package.json.tmp
          version_replace="s/0.0.0/${git_version}/"
          cat package.json.tmp| sed "${version_replace}" > package.json
          rm -rf package.json.tmp

          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Update pnpm lock with new versions
        run: pnpm install

      - name: Compile
        run: pnpm --filter @fern-api/cli compile

      - name: Publish fern-api-dev CLI
        run: pnpm --filter @fern-api/cli publish:cli:dev --access restricted

      - name: Publish fern-api CLI
        run: pnpm --filter @fern-api/cli publish:cli:prod --tag prerelease

  publish:
    if: startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-rc')
    needs: live-test
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.FERN_NPM_TOKEN }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_PROJECT_API_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install
        uses: ./.github/actions/install

      - name: Print version
        run: |
          git_version=${{ github.ref_name }}
          echo Publishing version: "${git_version}"

      - name: Add version to package.json's
        run: |
          git_version=${{ github.ref_name }}

          cd packages/cli/cli
          mv package.json package.json.tmp
          version_replace="s/0.0.0/${git_version}/"
          cat package.json.tmp| sed "${version_replace}" > package.json
          rm -rf package.json.tmp

          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Update pnpm lock with new versions
        run: pnpm install

      - name: Compile
        run: pnpm --filter @fern-api/cli compile

      - name: Publish fern-api-dev CLI
        run: pnpm --filter @fern-api/cli publish:cli:dev --access restricted

      - name: Publish fern-api CLI
        run: pnpm --filter @fern-api/cli publish:cli:prod --tag latest

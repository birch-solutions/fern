# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..types.variable_type_and_name import VariableTypeAndName
from ....core.serialization import FieldMetadata
from ...commons.types.variable_type import VariableType
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class GetDefaultStarterFilesRequest(UniversalBaseModel):
    input_params: typing_extensions.Annotated[
        typing.List[VariableTypeAndName], FieldMetadata(alias="inputParams")
    ]
    output_type: typing_extensions.Annotated[
        VariableType, FieldMetadata(alias="outputType")
    ]
    method_name: typing_extensions.Annotated[str, FieldMetadata(alias="methodName")] = (
        pydantic.Field()
    )
    """
    The name of the `method` that the student has to complete.
    The method name cannot include the following characters:
      - Greater Than `>`
      - Less Than `<``
      - Equals `=`
      - Period `.`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="forbid"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.forbid

# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
from ...commons.types.debug_map_value import DebugMapValue
from ...commons.types.debug_key_value_pairs import DebugKeyValuePairs
import typing
from ...commons.types.debug_variable_value import DebugVariableValue
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ....core.pydantic_utilities import update_forward_refs


class Scope(UniversalBaseModel):
    variables: typing.Dict[str, DebugVariableValue]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="forbid"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.forbid


update_forward_refs(DebugMapValue)
update_forward_refs(DebugKeyValuePairs)

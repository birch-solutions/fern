# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
from .test_case import TestCase
import pydantic
from .variable_value import VariableValue
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import typing
from ....core.pydantic_utilities import update_forward_refs
from .key_value_pair import KeyValuePair
from .map_value import MapValue


class TestCaseWithExpectedResult(UniversalBaseModel):
    test_case: TestCase = pydantic.Field(alias="testCase")
    expected_result: VariableValue = pydantic.Field(alias="expectedResult")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="forbid"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.forbid


update_forward_refs(KeyValuePair)
update_forward_refs(MapValue)
update_forward_refs(KeyValuePair)
update_forward_refs(MapValue)

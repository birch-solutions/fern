# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from .node_id import NodeId
from ....core.serialization import FieldMetadata
from .singly_linked_list_value import SinglyLinkedListValue
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class SinglyLinkedListNodeAndListValue(UniversalBaseModel):
    node_id: typing_extensions.Annotated[NodeId, FieldMetadata(alias="nodeId")]
    full_list: typing_extensions.Annotated[
        SinglyLinkedListValue, FieldMetadata(alias="fullList")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="forbid"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.forbid

# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
from ...submission.types.test_case_result_with_stdout import TestCaseResultWithStdout
import typing
from ...submission.types.trace_response import TraceResponse
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.pydantic_utilities import update_forward_refs
from ...commons.types.key_value_pair import KeyValuePair
from ...commons.types.map_value import MapValue
from ...commons.types.debug_map_value import DebugMapValue
from ...commons.types.debug_key_value_pairs import DebugKeyValuePairs


class StoreTracedTestCaseRequest(UniversalBaseModel):
    result: TestCaseResultWithStdout
    trace_responses: typing.List[TraceResponse] = pydantic.Field(alias="traceResponses")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="forbid"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.forbid


update_forward_refs(KeyValuePair)
update_forward_refs(MapValue)
update_forward_refs(DebugMapValue)
update_forward_refs(DebugKeyValuePairs)

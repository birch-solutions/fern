/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { SeedExhaustiveClient } from "../../src/Client";

const client = new SeedExhaustiveClient({
    environment: process.env.TESTS_BASE_URL || "test",
    token: process.env.TESTS_AUTH || "test",
});

describe("HttpMethods", () => {
    test("testGet", async () => {
        const response = await client.endpoints.httpMethods.testGet("string");
        expect(response).toEqual(undefined);
    });

    test("testPost", async () => {
        const response = await client.endpoints.httpMethods.testPost({
            string: "string",
        });
        expect(response).toEqual(undefined);
    });

    test("testPut", async () => {
        const response = await client.endpoints.httpMethods.testPut("string", {
            string: "string",
        });
        expect(response).toEqual(undefined);
    });

    test("testPatch", async () => {
        const response = await client.endpoints.httpMethods.testPatch("string", {
            string: "string",
            integer: 1,
            long: 1000000,
            double: 1.1,
            bool: true,
            datetime: new Date("2024-01-15T09:30:00.000Z"),
            date: "2023-01-15",
            uuid: "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32",
            base64: "SGVsbG8gd29ybGQh",
            list: ["string"],
            set: new Set(["string"]),
            map: {
                1: "string",
            },
        });
        expect(response).toEqual(undefined);
    });

    test("testDelete", async () => {
        const response = await client.endpoints.httpMethods.testDelete("string");
        expect(response).toEqual(undefined);
    });
});

/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as SeedObject from "../../api/index";
import * as core from "../../core";
import { InlineType1 } from "./InlineType1";
import { InlineType2 } from "./InlineType2";

export const InlinedDiscriminatedUnion1: core.serialization.Schema<
    serializers.InlinedDiscriminatedUnion1.Raw,
    SeedObject.InlinedDiscriminatedUnion1
> = core.serialization
    .union("type", {
        type1: InlineType1,
        type2: InlineType2,
    })
    .transform<SeedObject.InlinedDiscriminatedUnion1>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace InlinedDiscriminatedUnion1 {
    type Raw = InlinedDiscriminatedUnion1.Type1 | InlinedDiscriminatedUnion1.Type2;

    interface Type1 extends InlineType1.Raw {
        type: "type1";
    }

    interface Type2 extends InlineType2.Raw {
        type: "type2";
    }
}

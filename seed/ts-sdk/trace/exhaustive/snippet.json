{
    "endpoints": [
        {
            "id": {
                "path": "/",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.test();\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-submission-status/{submissionId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.updateTestSubmissionStatus(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), SeedTrace.TestSubmissionStatus.stopped());\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-submission-status-v2/{submissionId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.sendTestSubmissionUpdate(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), {\n    updateTime: new Date(\"2024-01-15T09:30:00.000Z\"),\n    updateInfo: SeedTrace.TestSubmissionUpdateInfo.running(SeedTrace.RunningSubmissionState.QueueingSubmission)\n});\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-submission-status/{submissionId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.updateWorkspaceSubmissionStatus(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), SeedTrace.WorkspaceSubmissionStatus.stopped());\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-submission-status-v2/{submissionId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.sendWorkspaceSubmissionUpdate(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), {\n    updateTime: new Date(\"2024-01-15T09:30:00.000Z\"),\n    updateInfo: SeedTrace.WorkspaceSubmissionUpdateInfo.running(SeedTrace.RunningSubmissionState.QueueingSubmission)\n});\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-trace/submission/{submissionId}/testCase/{testCaseId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.storeTracedTestCase(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), \"string\", {\n    result: {\n        result: {},\n        stdout: \"string\"\n    },\n    traceResponses: [{\n            submissionId: SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"),\n            lineNumber: 1,\n            returnValue: SeedTrace.DebugVariableValue.integerValue(1),\n            expressionLocation: {},\n            stack: {},\n            stdout: \"string\"\n        }]\n});\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-trace-v2/submission/{submissionId}/testCase/{testCaseId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.storeTracedTestCaseV2(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), SeedTrace.TestCaseId(\"string\"), [{\n        submissionId: SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"),\n        lineNumber: 1,\n        file: {},\n        returnValue: SeedTrace.DebugVariableValue.integerValue(1),\n        expressionLocation: {},\n        stack: {},\n        stdout: \"string\"\n    }]);\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-trace/submission/{submissionId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.storeTracedWorkspace(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), {\n    workspaceRunDetails: {\n        exceptionV2: SeedTrace.ExceptionV2.generic({}),\n        exception: {},\n        stdout: \"string\"\n    },\n    traceResponses: [{\n            submissionId: SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"),\n            lineNumber: 1,\n            returnValue: SeedTrace.DebugVariableValue.integerValue(1),\n            expressionLocation: {},\n            stack: {},\n            stdout: \"string\"\n        }]\n});\n"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-trace-v2/submission/{submissionId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.admin.storeTracedWorkspaceV2(SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"), [{\n        submissionId: SeedTrace.SubmissionId(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"),\n        lineNumber: 1,\n        file: {},\n        returnValue: SeedTrace.DebugVariableValue.integerValue(1),\n        expressionLocation: {},\n        stack: {},\n        stdout: \"string\"\n    }]);\n"
            }
        },
        {
            "id": {
                "path": "/homepage-problems",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.homepage.getHomepageProblems();\n"
            }
        },
        {
            "id": {
                "path": "/homepage-problems",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.homepage.setHomepageProblems([SeedTrace.ProblemId(\"string\")]);\n"
            }
        },
        {
            "id": {
                "path": "/migration-info/all",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.migration.getAttemptedMigrations({\n    adminKeyHeader: \"string\"\n});\n"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/create",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.playlist.createPlaylist(1, {\n    datetime: new Date(\"2024-01-15T09:30:00.000Z\"),\n    optionalDatetime: new Date(\"2024-01-15T09:30:00.000Z\"),\n    body: {\n        name: \"string\",\n        problems: [SeedTrace.ProblemId(\"string\")]\n    }\n});\n"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/all",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.playlist.getPlaylists(1, {\n    limit: 1,\n    otherField: \"string\",\n    multiLineDocs: \"string\",\n    optionalMultipleField: \"string\",\n    multipleField: \"string\"\n});\n"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlistId}",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.playlist.getPlaylist(1, SeedTrace.PlaylistId(\"string\"));\n"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlistId}",
                "method": "PUT"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.playlist.updatePlaylist(1, SeedTrace.PlaylistId(\"string\"), {\n    name: \"string\",\n    problems: [SeedTrace.ProblemId(\"string\")]\n});\n"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlist_id}",
                "method": "DELETE"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.playlist.deletePlaylist(1, SeedTrace.PlaylistId(\"string\"));\n"
            }
        },
        {
            "id": {
                "path": "/problem-crud/create",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.problem.createProblem({\n    problemName: \"string\",\n    problemDescription: {\n        boards: [SeedTrace.ProblemDescriptionBoard.html(\"string\")]\n    },\n    files: {\n        [SeedTrace.Language.Java]: {\n            solutionFile: {\n                filename: \"string\",\n                contents: \"string\"\n            },\n            readOnlyFiles: [{\n                    filename: \"string\",\n                    contents: \"string\"\n                }]\n        }\n    },\n    inputParams: [{\n            variableType: SeedTrace.VariableType.integerType(),\n            name: \"string\"\n        }],\n    outputType: SeedTrace.VariableType.integerType(),\n    testcases: [{\n            testCase: {\n                id: \"string\",\n                params: [SeedTrace.VariableValue.integerValue(1)]\n            },\n            expectedResult: SeedTrace.VariableValue.integerValue(1)\n        }],\n    methodName: \"string\"\n});\n"
            }
        },
        {
            "id": {
                "path": "/problem-crud/update/{problemId}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.problem.updateProblem(SeedTrace.ProblemId(\"string\"), {\n    problemName: \"string\",\n    problemDescription: {\n        boards: [SeedTrace.ProblemDescriptionBoard.html(\"string\")]\n    },\n    files: {\n        [SeedTrace.Language.Java]: {\n            solutionFile: {\n                filename: \"string\",\n                contents: \"string\"\n            },\n            readOnlyFiles: [{\n                    filename: \"string\",\n                    contents: \"string\"\n                }]\n        }\n    },\n    inputParams: [{\n            variableType: SeedTrace.VariableType.integerType(),\n            name: \"string\"\n        }],\n    outputType: SeedTrace.VariableType.integerType(),\n    testcases: [{\n            testCase: {\n                id: \"string\",\n                params: [SeedTrace.VariableValue.integerValue(1)]\n            },\n            expectedResult: SeedTrace.VariableValue.integerValue(1)\n        }],\n    methodName: \"string\"\n});\n"
            }
        },
        {
            "id": {
                "path": "/problem-crud/delete/{problemId}",
                "method": "DELETE"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.problem.deleteProblem(SeedTrace.ProblemId(\"string\"));\n"
            }
        },
        {
            "id": {
                "path": "/problem-crud/default-starter-files",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.problem.getDefaultStarterFiles({\n    inputParams: [{\n            variableType: SeedTrace.VariableType.integerType(),\n            name: \"string\"\n        }],\n    outputType: SeedTrace.VariableType.integerType(),\n    methodName: \"string\"\n});\n"
            }
        },
        {
            "id": {
                "path": "/sessions/create-session/{language}",
                "method": "POST"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.submission.createExecutionSession(SeedTrace.Language.Java);\n"
            }
        },
        {
            "id": {
                "path": "/sessions/{sessionId}",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.submission.getExecutionSession(\"string\");\n"
            }
        },
        {
            "id": {
                "path": "/sessions/stop/{sessionId}",
                "method": "DELETE"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.submission.stopExecutionSession(\"string\");\n"
            }
        },
        {
            "id": {
                "path": "/sessions/execution-sessions-state",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.submission.getExecutionSessionsState();\n"
            }
        },
        {
            "id": {
                "path": "/sysprop/num-warm-instances/{language}/{numWarmInstances}",
                "method": "PUT"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.sysprop.setNumWarmInstances(SeedTrace.Language.Java, 1);\n"
            }
        },
        {
            "id": {
                "path": "/sysprop/num-warm-instances",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.sysprop.getNumWarmInstances();\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.problem.getLightweightProblems();\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.problem.getProblems();\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.problem.getLatestProblem(SeedTrace.ProblemId(\"string\"));\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.problem.getProblemVersion(SeedTrace.ProblemId(\"string\"), 1);\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.v3.problem.getLightweightProblems();\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.v3.problem.getProblems();\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.v3.problem.getLatestProblem(SeedTrace.ProblemId(\"string\"));\n"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedTraceClient, SeedTrace } from \"@fern/trace\";\n\nconst seedTrace = new SeedTraceClient({ token: \"YOUR_TOKEN\", xRandomHeader: \"YOUR_X_RANDOM_HEADER\" });\nawait seedTrace.v2.v3.problem.getProblemVersion(SeedTrace.ProblemId(\"string\"), 1);\n"
            }
        }
    ],
    "types": {}
}
/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core";
import { NoHeaders } from "./api/resources/noHeaders/client/Client";
import { OnlyLiteralHeaders } from "./api/resources/onlyLiteralHeaders/client/Client";
import { WithNonLiteralHeaders } from "./api/resources/withNonLiteralHeaders/client/Client";

export declare namespace SeedLiteralHeadersClient {
    interface Options {
        environment: core.Supplier<string>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class SeedLiteralHeadersClient {
    constructor(protected readonly _options: SeedLiteralHeadersClient.Options) {}

    protected _noHeaders: NoHeaders | undefined;

    public get noHeaders(): NoHeaders {
        return (this._noHeaders ??= new NoHeaders(this._options));
    }

    protected _onlyLiteralHeaders: OnlyLiteralHeaders | undefined;

    public get onlyLiteralHeaders(): OnlyLiteralHeaders {
        return (this._onlyLiteralHeaders ??= new OnlyLiteralHeaders(this._options));
    }

    protected _withNonLiteralHeaders: WithNonLiteralHeaders | undefined;

    public get withNonLiteralHeaders(): WithNonLiteralHeaders {
        return (this._withNonLiteralHeaders ??= new WithNonLiteralHeaders(this._options));
    }
}

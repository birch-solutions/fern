/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SeedLiteral from "../../../../api";
import * as core from "../../../../core";

export const CreateOptionsResponse: core.serialization.Schema<
    serializers.CreateOptionsResponse.Raw,
    SeedLiteral.CreateOptionsResponse
> = core.serialization
    .union("type", {
        ok: core.serialization.object({
            value: core.serialization.booleanLiteral(true),
        }),
        options: core.serialization.lazyObject(async () => (await import("../../..")).Options),
    })
    .transform<SeedLiteral.CreateOptionsResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace CreateOptionsResponse {
    type Raw = CreateOptionsResponse.Ok | CreateOptionsResponse.Options;

    interface Ok {
        type: "ok";
        value: true;
    }

    interface Options extends serializers.Options.Raw {
        type: "options";
    }
}

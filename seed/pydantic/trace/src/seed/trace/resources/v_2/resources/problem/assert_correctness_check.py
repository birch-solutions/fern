# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from .....core.pydantic_utilities import pydantic_v1
from .function_implementation_for_multiple_languages import FunctionImplementationForMultipleLanguages
from .parameter import Parameter
from .parameter_id import ParameterId


class AssertCorrectnessCheck_DeepEquality(pydantic_v1.BaseModel):
    type: typing.Literal["deepEquality"] = "deepEquality"
    expected_value_parameter_id: ParameterId = pydantic_v1.Field(alias="expectedValueParameterId")

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class AssertCorrectnessCheck_Custom(pydantic_v1.BaseModel):
    type: typing.Literal["custom"] = "custom"
    additional_parameters: typing.List[Parameter] = pydantic_v1.Field(alias="additionalParameters")
    code: FunctionImplementationForMultipleLanguages

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


AssertCorrectnessCheck = typing.Union[AssertCorrectnessCheck_DeepEquality, AssertCorrectnessCheck_Custom]

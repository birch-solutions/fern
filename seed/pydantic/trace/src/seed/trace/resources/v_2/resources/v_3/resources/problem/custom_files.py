# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from .......core.pydantic_utilities import pydantic_v1
from ......commons.language import Language
from .basic_test_case_template import BasicTestCaseTemplate
from .file_info_v_2 import FileInfoV2
from .files import Files
from .non_void_function_signature import NonVoidFunctionSignature


class CustomFiles_Basic(pydantic_v1.BaseModel):
    type: typing.Literal["basic"] = "basic"
    method_name: str = pydantic_v1.Field(alias="methodName")
    signature: NonVoidFunctionSignature
    additional_files: typing.Dict[Language, Files] = pydantic_v1.Field(alias="additionalFiles")
    basic_test_case_template: BasicTestCaseTemplate = pydantic_v1.Field(alias="basicTestCaseTemplate")

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class CustomFiles_Custom(pydantic_v1.BaseModel):
    type: typing.Literal["custom"] = "custom"
    value: typing.Dict[Language, Files]


CustomFiles = typing.Union[CustomFiles_Basic, CustomFiles_Custom]

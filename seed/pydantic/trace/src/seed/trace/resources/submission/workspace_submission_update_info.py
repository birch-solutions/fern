# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...core.pydantic_utilities import pydantic_v1
from .error_info import ErrorInfo
from .exception_info import ExceptionInfo
from .exception_v_2 import ExceptionV2
from .running_submission_state import RunningSubmissionState


class WorkspaceSubmissionUpdateInfo_Running(pydantic_v1.BaseModel):
    type: typing.Literal["running"] = "running"
    value: RunningSubmissionState


class WorkspaceSubmissionUpdateInfo_Ran(pydantic_v1.BaseModel):
    type: typing.Literal["ran"] = "ran"
    exception_v_2: typing.Optional[ExceptionV2] = pydantic_v1.Field(alias="exceptionV2")
    exception: typing.Optional[ExceptionInfo]
    stdout: str

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class WorkspaceSubmissionUpdateInfo_Stopped(pydantic_v1.BaseModel):
    type: typing.Literal["stopped"] = "stopped"


class WorkspaceSubmissionUpdateInfo_Traced(pydantic_v1.BaseModel):
    type: typing.Literal["traced"] = "traced"


class WorkspaceSubmissionUpdateInfo_TracedV2(pydantic_v1.BaseModel):
    type: typing.Literal["tracedV2"] = "tracedV2"
    trace_responses_size: int = pydantic_v1.Field(alias="traceResponsesSize")

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class WorkspaceSubmissionUpdateInfo_Errored(pydantic_v1.BaseModel):
    type: typing.Literal["errored"] = "errored"
    value: ErrorInfo


class WorkspaceSubmissionUpdateInfo_Finished(pydantic_v1.BaseModel):
    type: typing.Literal["finished"] = "finished"


WorkspaceSubmissionUpdateInfo = typing.Union[
    WorkspaceSubmissionUpdateInfo_Running,
    WorkspaceSubmissionUpdateInfo_Ran,
    WorkspaceSubmissionUpdateInfo_Stopped,
    WorkspaceSubmissionUpdateInfo_Traced,
    WorkspaceSubmissionUpdateInfo_TracedV2,
    WorkspaceSubmissionUpdateInfo_Errored,
    WorkspaceSubmissionUpdateInfo_Finished,
]

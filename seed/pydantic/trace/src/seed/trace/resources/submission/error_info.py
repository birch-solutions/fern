# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .exception_info import ExceptionInfo


class ErrorInfo_CompileError(UniversalBaseModel):
    type: typing.Literal["compileError"] = "compileError"
    message: str

    class Config:
        extra = pydantic.Extra.allow


class ErrorInfo_RuntimeError(UniversalBaseModel):
    type: typing.Literal["runtimeError"] = "runtimeError"
    message: str

    class Config:
        extra = pydantic.Extra.allow


class ErrorInfo_InternalError(UniversalBaseModel):
    type: typing.Literal["internalError"] = "internalError"
    exception_info: ExceptionInfo = pydantic.Field(alias="exceptionInfo")

    class Config:
        extra = pydantic.Extra.allow


ErrorInfo = typing.Union[ErrorInfo_CompileError, ErrorInfo_RuntimeError, ErrorInfo_InternalError]

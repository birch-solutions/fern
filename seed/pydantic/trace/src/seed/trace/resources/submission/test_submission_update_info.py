# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...core.pydantic_utilities import pydantic_v1
from ..v_2.resources.problem.test_case_id import TestCaseId
from .error_info import ErrorInfo
from .running_submission_state import RunningSubmissionState
from .test_case_grade import TestCaseGrade


class TestSubmissionUpdateInfo_Running(pydantic_v1.BaseModel):
    type: typing.Literal["running"] = "running"
    value: RunningSubmissionState


class TestSubmissionUpdateInfo_Stopped(pydantic_v1.BaseModel):
    type: typing.Literal["stopped"] = "stopped"


class TestSubmissionUpdateInfo_Errored(pydantic_v1.BaseModel):
    type: typing.Literal["errored"] = "errored"
    value: ErrorInfo


class TestSubmissionUpdateInfo_GradedTestCase(pydantic_v1.BaseModel):
    type: typing.Literal["gradedTestCase"] = "gradedTestCase"
    test_case_id: TestCaseId = pydantic_v1.Field(alias="testCaseId")
    grade: TestCaseGrade

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class TestSubmissionUpdateInfo_RecordedTestCase(pydantic_v1.BaseModel):
    type: typing.Literal["recordedTestCase"] = "recordedTestCase"
    test_case_id: TestCaseId = pydantic_v1.Field(alias="testCaseId")
    trace_responses_size: int = pydantic_v1.Field(alias="traceResponsesSize")

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class TestSubmissionUpdateInfo_Finished(pydantic_v1.BaseModel):
    type: typing.Literal["finished"] = "finished"


TestSubmissionUpdateInfo = typing.Union[
    TestSubmissionUpdateInfo_Running,
    TestSubmissionUpdateInfo_Stopped,
    TestSubmissionUpdateInfo_Errored,
    TestSubmissionUpdateInfo_GradedTestCase,
    TestSubmissionUpdateInfo_RecordedTestCase,
    TestSubmissionUpdateInfo_Finished,
]

# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...core.pydantic_utilities import pydantic_v1
from .error_info import ErrorInfo
from .exception_info import ExceptionInfo
from .exception_v_2 import ExceptionV2
from .running_submission_state import RunningSubmissionState


class WorkspaceSubmissionStatus_Stopped(pydantic_v1.BaseModel):
    type: typing.Literal["stopped"] = "stopped"


class WorkspaceSubmissionStatus_Errored(pydantic_v1.BaseModel):
    type: typing.Literal["errored"] = "errored"
    value: ErrorInfo


class WorkspaceSubmissionStatus_Running(pydantic_v1.BaseModel):
    type: typing.Literal["running"] = "running"
    value: RunningSubmissionState


class WorkspaceSubmissionStatus_Ran(pydantic_v1.BaseModel):
    type: typing.Literal["ran"] = "ran"
    exception_v_2: typing.Optional[ExceptionV2] = pydantic_v1.Field(alias="exceptionV2", default=None)
    exception: typing.Optional[ExceptionInfo] = None
    stdout: str

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class WorkspaceSubmissionStatus_Traced(pydantic_v1.BaseModel):
    type: typing.Literal["traced"] = "traced"
    exception_v_2: typing.Optional[ExceptionV2] = pydantic_v1.Field(alias="exceptionV2", default=None)
    exception: typing.Optional[ExceptionInfo] = None
    stdout: str

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


WorkspaceSubmissionStatus = typing.Union[
    WorkspaceSubmissionStatus_Stopped,
    WorkspaceSubmissionStatus_Errored,
    WorkspaceSubmissionStatus_Running,
    WorkspaceSubmissionStatus_Ran,
    WorkspaceSubmissionStatus_Traced,
]

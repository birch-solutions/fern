# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...core.pydantic_utilities import pydantic_v1
from ..commons.problem_id import ProblemId
from .code_execution_update import CodeExecutionUpdate
from .exception_info import ExceptionInfo
from .terminated_response import TerminatedResponse


class SubmissionResponse_ServerInitialized(pydantic_v1.BaseModel):
    type: typing.Literal["serverInitialized"] = "serverInitialized"


class SubmissionResponse_ProblemInitialized(pydantic_v1.BaseModel):
    type: typing.Literal["problemInitialized"] = "problemInitialized"
    value: ProblemId


class SubmissionResponse_WorkspaceInitialized(pydantic_v1.BaseModel):
    type: typing.Literal["workspaceInitialized"] = "workspaceInitialized"


class SubmissionResponse_ServerErrored(ExceptionInfo):
    type: typing.Literal["serverErrored"] = "serverErrored"

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


class SubmissionResponse_CodeExecutionUpdate(pydantic_v1.BaseModel):
    type: typing.Literal["codeExecutionUpdate"] = "codeExecutionUpdate"
    value: CodeExecutionUpdate


class SubmissionResponse_Terminated(TerminatedResponse):
    type: typing.Literal["terminated"] = "terminated"

    class Config:
        allow_population_by_field_name = True
        populate_by_name = True


SubmissionResponse = typing.Union[
    SubmissionResponse_ServerInitialized,
    SubmissionResponse_ProblemInitialized,
    SubmissionResponse_WorkspaceInitialized,
    SubmissionResponse_ServerErrored,
    SubmissionResponse_CodeExecutionUpdate,
    SubmissionResponse_Terminated,
]

# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .submission_id import SubmissionId
import pydantic
from ..commons.problem_id import ProblemId
from ..commons.language import Language


class InvalidRequestCause_SubmissionIdNotFound(UniversalBaseModel):
    type: typing.Literal["submissionIdNotFound"] = "submissionIdNotFound"
    missing_submission_id: SubmissionId = pydantic.Field(alias="missingSubmissionId")

    class Config:
        extra = pydantic.Extra.allow


class InvalidRequestCause_CustomTestCasesUnsupported(UniversalBaseModel):
    type: typing.Literal["customTestCasesUnsupported"] = "customTestCasesUnsupported"
    problem_id: ProblemId = pydantic.Field(alias="problemId")
    submission_id: SubmissionId = pydantic.Field(alias="submissionId")

    class Config:
        extra = pydantic.Extra.allow


class InvalidRequestCause_UnexpectedLanguage(UniversalBaseModel):
    type: typing.Literal["unexpectedLanguage"] = "unexpectedLanguage"
    expected_language: Language = pydantic.Field(alias="expectedLanguage")
    actual_language: Language = pydantic.Field(alias="actualLanguage")

    class Config:
        extra = pydantic.Extra.allow


InvalidRequestCause = typing.Union[
    InvalidRequestCause_SubmissionIdNotFound,
    InvalidRequestCause_CustomTestCasesUnsupported,
    InvalidRequestCause_UnexpectedLanguage,
]

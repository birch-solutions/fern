# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .....core.serialization import FieldMetadata
from .object_with_optional_field import ObjectWithOptionalField
from .....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class NestedObjectWithOptionalField(UniversalBaseModel):
    string: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="string")] = None
    nested_object: typing_extensions.Annotated[
        typing.Optional[ObjectWithOptionalField], FieldMetadata(alias="NestedObject")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow

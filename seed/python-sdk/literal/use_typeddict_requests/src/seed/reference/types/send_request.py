# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .some_literal import SomeLiteral
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SendRequest(UniversalBaseModel):
    prompt: typing.Literal["You are a helpful assistant"] = (
        "You are a helpful assistant"
    )
    query: str
    stream: typing.Literal[False] = False
    context: SomeLiteral = "You're super wise"
    maybe_context: typing.Optional[SomeLiteral] = pydantic.Field(
        alias="maybeContext", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

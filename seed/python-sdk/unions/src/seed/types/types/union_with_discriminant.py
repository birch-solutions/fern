# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...core.pydantic_utilities import pydantic_v1
from .bar import Bar
from .foo import Foo


class UnionWithDiscriminant_Foo(pydantic_v1.BaseModel):
    foo: Foo
    type: typing.Literal["foo"] = pydantic_v1.Field(alias="_type", default="foo")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class UnionWithDiscriminant_Bar(pydantic_v1.BaseModel):
    bar: Bar
    type: typing.Literal["bar"] = pydantic_v1.Field(alias="_type", default="bar")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


UnionWithDiscriminant = typing.Union[UnionWithDiscriminant_Foo, UnionWithDiscriminant_Bar]

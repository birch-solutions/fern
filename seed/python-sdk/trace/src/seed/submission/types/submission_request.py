# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...commons.types.language import Language
from ...commons.types.problem_id import ProblemId
from ...core.pydantic_utilities import pydantic_v1
from .submission_file_info import SubmissionFileInfo
from .submission_id import SubmissionId


class SubmissionRequest_InitializeProblemRequest(pydantic_v1.BaseModel):
    type: typing.Literal["initializeProblemRequest"] = "initializeProblemRequest"
    problem_id: ProblemId = pydantic_v1.Field(alias="problemId")
    problem_version: typing.Optional[int] = pydantic_v1.Field(alias="problemVersion")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class SubmissionRequest_InitializeWorkspaceRequest(pydantic_v1.BaseModel):
    type: typing.Literal["initializeWorkspaceRequest"] = "initializeWorkspaceRequest"

    class Config:
        frozen = True
        smart_union = True


class SubmissionRequest_SubmitV2(pydantic_v1.BaseModel):
    type: typing.Literal["submitV2"] = "submitV2"
    submission_id: SubmissionId = pydantic_v1.Field(alias="submissionId")
    language: Language
    submission_files: typing.List[SubmissionFileInfo] = pydantic_v1.Field(alias="submissionFiles")
    problem_id: ProblemId = pydantic_v1.Field(alias="problemId")
    problem_version: typing.Optional[int] = pydantic_v1.Field(alias="problemVersion")
    user_id: typing.Optional[str] = pydantic_v1.Field(alias="userId")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class SubmissionRequest_WorkspaceSubmit(pydantic_v1.BaseModel):
    type: typing.Literal["workspaceSubmit"] = "workspaceSubmit"
    submission_id: SubmissionId = pydantic_v1.Field(alias="submissionId")
    language: Language
    submission_files: typing.List[SubmissionFileInfo] = pydantic_v1.Field(alias="submissionFiles")
    user_id: typing.Optional[str] = pydantic_v1.Field(alias="userId")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class SubmissionRequest_Stop(pydantic_v1.BaseModel):
    type: typing.Literal["stop"] = "stop"
    submission_id: SubmissionId = pydantic_v1.Field(alias="submissionId")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


SubmissionRequest = typing.Union[
    SubmissionRequest_InitializeProblemRequest,
    SubmissionRequest_InitializeWorkspaceRequest,
    SubmissionRequest_SubmitV2,
    SubmissionRequest_WorkspaceSubmit,
    SubmissionRequest_Stop,
]

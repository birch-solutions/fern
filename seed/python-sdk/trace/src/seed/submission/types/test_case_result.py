# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ...commons.types.variable_value import VariableValue
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .actual_result import ActualResult


class TestCaseResult(UniversalBaseModel):
    expected_result: VariableValue = pydantic.Field(alias="expectedResult")
    actual_result: ActualResult = pydantic.Field(alias="actualResult")
    passed: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ...commons.types.language import Language
from ...commons.types.problem_id import ProblemId
from ...core.pydantic_utilities import pydantic_v1
from .submission_id import SubmissionId


class InvalidRequestCause_SubmissionIdNotFound(pydantic_v1.BaseModel):
    type: typing.Literal["submissionIdNotFound"] = "submissionIdNotFound"
    missing_submission_id: SubmissionId = pydantic_v1.Field(alias="missingSubmissionId")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class InvalidRequestCause_CustomTestCasesUnsupported(pydantic_v1.BaseModel):
    type: typing.Literal["customTestCasesUnsupported"] = "customTestCasesUnsupported"
    problem_id: ProblemId = pydantic_v1.Field(alias="problemId")
    submission_id: SubmissionId = pydantic_v1.Field(alias="submissionId")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class InvalidRequestCause_UnexpectedLanguage(pydantic_v1.BaseModel):
    type: typing.Literal["unexpectedLanguage"] = "unexpectedLanguage"
    expected_language: Language = pydantic_v1.Field(alias="expectedLanguage")
    actual_language: Language = pydantic_v1.Field(alias="actualLanguage")

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


InvalidRequestCause = typing.Union[
    InvalidRequestCause_SubmissionIdNotFound,
    InvalidRequestCause_CustomTestCasesUnsupported,
    InvalidRequestCause_UnexpectedLanguage,
]


irVersion: v53
docker: fernapi/fern-csharp-sdk:latest
dockerCommand: pnpm --filter @fern-api/fern-csharp-sdk dockerTagLatest
language: csharp
generatorType: SDK
defaultOutputMode: github
scripts:
  - docker: bitnami/dotnet-sdk:8
    commands:
      # - dotnet build src -c Release /p:ContinuousIntegrationBuild=true
      - dotnet test src
local: 
  workingDirectory: generators/csharp
  buildCommand: 
    - pnpm --filter @fern-api/fern-csharp-sdk dist:cli
  runCommand: node sdk/dist/bundle.cjs
fixtures: 
  imdb:
    - customConfig: null
      outputFolder: no-custom-config
    - customConfig:
        extra-dependencies:
          Moq: 4.20.70
          Moq.Contrib.HttpClient: "1.4.0"
      outputFolder: extra-dependencies
    - customConfig:
        base-api-exception-class-name: CustomApiException
        base-exception-class-name: CustomException
      outputFolder: exception-class-names
  multi-url-environment:
    - customConfig:
        pascal-case-environments: false
      outputFolder: no-pascal-case-environments
  exhaustive:
    - customConfig:
        explicit-namespaces: true
      outputFolder: explicit-namespaces
    - customConfig:
        root-namespace-for-core-classes: false
      outputFolder: no-root-namespace-for-core-classes
    - customConfig:
        generate-error-types: false
      outputFolder: no-generate-error-types
  optional:
    - customConfig:
        simplify-object-dictionaries: false
      outputFolder: no-simplify-object-dictionaries
allowedFailures:
  - objects-with-imports
  - examples
  # TODO: Add support for recursive undiscriminated unions.
  - grpc
  - unions # wire testing fails due to lack of base-properties support
  - unknown # issue with example object in wire testing
  - multi-url-environment-no-default # wire test failing because not setting up environment
  - package-yml # user-provided example path not coming in properly 
  - response-property # not implemented so wire testing fails
  - simple-fhir # nested generated examples are wonky
  - enum # wire tests failing because of complicated oneofs
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    convert:
      path: /v1/text-to-speech/{voice_id}
      method: POST
      auth: false
      docs: >-
        Converts text into speech using a voice of your choice and returns
        audio.
      path-parameters:
        voice_id:
          type: string
          docs: >-
            Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices
            to list all the available voices.
      display-name: Convert
      request:
        name: TextToSpeechRequest
        query-parameters:
          optimize_streaming_latency:
            type: optional<root.OptimizeStreamingLatency>
            docs: >
              You can turn on latency optimizations at some cost of quality. The
              best possible final latency varies by model.
          output_format:
            type: optional<root.OutputFormat>
            docs: The output format of the generated audio.
        body:
          properties:
            text:
              type: string
              docs: The text that will get converted into speech.
            model_id:
              docs: >-
                Identifier of the model that will be used, you can query them
                using GET /v1/models. The model needs to have support for text
                to speech, you can check this using the can_do_text_to_speech
                property.
              type: optional<string>
            voice_settings:
              docs: >-
                Voice settings overriding stored setttings for the given voice.
                They are applied only on the given request.
              type: optional<root.VoiceSettings>
            pronunciation_dictionary_locators:
              docs: >-
                A list of pronunciation dictionary locators (id, version_id) to
                be applied to the text. They will be applied in order. You may
                have up to 3 locators per request
              type: optional<list<root.PronunciationDictionaryVersionLocator>>
      response:
        docs: Successful Response
        type: file
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            voice_id: pMsXgVXv3BLzUgSXRplE
          query-parameters:
            optimize_streaming_latency: '0'
            output_format: mp3_22050_32
          request:
            text: >-
              It sure does, Jackie… My mama always said: “In Carolina, the air's
              so thick you can wear it!”
            voice_settings:
              stability: 0.1
              similarity_boost: 0.3
              style: 0.2
    convert_as_stream:
      path: /v1/text-to-speech/{voice_id}/stream
      method: POST
      auth: false
      docs: >-
        Converts text into speech using a voice of your choice and returns audio
        as an audio stream.
      path-parameters:
        voice_id:
          type: string
          docs: >-
            Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices
            to list all the available voices.
      display-name: Convert as Stream
      request:
        name: TextToSpeechAsStreamRequest
        query-parameters:
          optimize_streaming_latency:
            type: optional<root.OptimizeStreamingLatency>
            docs: >
              You can turn on latency optimizations at some cost of quality. The
              best possible final latency varies by model.
          output_format:
            type: optional<root.OutputFormat>
            docs: The output format of the generated audio.
        body:
          properties:
            text:
              type: string
              docs: The text that will get converted into speech.
            model_id:
              docs: >-
                Identifier of the model that will be used, you can query them
                using GET /v1/models. The model needs to have support for text
                to speech, you can check this using the can_do_text_to_speech
                property.
              type: optional<string>
            voice_settings:
              docs: >-
                Voice settings overriding stored setttings for the given voice.
                They are applied only on the given request.
              type: optional<root.VoiceSettings>
            pronunciation_dictionary_locators:
              docs: >-
                A list of pronunciation dictionary locators (id, version_id) to
                be applied to the text. They will be applied in order. You may
                have up to 3 locators per request
              type: optional<list<root.PronunciationDictionaryVersionLocator>>
      response:
        docs: Successful Response
        type: file
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            voice_id: pMsXgVXv3BLzUgSXRplE
          query-parameters:
            optimize_streaming_latency: '0'
            output_format: mp3_22050_32
          request:
            text: >-
              It sure does, Jackie… My mama always said: “In Carolina, the air's
              so thick you can wear it!”
            voice_settings:
              stability: 0.1
              similarity_boost: 0.3
              style: 0.2
channel:
  path: /v1/text-to-speech/stream-input
  auth: false
  query-parameters:
    model_id:
      type: optional<string>
      docs: The model ID to use
  headers:
    xi-api-key:
      type: optional<string>
      name: xiApiKey
      docs: ElevenLabs API key
  messages:
    subscribe:
      origin: server
      body: root.AudioOutput
    publish:
      origin: client
      body:
        type: sendMessage
        docs: Send messages to the WebSocket
  examples:
    - messages:
        - type: publish
          body:
            text: ' '
            voice_settings:
              stability: 0.5
              similarity_boost: 0.8
            xi-api-key: xi-api-key
        - type: publish
          body:
            text: Hello World
            try_trigger_generation: true
        - type: publish
          body:
            text: ''
        - type: subscribe
          body:
            audio: Y3VyaW91cyBtaW5kcyB0aGluayBhbGlrZSA6KQ==
types:
  sendMessage:
    discriminated: false
    docs: Send messages to the WebSocket
    union:
      - root.InitializeConnection
      - root.SendText
      - root.CloseConnection

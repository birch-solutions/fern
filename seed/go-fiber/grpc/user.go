// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/grpc/fern/core"
)

type CreateUserRequest struct {
	Username string   `json:"username" url:"-"`
	Email    *string  `json:"email,omitempty" url:"-"`
	Age      *int     `json:"age,omitempty" url:"-"`
	Weight   *float64 `json:"weight,omitempty" url:"-"`
}

type GetUserRequest struct {
	Username *string  `query:"username"`
	Age      *int     `query:"age"`
	Weight   *float64 `query:"weight"`
}

type CreateUserResponse struct {
	User *User `json:"user,omitempty" url:"user,omitempty"`

	extraProperties map[string]interface{}
}

func (c *CreateUserResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateUserResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateUserResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateUserResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	return nil
}

func (c *CreateUserResponse) String() string {
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type User struct {
	Id       string    `json:"id" url:"id"`
	Username string    `json:"username" url:"username"`
	Email    *string   `json:"email,omitempty" url:"email,omitempty"`
	Age      *int      `json:"age,omitempty" url:"age,omitempty"`
	Weight   *float64  `json:"weight,omitempty" url:"weight,omitempty"`
	Metadata *Metadata `json:"metadata,omitempty" url:"metadata,omitempty"`

	extraProperties map[string]interface{}
}

func (u *User) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *User) UnmarshalJSON(data []byte) error {
	type unmarshaler User
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = User(value)

	extraProperties, err := core.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties

	return nil
}

func (u *User) String() string {
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

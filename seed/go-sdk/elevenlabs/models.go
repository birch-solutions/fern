// This file was auto-generated by Fern from our API Definition.

package elevenlabs

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/elevenlabs/fern/core"
)

type Model struct {
	ModelId                            string              `json:"model_id" url:"model_id"`
	Name                               *string             `json:"name,omitempty" url:"name,omitempty"`
	CanBeFinetuned                     *bool               `json:"can_be_finetuned,omitempty" url:"can_be_finetuned,omitempty"`
	CanDoTextToSpeech                  *bool               `json:"can_do_text_to_speech,omitempty" url:"can_do_text_to_speech,omitempty"`
	CanDoVoiceConversion               *bool               `json:"can_do_voice_conversion,omitempty" url:"can_do_voice_conversion,omitempty"`
	CanUseStyle                        *bool               `json:"can_use_style,omitempty" url:"can_use_style,omitempty"`
	CanUseSpeakerBoost                 *bool               `json:"can_use_speaker_boost,omitempty" url:"can_use_speaker_boost,omitempty"`
	ServesProVoices                    *bool               `json:"serves_pro_voices,omitempty" url:"serves_pro_voices,omitempty"`
	TokenCostFactor                    *float64            `json:"token_cost_factor,omitempty" url:"token_cost_factor,omitempty"`
	Description                        *string             `json:"description,omitempty" url:"description,omitempty"`
	RequiresAlphaAccess                *bool               `json:"requires_alpha_access,omitempty" url:"requires_alpha_access,omitempty"`
	MaxCharactersRequestFreeUser       *int                `json:"max_characters_request_free_user,omitempty" url:"max_characters_request_free_user,omitempty"`
	MaxCharactersRequestSubscribedUser *int                `json:"max_characters_request_subscribed_user,omitempty" url:"max_characters_request_subscribed_user,omitempty"`
	Languages                          []*LanguageResponse `json:"languages,omitempty" url:"languages,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (m *Model) GetExtraProperties() map[string]interface{} {
	return m.extraProperties
}

func (m *Model) UnmarshalJSON(data []byte) error {
	type unmarshaler Model
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*m = Model(value)

	extraProperties, err := core.ExtractExtraProperties(data, *m)
	if err != nil {
		return err
	}
	m.extraProperties = extraProperties

	m._rawJSON = json.RawMessage(data)
	return nil
}

func (m *Model) String() string {
	if len(m._rawJSON) > 0 {
		if value, err := core.StringifyJSON(m._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(m); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", m)
}

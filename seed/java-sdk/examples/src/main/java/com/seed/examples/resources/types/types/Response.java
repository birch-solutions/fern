/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.examples.resources.types.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.examples.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Response.Builder.class)
public final class Response {
    private final Object response;

    private final Map<String, Object> additionalProperties;

    private Response(Object response, Map<String, Object> additionalProperties) {
        this.response = response;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("response")
    public Object getResponse() {
        return response;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Response && equalTo((Response) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Response other) {
        return response.equals(other.response);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.response);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResponseStage builder() {
        return new Builder();
    }

    public interface ResponseStage {
        _FinalStage response(Object response);

        Builder from(Response other);
    }

    public interface _FinalStage {
        Response build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ResponseStage, _FinalStage {
        private Object response;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Response other) {
            response(other.getResponse());
            return this;
        }

        @java.lang.Override
        @JsonSetter("response")
        public _FinalStage response(Object response) {
            this.response = response;
            return this;
        }

        @java.lang.Override
        public Response build() {
            return new Response(response, additionalProperties);
        }
    }
}

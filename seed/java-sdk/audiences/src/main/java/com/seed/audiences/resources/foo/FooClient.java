/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.audiences.resources.foo;

import com.seed.audiences.core.ApiError;
import com.seed.audiences.core.ClientOptions;
import com.seed.audiences.core.ObjectMappers;
import com.seed.audiences.core.RequestOptions;
import com.seed.audiences.resources.foo.requests.FindRequest;
import com.seed.audiences.resources.foo.types.ImportingType;
import java.io.IOException;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class FooClient {
    protected final ClientOptions clientOptions;

    public FooClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
    }

    public ImportingType find(FindRequest request) {
        return find(request, null);
    }

    public ImportingType find(FindRequest request, RequestOptions requestOptions) {
        HttpUrl.Builder httpUrl =
                HttpUrl.parse(this.clientOptions.environment().getUrl()).newBuilder();

        if (request.getOptionalString().isPresent()) {
            httpUrl.addQueryParameter(
                    "optionalString", request.getOptionalString().get());
        }
        Request.Builder _requestBuilder = new Request.Builder()
                .url(httpUrl.build())
                .method("POST", RequestBody.create("", null))
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .addHeader("Content-Type", "application/json");
        Request okhttpRequest = _requestBuilder.build();
        try {
            Response response =
                    clientOptions.httpClient().newCall(okhttpRequest).execute();
            if (response.isSuccessful()) {
                return ObjectMappers.JSON_MAPPER.readValue(response.body().string(), ImportingType.class);
            }
            throw new ApiError(
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}

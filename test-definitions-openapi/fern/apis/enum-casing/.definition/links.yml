imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /links.create
      method: POST
      auth: true
      docs: |
        Creates a link between two objects to indicate a relationship.
      request:
        name: LinksCreateRequest
        body:
          properties:
            link_type: root.LinkType
            source:
              type: string
              docs: The ID of the source object.
            target:
              type: string
              docs: The ID of the target object.
      response:
        docs: Success.
        type: root.LinksCreateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
    delete:
      path: /links.delete
      method: POST
      auth: true
      docs: Deletes a link.
      request:
        name: LinksDeleteRequest
        body:
          properties:
            id:
              type: string
              docs: The ID of the link to delete.
      response:
        docs: Success.
        type: root.LinksDeleteResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            id: id
          response:
            body:
              string:
                key: value
    get:
      path: /links.get
      method: GET
      auth: true
      docs: Gets the requested link's information.
      request:
        name: LinksGetQuery
        query-parameters:
          id:
            type: string
            docs: The requested link's ID.
      response:
        docs: Success.
        type: root.LinksGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
    getPost:
      path: /links.get
      method: POST
      auth: true
      docs: Gets the requested link's information.
      request:
        name: LinksGetRequest
        body:
          properties:
            id:
              type: string
              docs: The requested link's ID.
      response:
        docs: Success.
        type: root.LinksGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
    list:
      path: /links.list
      method: GET
      auth: true
      docs: Lists the available links.
      request:
        name: LinksListQuery
        query-parameters:
          object:
            type: string
            docs: The ID of the object to list the links for.
          cursor:
            type: optional<string>
            docs: >
              The cursor to resume iteration from. If not provided, then
              iteration

              starts from the beginning.
          direction:
            type: optional<root.LinksDirection>
            docs: |
              The direction of the links to list, otherwise if not present, then
              links in both directions (source and target) are included.
          limit:
            type: optional<integer>
            docs: >
              The maximum number of links to return. If not set, then the
              default

              is '50'.
          link_type:
            type: optional<root.LinkType>
            allow-multiple: true
            docs: |
              The link type(s) to filter for, otherwise if not present, all link
              types are included.
          mode:
            type: optional<root.ListMode>
            docs: |
              The iteration mode to use, otherwise if not set, then "after" is
              used.
          types:
            type: optional<root.LinkType>
            allow-multiple: true
            docs: |
              The link types to filter for, otherwise if not present, all link
              types are included.
      response:
        docs: Success.
        type: root.LinksListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - query-parameters:
            object: object
          response:
            body:
              links: []
              next_cursor: next_cursor
              prev_cursor: prev_cursor
    listPost:
      path: /links.list
      method: POST
      auth: true
      docs: Lists the available links.
      request:
        name: LinksListRequest
        body:
          properties:
            cursor:
              docs: |
                The cursor to resume iteration from. If not provided, then
                iteration starts from the beginning.
              type: optional<string>
            direction: optional<root.LinksDirection>
            limit:
              docs: >
                The maximum number of links to return. If not set, then the
                default

                is '50'.
              type: optional<integer>
            link_type:
              docs: >
                The link type(s) to filter for, otherwise if not present, all
                link

                types are included.
              type: optional<list<root.LinkType>>
            mode: optional<root.ListMode>
            object:
              type: string
              docs: The ID of the object to list the links for.
            types:
              docs: |
                The link types to filter for, otherwise if not present, all link
                types are included.
              type: optional<list<root.LinkType>>
      response:
        docs: Success.
        type: root.LinksListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            object: object
          response:
            body:
              links: []
              next_cursor: next_cursor
              prev_cursor: prev_cursor
  display-name: links
docs: DevRev link interactions.

imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /webhooks.create
      method: POST
      auth: true
      docs: Creates a new webhook target.
      request:
        name: WebhooksCreateRequest
        body:
          properties:
            event_types:
              docs: The event types that the webhook endpoint will receive.
              type: optional<list<root.WebhookEventType>>
            secret:
              docs: >
                The secret to use when verifying webhook events. If provided,
                the

                secret must be between 8 and 32 bytes (inclusive). If not set, a

                secret will be automatically generated and provided in the

                response.
              type: optional<string>
            url:
              type: string
              docs: The URL of the webhook endpoint.
      response:
        docs: Success.
        type: root.WebhooksCreateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            url: url
          response:
            body:
              webhook:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                event_types:
                  - account_created
                secret: secret
                status: active
                url: url
    delete:
      path: /webhooks.delete
      method: POST
      auth: true
      docs: Deletes the requested webhook.
      request:
        name: WebhooksDeleteRequest
        body:
          properties:
            id:
              type: string
              docs: ID for the webhook.
      response:
        docs: Success.
        type: root.WebhooksDeleteResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            id: don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>
          response:
            body:
              string:
                key: value
    get:
      path: /webhooks.get
      method: GET
      auth: true
      docs: Gets the requested webhook's information.
      request:
        name: WebhooksGetQuery
        query-parameters:
          id:
            type: string
            docs: ID for the webhook.
      response:
        docs: Success.
        type: root.WebhooksGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - query-parameters:
            id: don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>
          response:
            body:
              webhook:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                event_types:
                  - account_created
                secret: secret
                status: active
                url: url
    getPost:
      path: /webhooks.get
      method: POST
      auth: true
      docs: Gets the requested webhook's information.
      request:
        name: WebhooksGetRequest
        body:
          properties:
            id:
              type: string
              docs: ID for the webhook.
      response:
        docs: Success.
        type: root.WebhooksGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            id: don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>
          response:
            body:
              webhook:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                event_types:
                  - account_created
                secret: secret
                status: active
                url: url
    list:
      path: /webhooks.list
      method: GET
      auth: true
      docs: Lists the webhooks.
      response:
        docs: Success.
        type: root.WebhooksListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - response:
            body:
              webhooks:
                - created_date: '2023-01-01T12:00:00Z'
                  display_id: display_id
                  id: id
                  modified_date: '2023-01-01T12:00:00Z'
                  event_types:
                    - account_created
                  secret: secret
                  status: active
                  url: url
    listPost:
      path: /webhooks.list
      method: POST
      auth: true
      docs: Lists the webhooks.
      request:
        body: root.WebhooksListRequest
      response:
        docs: Success.
        type: root.WebhooksListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request: {}
          response:
            body:
              webhooks:
                - created_date: '2023-01-01T12:00:00Z'
                  display_id: display_id
                  id: id
                  modified_date: '2023-01-01T12:00:00Z'
                  event_types:
                    - account_created
                  secret: secret
                  status: active
                  url: url
    update:
      path: /webhooks.update
      method: POST
      auth: true
      docs: Updates the requested webhook.
      request:
        name: WebhooksUpdateRequest
        body:
          properties:
            action: optional<root.WebhooksUpdateAction>
            event_types: optional<root.WebhooksUpdateRequestEventTypes>
            id:
              type: string
              docs: ID for the webhook.
            secret:
              docs: >
                If provided, updates the secret that's used when verifying
                webhook

                events, which must be between 8 and 32 bytes (inclusive).
                Otherwise

                if empty, then a new secret is generated. If the webhook is
                active,

                then its status will transition to the 'unverified' state and it

                won't receive any object events until successfully verified.
              type: optional<string>
            url:
              docs: >
                The webhook's updated URL. If the webhook is active, then the

                webhook's status will transition to the 'unverified' state and
                it

                won't receive any object events until successfully verified.
              type: optional<string>
      response:
        docs: Success.
        type: root.WebhooksUpdateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            id: don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>
          response:
            body:
              webhook:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                event_types:
                  - account_created
                secret: secret
                status: active
                url: url
  display-name: webhooks
docs: Webhook event APIs.

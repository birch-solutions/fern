imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /auth-tokens.create
      method: POST
      auth: true
      docs: |
        Creates a JWT corresponding to the requested token type for the
        authenticated user.
      request:
        name: AuthTokensCreateRequest
        body:
          properties:
            act_as:
              docs: The unique ID of the Dev user to impersonate.
              type: optional<string>
            aud:
              docs: The expected audience values with respect to the token.
              type: optional<list<string>>
            client_id:
              docs: >
                An identifier that represents the application which is
                requesting

                the token. If no client_id is present in the request to generate
                an

                application access token (AAT), DevRev will generate a
                client_id.

                This client_id is only associated with an AAT.
              type: optional<string>
            expires_in:
              docs: >
                The expected validity lifetime of the token in number of days.
                In

                practice, the value should be based on the usage of the token.
              type: optional<integer>
            grant_type: optional<root.AuthTokenGrantType>
            requested_token_type: optional<root.AuthTokenRequestedTokenType>
            rev_info: optional<root.AuthTokensRevInfo>
            scope:
              docs: |
                The requested set of scopes associated with the issued token. A
                space-delimited list of values in which the order of values does
                not matter.
              type: optional<string>
            subject_token:
              docs: |
                Represents the entity that requests the token. Not required when
                requesting an application access token (AAT).
              type: optional<string>
            subject_token_type: optional<root.AuthTokenSubjectTokenType>
            token_hint:
              docs: A hint that identifies the token.
              type: optional<string>
      response:
        docs: Success.
        type: root.AuthTokensCreateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.ConflictError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request: {}
          response:
            body:
              access_token: access_token
              client_id: client_id
              expires_in: 1
              refresh_token: refresh_token
              scope: scope
              token_type: bearer
    delete:
      path: /auth-tokens.delete
      method: POST
      auth: true
      docs: |
        Revokes the token that matches the given token ID issued under the
        given Dev organization.
      request:
        name: AuthTokensDeleteRequest
        body:
          properties:
            token_id:
              docs: >
                The unique identifier for the token under a given Dev
                organization.

                If no token ID is provided, then the token ID will be set from
                the

                JTI claim of the token in the authorization header.
              type: optional<string>
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request: {}
    get:
      path: /auth-tokens.get
      method: GET
      auth: true
      docs: |
        Gets the token metadata corresponding to the given token ID under the
        given Dev organization.
      request:
        name: AuthTokensGetQuery
        query-parameters:
          token_id:
            type: string
            docs: |
              The unique identifier of the token under a given Dev organization.
      response:
        docs: Success.
        type: root.AuthTokensGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - query-parameters:
            token_id: token_id
          response:
            body:
              token:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                client_id: client_id
                expires_at: '2023-01-01T12:00:00Z'
                issued_at: '2023-01-01T12:00:00Z'
                requested_token_type: urn:devrev:params:oauth:token-type:aat
                scopes:
                  - scopes
                status: active
                subject: subject
                token_hint: token_hint
    getPost:
      path: /auth-tokens.get
      method: POST
      auth: true
      docs: |
        Gets the token metadata corresponding to the given token ID under the
        given Dev organization.
      request:
        name: AuthTokensGetRequest
        body:
          properties:
            token_id:
              type: string
              docs: >
                The unique identifier of the token under a given Dev
                organization.
      response:
        docs: Success.
        type: root.AuthTokensGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            token_id: token_id
          response:
            body:
              token:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                client_id: client_id
                expires_at: '2023-01-01T12:00:00Z'
                issued_at: '2023-01-01T12:00:00Z'
                requested_token_type: urn:devrev:params:oauth:token-type:aat
                scopes:
                  - scopes
                status: active
                subject: subject
                token_hint: token_hint
    list:
      path: /auth-tokens.list
      method: GET
      auth: true
      docs: |
        Gets the token metadata for all the tokens corresponding to the given
        token type issued for a given subject.
      request:
        name: AuthTokensListQuery
        query-parameters:
          client_id:
            type: optional<string>
            docs: |
              An identifier that represents the application, which requested the
              token. Only relevant for application access tokens.
          requested_token_type:
            type: optional<root.AuthTokenRequestedTokenType>
            docs: |
              The type of the requested token. If no value is specified, the
              response will include tokens of all the types.
          subject:
            type: optional<string>
            docs: |
              The subject associated with the token. In the absence of this
              parameter, the ID of the authenticated entity is treated as the
              subject.
      response:
        docs: Success.
        type: root.AuthTokensListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - response:
            body:
              tokens:
                - created_date: '2023-01-01T12:00:00Z'
                  display_id: display_id
                  id: id
                  modified_date: '2023-01-01T12:00:00Z'
                  client_id: client_id
                  expires_at: '2023-01-01T12:00:00Z'
                  issued_at: '2023-01-01T12:00:00Z'
                  requested_token_type: urn:devrev:params:oauth:token-type:aat
                  scopes:
                    - scopes
                  status: active
                  subject: subject
                  token_hint: token_hint
    listPost:
      path: /auth-tokens.list
      method: POST
      auth: true
      docs: |
        Gets the token metadata for all the tokens corresponding to the given
        token type issued for a given subject.
      request:
        name: AuthTokensListRequest
        body:
          properties:
            client_id:
              docs: >
                An identifier that represents the application, which requested
                the

                token. Only relevant for application access tokens.
              type: optional<string>
            requested_token_type: optional<root.AuthTokenRequestedTokenType>
            subject:
              docs: |
                The subject associated with the token. In the absence of this
                parameter, the ID of the authenticated entity is treated as the
                subject.
              type: optional<string>
      response:
        docs: Success.
        type: root.AuthTokensListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request: {}
          response:
            body:
              tokens:
                - created_date: '2023-01-01T12:00:00Z'
                  display_id: display_id
                  id: id
                  modified_date: '2023-01-01T12:00:00Z'
                  client_id: client_id
                  expires_at: '2023-01-01T12:00:00Z'
                  issued_at: '2023-01-01T12:00:00Z'
                  requested_token_type: urn:devrev:params:oauth:token-type:aat
                  scopes:
                    - scopes
                  status: active
                  subject: subject
                  token_hint: token_hint
    selfDelete:
      path: /auth-tokens.self.delete
      method: POST
      auth: true
      docs: |
        Revokes all the tokens that matches the given token type created by the
        authenticated user.
      request:
        name: AuthTokensSelfDeleteRequest
        body:
          properties:
            requested_token_type: optional<root.AuthTokenRequestedTokenType>
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request: {}
    update:
      path: /auth-tokens.update
      method: POST
      auth: true
      docs: |
        Updates token metadata of a token issued under a given Dev
        organization.
      request:
        name: AuthTokensUpdateRequest
        body:
          properties:
            token_hint:
              type: string
              docs: A hint that identifies the token.
            token_id:
              type: string
              docs: >
                The unique identifier of the token under a given Dev
                organization.
      response:
        docs: Success.
        type: root.AuthTokensUpdateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            token_hint: token_hint
            token_id: token_id
          response:
            body:
              token:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                client_id: client_id
                expires_at: '2023-01-01T12:00:00Z'
                issued_at: '2023-01-01T12:00:00Z'
                requested_token_type: urn:devrev:params:oauth:token-type:aat
                scopes:
                  - scopes
                status: active
                subject: subject
                token_hint: token_hint
  display-name: auth-tokens
docs: Security token interactions.

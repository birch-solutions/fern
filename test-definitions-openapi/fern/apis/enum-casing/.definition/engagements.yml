imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    count:
      path: /engagements.count
      method: GET
      auth: true
      docs: Counts the engagement records.
      request:
        name: EngagementsCountQuery
        query-parameters:
          external_ref:
            type: optional<string>
            allow-multiple: true
            docs: Filters for meetings with the provided external_refs.
          members:
            type: optional<string>
            allow-multiple: true
            docs: Filters for engagement of the provided members.
          parent:
            type: optional<string>
            allow-multiple: true
            docs: Filters for engagements with the provided parent.
          type:
            type: optional<root.EngagementType>
            allow-multiple: true
            docs: Filters for engagement of the provided types.
      response:
        docs: Success.
        type: root.EngagementsCountResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - response:
            body:
              count: 1
    countPost:
      path: /engagements.count
      method: POST
      auth: true
      docs: Counts the engagement records.
      request:
        name: EngagementsCountRequest
        body:
          properties:
            external_ref:
              docs: Filters for meetings with the provided external_refs.
              type: optional<list<string>>
            members:
              docs: Filters for engagement of the provided members.
              type: optional<list<string>>
            parent:
              docs: Filters for engagements with the provided parent.
              type: optional<list<string>>
            type:
              docs: Filters for engagement of the provided types.
              type: optional<list<root.EngagementType>>
      response:
        docs: Success.
        type: root.EngagementsCountResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request: {}
          response:
            body:
              count: 1
    create:
      path: /engagements.create
      method: POST
      auth: true
      docs: Creates a new engagement record.
      request:
        name: EngagementsCreateRequest
        body:
          properties:
            artifacts:
              docs: |
                The IDs of the artifacts to associate with the engagement.
              type: optional<list<string>>
            description:
              docs: The description of the engagement.
              type: optional<string>
            engagement_type: optional<root.EngagementsCreateRequestEngagementType>
            external_ref:
              docs: External Reference for the engagement.
              type: optional<string>
            external_url:
              docs: External URL for the engagement.
              type: optional<string>
            members:
              docs: IDs of the users that were part of the engagement.
              type: list<string>
            parent:
              type: string
              docs: |
                The parent object ID in which the engagement was created.
                Currently, only accounts and opportunities are supported.
            scheduled_date:
              type: datetime
              docs: The date and time when the engagement was scheduled.
            tags:
              docs: Tags associated with the engagement.
              type: optional<list<root.SetTagWithValue>>
            title:
              type: string
              docs: The title of the engagement.
      response:
        docs: Success.
        type: root.EngagementsCreateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            members:
              - members
            parent: ACC-12345
            scheduled_date: '2023-01-01T12:00:00Z'
            tags:
              - id: TAG-12345
            title: title
          response:
            body:
              engagement:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                description: description
    delete:
      path: /engagements.delete
      method: POST
      auth: true
      docs: Deletes the engagement record.
      request:
        name: EngagementsDeleteRequest
        body:
          properties:
            id:
              type: string
              docs: The engagement ID.
      response:
        docs: Success.
        type: root.EngagementsDeleteResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            id: id
          response:
            body:
              string:
                key: value
    get:
      path: /engagements.get
      method: GET
      auth: true
      docs: Gets the engagement record.
      request:
        name: EngagementsGetQuery
        query-parameters:
          id:
            type: string
            docs: The engagement ID.
      response:
        docs: Success.
        type: root.EngagementsGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - query-parameters:
            id: id
          response:
            body:
              engagement:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                description: description
    getPost:
      path: /engagements.get
      method: POST
      auth: true
      docs: Gets the engagement record.
      request:
        name: EngagementsGetRequest
        body:
          properties:
            id:
              type: string
              docs: The engagement ID.
      response:
        docs: Success.
        type: root.EngagementsGetResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            id: id
          response:
            body:
              engagement:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                description: description
    list:
      path: /engagements.list
      method: GET
      auth: true
      docs: Lists the engagement records.
      request:
        name: EngagementsListQuery
        query-parameters:
          cursor:
            type: optional<string>
            docs: >
              The cursor to resume iteration from. If not provided, then
              iteration

              starts from the beginning.
          external_ref:
            type: optional<string>
            allow-multiple: true
            docs: Filters for meetings with the provided external_refs.
          limit:
            type: optional<integer>
            docs: The maximum number of engagements to return.
          members:
            type: optional<string>
            allow-multiple: true
            docs: Filters for engagement of the provided members.
          mode:
            type: optional<root.ListMode>
            docs: |
              The iteration mode to use, otherwise if not set, then "after" is
              used.
          parent:
            type: optional<string>
            allow-multiple: true
            docs: Filters for engagements with the provided parent.
          sort_by:
            type: optional<string>
            allow-multiple: true
            docs: |
              Fields to sort the engagements by and the direction to sort them.
          type:
            type: optional<root.EngagementType>
            allow-multiple: true
            docs: Filters for engagement of the provided types.
      response:
        docs: Success.
        type: root.EngagementsListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - response:
            body:
              engagements:
                - created_date: '2023-01-01T12:00:00Z'
                  display_id: display_id
                  id: id
                  modified_date: '2023-01-01T12:00:00Z'
                  description: description
              next_cursor: next_cursor
              prev_cursor: prev_cursor
    listPost:
      path: /engagements.list
      method: POST
      auth: true
      docs: Lists the engagement records.
      request:
        name: EngagementsListRequest
        body:
          properties:
            cursor:
              docs: |
                The cursor to resume iteration from. If not provided, then
                iteration starts from the beginning.
              type: optional<string>
            external_ref:
              docs: Filters for meetings with the provided external_refs.
              type: optional<list<string>>
            limit:
              docs: The maximum number of engagements to return.
              type: optional<integer>
            members:
              docs: Filters for engagement of the provided members.
              type: optional<list<string>>
            mode: optional<root.ListMode>
            parent:
              docs: Filters for engagements with the provided parent.
              type: optional<list<string>>
            sort_by:
              docs: >
                Fields to sort the engagements by and the direction to sort
                them.
              type: optional<list<string>>
            type:
              docs: Filters for engagement of the provided types.
              type: optional<list<root.EngagementType>>
      response:
        docs: Success.
        type: root.EngagementsListResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request: {}
          response:
            body:
              engagements:
                - created_date: '2023-01-01T12:00:00Z'
                  display_id: display_id
                  id: id
                  modified_date: '2023-01-01T12:00:00Z'
                  description: description
              next_cursor: next_cursor
              prev_cursor: prev_cursor
    update:
      path: /engagements.update
      method: POST
      auth: true
      docs: Updates the engagement record.
      request:
        name: EngagementsUpdateRequest
        body:
          properties:
            artifacts: optional<root.EngagementsUpdateRequestArtifactIds>
            description:
              docs: Updates the description of the engagement.
              type: optional<string>
            external_ref:
              docs: External Reference for the engagement.
              type: optional<string>
            external_url:
              docs: Updates the external URL for the engagement.
              type: optional<string>
            id:
              type: string
              docs: The engagement ID.
            members: optional<root.EngagementsUpdateRequestMembers>
            scheduled_date:
              docs: |
                Updates the date and time when the engagement was scheduled.
              type: optional<datetime>
            tags: optional<root.EngagementsUpdateRequestTags>
            title:
              docs: Updates the title of the engagement.
              type: optional<string>
      response:
        docs: Success.
        type: root.EngagementsUpdateResponse
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.ForbiddenError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
        - root.ServiceUnavailableError
      examples:
        - request:
            id: id
          response:
            body:
              engagement:
                created_date: '2023-01-01T12:00:00Z'
                display_id: display_id
                id: id
                modified_date: '2023-01-01T12:00:00Z'
                description: description
  display-name: engagements
docs: DevRev engagements.

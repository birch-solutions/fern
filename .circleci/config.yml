version: 2.1
orbs:
  node: circleci/node@5.0.1
jobs:
  check:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: lint:monorepo
          command: yarn lint:monorepo
      - run:
          name: Check root package
          command: yarn root-package:check
      - run:
          name: Check dependencies
          command: yarn depcheck
      - run:
          name: lint:style
          command: yarn lint:style
      - run:
          name: fern check
          command: npx fern-api check
      - run:
          name: generate (dev) JSON Schema
          command: yarn generate-json-schema:dev
      - run:
          name: Format
          command: yarn format:check
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff --exit-code

  organize-imports:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Organize imports
          # not using --list-different because sometimes this removes a trailing
          # comma that prettier adds back
          command: yarn organize-imports
      - run:
          name: Format
          command: yarn format:fix
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff --exit-code

  eslint:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          # compilation is needed for some typescript-eslint rules
          name: compile
          command: yarn compile
      - run:
          name: lint:eslint
          command: yarn lint:eslint

  compile:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: compile
          command: yarn compile

  test:
    # this is machine because of the docker-utils tests
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Run tests
          command: yarn test --ci
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff --exit-code

  ete-tests:
    # this is machine because of the local generation tests
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Run ETE tests
          command: yarn test:ete
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff --exit-code

  live-test-dev:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Live Test (dev)
          command: |
            yarn workspace @fern-api/cli dist:cli:dev
            cli_path="$(yarn workspace @fern-api/cli bin fern:dev)"
            ./scripts/live-test.sh "$cli_path" "$FERN_ORG_TOKEN_DEV"

  live-test:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Live Test (prod)
          command: |
            yarn workspace @fern-api/cli dist:cli:prod
            cli_path="$(yarn workspace @fern-api/cli bin fern:prod)"
            ./scripts/live-test.sh "$cli_path" "$FERN_ORG_TOKEN_PROD"

  publish-dev:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Print version
          command: |
            git_version="$(./scripts/git-version.sh)"
            echo Publishing version: "${git_version}"
      - run:
          name: Add version to package.json's
          command: |
            git_version="$(./scripts/git-version.sh)"
            yarn mrlint version "$git_version"
      - run:
          name: Update yarn.lock with new versions
          command: yarn
      - run:
          name: Compile
          command: yarn compile
      - run:
          name: Publish all packages
          command: yarn run publish --tag next
      - run:
          name: Publish fern-api-dev CLI
          command: yarn workspace @fern-api/cli publish:cli:dev --access restricted

  publish-rc:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Print version
          command: |
            git_version="$(./scripts/git-version.sh)"
            echo Publishing version: "${git_version}"
      - run:
          name: Add version to package.json's
          command: |
            git_version="$(./scripts/git-version.sh)"
            yarn mrlint version "$git_version"
      - run:
          name: Update yarn.lock with new versions
          command: yarn
      - run:
          name: Compile
          command: yarn compile
      - run:
          name: Publish all packages
          command: yarn run publish
      - run:
          name: Publish fern-api-dev CLI
          command: yarn workspace @fern-api/cli publish:cli:dev --access restricted
      - run:
          name: Publish fern-api CLI
          command: |
            yarn workspace @fern-api/cli publish:cli:prod --tag prerelease

  publish:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Print version
          command: |
            git_version="$(./scripts/git-version.sh)"
            echo Publishing version: "${git_version}"
      - run:
          name: Add version to package.json's
          command: |
            git_version="$(./scripts/git-version.sh)"
            yarn mrlint version "$git_version"
      - run:
          name: Update yarn.lock with new versions
          command: yarn
      - run:
          name: Compile
          command: yarn compile
      - run:
          name: Publish all packages
          command: yarn run publish
      - run:
          name: Publish fern-api-dev CLI
          command: yarn workspace @fern-api/cli publish:cli:dev --access restricted
      - run:
          name: Publish fern-api CLI
          command: |
            yarn workspace @fern-api/cli publish:cli:prod --tag latest

  publish-ir-sdk:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Publish ir sdks
          command: |
            export FERN_TOKEN="$FERN_ORG_TOKEN_PROD"
            npx fern-api generate --api ir-types-v20 --group sdks

  check-release-is-allowed:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Check release blockers
          command: yarn check-release-blockers
      - run:
          name: Ensure JSON schema is up to date
          command: |
            yarn generate-json-schema
            git --no-pager diff --exit-code

  deploy-docs-dev:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - run:
          name: Set nodeLinker to node-modules
          command: |
            # without this, multiple versions of react-query are included
            # in the bundle
            yarn config set nodeLinker node-modules
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Publish docs (dev)
          command: yarn workspace @fern-api/fe-bundle deploy:staging

  deploy-docs:
    docker:
      - image: cimg/node:lts
    resource_class: large
    steps:
      - checkout
      - run:
          name: Set nodeLinker to node-modules
          command: |
            # without this, multiple versions of react-query are included
            # in the bundle
            yarn config set nodeLinker node-modules
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Publish docs (dev)
          command: yarn workspace @fern-api/fe-bundle deploy:production

workflows:
  version: 2
  build:
    jobs:
      - check:
          filters:
            tags:
              only: /.*/

      - eslint:
          filters:
            tags:
              only: /.*/

      - organize-imports:
          filters:
            tags:
              only: /.*/

      - compile:
          filters:
            tags:
              only: /.*/

      - test:
          filters:
            tags:
              only: /.*/

      - ete-tests:
          filters:
            tags:
              only: /.*/
          context:
            - auth0-dev
            - fern-tokens

      - live-test-dev:
          filters:
            tags:
              only: /.*/
          context:
            - auth0-dev
            - fern-tokens

      - live-test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/
          context:
            - auth0-dev
            - fern-tokens
            - posthog

      - publish-dev:
          filters:
            branches:
              only: main
          requires:
            - check
            - organize-imports
            - compile
            - eslint
            - test
            - ete-tests
          context:
            - npm
            - auth0-dev

      - publish-rc:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)-rc([0-9]+)$/
          requires:
            - check
            - organize-imports
            - compile
            - eslint
            - test
            - ete-tests
            - live-test-dev
          context:
            - npm
            - auth0-prod
            - posthog

      - publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/
          requires:
            - check-release-is-allowed
            - check
            - organize-imports
            - compile
            - eslint
            - test
            - ete-tests
            - live-test-dev
            - live-test
          context:
            - npm
            - auth0-prod
            - posthog

      - publish-ir-sdk:
          filters:
            branches:
              only: main
            tags:
              only: /.*/
          requires:
            - check
            - organize-imports
            - compile
            - eslint
            - test
            - ete-tests
            - live-test-dev
          context:
            - fern-tokens

      - deploy-docs-dev:
          filters:
            branches:
              only: main
          requires:
            - check
            - organize-imports
            - compile
            - eslint
            - test
            - ete-tests
          context:
            - aws
            - github

      - deploy-docs:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/
          requires:
            - check-release-is-allowed
            - check
            - organize-imports
            - compile
            - eslint
            - test
            - ete-tests
            - live-test-dev
            - live-test
          context:
            - aws
            - github

      - check-release-is-allowed:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/

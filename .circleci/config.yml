version: 2.1
orbs:
  node: circleci/node@5.0.1
jobs:
  live-test:
    docker:
      - image: cimg/node:18.8.0
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Live Test (prod)
          command: |
            yarn workspace @fern-api/cli dist:cli:prod
            cli_path="$(yarn workspace @fern-api/cli bin fern:prod)"
            ./scripts/live-test.sh "$cli_path" "$FERN_ORG_TOKEN_PROD"

  publish-dev:
    docker:
      - image: cimg/node:18.8.0
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Print version
          command: |
            git_version="$(./scripts/git-version.sh)"
            echo Publishing version: "${git_version}"
      - run:
          name: Add version to package.json's
          command: |
            git_version="$(./scripts/git-version.sh)"
            yarn mrlint version "$git_version"
      - run:
          name: Update yarn.lock with new versions
          command: yarn
      - run:
          name: Compile
          command: yarn compile
      - run:
          name: Publish seed CLI
          command: yarn workspace @fern-api/seed-cli publish:cli
      - run:
          name: Publish fern-api-dev CLI
          command: yarn workspace @fern-api/cli publish:cli:dev --access restricted

  publish-rc:
    docker:
      - image: cimg/node:18.8.0
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Print version
          command: |
            git_version="$(./scripts/git-version.sh)"
            echo Publishing version: "${git_version}"
      - run:
          name: Add version to package.json's
          command: |
            git_version="$(./scripts/git-version.sh)"
            yarn mrlint version "$git_version"
      - run:
          name: Update yarn.lock with new versions
          command: yarn
      - run:
          name: Compile
          command: yarn compile
      - run:
          name: Publish fern-api-dev CLI
          command: yarn workspace @fern-api/cli publish:cli:dev --access restricted
      - run:
          name: Publish seed CLI
          command: yarn workspace @fern-api/seed-cli publish:cli
      - run:
          name: Publish fern-api CLI
          command: |
            yarn workspace @fern-api/cli publish:cli:prod --tag prerelease

  publish:
    docker:
      - image: cimg/node:18.8.0
    resource_class: large
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Print version
          command: |
            git_version="$(./scripts/git-version.sh)"
            echo Publishing version: "${git_version}"
      - run:
          name: Add version to package.json's
          command: |
            git_version="$(./scripts/git-version.sh)"
            yarn mrlint version "$git_version"
      - run:
          name: Update yarn.lock with new versions
          command: yarn
      - run:
          name: Compile
          command: yarn compile
      - run:
          name: Publish fern-api-dev CLI
          command: yarn workspace @fern-api/cli publish:cli:dev --access restricted
      - run:
          name: Publish seed CLI
          command: yarn workspace @fern-api/seed-cli publish:cli
      - run:
          name: Publish fern-api CLI
          command: |
            yarn workspace @fern-api/cli publish:cli:prod --tag latest

workflows:
  version: 2
  build:
    jobs:
      - live-test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/
          context:
            - auth0-dev
            - fern-tokens
            - posthog

      - publish-rc:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)-rc([0-9]+)$/
          context:
            - npm
            - auth0-prod
            - posthog

      - publish-dev:
          filters:
            branches:
              only: main
          context:
            - npm
            - auth0-dev

      - publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)$/
          requires:
            - live-test
          context:
            - npm
            - auth0-prod
            - posthog


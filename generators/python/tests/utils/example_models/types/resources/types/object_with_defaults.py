# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ObjectWithDefaults(UncheckedBaseModel):
    """
    Defines properties with default values and validation rules.
    """

    decimal: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="decimal")
    ] = 1.1
    string: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="string")
    ] = "here's a sentence!"
    required_string: typing_extensions.Annotated[
        str, FieldMetadata(alias="required_string")
    ] = "I neeeeeeeeeed this!"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow"
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow

- version: 1.4.6
  created_at: '2024-08-16'
  changelog_entry:
    - type: internal
      summary: >-
        Upgrade intermediate representation dependency to safely parse null
        unknown types.
  ir_version: 53

- version: 1.4.5
  created_at: '2024-08-14'
  changelog_entry:
    - type: chore
      summary: Improve performance of Pydantic `.dict` calls
      changed:
        - >-
          `.dict` performance is improved, consolidating to a single call to
          Pydantic's `.dict` instead of 2 in attempts to remove unset optional
          values.
  ir_version: 53

- version: 1.4.4
  created_at: '2024-08-13'
  changelog_entry:
    - type: fix
      summary: Unions with utils now update forward refs again
  ir_version: 53

- version: 1.4.3
  created_at: '2024-08-09'
  changelog_entry:
    - type: fix
      summary: >-
        Add back kwargs to validator decorators, a regression introduced in
        1.0.0.
  ir_version: 53

- version: 1.4.2
  created_at: '2024-08-09'
  changelog_entry:
    - type: fix
      summary: >-
        Remove functools.wrap from validator decorators, a regression introduced
        in 1.0.0.
  ir_version: 53

- version: 1.4.1
  created_at: '2024-08-05'
  changelog_entry:
    - type: fix
      summary: >-
        The root type for unions with visitors now has it's parent typed
        correctly. This allows auto-complete to work once again on the union
        when it's nested within other pydantic models.
  ir_version: 53

- version: 1.4.0
  created_at: '2024-08-05'
  changelog_entry:
    - type: fix
      summary: Auto-completion for unions leveraging union utils now works as expected.
      changed:
        - >-
          The root type for unions with visitors now has it's parent typed
          correctly. This allows auto-complete to work once again on the union
          when it's nested within other pydantic models.
      fixed:
        - >-
          Partial classes created for validation now appropriately ignore the
          universal root model and only create partials off true extended
          classes.
  ir_version: 53

- version: 1.3.0
  created_at: '2024-08-04'
  changelog_entry:
    - type: internal
      summary: Generator code now uses Pydantic V2, no changes to generated code.
      changed:
        - >-
          The generator has now been upgraded to use Pydantic V2 internally.
          Note that there is no change to the generated code, however by
          leveraging Pydantic V2 you should notice an improvement in `fern
          generate` times.
  ir_version: 53

- version: 1.2.0
  created_at: '2024-07-31'
  changelog_entry:
    - type: feat
      summary: >-
        The FastAPI `async_handlers` configuration now accepts a list of string
        or a boolean so that users can turn on async handlers for specific
        endpoints.
  ir_version: 53

- version: 1.1.0-rc0
  created_at: '2024-07-31'
  changelog_entry:
    - type: internal
      summary: The generator now consumes IRv53.
  ir_version: 53

- version: 1.0.0-rc0
  created_at: '2024-07-16'
  changelog_entry:
    - type: break
      summary: >-
        The generated models now support Pydantic V2 outright, it no longer uses
        `pydantic.v1` models.
      changed:
        - >-
          The generated server stubs now support Pydantic V2 outright, it no
          longer uses `pydantic.v1` models.
        - >-
          Public fields previously prefixed with `_` are now prefixed with `f_`
          (Pydantic V2 does not allow for `_` prefixes on public fields and
          Python does not allow for a numeric prefix)
      removed:
        - wrapped aliases outside of Pydantic V1
        - custom root validators outside of Pydantic V1
  ir_version: 49

- version: 0.11.1
  created_at: '2024-07-10'
  changelog_entry:
    - type: fix
      summary: Expose the `use_str_enums` flag.
      fixed:
        - >-
          The generator now respects the `use_str_enums` flag, and defaults it
          to `False`.
  ir_version: 49

- version: 0.11.0
  created_at: '2024-07-10'
  changelog_entry:
    - type: fix
      summary: Correctly sanitize parameter descriptions.
      fixed:
        - >-
          The generator now correctly sanitizes parameter descriptions.
          Previously it was duplicating strings.
  ir_version: 49

- version: 0.11.0-rc0
  created_at: '2024-06-24'
  changelog_entry:
    - type: internal
      summary: The generator now consumes IRV49.
  ir_version: 49

- version: 0.10.1
  created_at: '2024-06-19'
  changelog_entry:
    - type: internal
      summary: The generator now consumes IRV46.
  ir_version: 46

- version: 0.10.0
  created_at: '2024-06-19'
  changelog_entry:
    - type: chore
      summary: Expose the `extra_fields` configuration.
  ir_version: 39

- version: 0.9.3
  created_at: '2024-06-06'
  changelog_entry:
    - type: fix
      summary: >-
        Leveraged pydantic utilities are copied over for use within the FastAPI
        server.
  ir_version: 39

- version: 0.9.2
  created_at: '2024-05-27'
  changelog_entry:
    - type: fix
      summary: Paths are no longer prefixed with double forward slashes.
  ir_version: 39

- version: 0.9.1
  created_at: '2024-05-09'
  changelog_entry:
    - type: internal
      summary: Release Generator
  ir_version: 39

- version: 0.9.1-rc0
  created_at: '2024-04-22'
  changelog_entry:
    - type: fix
      summary: >-
        Leveraged pydantic utilities are copied over for use within the FastAPI
        server.
  ir_version: 39

- version: 0.9.0-rc1
  created_at: '2024-06-19'
  changelog_entry:
    - type: internal
      summary: The generator now consumes IRV39.
  ir_version: 39

- version: 0.9.0-rc0
  created_at: '2024-01-29'
  changelog_entry:
    - type: internal
      summary: The generator now consumes IRV38.
    - type: break
      summary: The generator no longer supports Python 3.7
      removed:
        - The generator no longer supports Python 3.7
        - The `backports` dependency has been removed
  ir_version: 38

- version: 0.8.1-rc0
  created_at: '2024-01-29'
  changelog_entry:
    - type: fix
      summary: >-
        Increase allowed recursion depth to account for highly nested and
        complex examples.
      fixed:
        - >-
          Recursion depth is increased to allow for highly nested and complex
          examples, this is a temporary solution while the example datamodel is
          further refined.
  ir_version: 31

- version: 0.8.0-rc0
  created_at: '2024-01-28'
  changelog_entry:
    - type: fix
      summary: The SDK now better handles cyclical references.
      fixed:
        - >-
          The SDK now better handles cyclical references. In particular,
          cyclical references are tracked for undiscriminated unions, and
          update_forward_refs is always called with object references.
  ir_version: 31

- version: 0.7.7
  created_at: '2024-01-21'
  changelog_entry:
    - type: internal
      summary: Initialize the changelog
  ir_version: 31

// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`single-url-environment-default > custom baseURL 1`] = `
"package example

import (
	context "context"
	client "github.com/acme/acme-go/client"
	option "github.com/acme/acme-go/option"
)

func do() {
	client := client.NewClient(
		option.WithBaseURL(
			"http://localhost:8080",
		),
		option.WithToken(
			"<YOUR_API_KEY>",
		),
	)
	client.Dummy.GetDummy(
		context.TODO(),
	)
}
"
`;

exports[`single-url-environment-default > invalid baseURL and environment 1`] = `
[
  {
    "message": "Cannot specify both baseUrl and environment options",
    "path": [],
    "severity": "CRITICAL",
  },
]
`;

exports[`single-url-environment-default > invalid environment 1`] = `
[
  {
    "message": "Environment "Unrecognized" was not found",
    "path": [],
    "severity": "WARNING",
  },
]
`;

exports[`single-url-environment-default > production environment 1`] = `
"package example

import (
	context "context"
	acme "github.com/acme/acme-go"
	client "github.com/acme/acme-go/client"
	option "github.com/acme/acme-go/option"
)

func do() {
	client := client.NewClient(
		option.WithBaseURL(
			acme.Environments.Production,
		),
		option.WithToken(
			"<YOUR_API_KEY>",
		),
	)
	client.Dummy.GetDummy(
		context.TODO(),
	)
}
"
`;

exports[`single-url-environment-default > staging environment 1`] = `
"package example

import (
	context "context"
	acme "github.com/acme/acme-go"
	client "github.com/acme/acme-go/client"
	option "github.com/acme/acme-go/option"
)

func do() {
	client := client.NewClient(
		option.WithBaseURL(
			acme.Environments.Staging,
		),
		option.WithToken(
			"<YOUR_API_KEY>",
		),
	)
	client.Dummy.GetDummy(
		context.TODO(),
	)
}
"
`;
